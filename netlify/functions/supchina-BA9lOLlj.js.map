{"version":3,"file":"supchina-BA9lOLlj.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/supchina/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/',\r\n    radar: [\r\n        {\r\n            source: ['supchina.com/feed', 'supchina.com/'],\r\n            target: '',\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'supchina.com/feed',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const rootUrl = 'https://supchina.com';\r\n    const currentUrl = `${rootUrl}/feed/`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items = $('item')\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 50)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                guid: item.find('guid').text(),\r\n                title: item.find('title').text(),\r\n                link: item.find('guid').text(),\r\n                author: item\r\n                    .find(String.raw`dc\\:creator`)\r\n                    .html()\r\n                    .match(/CDATA\\[(.*?)]/)[1],\r\n                category: item\r\n                    .find('category')\r\n                    .toArray()\r\n                    .map(\r\n                        (c) =>\r\n                            $(c)\r\n                                .html()\r\n                                .match(/CDATA\\[(.*?)]/)[1]\r\n                    ),\r\n                pubDate: parseDate(item.find('pubDate').text()),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                content('.aspect-spacer, .post-recs, .author-bio').remove();\r\n\r\n                item.description = content('.post__main').html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('title').first().text(),\r\n        link: rootUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,IACN,MAAO,CACH,CACI,OAAQ,CAAC,oBAAqB,iBAC9B,OAAQ,KAGhB,KAAM,UACN,YAAa,CAAC,WACd,UACA,IAAK,qBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,uBACV,EAAa,GAAG,EAAQ,QAExB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,QACT,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,IAC5E,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,KAAM,EAAK,KAAK,QAAQ,OACxB,MAAO,EAAK,KAAK,SAAS,OAC1B,KAAM,EAAK,KAAK,QAAQ,OACxB,OAAQ,EACH,KAAK,OAAO,GAAG,eACf,OACA,MAAM,iBAAiB,GAC5B,SAAU,EACL,KAAK,YACL,UACA,IACI,GACG,EAAE,GACG,OACA,MAAM,iBAAiB,IAExC,QAAS,EAAU,EAAK,KAAK,WAAW,WAuBpD,MAnBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAMpC,OAJA,EAAQ,2CAA2C,SAEnD,EAAK,YAAc,EAAQ,eAAe,OAEnC,MAKZ,CACH,MAAO,EAAE,SAAS,QAAQ,OAC1B,KAAM,EACN,KAAM"}