{"version":3,"file":"search-gCgrNjHb.js","names":["route: Route","cache","ofetch"],"sources":["../../lib/routes/google/search.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/search/:keyword/:language?',\r\n    categories: ['other'],\r\n    example: '/google/search/rss/zh-CN,zh',\r\n    parameters: { keyword: 'Keyword', language: 'Accept-Language. Example: `zh-CN,zh;q=0.9,en;q=0.8,ja;q=0.7`' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Search',\r\n    maintainers: ['CaoMeiYouRen'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { keyword, language = 'en' } = ctx.req.param();\r\n    const searchParams = new URLSearchParams({\r\n        q: keyword,\r\n    });\r\n    const tempUrl = new URL('https://www.google.com/search');\r\n    tempUrl.search = searchParams.toString();\r\n    const url = tempUrl.toString();\r\n    const key = `google:search:${language}:${url}`;\r\n    const items = await cache.tryGet(\r\n        key,\r\n        async () => {\r\n            const response = await ofetch(url, {\r\n                headers: {\r\n                    'Accept-Language': language,\r\n                    'User-Agent': 'Lynx/2.9.2 libwww-FM/2.14 SSL-MM/1.4.1 OpenSSL/3.5.0',\r\n                },\r\n            });\r\n            const $ = load(response);\r\n            return $('body > div > div > div > div > div > div > a')\r\n                .toArray()\r\n                .map((el) => {\r\n                    const element = $(el);\r\n                    const link = element.attr('href')!;\r\n                    const title = element.find('span').first().text().trim();\r\n                    const description = element.parent().next().find('span > span').last().text().trim().replaceAll('ï¿½', '') || '';\r\n                    const author = element.find('span > span').text().trim() || '';\r\n                    return {\r\n                        link: new URL(link, 'https://www.google.com').searchParams.get('q') || link,\r\n                        title,\r\n                        description,\r\n                        author,\r\n                    };\r\n                });\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    return {\r\n        title: `${keyword} - Google Search`,\r\n        description: `${keyword} - Google Search`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"+QAOA,MAAaA,EAAe,CACxB,KAAM,8BACN,WAAY,CAAC,SACb,QAAS,8BACT,WAAY,CAAE,QAAS,UAAW,SAAU,gEAC5C,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,gBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,UAAS,WAAW,MAAS,EAAI,IAAI,QACvC,EAAe,IAAI,gBAAgB,CACrC,EAAG,IAED,EAAU,IAAI,IAAI,iCACxB,EAAQ,OAAS,EAAa,WAC9B,IAAM,EAAM,EAAQ,WACd,EAAM,iBAAiB,EAAS,GAAG,IACnC,EAAQ,MAAMC,EAAM,OACtB,EACA,SAAY,CACR,IAAM,EAAW,MAAMC,EAAO,EAAK,CAC/B,QAAS,CACL,kBAAmB,EACnB,aAAc,0DAGhB,EAAI,EAAK,GACf,OAAO,EAAE,gDACJ,UACA,IAAK,GAAO,CACT,IAAM,EAAU,EAAE,GACZ,EAAO,EAAQ,KAAK,QACpB,EAAQ,EAAQ,KAAK,QAAQ,QAAQ,OAAO,OAC5C,EAAc,EAAQ,SAAS,OAAO,KAAK,eAAe,OAAO,OAAO,OAAO,WAAW,IAAK,KAAO,GACtG,EAAS,EAAQ,KAAK,eAAe,OAAO,QAAU,GAC5D,MAAO,CACH,KAAM,IAAI,IAAI,EAAM,0BAA0B,aAAa,IAAI,MAAQ,EACvE,QACA,cACA,aAIhB,EAAO,MAAM,YACb,IAGJ,MAAO,CACH,MAAO,GAAG,EAAQ,kBAClB,YAAa,GAAG,EAAQ,kBACxB,KAAM,EACN,KAAM"}