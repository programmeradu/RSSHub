{"version":3,"file":"news-DyZv8LfA.js","names":["customPreset: PresetFactory","got","route: Route"],"sources":["../../lib/routes/counter-strike/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport type { BBobCoreTagNodeTree, PresetFactory } from '@bbob/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport bbobHTML from '@bbob/html';\r\nimport presetHTML5 from '@bbob/preset-html5';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst swapLinebreak = (tree: BBobCoreTagNodeTree) =>\r\n    tree.walk((node) => {\r\n        if (typeof node === 'string' && node === '\\n') {\r\n            return {\r\n                tag: 'br',\r\n                content: null,\r\n            };\r\n        }\r\n        return node;\r\n    });\r\n\r\nconst customPreset: PresetFactory = presetHTML5.extend((tags) => ({\r\n    ...tags,\r\n    url: (node) => ({\r\n        tag: 'a',\r\n        attrs: {\r\n            href: Object.keys(node.attrs as Record<string, string>)[0],\r\n            rel: 'noopener',\r\n            target: '_blank',\r\n        },\r\n        content: node.content,\r\n    }),\r\n    video: (node, { render }) => ({\r\n        tag: 'video',\r\n        attrs: {\r\n            controls: '',\r\n            preload: 'metadata',\r\n            poster: node.attrs?.poster,\r\n        },\r\n        content: render(\r\n            Object.entries({\r\n                webm: 'video/webm',\r\n                mp4: 'video/mp4',\r\n            }).map(([key, type]) => ({\r\n                tag: 'source',\r\n                attrs: {\r\n                    src: node.attrs?.[key],\r\n                    type,\r\n                },\r\n            }))\r\n        ),\r\n    }),\r\n}));\r\n\r\nexport const handler = async (ctx) => {\r\n    const { category = 'all', language = 'english' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 100;\r\n\r\n    const rootUrl = 'https://www.counter-strike.net';\r\n    const apiRootUrl = 'https://store.steampowered.com';\r\n    const cdnRootUrl = 'https://media.st.dl.eccdnx.com';\r\n    const currentUrl = new URL(`news${category && category !== 'all' ? `/${category}` : ''}${language ? `?l=${language}` : ''}`, rootUrl).href;\r\n    const apiUrl = new URL('events/ajaxgetpartnereventspageable/', apiRootUrl).href;\r\n\r\n    const { data: response } = await got(apiUrl, {\r\n        searchParams: {\r\n            clan_accountid: 0,\r\n            appid: 730,\r\n            offset: 0,\r\n            count: limit,\r\n            l: language,\r\n        },\r\n    });\r\n\r\n    const items = response.events\r\n        .filter((item) => (category === 'updates' ? item.event_type === 12 : item.event_type))\r\n        .slice(0, limit)\r\n        .map((item) => {\r\n            const title = item.event_name;\r\n            const description = bbobHTML(item.announcement_body.body, [customPreset(), swapLinebreak]);\r\n            const guid = `counter-strike-news-${item.gid}`;\r\n\r\n            return {\r\n                title,\r\n                description,\r\n                pubDate: parseDate(item.announcement_body.posttime, 'X'),\r\n                link: new URL(`newsentry/${item.gid}`, rootUrl).href,\r\n                category: item.announcement_body.tags,\r\n                guid,\r\n                id: guid,\r\n                content: {\r\n                    html: description,\r\n                    text: item.announcement_body.body,\r\n                },\r\n                updated: parseDate(item.announcement_body.updatetime, 'X'),\r\n            };\r\n        });\r\n\r\n    const { data: currentResponse } = await got(currentUrl);\r\n\r\n    const $ = load(currentResponse);\r\n\r\n    const author = 'Counter Strike';\r\n    const image = new URL('apps/csgo/images/dota_react//blog/default_cover.jpg', cdnRootUrl).href;\r\n\r\n    return {\r\n        title: `${author} - ${category === 'updates' ? 'Updates' : 'News'}`,\r\n        description: $('title').text(),\r\n        link: currentUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image,\r\n        author,\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/news/:category?/:language?',\r\n    name: 'News',\r\n    url: 'www.counter-strike.net',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/counter-strike/news',\r\n    parameters: { category: 'Category, `updates` or `all`, `all` by default', language: 'Language, english by default, see below for more languages' },\r\n    description: `::: tip\r\n  If you subscribe to [Updates in English](https://www.counter-strike.net/news/updates?l=english)，where the URL is \\`https://www.counter-strike.net/news/updates?l=english\\`, extract the \\`l\\`, which is \\`english\\`, and use it as the parameter to fill in. Therefore, the route will be [\\`/counter-strike/news/updates/english\\`](https://rsshub.app/counter-strike/news/updates/english).\r\n:::\r\n\r\n<details>\r\n<summary>More languages</summary>\r\n\r\n| 语言代码                                          | 语言名称   |\r\n| ------------------------------------------------- | ---------- |\r\n| English                                           | english    |\r\n| Español - España (Spanish - Spain)                | spanish    |\r\n| Français (French)                                 | french     |\r\n| Italiano (Italian)                                | italian    |\r\n| Deutsch (German)                                  | german     |\r\n| Ελληνικά (Greek)                                  | greek      |\r\n| 한국어 (Korean)                                   | koreana    |\r\n| 简体中文 (Simplified Chinese)                     | schinese   |\r\n| 繁體中文 (Traditional Chinese)                    | tchinese   |\r\n| Русский (Russian)                                 | russian    |\r\n| ไทย (Thai)                                        | thai       |\r\n| 日本語 (Japanese)                                 | japanese   |\r\n| Português (Portuguese)                            | portuguese |\r\n| Português - Brasil (Portuguese - Brazil)          | brazilian  |\r\n| Polski (Polish)                                   | polish     |\r\n| Dansk (Danish)                                    | danish     |\r\n| Nederlands (Dutch)                                | dutch      |\r\n| Suomi (Finnish)                                   | finnish    |\r\n| Norsk (Norwegian)                                 | norwegian  |\r\n| Svenska (Swedish)                                 | swedish    |\r\n| Čeština (Czech)                                   | czech      |\r\n| Magyar (Hungarian)                                | hungarian  |\r\n| Română (Romanian)                                 | romanian   |\r\n| Български (Bulgarian)                             | bulgarian  |\r\n| Türkçe (Turkish)                                  | turkish    |\r\n| Українська (Ukrainian)                            | ukrainian  |\r\n| Tiếng Việt (Vietnamese)                           | vietnamese |\r\n| Español - Latinoamérica (Spanish - Latin America) | latam      |\r\n\r\n</details>\r\n    `,\r\n    categories: ['game'],\r\n\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.counter-strike.net/news/:category'],\r\n            target: (params, url) => {\r\n                url = new URL(url);\r\n                const category = params.category;\r\n                const language = url.searchParams.get('l');\r\n\r\n                return `/news${category ? `/${category}${language ? `/${language}` : ''}` : ''}`;\r\n            },\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"gXASA,MAAM,EAAiB,GACnB,EAAK,KAAM,GACH,OAAO,GAAS,UAAY,IAAS;EAC9B,CACH,IAAK,KACL,QAAS,MAGV,GAGTA,EAA8B,EAAY,OAAQ,IAAU,CAC9D,GAAG,EACH,IAAM,IAAU,CACZ,IAAK,IACL,MAAO,CACH,KAAM,OAAO,KAAK,EAAK,OAAiC,GACxD,IAAK,WACL,OAAQ,UAEZ,QAAS,EAAK,UAElB,OAAQ,EAAM,CAAE,aAAc,CAC1B,IAAK,QACL,MAAO,CACH,SAAU,GACV,QAAS,WACT,OAAQ,EAAK,OAAO,QAExB,QAAS,EACL,OAAO,QAAQ,CACX,KAAM,aACN,IAAK,cACN,KAAK,CAAC,EAAK,MAAW,CACrB,IAAK,SACL,MAAO,CACH,IAAK,EAAK,QAAQ,GAClB,iBAOP,EAAU,KAAO,IAAQ,CAClC,GAAM,CAAE,WAAW,MAAO,WAAW,WAAc,EAAI,IAAI,QACrD,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,IAE/E,EAAU,iCAGV,EAAa,IAAI,IAAI,OAAO,GAAY,IAAa,MAAQ,IAAI,IAAa,KAAK,EAAW,MAAM,IAAa,KAAM,GAAS,KAChI,EAAS,IAAI,IAAI,uCAAwC,kCAAY,KAErE,CAAE,KAAM,GAAa,MAAMC,EAAI,EAAQ,CACzC,aAAc,CACV,eAAgB,EAChB,MAAO,IACP,OAAQ,EACR,MAAO,EACP,EAAG,KAIL,EAAQ,EAAS,OAClB,OAAQ,GAAU,IAAa,UAAY,EAAK,aAAe,GAAK,EAAK,YACzE,MAAM,EAAG,GACT,IAAK,GAAS,CACX,IAAM,EAAQ,EAAK,WACb,EAAc,EAAS,EAAK,kBAAkB,KAAM,CAAC,IAAgB,IACrE,EAAO,uBAAuB,EAAK,MAEzC,MAAO,CACH,QACA,cACA,QAAS,EAAU,EAAK,kBAAkB,SAAU,KACpD,KAAM,IAAI,IAAI,aAAa,EAAK,MAAO,GAAS,KAChD,SAAU,EAAK,kBAAkB,KACjC,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,KAAM,EAAK,kBAAkB,MAEjC,QAAS,EAAU,EAAK,kBAAkB,WAAY,QAI5D,CAAE,KAAM,GAAoB,MAAMA,EAAI,GAEtC,EAAI,EAAK,GAET,EAAS,iBACT,EAAQ,IAAI,IAAI,sDAAuD,kCAAY,KAEzF,MAAO,CACH,MAAO,GAAG,EAAO,KAAK,IAAa,UAAY,UAAY,SAC3D,YAAa,EAAE,SAAS,OACxB,KAAM,EACN,KAAM,EACN,WAAY,GACZ,QACA,SACA,aAIKC,EAAe,CACxB,KAAM,8BACN,KAAM,OACN,IAAK,yBACL,YAAa,CAAC,WACd,UACA,QAAS,uBACT,WAAY,CAAE,SAAU,iDAAkD,SAAU,8DACpF,YAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwCb,WAAY,CAAC,QAEb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,yCACT,QAAS,EAAQ,IAAQ,CACrB,EAAM,IAAI,IAAI,GACd,IAAM,EAAW,EAAO,SAClB,EAAW,EAAI,aAAa,IAAI,KAEtC,MAAO,QAAQ,EAAW,IAAI,IAAW,EAAW,IAAI,IAAa,KAAO"}