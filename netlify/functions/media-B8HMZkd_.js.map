{"version":3,"file":"media-B8HMZkd_.js","names":[],"sources":["../../lib/routes/yoasobi-music/media.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseJSONP } from './jsonp-helper';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/media',\r\n    categories: ['live'],\r\n    example: '/yoasobi-music/media',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.yoasobi-music.jp/', 'www.yoasobi-music.jp/media'],\r\n        },\r\n    ],\r\n    name: 'Media',\r\n    maintainers: ['Kiotlin'],\r\n    handler,\r\n    url: 'www.yoasobi-music.jp/',\r\n};\r\n\r\nasync function handler() {\r\n    const ARTIST = 'YOASOBI',\r\n        BASEURL = 'https://www.sonymusic.co.jp/json/v2/artist',\r\n        POSTFIX = 'start/0/count/-1';\r\n\r\n    const api = `${BASEURL}/${ARTIST}/media/${POSTFIX}`;\r\n    const officialUrl = 'https://www.yoasobi-music.jp/media';\r\n    const title = 'LATEST MEDIA';\r\n\r\n    const response = await ofetch(api);\r\n\r\n    const data = Object.values(parseJSONP(response.data).items)\r\n        .flat()\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .map((item) => ({\r\n            date: item.date,\r\n            weekDay: item.youbi,\r\n            startTime: item.startTime || null,\r\n            endTime: item.endTime || null,\r\n            tvStation: item.media || null,\r\n            title: item.program || item.media,\r\n            description: item.note,\r\n        }));\r\n\r\n    return {\r\n        // the source title\r\n        title,\r\n        // the source url\r\n        link: officialUrl,\r\n        // the source description\r\n        description: \"YOASOBI's Latest Media\",\r\n        // iterate through all leaf objects\r\n        item: data.map((i) => ({\r\n            // the article title\r\n            title: i.title,\r\n            // the article content\r\n            description: art(path.join(__dirname, 'templates/media.art'), {\r\n                date: i.date,\r\n                weekDay: i.weekDay,\r\n                postFix: i.startTime && i.endTime && i.tvStation ? `${i.startTime} ~ ${i.endTime} ${i.tvStation}` : null,\r\n                description: i.description,\r\n            }),\r\n            // no pubDate\r\n            pubDate: i.date,\r\n            // specify guid because the link is not unique\r\n            guid: i.title + i.date,\r\n            // the article link\r\n            link: officialUrl,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"mVAOA,MAAa,EAAe,CACxB,KAAM,SACN,WAAY,CAAC,QACb,QAAS,uBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBAAyB,gCAG1C,KAAM,QACN,YAAa,CAAC,WACd,UACA,IAAK,yBAGT,eAAe,GAAU,CACrB,IAKM,EAAc,qCAGd,EAAW,MAAM,EAAO,6EAExB,EAAO,OAAO,OAAO,EAAW,EAAS,MAAM,OAChD,OACA,MAAM,EAAG,IAAM,IAAI,KAAK,EAAE,MAAQ,IAAI,KAAK,EAAE,OAC7C,IAAK,IAAU,CACZ,KAAM,EAAK,KACX,QAAS,EAAK,MACd,UAAW,EAAK,WAAa,KAC7B,QAAS,EAAK,SAAW,KACzB,UAAW,EAAK,OAAS,KACzB,MAAO,EAAK,SAAW,EAAK,MAC5B,YAAa,EAAK,QAG1B,MAAO,CAEH,qBAEA,KAAM,EAEN,YAAa,yBAEb,KAAM,EAAK,IAAK,IAAO,CAEnB,MAAO,EAAE,MAET,YAAa,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAC1D,KAAM,EAAE,KACR,QAAS,EAAE,QACX,QAAS,EAAE,WAAa,EAAE,SAAW,EAAE,UAAY,GAAG,EAAE,UAAU,KAAK,EAAE,QAAQ,GAAG,EAAE,YAAc,KACpG,YAAa,EAAE,cAGnB,QAAS,EAAE,KAEX,KAAM,EAAE,MAAQ,EAAE,KAElB,KAAM"}