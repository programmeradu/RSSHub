{"version":3,"file":"channel-Clrtx8ky.js","names":[],"sources":["../../lib/routes/discord/channel.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\n\r\nimport { config } from '@/config';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { baseUrl, getChannel, getChannelMessages, getGuild } from './discord-api';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/channel/:channelId',\r\n    categories: ['social-media'],\r\n    example: '/discord/channel/950465850056536084',\r\n    parameters: { channelId: 'Channel ID' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'DISCORD_AUTHORIZATION',\r\n                description: 'Discord authorization header from the browser',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['discord.com/channels/:guildId/:channelId/:messageID', 'discord.com/channels/:guildId/:channelId'],\r\n        },\r\n    ],\r\n    name: 'Channel Messages',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    if (!config.discord || !config.discord.authorization) {\r\n        throw new ConfigNotFoundError('Discord RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n    const { authorization } = config.discord;\r\n    const channelId = ctx.req.param('channelId');\r\n\r\n    const channelInfo = await getChannel(channelId, authorization);\r\n    const messagesRaw = await getChannelMessages(channelId, authorization, ctx.req.query('limit') ?? 100);\r\n    const { name: channelName, topic: channelTopic, guild_id: guildId } = channelInfo;\r\n\r\n    const guildInfo = await getGuild(guildId, authorization);\r\n    const { name: guildName, icon: guidIcon } = guildInfo;\r\n\r\n    const messages = messagesRaw.map((message) => ({\r\n        title: message.content.split('\\n')[0],\r\n        description: art(path.join(__dirname, 'templates/message.art'), { message, guildInfo }),\r\n        author: `${message.author.global_name ?? message.author.username}(${message.author.username})`,\r\n        pubDate: parseDate(message.timestamp),\r\n        updated: message.edited_timestamp ? parseDate(message.edited_timestamp) : undefined,\r\n        category: `#${channelName}`,\r\n        link: `${baseUrl}/channels/${guildId}/${channelId}/${message.id}`,\r\n    }));\r\n\r\n    return {\r\n        title: `#${channelName} - ${guildName} - Discord`,\r\n        description: channelTopic,\r\n        link: `${baseUrl}/channels/${guildId}/${channelId}`,\r\n        image: `https://cdn.discordapp.com/icons/${guildId}/${guidIcon}.webp`,\r\n        item: messages as unknown as DataItem[],\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"whBASA,MAAa,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,gBACb,QAAS,sCACT,WAAY,CAAE,UAAW,cACzB,SAAU,CACN,cAAe,CACX,CACI,KAAM,wBACN,YAAa,kDAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sDAAuD,8CAGxE,KAAM,mBACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAI,CAAC,EAAO,SAAW,CAAC,EAAO,QAAQ,cACnC,MAAM,IAAI,EAAoB,gJAElC,GAAM,CAAE,iBAAkB,EAAO,QAC3B,EAAY,EAAI,IAAI,MAAM,aAE1B,EAAc,MAAM,EAAW,EAAW,GAC1C,EAAc,MAAM,EAAmB,EAAW,EAAe,EAAI,IAAI,MAAM,UAAY,KAC3F,CAAE,KAAM,EAAa,MAAO,EAAc,SAAU,GAAY,EAEhE,EAAY,MAAM,EAAS,EAAS,GACpC,CAAE,KAAM,EAAW,KAAM,GAAa,EAEtC,EAAW,EAAY,IAAK,IAAa,CAC3C,MAAO,EAAQ,QAAQ,MAAM;GAAM,GACnC,YAAa,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAAE,UAAS,cAC3E,OAAQ,GAAG,EAAQ,OAAO,aAAe,EAAQ,OAAO,SAAS,GAAG,EAAQ,OAAO,SAAS,GAC5F,QAAS,EAAU,EAAQ,WAC3B,QAAS,EAAQ,iBAAmB,EAAU,EAAQ,kBAAoB,IAAA,GAC1E,SAAU,IAAI,IACd,KAAM,GAAG,EAAQ,YAAY,EAAQ,GAAG,EAAU,GAAG,EAAQ,QAGjE,MAAO,CACH,MAAO,IAAI,EAAY,KAAK,EAAU,YACtC,YAAa,EACb,KAAM,GAAG,EAAQ,YAAY,EAAQ,GAAG,IACxC,MAAO,oCAAoC,EAAQ,GAAG,EAAS,OAC/D,KAAM,EACN,WAAY"}