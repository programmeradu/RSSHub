{"version":3,"file":"search-C4wZ973d.js","names":[],"sources":["../../lib/routes/bookwalker/search.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nimport { type CheerioAPI, type Cheerio, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { type Context } from 'hono';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { filter = 'order=sell_desc' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '24', 10);\r\n\r\n    const baseUrl: string = 'https://www.bookwalker.com.tw';\r\n    const targetUrl: string = new URL(`search?${filter}`, baseUrl).href;\r\n\r\n    const response = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(response);\r\n    const language = $('html').attr('lang') ?? 'zh-TW';\r\n\r\n    const items: DataItem[] = $('div.bwbook_package')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((el): Element => {\r\n            const $el: Cheerio<Element> = $(el);\r\n\r\n            const name: string = $el.find('h4.bookname').text();\r\n            const price: string = $el.find('h5.bprice').text();\r\n            const authorStr: string = $el.find('h5.booknamesub').text().trim();\r\n\r\n            const title: string = `${name} - ${authorStr} ${price}`;\r\n            const image: string | undefined = $el\r\n                .find('img')\r\n                .attr('data-src')\r\n                ?.replace(/_\\d+(\\.\\w+)$/, '$1');\r\n            const description: string | undefined = art(path.join(__dirname, 'templates/description.art'), {\r\n                images: image\r\n                    ? [\r\n                          {\r\n                              src: image,\r\n                              alt: name,\r\n                          },\r\n                      ]\r\n                    : undefined,\r\n            });\r\n            const linkUrl: string | undefined = $el.find('div.bwbookitem a').attr('href');\r\n            const authors: DataItem['author'] = authorStr.split(/,/).map((a) => ({\r\n                name: a,\r\n            }));\r\n\r\n            const processedItem: DataItem = {\r\n                title,\r\n                description,\r\n                link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n                author: authors,\r\n                content: {\r\n                    html: description,\r\n                    text: description,\r\n                },\r\n                image,\r\n                banner: image,\r\n                language,\r\n            };\r\n\r\n            return processedItem;\r\n        });\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('meta[property=\"og:image\"]').attr('content'),\r\n        author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        language,\r\n        id: $('meta[property=\"og:url\"]').attr('content'),\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/search/:filter?',\r\n    name: '搜尋',\r\n    url: 'www.bookwalker.com.tw',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/bookwalker/search/order=sell_desc&s=34',\r\n    parameters: {\r\n        filter: {\r\n            description: '过滤器，默认为 `order=sell_desc`，即依發售日新至舊排序',\r\n        },\r\n    },\r\n    description: `:::tip\r\n订阅 [依發售日新至舊排序的文學小說](https://www.bookwalker.com.tw/search?order=sell_desc&s=34)，其源网址为 \\`https://www.bookwalker.com.tw/search?order=sell_desc&s=34\\`，请参考该 URL 指定部分构成参数，此时路由为 [\\`/bookwalker/search/order=sell_desc&s=34\\`](https://rsshub.app/bookwalker/search/order=sell_desc&s=34)。\r\n:::\r\n`,\r\n    categories: ['shopping'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.bookwalker.com.tw/search'],\r\n            target: '/bookwalker/search',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"yWAUA,MAAa,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,SAAS,mBAAsB,EAAI,IAAI,QACzC,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhE,EAAkB,gCAClB,EAAoB,IAAI,IAAI,UAAU,IAAU,GAAS,KAEzD,EAAW,MAAM,EAAO,GACxB,EAAgB,EAAK,GACrB,EAAW,EAAE,QAAQ,KAAK,SAAW,QAErC,EAAoB,EAAE,sBACvB,MAAM,EAAG,GACT,UACA,IAAK,GAAgB,CAClB,IAAM,EAAwB,EAAE,GAE1B,EAAe,EAAI,KAAK,eAAe,OACvC,EAAgB,EAAI,KAAK,aAAa,OACtC,EAAoB,EAAI,KAAK,kBAAkB,OAAO,OAEtD,EAAgB,GAAG,EAAK,KAAK,EAAU,GAAG,IAC1C,EAA4B,EAC7B,KAAK,OACL,KAAK,aACJ,QAAQ,eAAgB,MACxB,EAAkC,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC3F,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,KAEJ,EAA8B,EAAI,KAAK,oBAAoB,KAAK,QAChE,EAA8B,EAAU,MAAM,KAAK,IAAK,IAAO,CACjE,KAAM,KAGJ,EAA0B,CAC5B,QACA,cACA,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QACA,OAAQ,EACR,YAGJ,OAAO,IAGf,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,mCAAmC,KAAK,WACvD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EAAE,6BAA6B,KAAK,WAC3C,OAAQ,EAAE,iCAAiC,KAAK,WAChD,WACA,GAAI,EAAE,2BAA2B,KAAK,aAIjC,EAAe,CACxB,KAAM,mBACN,KAAM,KACN,IAAK,wBACL,YAAa,CAAC,WACd,UACA,QAAS,0CACT,WAAY,CACR,OAAQ,CACJ,YAAa,yCAGrB,YAAa,kSAIb,WAAY,CAAC,YACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,gCACT,OAAQ,uBAGhB,KAAM,EAAS"}