{"version":3,"file":"arktca-DOtLDHop.js","names":["route: Route","got","cache","author"],"sources":["../../lib/routes/hypergryph/arknights/arktca.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\n\r\nconst rssDescription = '期刊《回归线》 | 泰拉创作者联合会';\r\nconst url = 'aneot.arktca.com';\r\nconst author = 'Bendancom';\r\n\r\nexport const route: Route = {\r\n    path: '/arknights/arktca',\r\n    categories: ['game'],\r\n    example: '/hypergryph/arknights/arktca',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '期刊',\r\n    url,\r\n    maintainers: [author],\r\n    radar: [\r\n        {\r\n            source: [url],\r\n        },\r\n    ],\r\n    description: rssDescription,\r\n    handler,\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = `https://${url}`;\r\n    const { data: allResponse } = await got(`${baseUrl}/posts`);\r\n    const $ = load(allResponse);\r\n\r\n    const allUrlList = $('div.theme-hope-content > table')\r\n        .find('a')\r\n        .toArray()\r\n        .map((item) => baseUrl + $(item).prop('href'));\r\n\r\n    const journalList = await Promise.all(\r\n        allUrlList.map(async (item) => {\r\n            const { data: response } = await got(item);\r\n            const $$ = load(response);\r\n            const regVol = /(?<=Vol. )(\\w+)/;\r\n            const match = regVol.exec($$('div.vp-page-title').find('h1').text());\r\n            const volume = match ? match[0] : '';\r\n            const links = $$('div.theme-hope-content > ul a')\r\n                .toArray()\r\n                .map((e) => baseUrl + $(e).prop('href'));\r\n            return {\r\n                volume,\r\n                links,\r\n            };\r\n        })\r\n    );\r\n\r\n    const journals = await Promise.all(\r\n        journalList.map(\r\n            async (item) =>\r\n                await Promise.all(\r\n                    item.links.map((link) =>\r\n                        cache.tryGet(link, async () => {\r\n                            const { data: response } = await got(link);\r\n                            const $$ = load(response);\r\n\r\n                            $$('div.ads-container').remove();\r\n                            const language = $$('html').prop('lang');\r\n\r\n                            const pageTitle = $$('div.vp-page-title');\r\n\r\n                            const title = `Vol.${item.volume} ` + pageTitle.children('h1').text();\r\n                            const pageInfo = pageTitle.children('div.page-info');\r\n\r\n                            const pageAuthorInfo = pageInfo.children('span.page-author-info');\r\n                            const author = pageAuthorInfo.find('span.page-author-item').text();\r\n\r\n                            const pageDateInfo = pageInfo.children('span.page-date-info');\r\n                            const date = pageDateInfo.children('meta').prop('content');\r\n                            const pubDate = parseDate(date);\r\n\r\n                            const pageCategoryInfo = pageInfo.find('span.page-category-info');\r\n                            const category = pageCategoryInfo.children('meta').prop('content');\r\n\r\n                            const article = $$('div.theme-hope-content');\r\n                            const description = article.html();\r\n\r\n                            const comments = Number.parseInt($$('span.wl-num').text());\r\n                            return {\r\n                                title,\r\n                                language,\r\n                                author,\r\n                                pubDate,\r\n                                category,\r\n                                description,\r\n                                comments,\r\n                                guid: link,\r\n                                link,\r\n                            };\r\n                        })\r\n                    )\r\n                )\r\n        )\r\n    );\r\n\r\n    const logoUrl = `${baseUrl}/logo.svg`;\r\n\r\n    return {\r\n        title: '回归线',\r\n        link: baseUrl,\r\n        description: rssDescription,\r\n        icon: logoUrl,\r\n        logo: logoUrl,\r\n        image: logoUrl,\r\n        author,\r\n        language: 'zh-CN',\r\n        item: journals.flat(Infinity),\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAM,EAAiB,qBACjB,EAAM,mBACN,EAAS,YAEFA,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,QACb,QAAS,+BACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,MACA,YAAa,CAAC,GACd,MAAO,CACH,CACI,OAAQ,CAAC,KAGjB,YAAa,EACb,WAGJ,eAAe,GAAU,CACrB,IAAM,EAAU,WAAW,IACrB,CAAE,KAAM,GAAgB,MAAMC,EAAI,GAAG,EAAQ,SAC7C,EAAI,EAAK,GAET,EAAa,EAAE,kCAChB,KAAK,KACL,UACA,IAAK,GAAS,EAAU,EAAE,GAAM,KAAK,SAEpC,EAAc,MAAM,QAAQ,IAC9B,EAAW,IAAI,KAAO,IAAS,CAC3B,GAAM,CAAE,KAAM,GAAa,MAAMA,EAAI,GAC/B,EAAK,EAAK,GACV,EAAS,kBACT,EAAQ,EAAO,KAAK,EAAG,qBAAqB,KAAK,MAAM,QACvD,EAAS,EAAQ,EAAM,GAAK,GAC5B,EAAQ,EAAG,iCACZ,UACA,IAAK,GAAM,EAAU,EAAE,GAAG,KAAK,SACpC,MAAO,CACH,SACA,YAKN,EAAW,MAAM,QAAQ,IAC3B,EAAY,IACR,KAAO,IACH,MAAM,QAAQ,IACV,EAAK,MAAM,IAAK,GACZC,EAAM,OAAO,EAAM,SAAY,CAC3B,GAAM,CAAE,KAAM,GAAa,MAAMD,EAAI,GAC/B,EAAK,EAAK,GAEhB,EAAG,qBAAqB,SACxB,IAAM,EAAW,EAAG,QAAQ,KAAK,QAE3B,EAAY,EAAG,qBAEf,EAAQ,OAAO,EAAK,OAAO,GAAK,EAAU,SAAS,MAAM,OACzD,EAAW,EAAU,SAAS,iBAE9B,EAAiB,EAAS,SAAS,yBACnCE,EAAS,EAAe,KAAK,yBAAyB,OAEtD,EAAe,EAAS,SAAS,uBACjC,EAAO,EAAa,SAAS,QAAQ,KAAK,WAC1C,EAAU,EAAU,GAEpB,EAAmB,EAAS,KAAK,2BACjC,EAAW,EAAiB,SAAS,QAAQ,KAAK,WAElD,EAAU,EAAG,0BACb,EAAc,EAAQ,OAEtB,EAAW,OAAO,SAAS,EAAG,eAAe,QACnD,MAAO,CACH,QACA,WACA,OAAA,EACA,UACA,WACA,cACA,WACA,KAAM,EACN,cAQtB,EAAU,GAAG,EAAQ,WAE3B,MAAO,CACH,MAAO,MACP,KAAM,EACN,YAAa,EACb,KAAM,EACN,KAAM,EACN,MAAO,EACP,SACA,SAAU,QACV,KAAM,EAAS,KAAK"}