{"version":3,"file":"top-_0la9Y7C.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/dev.to/top.ts"],"sourcesContent":["import { Data, DataItem, Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/top/:period',\r\n    categories: ['programming'],\r\n    example: '/dev.to/top/week',\r\n    parameters: { period: 'Period (week, month, year, infinity)' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['dev.to/top/:period'],\r\n        },\r\n    ],\r\n    name: 'Top Posts',\r\n    maintainers: ['dwemerx', 'Rjnishant530'],\r\n    handler,\r\n    url: 'dev.to/top',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const period = ctx.req.param('period');\r\n    const baseUrl = 'https://dev.to';\r\n    const link = `${baseUrl}/top/${period}`;\r\n\r\n    // Calculate date based on period\r\n    const date = new Date();\r\n\r\n    switch (period) {\r\n        case 'week':\r\n            date.setDate(date.getDate() - 7);\r\n            break;\r\n        case 'month':\r\n            date.setMonth(date.getMonth() - 1);\r\n            break;\r\n        case 'year':\r\n            date.setFullYear(date.getFullYear() - 1);\r\n            break;\r\n        case 'infinity':\r\n        default:\r\n            date.setFullYear(date.getFullYear() - 5);\r\n            break;\r\n    }\r\n\r\n    const publishedDate = date.toISOString();\r\n    const apiUrl = `https://dev.to/search/feed_content?per_page=15&sort_by=public_reactions_count&sort_direction=desc&approved=&class_name=Article&published_at%5Bgte%5D=${encodeURIComponent(publishedDate)}`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url: apiUrl,\r\n    });\r\n\r\n    const data = response.data;\r\n\r\n    // Fetch content for each article\r\n    const items = await Promise.all(\r\n        data.result.map((item) => {\r\n            const articleUrl = `${baseUrl}${item.path}`;\r\n            return cache.tryGet(articleUrl, async () => {\r\n                const articleResponse = await got(articleUrl);\r\n                const $ = load(articleResponse.data);\r\n\r\n                // Extract article cover image\r\n                const coverImage = $('.crayons-article__cover img').attr('src');\r\n\r\n                // Extract article content\r\n                const content = $('.crayons-article__body').html() || '';\r\n\r\n                return {\r\n                    title: item.title,\r\n                    author: [\r\n                        {\r\n                            name: item.user.name,\r\n                            url: `${baseUrl}/${item.user.username}`,\r\n                            avatar: item.user.profile_image_90,\r\n                        },\r\n                    ],\r\n                    link: articleUrl,\r\n                    pubDate: parseDate(item.published_at_int * 1000),\r\n                    description: content,\r\n                    category: item.tag_list,\r\n                    image: coverImage,\r\n                } as DataItem;\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `dev.to top (${period})`,\r\n        link,\r\n        description: 'Top dev.to posts',\r\n        language: 'en-us',\r\n        item: items,\r\n        icon: 'https://media2.dev.to/dynamic/image/width=32,height=,fit=scale-down,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F8j7kvp660rqzt99zui8e.png',\r\n    } as Data;\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,eACb,QAAS,mBACT,WAAY,CAAE,OAAQ,wCACtB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBAGjB,KAAM,YACN,YAAa,CAAC,UAAW,gBACzB,UACA,IAAK,cAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAS,EAAI,IAAI,MAAM,UACvB,EAAU,iBACV,EAAO,GAAG,EAAQ,OAAO,IAGzB,EAAO,IAAI,KAEjB,OAAQ,EAAR,CACI,IAAK,OACD,EAAK,QAAQ,EAAK,UAAY,GAC9B,MACJ,IAAK,QACD,EAAK,SAAS,EAAK,WAAa,GAChC,MACJ,IAAK,OACD,EAAK,YAAY,EAAK,cAAgB,GACtC,MACJ,IAAK,WACL,QACI,EAAK,YAAY,EAAK,cAAgB,GACtC,MAGR,IAAM,EAAgB,EAAK,cACrB,EAAS,wJAAwJ,mBAAmB,KACpL,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAO,EAAS,KAGhB,EAAQ,MAAM,QAAQ,IACxB,EAAK,OAAO,IAAK,GAAS,CACtB,IAAM,EAAa,GAAG,IAAU,EAAK,OACrC,OAAOC,EAAM,OAAO,EAAY,SAAY,CACxC,IAAM,EAAkB,MAAMD,EAAI,GAC5B,EAAI,EAAK,EAAgB,MAGzB,EAAa,EAAE,+BAA+B,KAAK,OAGnD,EAAU,EAAE,0BAA0B,QAAU,GAEtD,MAAO,CACH,MAAO,EAAK,MACZ,OAAQ,CACJ,CACI,KAAM,EAAK,KAAK,KAChB,IAAK,GAAG,EAAQ,GAAG,EAAK,KAAK,WAC7B,OAAQ,EAAK,KAAK,mBAG1B,KAAM,EACN,QAAS,EAAU,EAAK,iBAAmB,KAC3C,YAAa,EACb,SAAU,EAAK,SACf,MAAO,QAMvB,MAAO,CACH,MAAO,eAAe,EAAO,GAC7B,OACA,YAAa,mBACb,SAAU,QACV,KAAM,EACN,KAAM"}