{"version":3,"file":"collection-BKvf6W55.js","names":["route: Route","got","cache","response"],"sources":["../../lib/routes/zhihu/collection.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { header } from './utils';\r\nimport { generateData } from './pin/utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/collection/:id/:getAll?',\r\n    categories: ['social-media'],\r\n    example: '/zhihu/collection/26444956',\r\n    parameters: { id: '收藏夹 id，可在收藏夹页面 URL 中找到', getAll: '获取全部收藏内容，任意值为打开' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'ZHIHU_COOKIES',\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.zhihu.com/collection/:id'],\r\n            target: '/collection/:id',\r\n        },\r\n    ],\r\n    name: '收藏夹',\r\n    maintainers: ['huruji', 'Colin-XKL', 'Fatpandac'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const getAll = ctx.req.param('getAll');\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: `https://www.zhihu.com/api/v4/collections/${id}/items?offset=0&limit=20`,\r\n        headers: {\r\n            ...header,\r\n            cookie: config.zhihu.cookies,\r\n            Referer: `https://www.zhihu.com/collection/${id}`,\r\n        },\r\n    });\r\n\r\n    const list = response.data.data;\r\n\r\n    if (getAll) {\r\n        const totals = response.data.paging.totals;\r\n\r\n        const offsetList = [...Array.from({ length: Math.round(totals / 20) }).keys()].map((item) => item * 20).slice(1);\r\n        const otherList = await Promise.all(\r\n            offsetList.map((offset) =>\r\n                cache.tryGet(`https://www.zhihu.com/api/v4/collections/${id}/items?offset=${offset}&limit=20`, async () => {\r\n                    const response = await got({\r\n                        method: 'get',\r\n                        url: `https://www.zhihu.com/api/v4/collections/${id}/items?offset=${offset}&limit=20`,\r\n                        headers: {\r\n                            ...header,\r\n                            cookie: config.zhihu.cookies,\r\n                            Referer: `https://www.zhihu.com/collection/${id}`,\r\n                        },\r\n                    });\r\n\r\n                    return response.data.data;\r\n                })\r\n            )\r\n        ).then((item) => item.flat());\r\n        list.push(...otherList);\r\n    }\r\n\r\n    const response2 = await got({\r\n        method: 'get',\r\n        url: `https://www.zhihu.com/collection/${id}`,\r\n        headers: {\r\n            ...header,\r\n            Referer: `https://www.zhihu.com/collection/${id}`,\r\n        },\r\n    });\r\n\r\n    const meta = response2.data;\r\n    const $ = load(meta);\r\n    const collection_title = $('.CollectionDetailPageHeader-title').text() + ' - 知乎收藏夹';\r\n    const collection_description = $('.CollectionDetailPageHeader-description').text();\r\n\r\n    const generateDataPin = (item) => generateData([item.content])[0];\r\n    return {\r\n        title: collection_title,\r\n        link: `https://www.zhihu.com/collection/${id}`,\r\n        description: collection_description,\r\n        item:\r\n            list &&\r\n            list.map((item) =>\r\n                item.content.type === 'pin'\r\n                    ? generateDataPin(item)\r\n                    : {\r\n                          title: item.content.type === 'article' || item.content.type === 'zvideo' ? item.content.title : item.content.question.title,\r\n                          link: item.content.url,\r\n                          description: item.content.type === 'zvideo' ? `<img src=${item.content.video.url}/>` : item.content.content,\r\n                          pubDate: parseDate((item.content.type === 'article' ? item.content.updated : item.content.updated_time) * 1000),\r\n                      }\r\n            ),\r\n    };\r\n}\r\n"],"mappings":"mfASA,MAAaA,EAAe,CACxB,KAAM,2BACN,WAAY,CAAC,gBACb,QAAS,6BACT,WAAY,CAAE,GAAI,yBAA0B,OAAQ,mBACpD,SAAU,CACN,cAAe,CACX,CACI,KAAM,gBACN,YAAa,KAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,gCACT,OAAQ,oBAGhB,KAAM,MACN,YAAa,CAAC,SAAU,YAAa,aACrC,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAS,EAAI,IAAI,MAAM,UAEvB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,4CAA4C,EAAG,0BACpD,QAAS,CACL,GAAG,EACH,OAAQ,EAAO,MAAM,QACrB,QAAS,oCAAoC,OAI/C,EAAO,EAAS,KAAK,KAE3B,GAAI,EAAQ,CACR,IAAM,EAAS,EAAS,KAAK,OAAO,OAE9B,EAAa,CAAC,GAAG,MAAM,KAAK,CAAE,OAAQ,KAAK,MAAM,EAAS,MAAO,QAAQ,IAAK,GAAS,EAAO,IAAI,MAAM,GACxG,EAAY,MAAM,QAAQ,IAC5B,EAAW,IAAK,GACZC,EAAM,OAAO,4CAA4C,EAAG,gBAAgB,EAAO,WAAY,SAAY,CACvG,IAAMC,EAAW,MAAMF,EAAI,CACvB,OAAQ,MACR,IAAK,4CAA4C,EAAG,gBAAgB,EAAO,WAC3E,QAAS,CACL,GAAG,EACH,OAAQ,EAAO,MAAM,QACrB,QAAS,oCAAoC,OAIrD,OAAOE,EAAS,KAAK,SAG/B,KAAM,GAAS,EAAK,QACtB,EAAK,KAAK,GAAG,GAGjB,IAAM,EAAY,MAAMF,EAAI,CACxB,OAAQ,MACR,IAAK,oCAAoC,IACzC,QAAS,CACL,GAAG,EACH,QAAS,oCAAoC,OAI/C,EAAO,EAAU,KACjB,EAAI,EAAK,GACT,EAAmB,EAAE,qCAAqC,OAAS,WACnE,EAAyB,EAAE,2CAA2C,OAEtE,EAAmB,GAAS,EAAa,CAAC,EAAK,UAAU,GAC/D,MAAO,CACH,MAAO,EACP,KAAM,oCAAoC,IAC1C,YAAa,EACb,KACI,GACA,EAAK,IAAK,GACN,EAAK,QAAQ,OAAS,MAChB,EAAgB,GAChB,CACI,MAAO,EAAK,QAAQ,OAAS,WAAa,EAAK,QAAQ,OAAS,SAAW,EAAK,QAAQ,MAAQ,EAAK,QAAQ,SAAS,MACtH,KAAM,EAAK,QAAQ,IACnB,YAAa,EAAK,QAAQ,OAAS,SAAW,YAAY,EAAK,QAAQ,MAAM,IAAI,IAAM,EAAK,QAAQ,QACpG,QAAS,GAAW,EAAK,QAAQ,OAAS,UAAY,EAAK,QAAQ,QAAU,EAAK,QAAQ,cAAgB"}