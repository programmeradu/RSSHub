{"version":3,"file":"news-DksHg7eL.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/uw/gix/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nconst gixBaseURL = 'https://gixnetwork.org';\r\n\r\nexport const route: Route = {\r\n    path: '/gix/news/:category',\r\n    categories: ['university'],\r\n    example: '/uw/gix/news/blog',\r\n    parameters: { category: 'Blog Type' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gixnetwork.org/news/:category'],\r\n        },\r\n    ],\r\n    name: 'Global Innovation Exchange News',\r\n    maintainers: ['dykderrick'],\r\n    handler,\r\n    description: `| Blog | In The News |\r\n| ---- | ----------- |\r\n| blog | inthenews   |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category');\r\n\r\n    let newsURL = gixBaseURL + '/news';\r\n    let feedTitle = 'UW GIX News - ';\r\n    let listSelector = 'body > div.site > div.site-content > div.content-area > main.site-main > ';\r\n\r\n    switch (category) {\r\n        case 'blog':\r\n            newsURL += '/blog/';\r\n            feedTitle += 'Blogs';\r\n            listSelector += 'div.blog-wrapper > section.blog-list > article';\r\n            break;\r\n        case 'inthenews':\r\n            newsURL += '/inthenews/';\r\n            feedTitle += 'In The News';\r\n            listSelector += 'div.news-wrapper > section.news-list > article';\r\n            break;\r\n    }\r\n\r\n    const response = await got(newsURL);\r\n\r\n    const data = response.data;\r\n\r\n    const $ = load(data);\r\n\r\n    const list = $(listSelector)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const content = item.find('header').find('h2').find('a');\r\n            const time = item.find('header').find('span.h4').text();\r\n\r\n            return {\r\n                // title: content.text(),\r\n                time,\r\n                link: content.attr('href'),\r\n            };\r\n        });\r\n\r\n    const itemContent = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const descriptionResponse = await got(item.link);\r\n\r\n                const content = load(descriptionResponse.data);\r\n\r\n                item.title = content('header.entry-header').find('h1').text();\r\n                item.description = content('div.entry-content').html();\r\n                item.pubDate = Date.parse(item.time);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: feedTitle,\r\n        link: newsURL,\r\n        item: itemContent,\r\n    };\r\n}\r\n"],"mappings":"mTAKA,MAEaA,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,cACb,QAAS,oBACT,WAAY,CAAE,SAAU,aACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mCAGjB,KAAM,kCACN,YAAa,CAAC,cACd,UACA,YAAa;;yBAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YAE3B,EAAU,8BACV,EAAY,iBACZ,EAAe,4EAEnB,OAAQ,EAAR,CACI,IAAK,OACD,GAAW,SACX,GAAa,QACb,GAAgB,iDAChB,MACJ,IAAK,YACD,GAAW,cACX,GAAa,cACb,GAAgB,iDAChB,MAGR,IAAM,EAAW,MAAMC,EAAI,GAErB,EAAO,EAAS,KAEhB,EAAI,EAAK,GAET,EAAO,EAAE,GACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAU,EAAK,KAAK,UAAU,KAAK,MAAM,KAAK,KAC9C,EAAO,EAAK,KAAK,UAAU,KAAK,WAAW,OAEjD,MAAO,CAEH,OACA,KAAM,EAAQ,KAAK,WAIzB,EAAc,MAAM,QAAQ,IAC9B,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAsB,MAAMD,EAAI,EAAK,MAErC,EAAU,EAAK,EAAoB,MAMzC,MAJA,GAAK,MAAQ,EAAQ,uBAAuB,KAAK,MAAM,OACvD,EAAK,YAAc,EAAQ,qBAAqB,OAChD,EAAK,QAAU,KAAK,MAAM,EAAK,MAExB,MAKnB,MAAO,CACH,MAAO,EACP,KAAM,EACN,KAAM"}