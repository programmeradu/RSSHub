{"version":3,"file":"following-CEeINqqr.js","names":["route: Route","got"],"sources":["../../lib/routes/crossbell/feeds/following.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\n\r\nexport const route: Route = {\r\n    path: '/feeds/following/:characterId',\r\n    categories: ['social-media'],\r\n    example: '/crossbell/feeds/following/10',\r\n    parameters: { characterId: 'N' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Feeds of following',\r\n    maintainers: ['DIYgod'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const characterId = ctx.req.param('characterId');\r\n    const response = await got(`https://indexer.crossbell.io/v1/characters/${characterId}/feed/follow`);\r\n    return {\r\n        title: 'Crossbell Feeds of ' + characterId,\r\n        link: 'https://crossbell.io/',\r\n        item: response.data?.list\r\n            ?.filter((item) => item.type !== 'UPDATE_CHARACTER_METADATA')\r\n            .map((item) => {\r\n                let link = item.note ? item.note.metadata?.content?.external_urls?.[0] || `https://crossbell.io/notes/${item.note.characterId}-${item.note.noteId}` : 'https://xchar.app/' + item.character.handle;\r\n                if (link.startsWith('https://xn--')) {\r\n                    link = `https://crossbell.io/notes/${item.note?.characterId}-${item.note?.noteId}`;\r\n                }\r\n\r\n                return {\r\n                    title: `${item.type} ${item.character && item.character.metadata?.content?.name}@${item.character && item.character.handle}`,\r\n                    description: `${item.type} ${item.note && `<br>Note: ${item.note.metadata?.content?.title || item.note.metadata?.content?.content}`}${\r\n                        item.character && `<br>Character: ${item.character.metadata?.content?.name}@${item.character.handle}`\r\n                    }`,\r\n                    link,\r\n                    pubDate: item.createdAt,\r\n                    updated: item.updatedAt,\r\n                    author: item.note?.metadata?.content?.authors?.[0] || item.note?.character?.metadata?.content?.name || item.note?.character?.handle || item.owner,\r\n                    guid: item.transactionHash + item.logIndex + item.type,\r\n                    category: [...(item.note?.metadata?.content?.sources || []), ...(item.note?.metadata?.content?.tags || [])],\r\n                };\r\n            }),\r\n    };\r\n}\r\n"],"mappings":"gOAGA,MAAaA,EAAe,CACxB,KAAM,gCACN,WAAY,CAAC,gBACb,QAAS,gCACT,WAAY,CAAE,YAAa,KAC3B,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,qBACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAc,EAAI,IAAI,MAAM,eAC5B,EAAW,MAAMC,EAAI,8CAA8C,EAAY,eACrF,MAAO,CACH,MAAO,sBAAwB,EAC/B,KAAM,wBACN,KAAM,EAAS,MAAM,MACf,OAAQ,GAAS,EAAK,OAAS,6BAChC,IAAK,GAAS,CACX,IAAI,EAAO,EAAK,KAAO,EAAK,KAAK,UAAU,SAAS,gBAAgB,IAAM,8BAA8B,EAAK,KAAK,YAAY,GAAG,EAAK,KAAK,SAAW,qBAAuB,EAAK,UAAU,OAK5L,OAJI,EAAK,WAAW,kBAChB,EAAO,8BAA8B,EAAK,MAAM,YAAY,GAAG,EAAK,MAAM,UAGvE,CACH,MAAO,GAAG,EAAK,KAAK,GAAG,EAAK,WAAa,EAAK,UAAU,UAAU,SAAS,KAAK,GAAG,EAAK,WAAa,EAAK,UAAU,SACpH,YAAa,GAAG,EAAK,KAAK,GAAG,EAAK,MAAQ,aAAa,EAAK,KAAK,UAAU,SAAS,OAAS,EAAK,KAAK,UAAU,SAAS,YACtH,EAAK,WAAa,kBAAkB,EAAK,UAAU,UAAU,SAAS,KAAK,GAAG,EAAK,UAAU,WAEjG,OACA,QAAS,EAAK,UACd,QAAS,EAAK,UACd,OAAQ,EAAK,MAAM,UAAU,SAAS,UAAU,IAAM,EAAK,MAAM,WAAW,UAAU,SAAS,MAAQ,EAAK,MAAM,WAAW,QAAU,EAAK,MAC5I,KAAM,EAAK,gBAAkB,EAAK,SAAW,EAAK,KAClD,SAAU,CAAC,GAAI,EAAK,MAAM,UAAU,SAAS,SAAW,GAAK,GAAI,EAAK,MAAM,UAAU,SAAS,MAAQ"}