{"version":3,"file":"search-Dp9qX20k.js","names":["route: Route","InvalidParameterError","cache","ofetch"],"sources":["../../lib/routes/skeb/search.ts"],"sourcesContent":["import { Data, DataItem, Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { processWork, baseUrl } from './utils';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\nexport const route: Route = {\r\n    path: '/search/:keyword',\r\n    categories: ['picture'],\r\n    example: '/skeb/search/初音ミク',\r\n    parameters: { keyword: 'Search keyword' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Search Results',\r\n    maintainers: ['SnowAgar25'],\r\n    handler,\r\n    description: 'Get the search results for works on Skeb',\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const keyword = ctx.req.param('keyword');\r\n\r\n    if (!keyword) {\r\n        throw new InvalidParameterError('Invalid search keyword');\r\n    }\r\n\r\n    const url = 'https://hb1jt3kre9-dsn.algolia.net/1/indexes/*/queries';\r\n\r\n    const items = await cache.tryGet(`skeb:search:${keyword}`, async () => {\r\n        const data = await ofetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'x-algolia-application-id': 'HB1JT3KRE9',\r\n                'x-algolia-api-key': '9a4ce7d609e71bf29e977925e4c6740c',\r\n            },\r\n            body: {\r\n                requests: [\r\n                    {\r\n                        indexName: 'User',\r\n                        query: keyword,\r\n                        params: 'hitsPerPage=40',\r\n                        filters: 'genres:art OR genres:comic OR genres:voice OR genres:novel OR genres:video OR genres:music OR genres:correction',\r\n                    },\r\n                    {\r\n                        indexName: 'Request',\r\n                        query: keyword,\r\n                        params: 'hitsPerPage=40&filters=genre%3Aart%20OR%20genre%3Acomic%20OR%20genre%3Avoice%20OR%20genre%3Anovel%20OR%20genre%3Avideo%20OR%20genre%3Amusic%20OR%20genre%3Acorrection',\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n\r\n        if (!data || !data.results || !Array.isArray(data.results) || data.results.length < 2) {\r\n            throw new Error('Invalid data received from API');\r\n        }\r\n\r\n        const works = data.results[1].hits;\r\n\r\n        if (!Array.isArray(works)) {\r\n            throw new TypeError('Invalid hits data received from API');\r\n        }\r\n\r\n        return works.map((item) => processWork(item)).filter(Boolean);\r\n    });\r\n\r\n    return {\r\n        title: `Skeb - Search Results for \"${keyword}\"`,\r\n        link: `${baseUrl}/search?q=${encodeURIComponent(keyword)}`,\r\n        item: items as DataItem[],\r\n    };\r\n}\r\n"],"mappings":"uYAMA,MAAaA,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,WACb,QAAS,oBACT,WAAY,CAAE,QAAS,kBACvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,iBACN,YAAa,CAAC,cACd,UACA,YAAa,4CAGjB,eAAe,EAAQ,EAAoB,CACvC,IAAM,EAAU,EAAI,IAAI,MAAM,WAE9B,GAAI,CAAC,EACD,MAAM,IAAIC,EAAsB,0BAGpC,IAEM,EAAQ,MAAMC,EAAM,OAAO,eAAe,IAAW,SAAY,CACnE,IAAM,EAAO,MAAMC,EAAO,yDAAK,CAC3B,OAAQ,OACR,QAAS,CACL,2BAA4B,aAC5B,oBAAqB,oCAEzB,KAAM,CACF,SAAU,CACN,CACI,UAAW,OACX,MAAO,EACP,OAAQ,iBACR,QAAS,mHAEb,CACI,UAAW,UACX,MAAO,EACP,OAAQ,6KAMxB,GAAI,CAAC,GAAQ,CAAC,EAAK,SAAW,CAAC,MAAM,QAAQ,EAAK,UAAY,EAAK,QAAQ,OAAS,EAChF,MAAU,MAAM,kCAGpB,IAAM,EAAQ,EAAK,QAAQ,GAAG,KAE9B,GAAI,CAAC,MAAM,QAAQ,GACf,MAAU,UAAU,uCAGxB,OAAO,EAAM,IAAK,GAAS,EAAY,IAAO,OAAO,WAGzD,MAAO,CACH,MAAO,8BAA8B,EAAQ,GAC7C,KAAM,GAAG,EAAQ,YAAY,mBAAmB,KAChD,KAAM"}