{"version":3,"file":"kx-CmBM-qc0.js","names":["limit: number","baseUrl: string","targetUrl: string","apiUrl: string","ofetch","$: CheerioAPI","items: DataItem[]","title: string","description: string","pubDate: number | string","linkUrl: string | undefined","categories: string[]","authors: DataItem['author']","image: string | undefined","updated: number | string","processedItem: DataItem","cache","$$: CheerioAPI","pubDateStr: string | undefined","upDatedStr: string | undefined","route: Route"],"sources":["../../lib/routes/stcn/kx.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nimport { type CheerioAPI, load } from 'cheerio';\r\nimport { type Context } from 'hono';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n\r\n    const baseUrl: string = 'https://www.stcn.com';\r\n    const targetUrl: string = new URL('article/list/kx.html', baseUrl).href;\r\n    const apiUrl: string = new URL('article/list.html', baseUrl).href;\r\n\r\n    const targetResponse = await ofetch(targetUrl);\r\n\r\n    const response = await ofetch(apiUrl, {\r\n        headers: {\r\n            'x-requested-with': 'XMLHttpRequest',\r\n        },\r\n        query: {\r\n            type: 'kx',\r\n        },\r\n    });\r\n\r\n    const $: CheerioAPI = load(targetResponse);\r\n    const language = $('html').attr('lang') ?? 'zh-CN';\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = response.data.slice(0, limit).map((item): DataItem => {\r\n        const title: string = item.title;\r\n        const description: string = item.content;\r\n        const pubDate: number | string = item.time;\r\n        const linkUrl: string | undefined = item.url;\r\n        const categories: string[] = item.tags ? item.tags.map((c) => c.name) : [];\r\n        const authors: DataItem['author'] = item.source;\r\n        const image: string | undefined = item.share?.image;\r\n        const updated: number | string = pubDate;\r\n\r\n        const processedItem: DataItem = {\r\n            title,\r\n            description,\r\n            pubDate: pubDate ? parseDate(pubDate, 'X') : undefined,\r\n            link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n            category: categories,\r\n            author: authors,\r\n            content: {\r\n                html: description,\r\n                text: item.content ?? description,\r\n            },\r\n            image,\r\n            banner: image,\r\n            updated: updated ? parseDate(updated, 'X') : undefined,\r\n            language,\r\n        };\r\n\r\n        return processedItem;\r\n    });\r\n\r\n    items = (\r\n        await Promise.all(\r\n            items.map((item) => {\r\n                if (!item.link) {\r\n                    return item;\r\n                }\r\n\r\n                return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                    const detailResponse = await ofetch(item.link);\r\n                    const $$: CheerioAPI = load(detailResponse);\r\n\r\n                    const title: string = $$('div.detail-title').text();\r\n                    const description: string = $$('div.detail-content').html() ?? '';\r\n                    const pubDateStr: string | undefined = $$('div.detail-info span').last().text().trim();\r\n                    const categories: string[] = [...new Set([...(item.category as string[]), ...($$('meta[name=\"keywords\"]').attr('content')?.split(/,/) ?? [])])];\r\n                    const authors: DataItem['author'] = $$('div.detail-info span').first().text().split(/：/).pop();\r\n                    const upDatedStr: string | undefined = pubDateStr;\r\n\r\n                    const processedItem: DataItem = {\r\n                        title,\r\n                        description,\r\n                        pubDate: pubDateStr ? timezone(parseDate(pubDateStr), +8) : item.pubDate,\r\n                        category: categories,\r\n                        author: authors,\r\n                        content: {\r\n                            html: description,\r\n                            text: description,\r\n                        },\r\n                        updated: upDatedStr ? timezone(parseDate(upDatedStr), +8) : item.updated,\r\n                        language,\r\n                    };\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...processedItem,\r\n                    };\r\n                });\r\n            })\r\n        )\r\n    ).filter((_): _ is DataItem => true);\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('img.stcn-logo').attr('src'),\r\n        author: $('meta[name=\"keywords\"]').attr('content')?.split(/,/)[0],\r\n        language,\r\n        id: targetUrl,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/article/list/kx',\r\n    name: '快讯',\r\n    url: 'www.stcn.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/stcn/article/list/kx',\r\n    parameters: undefined,\r\n    description: undefined,\r\n    categories: ['finance'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.stcn.com/article/list/kx.html'],\r\n            target: '/article/list/kx',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"oZAUA,MAAa,EAAU,KAAO,IAAgC,CAC1D,IAAMA,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhEC,EAAkB,uBAClBC,EAAoB,IAAI,IAAI,uBAAwB,GAAS,KAC7DC,EAAiB,IAAI,IAAI,oBAAqB,GAAS,KAEvD,EAAiB,MAAMC,EAAO,GAE9B,EAAW,MAAMA,EAAO,EAAQ,CAClC,QAAS,CACL,mBAAoB,kBAExB,MAAO,CACH,KAAM,QAIRC,EAAgB,EAAK,GACrB,EAAW,EAAE,QAAQ,KAAK,SAAW,QAEvCC,EAAoB,GAyExB,MAvEA,GAAQ,EAAS,KAAK,MAAM,EAAG,GAAO,IAAK,GAAmB,CAC1D,IAAMC,EAAgB,EAAK,MACrBC,EAAsB,EAAK,QAC3BC,EAA2B,EAAK,KAChCC,EAA8B,EAAK,IACnCC,EAAuB,EAAK,KAAO,EAAK,KAAK,IAAK,GAAM,EAAE,MAAQ,GAClEC,EAA8B,EAAK,OACnCC,EAA4B,EAAK,OAAO,MACxCC,EAA2B,EAE3BC,EAA0B,CAC5B,QACA,cACA,QAAS,EAAU,EAAU,EAAS,KAAO,IAAA,GAC7C,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,SAAU,EACV,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,EAAK,SAAW,GAE1B,QACA,OAAQ,EACR,QAAS,EAAU,EAAU,EAAS,KAAO,IAAA,GAC7C,YAGJ,OAAO,IAGX,GACI,MAAM,QAAQ,IACV,EAAM,IAAK,GACF,EAAK,KAIHC,EAAM,OAAO,EAAK,KAAM,SAA+B,CAC1D,IAAM,EAAiB,MAAMZ,EAAO,EAAK,MACnCa,EAAiB,EAAK,GAEtBV,EAAgB,EAAG,oBAAoB,OACvCC,EAAsB,EAAG,sBAAsB,QAAU,GACzDU,EAAiC,EAAG,wBAAwB,OAAO,OAAO,OAC1EP,EAAuB,CAAC,GAAG,IAAI,IAAI,CAAC,GAAI,EAAK,SAAuB,GAAI,EAAG,yBAAyB,KAAK,YAAY,MAAM,MAAQ,MACnIC,EAA8B,EAAG,wBAAwB,QAAQ,OAAO,MAAM,KAAK,MACnFO,EAAiC,EAEjCJ,EAA0B,CAC5B,QACA,cACA,QAAS,EAAa,EAAS,EAAU,GAAa,GAAM,EAAK,QACjE,SAAU,EACV,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QAAS,EAAa,EAAS,EAAU,GAAa,GAAM,EAAK,QACjE,YAGJ,MAAO,CACH,GAAG,EACH,GAAG,KA9BA,KAmCrB,OAAQ,GAAqB,IAExB,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,4BAA4B,KAAK,WAChD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EAAE,iBAAiB,KAAK,OAC/B,OAAQ,EAAE,yBAAyB,KAAK,YAAY,MAAM,KAAK,GAC/D,WACA,GAAI,IAICK,EAAe,CACxB,KAAM,mBACN,KAAM,KACN,IAAK,eACL,YAAa,CAAC,WACd,UACA,QAAS,wBACT,WAAY,IAAA,GACZ,YAAa,IAAA,GACb,WAAY,CAAC,WACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qCACT,OAAQ,qBAGhB,KAAM,EAAS"}