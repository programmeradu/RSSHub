{"version":3,"file":"playlist-B-yiISPE.js","names":[],"sources":["../../lib/routes/163/music/playlist.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/music/playlist/:id',\r\n    categories: ['multimedia'],\r\n    example: '/163/music/playlist/35798529',\r\n    parameters: { id: '歌单 id, 可在歌单页 URL 中找到' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'NCM_COOKIES',\r\n                optional: true,\r\n                description: '网易云音乐登陆后的 cookie 值，可在浏览器控制台通过`document.cookie`获取。',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '歌单歌曲',\r\n    maintainers: ['DIYgod'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n\r\n    const response = await got.get(`https://music.163.com/api/v3/playlist/detail?id=${id}`, {\r\n        headers: {\r\n            Referer: 'https://music.163.com/',\r\n            Cookie: config.ncm.cookies,\r\n        },\r\n    });\r\n\r\n    const data = response.data.playlist;\r\n    const songinfo = await got('https://music.163.com/api/song/detail', {\r\n        headers: {\r\n            Referer: 'https://music.163.com',\r\n        },\r\n        searchParams: {\r\n            ids: `[${data.trackIds.slice(0, 201).map((item) => item.id)}]`,\r\n        },\r\n    });\r\n    const songs = songinfo.data.songs;\r\n\r\n    return {\r\n        title: data.name,\r\n        link: `https://music.163.com/#/playlist?id=${id}`,\r\n        description: `网易云音乐歌单 - ${data.name}`,\r\n        item: data.trackIds.slice(0, 201).map((item) => {\r\n            const thisSong = songs.find((element) => element.id === item.id);\r\n            const singer = thisSong.artists.length === 1 ? thisSong.artists[0].name : thisSong.artists.reduce((prev, cur) => (prev.name || prev) + '/' + cur.name);\r\n            return {\r\n                title: `${thisSong.name} - ${singer}`,\r\n                description: art(path.join(__dirname, '../templates/music/playlist.art'), {\r\n                    singer,\r\n                    album: thisSong.album.name,\r\n                    date: new Date(thisSong.album.publishTime).toLocaleDateString(),\r\n                    picUrl: thisSong.album.picUrl,\r\n                }),\r\n                link: `https://music.163.com/song?id=${item.id}`,\r\n                guid: `https://music.163.com/#/song?id=${item.id}`,\r\n                pubDate: new Date(item.at),\r\n                author: singer,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"iWAOA,MAAa,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,cACb,QAAS,+BACT,WAAY,CAAE,GAAI,wBAClB,SAAU,CACN,cAAe,CACX,CACI,KAAM,cACN,SAAU,GACV,YAAa,sDAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAW,MAAM,EAAI,IAAI,mDAAmD,IAAM,CACpF,QAAS,CACL,QAAS,yBACT,OAAQ,EAAO,IAAI,WAIrB,EAAO,EAAS,KAAK,SACrB,EAAW,MAAM,EAAI,wCAAyC,CAChE,QAAS,CACL,QAAS,yBAEb,aAAc,CACV,IAAK,IAAI,EAAK,SAAS,MAAM,EAAG,KAAK,IAAK,GAAS,EAAK,IAAI,MAG9D,EAAQ,EAAS,KAAK,MAE5B,MAAO,CACH,MAAO,EAAK,KACZ,KAAM,uCAAuC,IAC7C,YAAa,aAAa,EAAK,OAC/B,KAAM,EAAK,SAAS,MAAM,EAAG,KAAK,IAAK,GAAS,CAC5C,IAAM,EAAW,EAAM,KAAM,GAAY,EAAQ,KAAO,EAAK,IACvD,EAAS,EAAS,QAAQ,SAAW,EAAI,EAAS,QAAQ,GAAG,KAAO,EAAS,QAAQ,QAAQ,EAAM,KAAS,EAAK,MAAQ,GAAQ,IAAM,EAAI,MACjJ,MAAO,CACH,MAAO,GAAG,EAAS,KAAK,KAAK,IAC7B,YAAa,EAAI,EAAA,KAAA,EAAA,mCAAyD,CACtE,SACA,MAAO,EAAS,MAAM,KACtB,KAAM,IAAI,KAAK,EAAS,MAAM,aAAa,qBAC3C,OAAQ,EAAS,MAAM,SAE3B,KAAM,iCAAiC,EAAK,KAC5C,KAAM,mCAAmC,EAAK,KAC9C,QAAS,IAAI,KAAK,EAAK,IACvB,OAAQ"}