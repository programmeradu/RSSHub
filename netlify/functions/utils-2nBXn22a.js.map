{"version":3,"file":"utils-2nBXn22a.js","names":["cache","got"],"sources":["../../lib/routes/newrank/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport md5 from '@/utils/md5';\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\nconst newrank_cookie_token = 'newrank_cookie_token';\r\nconst query_count = 'newrank_cookie_count';\r\nconst max_query_count = 30;\r\n\r\nconst random_nonce = (count) => {\r\n    const arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n    const shuffled = [...arr];\r\n    let i = arr.length,\r\n        temp,\r\n        index,\r\n        str = '';\r\n    const min = i - count;\r\n    while (i-- > min) {\r\n        index = Math.floor((i + 1) * Math.random());\r\n        temp = shuffled[index];\r\n        str = str + temp;\r\n    }\r\n    return str;\r\n};\r\n\r\nconst decrypt_login_xyz = (username, decrypt_password, nonce) => {\r\n    const str = '/nr/user/login/loginByAccount?AppKey=joker&account=' + username + '&password=' + decrypt_password + '&state=1&nonce=' + nonce;\r\n    return md5(str);\r\n};\r\n\r\nconst decrypt_wechat_detail_xyz = (uid, nonce) => {\r\n    const str = '/xdnphb/detail/v1/rank/article/lists?AppKey=joker&account=' + uid + '&nonce=' + nonce;\r\n    return md5(str);\r\n};\r\n\r\nconst decrypt_douyin_account_xyz = (nonce) => {\r\n    const str = '/xdnphb/nr/cloud/douyin/detail/accountInfoAll?AppKey=joker&nonce=' + nonce;\r\n    return md5(str);\r\n};\r\n\r\nconst decrypt_douyin_detail_xyz = (nonce) => {\r\n    const str = '/xdnphb/nr/cloud/douyin/detail/aweme?AppKey=joker&nonce=' + nonce;\r\n    return md5(str);\r\n};\r\n\r\nconst flatten = (arr) => {\r\n    const result = [];\r\n    for (const val of arr) {\r\n        if (Array.isArray(val)) {\r\n            result.push(...flatten(val));\r\n        } else {\r\n            result.push(val);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\nfunction shouldUpdateCookie(forcedUpdate = false) {\r\n    if (forcedUpdate) {\r\n        cache.set(query_count, 0);\r\n    } else {\r\n        const count = cache.get(query_count);\r\n        if (count) {\r\n            if (count > max_query_count) {\r\n                cache.set(query_count, 0);\r\n                clearCookie();\r\n            } else {\r\n                cache.set(query_count, count + 1);\r\n            }\r\n        } else {\r\n            cache.set(query_count, 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearCookie() {\r\n    cache.set(newrank_cookie_token, null);\r\n}\r\n\r\n// 加了验证码失效了\r\nasync function getCookie() {\r\n    // Check if this key should be replace? every 30 times should be fine.\r\n    shouldUpdateCookie();\r\n    let token = await cache.get(newrank_cookie_token);\r\n    const username = String(config.newrank.username);\r\n    const password = md5(md5(String(config.newrank.password)) + 'daddy');\r\n    const nonce = random_nonce(9);\r\n    const xyz = decrypt_login_xyz(username, password, nonce);\r\n    if (!token) {\r\n        const indexResponse = await got({\r\n            method: 'post',\r\n            url: 'https://www.newrank.cn/nr/user/login/loginByAccount',\r\n            form: {\r\n                account: username,\r\n                password,\r\n                state: 1,\r\n                nonce,\r\n                xyz,\r\n            },\r\n        });\r\n        const set_cookie = indexResponse.headers['set-cookie'];\r\n        if (set_cookie) {\r\n            for (const e of set_cookie) {\r\n                if (e.indexOf('token') === 0) {\r\n                    token = e.split(';')[0];\r\n                }\r\n            }\r\n        }\r\n        cache.set(newrank_cookie_token, token, 600);\r\n        // We have acquired new cookie. It may due to cache timeout.\r\n        // Force update counter and don't wait it finished.\r\n        shouldUpdateCookie(true);\r\n    }\r\n    return token;\r\n}\r\n\r\nexport default { getCookie, random_nonce, decrypt_wechat_detail_xyz, decrypt_douyin_account_xyz, decrypt_douyin_detail_xyz, flatten };\r\n"],"mappings":"0LAIA,MAAM,EAAuB,uBACvB,EAAc,uBAGd,EAAgB,GAAU,CAC5B,IAAM,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClF,EAAW,CAAC,GAAG,GACjB,EAAI,EAAI,OACR,EACA,EACA,EAAM,GACJ,EAAM,EAAI,EAChB,KAAO,KAAM,GACT,EAAQ,KAAK,OAAO,EAAI,GAAK,KAAK,UAClC,EAAO,EAAS,GAChB,GAAY,EAEhB,OAAO,GAGL,GAAqB,EAAU,EAAkB,IAAU,CAC7D,IAAM,EAAM,sDAAwD,EAAW,aAAe,EAAmB,kBAAoB,EACrI,OAAO,EAAI,IAGT,GAA6B,EAAK,IAAU,CAC9C,IAAM,EAAM,6DAA+D,EAAM,UAAY,EAC7F,OAAO,EAAI,IAGT,EAA8B,GAAU,CAC1C,IAAM,EAAM,oEAAsE,EAClF,OAAO,EAAI,IAGT,EAA6B,GAAU,CACzC,IAAM,EAAM,2DAA6D,EACzE,OAAO,EAAI,IAGT,EAAW,GAAQ,CACrB,IAAM,EAAS,GACf,IAAK,IAAM,KAAO,EACV,MAAM,QAAQ,GACd,EAAO,KAAK,GAAG,EAAQ,IAEvB,EAAO,KAAK,GAGpB,OAAO,GAGX,SAAS,EAAmB,EAAe,GAAO,CAC9C,GAAI,EACA,EAAM,IAAI,EAAa,OACpB,CACH,IAAM,EAAQA,EAAM,IAAI,GACpB,EACI,EAAQ,IACR,EAAM,IAAI,EAAa,GACvB,KAEA,EAAM,IAAI,EAAa,EAAQ,GAGnC,EAAM,IAAI,EAAa,IAKnC,SAAS,GAAc,CACnB,EAAM,IAAI,EAAsB,MAIpC,eAAe,GAAY,CAEvB,IACA,IAAI,EAAQ,MAAMA,EAAM,IAAI,GACtB,EAAW,OAAO,EAAO,QAAQ,UACjC,EAAW,EAAI,EAAI,OAAO,EAAO,QAAQ,WAAa,SACtD,EAAQ,EAAa,GACrB,EAAM,EAAkB,EAAU,EAAU,GAClD,GAAI,CAAC,EAAO,CACR,IAAM,EAAgB,MAAMC,EAAI,CAC5B,OAAQ,OACR,IAAK,sDACL,KAAM,CACF,QAAS,EACT,WACA,MAAO,EACP,QACA,SAGF,EAAa,EAAc,QAAQ,cACzC,GAAI,MACK,IAAM,KAAK,EACR,EAAE,QAAQ,WAAa,IACvB,EAAQ,EAAE,MAAM,KAAK,IAIjC,EAAM,IAAI,EAAsB,EAAO,KAGvC,EAAmB,IAEvB,OAAO,EAGX,IAAA,EAAe,CAAE,YAAW,eAAc,4BAA2B,6BAA4B,4BAA2B"}