{"version":3,"file":"ranking-r18-D7zen0-E.js","names":["NovelType"],"sources":["../../lib/routes/syosetu/types/ranking-r18.ts","../../lib/routes/syosetu/ranking-r18.ts"],"sourcesContent":["import { R18Site } from 'narou';\r\n\r\nexport enum SyosetuSub {\r\n    NOCTURNE = 'noc',\r\n    MOONLIGHT = 'mnlt',\r\n    MIDNIGHT = 'mid',\r\n    MOONLIGHT_BL = 'mnlt-bl',\r\n}\r\n\r\nexport enum RankingPeriod {\r\n    DAILY = 'daily',\r\n    WEEKLY = 'weekly',\r\n    MONTHLY = 'monthly',\r\n    QUARTER = 'quarter',\r\n    YEARLY = 'yearly',\r\n}\r\n\r\nexport enum NovelType {\r\n    TOTAL = 'total',\r\n    SHORT = 't',\r\n    ONGOING = 'r',\r\n    COMPLETE = 'er',\r\n}\r\n\r\nexport const syosetuSubToNocgenre = {\r\n    [SyosetuSub.NOCTURNE]: R18Site.Nocturne,\r\n    [SyosetuSub.MOONLIGHT]: R18Site.MoonLight,\r\n    [SyosetuSub.MOONLIGHT_BL]: R18Site.MoonLightBL,\r\n    [SyosetuSub.MIDNIGHT]: R18Site.Midnight,\r\n} as const;\r\n\r\nexport const syosetuSubToJapanese = {\r\n    [SyosetuSub.NOCTURNE]: 'ノクターン',\r\n    [SyosetuSub.MOONLIGHT]: 'ムーンライト',\r\n    [SyosetuSub.MOONLIGHT_BL]: 'ムーンライト BL',\r\n    [SyosetuSub.MIDNIGHT]: 'ミッドナイト',\r\n} as const;\r\n\r\nexport const periodToOrder = {\r\n    [RankingPeriod.DAILY]: 'dailypoint',\r\n    [RankingPeriod.WEEKLY]: 'weeklypoint',\r\n    [RankingPeriod.MONTHLY]: 'monthlypoint',\r\n    [RankingPeriod.QUARTER]: 'quarterpoint',\r\n    [RankingPeriod.YEARLY]: 'yearlypoint',\r\n} as const;\r\n\r\nexport const periodToJapanese = {\r\n    [RankingPeriod.DAILY]: '日間',\r\n    [RankingPeriod.WEEKLY]: '週間',\r\n    [RankingPeriod.MONTHLY]: '月間',\r\n    [RankingPeriod.QUARTER]: '四半期',\r\n    [RankingPeriod.YEARLY]: '年間',\r\n} as const;\r\n\r\nexport const novelTypeToJapanese = {\r\n    [NovelType.TOTAL]: '総合',\r\n    [NovelType.SHORT]: '短編',\r\n    [NovelType.ONGOING]: '連載中',\r\n    [NovelType.COMPLETE]: '完結済',\r\n} as const;\r\n","import { Route, Data, DataItem } from '@/types';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { Context } from 'hono';\r\nimport { SearchBuilderR18, SearchParams, NarouNovelFetch } from 'narou';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport { RankingPeriod, periodToJapanese, novelTypeToJapanese, periodToOrder, NovelType, SyosetuSub, syosetuSubToJapanese, syosetuSubToNocgenre } from './types/ranking-r18';\r\n\r\n/**\r\n * Implementation of \"Syosetu\" R18 Rankings\r\n *\r\n * While \"Syosetu\" only provides ranking API for \"Syosetu o yomou\" (general audience),\r\n * equivalent ranking functionality can be achieved using the point-based sorting in the search API.\r\n *\r\n * This implementation utilizes the 'order' parameter (e.g., dailypoint, weeklypoint)\r\n * of the search API to replicate ranking functionality across all Syosetu subsidiary sites.\r\n */\r\n\r\nconst getParameters = () => {\r\n    // Generate options for sub parameter\r\n    const subOptions = Object.entries(SyosetuSub).map(([, value]) => ({\r\n        value,\r\n        label: syosetuSubToJapanese[value],\r\n    }));\r\n\r\n    // Generate period options\r\n    const periodOptions = Object.entries(RankingPeriod).map(([key, value]) => ({\r\n        value,\r\n        label: `${periodToJapanese[value]} (${key})`,\r\n    }));\r\n\r\n    // Generate novel type options\r\n    const novelTypeOptions = Object.entries(NovelType).map(([key, value]) => ({\r\n        value,\r\n        label: `${novelTypeToJapanese[value]} (${key})`,\r\n    }));\r\n\r\n    return {\r\n        sub: {\r\n            description: 'Target site for R18 rankings',\r\n            options: subOptions,\r\n        },\r\n        type: {\r\n            description: 'Detailed ranking type (format: period_noveltype)',\r\n            options: periodOptions.flatMap((period) =>\r\n                novelTypeOptions.map((type) => ({\r\n                    value: `${period.value}_${type.value}`,\r\n                    label: `${period.label} ${type.label}`,\r\n                }))\r\n            ),\r\n        },\r\n    };\r\n};\r\n\r\nconst getBest5RadarItems = () =>\r\n    Object.entries(SyosetuSub).flatMap(([, domain]) =>\r\n        Object.values(RankingPeriod).map((period) => ({\r\n            title: `${syosetuSubToJapanese[domain]} ${periodToJapanese[period]}ランキング BEST5`,\r\n            source: [`${domain === SyosetuSub.MOONLIGHT_BL ? SyosetuSub.MOONLIGHT : domain}.syosetu.com/rank/${domain === SyosetuSub.MOONLIGHT_BL ? 'bltop' : 'top'}`],\r\n            target: `/rankingr18/${domain}/${period}_${NovelType.TOTAL}?limit=5`,\r\n        }))\r\n    );\r\n\r\nexport const route: Route = {\r\n    path: '/rankingr18/:sub/:type',\r\n    categories: ['reading'],\r\n    example: '/syosetu/rankingr18/noc/daily_total?limit=50',\r\n    parameters: getParameters(),\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'R18 Rankings',\r\n    url: 'syosetu.com/site/group',\r\n    maintainers: ['SnowAgar25'],\r\n    handler,\r\n    description: `\r\n| Period | Description | 説明 |\r\n| --- | --- | --- |\r\n| daily | Daily Ranking | 日間ランキング |\r\n| weekly | Weekly Ranking | 週間ランキング |\r\n| monthly | Monthly Ranking | 月間ランキング |\r\n| quarter | Quarterly Ranking | 四半期ランキング |\r\n| yearly | Yearly Ranking | 年間ランキング |\r\n\r\n| Novel Type | Description | 説明 |\r\n| --- | --- | --- |\r\n| total | All Works | 総合 |\r\n| t | Short Stories | 短編 |\r\n| r | Ongoing Series | 連載中 |\r\n| er | Completed Series | 完結済 |\r\n\r\n::: tip\r\nCombine Period and Novel Type with \\`_\\`.\r\nFor example: \\`daily_total\\`, \\`weekly_r\\`, \\`monthly_er\\`\r\n:::`,\r\n    radar: [\r\n        {\r\n            source: ['noc.syosetu.com/rank/list/type/:type'],\r\n            target: '/rankingr18/noc/:type',\r\n        },\r\n        {\r\n            source: ['mid.syosetu.com/rank/list/type/:type'],\r\n            target: '/rankingr18/mid/:type',\r\n        },\r\n        {\r\n            source: ['mnlt.syosetu.com/rank/list/type/:type'],\r\n            target: '/rankingr18/mnlt/:type',\r\n        },\r\n        {\r\n            source: ['mnlt.syosetu.com/rank/bllist/type/:type'],\r\n            target: '/rankingr18/mnlt-bl/:type',\r\n        },\r\n        ...getBest5RadarItems(),\r\n    ],\r\n};\r\n\r\nfunction parseRankingType(type: string): { period: RankingPeriod; novelType: NovelType } {\r\n    const [periodStr, novelTypeStr] = type.split('_');\r\n\r\n    const period = periodStr as RankingPeriod;\r\n    const novelType = novelTypeStr as NovelType;\r\n\r\n    const isValid = [Object.values(RankingPeriod).includes(period), Object.values(NovelType).includes(novelType)].every(Boolean);\r\n\r\n    if (!isValid) {\r\n        throw new InvalidParameterError(`Invalid ranking type: ${type}`);\r\n    }\r\n\r\n    return {\r\n        period: periodStr as RankingPeriod,\r\n        novelType: novelTypeStr as NovelType,\r\n    };\r\n}\r\n\r\nfunction getRankingTitle(type: string, limit: number): string {\r\n    const { period, novelType } = parseRankingType(type);\r\n    return `${periodToJapanese[period]}${novelTypeToJapanese[novelType]}ランキング BEST${limit}`;\r\n}\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const { sub, type } = ctx.req.param();\r\n    const baseUrl = `https://${sub === SyosetuSub.MOONLIGHT_BL ? SyosetuSub.MOONLIGHT : sub}.syosetu.com`;\r\n    const rankingUrl = `${baseUrl}/rank/list/type/${type}`;\r\n    const api = new NarouNovelFetch();\r\n\r\n    const limit = Math.min(Number(ctx.req.query('limit') ?? 300), 300);\r\n    const { period, novelType } = parseRankingType(type);\r\n\r\n    const searchParams: SearchParams = {\r\n        gzip: 5,\r\n        lim: limit,\r\n        order: periodToOrder[period],\r\n    };\r\n\r\n    // TOTAL: Skip type filter to get all types combined\r\n    if (novelType !== NovelType.TOTAL) {\r\n        searchParams.type = novelType;\r\n    }\r\n\r\n    if (!(sub in syosetuSubToNocgenre)) {\r\n        throw new InvalidParameterError(`Invalid subsite: ${sub}`);\r\n    }\r\n    const nocgenre = syosetuSubToNocgenre[sub];\r\n\r\n    const builder = new SearchBuilderR18(searchParams, api).r18Site(nocgenre);\r\n    const result = await builder.execute();\r\n\r\n    const items = result.values.map((novel, index) => ({\r\n        title: `#${index + 1} ${novel.title}`,\r\n        link: `https://novel18.syosetu.com/${String(novel.ncode).toLowerCase()}`,\r\n        description: art(path.join(__dirname, 'templates/description.art'), {\r\n            novel,\r\n        }),\r\n        author: novel.writer,\r\n        category: novel.keyword.split(/[\\s/\\uFF0F]/).filter(Boolean),\r\n    }));\r\n\r\n    return {\r\n        title: `小説家になろう (${sub}) - ${getRankingTitle(type, limit)}`,\r\n        link: rankingUrl,\r\n        item: items as DataItem[],\r\n        language: 'ja',\r\n    };\r\n}\r\n"],"mappings":"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"}