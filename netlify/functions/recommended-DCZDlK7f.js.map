{"version":3,"file":"recommended-DCZDlK7f.js","names":[],"sources":["../../lib/routes/douban/other/recommended.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { fallback, queryToInteger } from '@/utils/readable-social';\r\n\r\nexport const route: Route = {\r\n    path: '/recommended/:type?/:routeParams?',\r\n    categories: ['social-media'],\r\n    example: '/douban/recommended/tv',\r\n    parameters: { type: '片单类型剧集/电影，tv或movie，默认为tv', routeParams: '额外参数；请参阅以下说明和表格' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '豆瓣每月推荐片单',\r\n    maintainers: ['honue'],\r\n    handler,\r\n    description: `| 额外参数 | 含义                   | 接受的值 | 默认值 |\r\n| -------- | ---------------------- | -------- | ------ |\r\n| playable | 仅看有可播放片源的影片 | 0/1      | 0      |\r\n| score    | 筛选评分               | 0-10     | 0      |\r\n\r\n  用例：\\`/douban/recommended/tv/playable=0&score=8\\`\r\n\r\n::: tip\r\n  整合了 /douban/list/ 路由，省去每月手动更新 id 参数，因为当月推荐剧集片单中，会有还未播出 / 开评分剧集、海外平台播出剧集，请自行考虑是否使用额外参数。\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const subjectType = ctx.req.param('type') || 'tv';\r\n    const apiKey = '0ac44ae016490db2204ce0a042db2916';\r\n    let url = `https://frodo.douban.com/api/v2/skynet/new_playlists?apikey=${apiKey}&subject_type=${subjectType}`;\r\n    let response = await got({\r\n        method: 'get',\r\n        url,\r\n        headers: {\r\n            'User-Agent': 'MicroMessenger/',\r\n            Referer: 'https://servicewechat.com/wx2f9b06c1de1ccfca/91/page-frame.html',\r\n        },\r\n    });\r\n\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const mon = month < 10 ? '0' + month : month.toString();\r\n\r\n    let items = response.data.data[0].items;\r\n\r\n    const subjectCollectionId = items.find((item) => item.title.startsWith(`${year}年${mon}月`)).id;\r\n\r\n    const routeParams = Object.fromEntries(new URLSearchParams(ctx.req.param('routeParams')));\r\n    const playable = fallback(undefined, queryToInteger(routeParams.playable), 0);\r\n    const score = fallback(undefined, queryToInteger(routeParams.score), 0);\r\n\r\n    url = `https://m.douban.com/rexxar/api/v2/subject_collection/${subjectCollectionId}/items?playable=${playable}`;\r\n    response = await got({\r\n        method: 'get',\r\n        url,\r\n        headers: {\r\n            Referer: `https://m.douban.com/subject_collection/${subjectCollectionId}`,\r\n        },\r\n    });\r\n    const description = response.data.subject_collection.description;\r\n    items = response.data.subject_collection_items\r\n        .filter((item) => {\r\n            const rate = item.rating ? item.rating.value : 0;\r\n            return rate >= score; // 保留rate大于等于score的项and过滤无评分项\r\n        })\r\n        .map((item) => {\r\n            const title = item.title;\r\n            const link = item.url;\r\n            const description = art(path.join(__dirname, '../templates/list_description.art'), {\r\n                ranking_value: item.ranking_value,\r\n                title,\r\n                original_title: item.original_title,\r\n                rate: item.rating ? item.rating.value : null,\r\n                card_subtitle: item.card_subtitle,\r\n                description: item.cards ? item.cards[0].content : item.abstract,\r\n                cover: item.cover_url || item.cover?.url,\r\n            });\r\n            return {\r\n                title,\r\n                link,\r\n                description,\r\n            };\r\n        });\r\n    return {\r\n        title: `豆瓣 - ${response.data.subject_collection.name}`,\r\n        link: `https://m.douban.com/subject_collection/${subjectCollectionId}`,\r\n        item: items,\r\n        description,\r\n    };\r\n}\r\n"],"mappings":"6ZAOA,MAAa,EAAe,CACxB,KAAM,oCACN,WAAY,CAAC,gBACb,QAAS,yBACT,WAAY,CAAE,KAAM,2BAA4B,YAAa,mBAC7D,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,WACN,YAAa,CAAC,SACd,UACA,YAAa;;;;;;;;;MAYjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAc,EAAI,IAAI,MAAM,SAAW,KAEzC,EAAM,6GAAsF,IAC5F,EAAW,MAAM,EAAI,CACrB,OAAQ,MACR,MACA,QAAS,CACL,aAAc,kBACd,QAAS,qEAIX,EAAO,IAAI,KACX,EAAO,EAAK,cACZ,EAAQ,EAAK,WAAa,EAC1B,EAAM,EAAQ,GAAK,IAAM,EAAQ,EAAM,WAEzC,EAAQ,EAAS,KAAK,KAAK,GAAG,MAE5B,EAAsB,EAAM,KAAM,GAAS,EAAK,MAAM,WAAW,GAAG,EAAK,GAAG,EAAI,KAAK,GAErF,EAAc,OAAO,YAAY,IAAI,gBAAgB,EAAI,IAAI,MAAM,iBACnE,EAAW,EAAS,IAAA,GAAW,EAAe,EAAY,UAAW,GACrE,EAAQ,EAAS,IAAA,GAAW,EAAe,EAAY,OAAQ,GAErE,EAAM,yDAAyD,EAAoB,kBAAkB,IACrG,EAAW,MAAM,EAAI,CACjB,OAAQ,MACR,MACA,QAAS,CACL,QAAS,2CAA2C,OAG5D,IAAM,EAAc,EAAS,KAAK,mBAAmB,YAwBrD,MAvBA,GAAQ,EAAS,KAAK,yBACjB,OAAQ,GAAS,CACd,IAAM,EAAO,EAAK,OAAS,EAAK,OAAO,MAAQ,EAC/C,OAAO,GAAQ,IAElB,IAAK,GAAS,CACX,IAAM,EAAQ,EAAK,MACb,EAAO,EAAK,IACZ,EAAc,EAAI,EAAA,KAAA,EAAA,2CAA2D,CAC/E,cAAe,EAAK,cACpB,QACA,eAAgB,EAAK,eACrB,KAAM,EAAK,OAAS,EAAK,OAAO,MAAQ,KACxC,cAAe,EAAK,cACpB,YAAa,EAAK,MAAQ,EAAK,MAAM,GAAG,QAAU,EAAK,SACvD,MAAO,EAAK,WAAa,EAAK,OAAO,MAEzC,MAAO,CACH,QACA,OACA,YAAA,KAGL,CACH,MAAO,QAAQ,EAAS,KAAK,mBAAmB,OAChD,KAAM,2CAA2C,IACjD,KAAM,EACN"}