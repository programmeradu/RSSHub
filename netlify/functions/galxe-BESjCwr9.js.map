{"version":3,"file":"galxe-BESjCwr9.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/galxe/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const route: Route = {\r\n    path: '/quest/:alias',\r\n    name: 'Quest',\r\n    url: 'app.galxe.com',\r\n    maintainers: ['cxheng315'],\r\n    example: '/galxe/quest/MissionWeb3',\r\n    categories: ['other'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['app.galxe.com/quest/:alias'],\r\n            target: '/quest/:alias',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const url = 'https://graphigo.prd.galaxy.eco/query';\r\n\r\n    const alias = ctx.req.param('alias');\r\n\r\n    const response = await ofetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: {\r\n            variables: {\r\n                alias,\r\n                campaignInput: {\r\n                    first: ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 50,\r\n                    excludeChildren: true,\r\n                    listType: 'Newest',\r\n                },\r\n            },\r\n            query: `\r\n                query BrowseSpaceCampaigns($id: Int, $alias: String, $campaignInput: ListCampaignInput!) {\r\n                    space(id: $id, alias: $alias) {\r\n                        id\r\n                        name\r\n                        alias\r\n                        info\r\n                        campaigns(input: $campaignInput) {\r\n                            list {\r\n                                startTime\r\n                                endTime\r\n                                id\r\n                                name\r\n                                description\r\n                                __typename\r\n                            }\r\n                            pageInfo {\r\n                                endCursor\r\n                                hasNextPage\r\n                                __typename\r\n                            }\r\n                            __typename\r\n                        }\r\n                        __typename\r\n                    }\r\n                }\r\n            `,\r\n        },\r\n    });\r\n\r\n    const space = response.data.space;\r\n\r\n    const items = space.campaigns.list.map((campaign) => ({\r\n        title: campaign.name,\r\n        link: `https://app.galxe.com/quest/${alias}/${campaign.id}`,\r\n        description: campaign.description,\r\n        pubDate: campaign.startTime ? parseDate(campaign.startTime * 1000) : null,\r\n    }));\r\n\r\n    return {\r\n        title: space.name,\r\n        description: space.info,\r\n        link: `https://app.galxe.com/quest/${alias}`,\r\n        item: items,\r\n        author: space.alias,\r\n    };\r\n}\r\n"],"mappings":"gOAIA,MAAaA,EAAe,CACxB,KAAM,gBACN,KAAM,QACN,IAAK,gBACL,YAAa,CAAC,aACd,QAAS,2BACT,WAAY,CAAC,SACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,8BACT,OAAQ,kBAGhB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAEM,EAAQ,EAAI,IAAI,MAAM,SAEtB,EAAW,MAAMC,EAAO,wCAAK,CAC/B,OAAQ,OACR,QAAS,CACL,eAAgB,oBAEpB,KAAM,CACF,UAAW,CACP,QACA,cAAe,CACX,MAAO,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAC1E,gBAAiB,GACjB,SAAU,WAGlB,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;iBA8BT,EAAQ,EAAS,KAAK,MAEtB,EAAQ,EAAM,UAAU,KAAK,IAAK,IAAc,CAClD,MAAO,EAAS,KAChB,KAAM,+BAA+B,EAAM,GAAG,EAAS,KACvD,YAAa,EAAS,YACtB,QAAS,EAAS,UAAY,EAAU,EAAS,UAAY,KAAQ,QAGzE,MAAO,CACH,MAAO,EAAM,KACb,YAAa,EAAM,KACnB,KAAM,+BAA+B,IACrC,KAAM,EACN,OAAQ,EAAM"}