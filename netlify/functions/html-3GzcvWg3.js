import"./esm-shims-Dqvxr0BZ.js";import{config as e}from"./config-Dl8a1sIg.js";import"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import{cache_default as t}from"./cache-kimkMTWJ.js";import"./ofetch-Bzt0BXUH.js";import{got_default as n}from"./got-CdvI2yKX.js";import{config_not_found_default as r}from"./config-not-found-BVqhRP9D.js";import{load as i}from"cheerio";import a from"sanitize-html";const o={path:`/transform/html/:url/:routeParams`,categories:[`other`],example:`/rsshub/transform/html/https%3A%2F%2Fwechat2rss.xlab.app%2Fposts%2Flist%2F/item=div%5Bclass%3D%27post%2Dcontent%27%5D%20p%20a`,parameters:{url:"`encodeURIComponent`ed URL address",routeParams:`Transformation rules, requires URL encode`},features:{requireConfig:[{name:`ALLOW_USER_SUPPLY_UNSAFE_DOMAIN`,description:``}],requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Transformation - HTML`,maintainers:[`ttttmr`,`hyoban`],description:"Pass URL and transformation rules to convert HTML/JSON into RSS.\n\nSpecify options (in the format of query string) in parameter `routeParams` parameter to extract data from HTML.\n\n| Key                 | Meaning                                                                                                       | Accepted Values | Default                  |\n| ------------------- | ------------------------------------------------------------------------------------------------------------- | --------------- | ------------------------ |\n| `title`           | The title of the RSS                                                                                          | `string`      | Extract from `<title>` |\n| `item`            | The HTML elements as `item` using CSS selector                                                              | `string`      | html                     |\n| `itemTitle`       | The HTML elements as `title` in `item` using CSS selector                                                 | `string`      | `item` element         |\n| `itemTitleAttr`   | The attributes of `title` element as title                                                                  | `string`      | Element text             |\n| `itemLink`        | The HTML elements as `link` in `item` using CSS selector                                                  | `string`      | `item` element         |\n| `itemLinkAttr`    | The attributes of `link` element as link                                                                    | `string`      | `href`                 |\n| `itemDesc`        | The HTML elements as `descrption` in `item` using CSS selector                                            | `string`      | `item` element         |\n| `itemDescAttr`    | The attributes of `descrption` element as description                                                       | `string`      | Element html             |\n| `itemPubDate`     | The HTML elements as `pubDate` in `item` using CSS selector                                               | `string`      | `item` element         |\n| `itemPubDateAttr` | The attributes of `pubDate` element as pubDate                                                              | `string`      | Element html             |\n| `itemContent`     | The HTML elements as `description` in `item` using CSS selector ( in `itemLink` page for full content ) | `string`      |                          |\n| `encoding`        | The encoding of the HTML content                                                                              | `string`      | utf-8                    |\n\n  Parameters parsing in the above example:\n\n| Parameter     | Value                                     |\n| ------------- | ----------------------------------------- |\n| `url`         | `https://wechat2rss.xlab.app/posts/list/` |\n| `routeParams` | `item=div[class='post-content'] p a`      |\n\n  Parsing of `routeParams` parameter:\n\n| Parameter | Value                           |\n| --------- | ------------------------------- |\n| `item`    | `div[class='post-content'] p a` |",handler:async o=>{if(!e.feature.allow_user_supply_unsafe_domain)throw new r(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);let s=o.req.param(`url`),c=await n({method:`get`,url:s,responseType:`arrayBuffer`}),l=new URLSearchParams(o.req.param(`routeParams`)),u=l.get(`encoding`)||`utf-8`,d=new TextDecoder(u),f=i(d.decode(c.data)),p=l.get(`title`)||f(`title`).text(),m=l.get(`item`)||`html`,h=f(m).toArray().slice(0,20).map(e=>{try{e=f(e);let t=l.get(`itemTitle`)?e.find(l.get(`itemTitle`)):e,n=l.get(`itemTitleAttr`)?t.attr(l.get(`itemTitleAttr`)):t.text(),r,i=l.get(`itemLink`)?e.find(l.get(`itemLink`)):e;r=l.get(`itemLinkAttr`)?i.attr(l.get(`itemLinkAttr`)):i.is(`a`)?i.attr(`href`):i.find(`a`).attr(`href`),r=r.trim(),r&&!r.startsWith(`http`)&&(r=new URL(r,s).href);let a=l.get(`itemDesc`)?e.find(l.get(`itemDesc`)):e,o=l.get(`itemDescAttr`)?a.attr(l.get(`itemDescAttr`)):a.html(),c=l.get(`itemPubDate`)?e.find(l.get(`itemPubDate`)):e,u=l.get(`itemPubDateAttr`)?c.attr(l.get(`itemPubDateAttr`)):c.html();return{title:n,link:r,description:o,pubDate:u}}catch{return null}}).filter(e=>!!e),g=l.get(`itemContent`);return g&&(h=await Promise.all(h.map(e=>e.link?t.tryGet(`transform:${e.link}:${g}`,async()=>{let t=await n({method:`get`,url:e.link,responseType:`arrayBuffer`});if(!t||typeof t==`string`)return e;let r=i(d.decode(t.data)),o=r(g).html();return o&&(e.description=a(o,{allowedTags:[...a.defaults.allowedTags,`img`]})),e}):e))),{title:p,link:s,description:`Proxy ${s}`,item:h}}};export{o as route};
//# sourceMappingURL=html-3GzcvWg3.js.map