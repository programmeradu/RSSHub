{"version":3,"file":"railway-B6cT51RI.js","names":["route: Route","ofetch","cache"],"sources":["../../lib/routes/railway/index.ts"],"sourcesContent":["import { Route, DataItem } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { Context } from 'hono';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['blog'],\r\n    example: '/railway/blog',\r\n    url: 'blog.railway.com',\r\n    name: 'Blog',\r\n    maintainers: ['jihuayu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const limit = Number.parseInt(ctx.req.query('limit') || '10');\r\n\r\n    const items = await fetchArticles(limit);\r\n\r\n    return {\r\n        title: 'Railway articles',\r\n        link: 'https://blog.railway.com',\r\n        item: items,\r\n    };\r\n}\r\n\r\nexport const fetchArticles = async (limit: number): Promise<DataItem[]> => {\r\n    const page = await ofetch('https://blog.railway.com/rss.xml', {\r\n        responseType: 'text',\r\n    });\r\n\r\n    const $ = load(page, { xml: true });\r\n\r\n    return Promise.all(\r\n        $('item')\r\n            .toArray()\r\n            .slice(0, limit)\r\n            .map<Promise<DataItem>>((element) => {\r\n                const id = $(element).find('guid').text();\r\n\r\n                return cache.tryGet(`railway:blogs:${id}`, async () => {\r\n                    const title = $(element).find('title').text();\r\n                    const pubDate = $(element).find('pubDate').text();\r\n                    const link = $(element).find('link').text();\r\n\r\n                    const { content } = await fetchArticleDetails(link);\r\n\r\n                    return {\r\n                        guid: id,\r\n                        title,\r\n                        link,\r\n                        pubDate: parseDate(pubDate),\r\n                        description: content,\r\n                    } as DataItem;\r\n                }) as Promise<DataItem>;\r\n            })\r\n    );\r\n};\r\n\r\nexport const fetchArticleDetails = async (url: string) => {\r\n    const page = await ofetch(url);\r\n    const $ = load(page);\r\n\r\n    const $article = $('article > section ');\r\n\r\n    return {\r\n        content: $article.html() ?? undefined,\r\n    };\r\n};\r\n"],"mappings":"mTAQA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,gBACT,IAAK,mBACL,KAAM,OACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAc,CACjC,IAAM,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,MAElD,EAAQ,MAAM,EAAc,GAElC,MAAO,CACH,MAAO,mBACP,KAAM,2BACN,KAAM,GAId,MAAa,EAAgB,KAAO,IAAuC,CACvE,IAAM,EAAO,MAAMC,EAAO,mCAAoC,CAC1D,aAAc,SAGZ,EAAI,EAAK,EAAM,CAAE,IAAK,KAE5B,OAAO,QAAQ,IACX,EAAE,QACG,UACA,MAAM,EAAG,GACT,IAAwB,GAAY,CACjC,IAAM,EAAK,EAAE,GAAS,KAAK,QAAQ,OAEnC,OAAOC,EAAM,OAAO,iBAAiB,IAAM,SAAY,CACnD,IAAM,EAAQ,EAAE,GAAS,KAAK,SAAS,OACjC,EAAU,EAAE,GAAS,KAAK,WAAW,OACrC,EAAO,EAAE,GAAS,KAAK,QAAQ,OAE/B,CAAE,WAAY,MAAM,EAAoB,GAE9C,MAAO,CACH,KAAM,EACN,QACA,OACA,QAAS,EAAU,GACnB,YAAa,SAOxB,EAAsB,KAAO,IAAgB,CACtD,IAAM,EAAO,MAAMD,EAAO,GACpB,EAAI,EAAK,GAET,EAAW,EAAE,sBAEnB,MAAO,CACH,QAAS,EAAS,QAAU,IAAA"}