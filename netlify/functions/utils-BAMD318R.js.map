{"version":3,"file":"utils-BAMD318R.js","names":["InvalidParameterError","cache","got"],"sources":["../../lib/routes/theinitium/utils.ts"],"sourcesContent":["import { Context } from 'hono';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport { FetchError } from 'ofetch';\r\n\r\nconst TOKEN = 'Basic YW5vbnltb3VzOkdpQ2VMRWp4bnFCY1ZwbnA2Y0xzVXZKaWV2dlJRY0FYTHY=';\r\n\r\nexport const processFeed = async (model: string, ctx: Context) => {\r\n    // model是channel/tag/etc.，而type是latest/feature/quest-academy这些一级栏目/标签/作者名的slug名。如果是追踪的话，那就是model是follow，type是articles。\r\n    const type = ctx.req.param('type') ?? 'latest';\r\n    const language = ctx.req.param('language') ?? 'zh-hans';\r\n    let listUrl;\r\n    let listLink;\r\n    switch (model) {\r\n        case 'author':\r\n            listUrl = `https://api.theinitium.com/api/v2/author/?language=${language}&slug=${type}`;\r\n            listLink = `https://theinitium.com/author/${type}/`;\r\n            break;\r\n        case 'follow':\r\n            listUrl = `https://api.theinitium.com/api/v2/user/follows/${type}/?language=${language}`;\r\n            listLink = `https://theinitium.com/follow/`;\r\n            break;\r\n        case 'channel':\r\n            listUrl = `https://api.theinitium.com/api/v2/channel/articles/?language=${language}&slug=${type}`;\r\n            listLink = `https://theinitium.com/channel/${type}/`;\r\n            break;\r\n        case 'tags':\r\n            listUrl = `https://api.theinitium.com/api/v2/tag/articles/?language=${language}&slug=${type}`;\r\n            listLink = `https://theinitium.com/tags/${type}/`;\r\n            break;\r\n        default:\r\n            throw new InvalidParameterError('wrong model');\r\n    }\r\n\r\n    const key = {\r\n        email: config.initium.username,\r\n        password: config.initium.password,\r\n    };\r\n    const body = JSON.stringify(key);\r\n\r\n    let token;\r\n    const cacheIn = await cache.get('initium:token');\r\n    if (cacheIn) {\r\n        token = cacheIn;\r\n    } else if (config.initium.bearertoken) {\r\n        token = config.initium.bearertoken;\r\n        cache.set('initium:token', config.initium.bearertoken);\r\n    } else if (key.email === undefined) {\r\n        token = TOKEN;\r\n    } else {\r\n        const login = await got.post(`https://api.theinitium.com/api/v2/auth/login/?language=${language}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                Connection: 'keep-alive',\r\n                Authorization: TOKEN,\r\n            },\r\n            body,\r\n        });\r\n\r\n        token = 'token ' + login.data.token;\r\n        cache.set('initium:token', token);\r\n    }\r\n\r\n    const headers = {\r\n        Accept: '*/*',\r\n        Connection: 'keep-alive',\r\n        Authorization: token,\r\n    };\r\n\r\n    let response;\r\n    try {\r\n        response = await got(listUrl, {\r\n            headers,\r\n        });\r\n    } catch (error) {\r\n        if (error instanceof FetchError && error.statusCode === 401) {\r\n            // 401 说明 token 过期了，将它删掉\r\n            await cache.set('initium:token', '');\r\n        }\r\n        throw error;\r\n    }\r\n\r\n    const name = response.data.name || (response.data[model] && response.data[model].name) || '追踪';\r\n    // 从v1直升的channel和tags里面是digests，v2新增的author和follow出来都是results\r\n    const articles = response.data.results ?? response.data.digests;\r\n    // 如果model=author，那就是avatar；否则都是cover，要么就没封面\r\n    const image = response.data[model] && (response.data[model].cover || response.data[model].avatar);\r\n\r\n    const getFullText = (slug) =>\r\n        cache.tryGet(`theinitium:${slug}:${language}`, async () => {\r\n            let content = '';\r\n            const { data } = await got(`https://api.theinitium.com/api/v2/article/detail/?language=${language}&slug=${slug}`, {\r\n                headers,\r\n            });\r\n\r\n            if (data.lead.length) {\r\n                content += '<p>「' + data.lead + '」</p>';\r\n            }\r\n            if (data.byline.length) {\r\n                content += '<p>' + data.byline + '</p>';\r\n            }\r\n            if (data.content) {\r\n                content += data.content.replace('<figure class=\"advertisement\"/><br/>', '').replaceAll(/(?:<br>){2}-{11}<br>.*$/g, '');\r\n            } else if (data.type === 'html') {\r\n                // 有时候编辑部会漏录入文章信息…………扶额。所以加这一个判断，如果确实是普通html文章，但又没有内容，说明是漏了，后面还要给guid手动加个标记，以便阅读器事后重抓。\r\n                content += '内容为空，请稍后再来';\r\n            } else if (data.type === 'web') {\r\n                // 有时候文章并非普通html文章，而是带有互动内容等，表现为type为web，并且content里没有内容。我们也尽力抓点东西下来。\r\n                // 或许可能还有其他未知情况，等碰到了再说吧。先这样留空也不碍事。\r\n                const nonhtmlcontent = await got(data.web.url);\r\n                const webcontent = load(nonhtmlcontent.body).html();\r\n                content += webcontent;\r\n            }\r\n            if (data.paywall_enabled) {\r\n                const google_bot_ua =\r\n                    'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.92 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)';\r\n                const accept_language = language + ';q=0.9';\r\n                const pay_part = await got(`https://theinitium.com/article/${slug}/`, {\r\n                    headers: {\r\n                        'user-agent': google_bot_ua,\r\n                        'accept-language': accept_language,\r\n                    },\r\n                });\r\n                const $ = load(pay_part.body);\r\n                const pay_content = $('div.paywall').html();\r\n                if (pay_content) {\r\n                    content += pay_content.replace('<meta itemprop=\"isAccessibleForFree\" content=\"false\">', '');\r\n                }\r\n            }\r\n            return content;\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        articles\r\n            .filter((a) => a.article)\r\n            .slice(0, token === TOKEN ? 25 : articles.length)\r\n            .map(async (item) => {\r\n                item.article.date = parseDate(item.article.date);\r\n                item.article.updated = parseDate(item.article.updated);\r\n                const description = await getFullText(item.article.slug);\r\n                return {\r\n                    title: item.article.headline,\r\n                    author: item.article.authors.length > 0 ? item.article.authors.map((x) => x.name).toString() : item.article.byline,\r\n                    category: item.article.channels.filter((x) => !x.homepage).map((x) => x.name),\r\n                    description,\r\n                    link: new URL(item.article.url, 'https://theinitium.com').href,\r\n                    pubDate: item.article.date,\r\n                    updated: item.article.updated,\r\n                    // 如果遇到编辑部漏录入情况，则给uuid做个手脚，以便阅读器到时重抓。\r\n                    guid: description.endsWith('内容为空，请稍后再来') ? item.article.uuid + '-I-am-empty' : item.article.uuid,\r\n                };\r\n            })\r\n    );\r\n\r\n    return {\r\n        title: `端传媒 - ${name}`,\r\n        link: listLink,\r\n        icon: 'https://theinitium.com/misc/about/logo192.png',\r\n        item: items,\r\n        image,\r\n    };\r\n};\r\n"],"mappings":"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"}