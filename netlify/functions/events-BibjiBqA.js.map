{"version":3,"file":"events-BibjiBqA.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/link3/events.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const route: Route = {\r\n    path: '/events',\r\n    name: 'Link3 Events',\r\n    url: 'link3.to',\r\n    maintainers: ['cxheng315'],\r\n    example: '/link3/events',\r\n    categories: ['other'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['link3.to/events'],\r\n            target: '/events',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler() {\r\n    const url = 'https://api.cyberconnect.dev/profile/';\r\n\r\n    const response = await ofetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: {\r\n            variables: {\r\n                order: 'START_TIME_ASC',\r\n            },\r\n            query: `\r\n                query getTrendingEvents($first: Int, $after: String, $order: TrendingEventsRequest_EventOrder, $filter: TrendingEventsRequest_EventFilter) {\r\n                    trendingEvents(first: $first, after: $after, order: $order, filter: $filter) {\r\n                        list {\r\n                            id\r\n                            info\r\n                            title\r\n                            posterUrl\r\n                            startTimestamp\r\n                            endTimestamp\r\n                            organizer {\r\n                                lightInfo {\r\n                                    displayName\r\n                                    profilePicture\r\n                                    profileHandle\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            \r\n            `,\r\n        },\r\n    });\r\n\r\n    const items = response.data.trendingEvents.list.map((event) => ({\r\n        title: event.title,\r\n        link: `https://link3.to/e/${event.id}`,\r\n        description: event.info ?? '',\r\n        author: event.organizer.lightInfo.displayName,\r\n        guid: event.id,\r\n        pubDate: parseDate(event.startTimestamp * 1000),\r\n        itunes_item_image: event.posterUrl,\r\n        itunes_duration: event.endTimestamp - event.startTimestamp,\r\n    }));\r\n\r\n    return {\r\n        title: 'Link3 Events',\r\n        link: 'https://link3.to/events',\r\n        description: 'Link3 is a Web3 native social platform built on CyberConnect protocol.',\r\n        image: 'https://link3.to/logo.svg',\r\n        logo: 'https://link3.to/logo.svg',\r\n        author: 'Link3',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"gOAIA,MAAaA,EAAe,CACxB,KAAM,UACN,KAAM,eACN,IAAK,WACL,YAAa,CAAC,aACd,QAAS,gBACT,WAAY,CAAC,SACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mBACT,OAAQ,YAGhB,WAGJ,eAAe,GAAU,CACrB,IAEM,EAAW,MAAMC,EAAO,wCAAK,CAC/B,OAAQ,OACR,QAAS,CACL,eAAgB,oBAEpB,KAAM,CACF,UAAW,CACP,MAAO,kBAEX,MAAO;;;;;;;;;;;;;;;;;;;;;iBAyBT,EAAQ,EAAS,KAAK,eAAe,KAAK,IAAK,IAAW,CAC5D,MAAO,EAAM,MACb,KAAM,sBAAsB,EAAM,KAClC,YAAa,EAAM,MAAQ,GAC3B,OAAQ,EAAM,UAAU,UAAU,YAClC,KAAM,EAAM,GACZ,QAAS,EAAU,EAAM,eAAiB,KAC1C,kBAAmB,EAAM,UACzB,gBAAiB,EAAM,aAAe,EAAM,kBAGhD,MAAO,CACH,MAAO,eACP,KAAM,0BACN,YAAa,yEACb,MAAO,4BACP,KAAM,4BACN,OAAQ,QACR,KAAM"}