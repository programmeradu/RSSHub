{"version":3,"file":"config-Dl8a1sIg.js","names":["value: Config | Record<string, any>","value","bilibili_cookies: Record<string, string | undefined>","email_config: Record<string, string | undefined>","discuz_cookies: Record<string, string | undefined>","medium_cookies: Record<string, string | undefined>","discourse_config: Record<string, string | undefined>","randUserAgent","config: Config"],"sources":["../../lib/utils/rand-user-agent.ts","../../lib/config.ts"],"sourcesContent":["import { randUserAgent } from '@tonyrl/rand-user-agent';\r\n\r\n/**\r\n * A handy function to help generate a legit useragent.\r\n *\r\n * @param {Object} randUserAgent\r\n * @param {string} randUserAgent.browser Name of a browser, case-insensitive. `chrome`, `edge`, `firefox`, `mobile safari`(ios only) or `safari`.\r\n * @param {string} randUserAgent.os Name of an OS, case-insensitive. `android`, `ios`, `mac os`, `linux` or `windows`.\r\n * @param {string} randUserAgent.device Name of a device, case-insensitive. `desktop`, `mobile` or `tablet`.\r\n * @returns A random useragent for the given specifications.\r\n */\r\nconst _randUserAgent = ({ browser = 'chrome', os = 'mac os', device = 'desktop' }: { browser: string; os: string; device: string }) => {\r\n    device = device.toLowerCase();\r\n    browser = browser.toLowerCase();\r\n    os = os.toLowerCase();\r\n    let UA = randUserAgent(device, browser, os);\r\n\r\n    if (browser === 'chrome') {\r\n        while (UA.includes('Chrome-Lighthouse') || UA.includes('Gener8') || UA.includes('HeadlessChrome') || UA.includes('SMTBot') || UA.includes('Electron') || UA.includes('Code')) {\r\n            UA = randUserAgent(device, browser, os);\r\n        }\r\n    }\r\n    if (browser === 'safari') {\r\n        while (UA.includes('Applebot')) {\r\n            UA = randUserAgent(device, browser, os);\r\n        }\r\n    }\r\n    return UA;\r\n};\r\nexport default _randUserAgent;\r\n","import randUserAgent from '@/utils/rand-user-agent';\r\nimport 'dotenv/config';\r\nimport { ofetch } from 'ofetch';\r\n\r\nlet envs = process.env;\r\n\r\nexport type Config = {\r\n    // app config\r\n    disallowRobot: boolean;\r\n    enableCluster?: string;\r\n    isPackage: boolean;\r\n    nodeName?: string;\r\n    puppeteerWSEndpoint?: string;\r\n    chromiumExecutablePath?: string;\r\n    // network\r\n    connect: {\r\n        port: number;\r\n    };\r\n    listenInaddrAny: boolean;\r\n    requestRetry: number;\r\n    requestTimeout: number;\r\n    ua: string;\r\n    trueUA: string;\r\n    allowOrigin?: string;\r\n    // cache\r\n    cache: {\r\n        type: string;\r\n        requestTimeout: number;\r\n        routeExpire: number;\r\n        contentExpire: number;\r\n    };\r\n    memory: {\r\n        max: number;\r\n    };\r\n    redis: {\r\n        url: string;\r\n    };\r\n    // proxy\r\n    proxyUri?: string;\r\n    proxyUris?: string[];\r\n    proxy: {\r\n        protocol?: string;\r\n        host?: string;\r\n        port?: string;\r\n        auth?: string;\r\n        url_regex: string;\r\n        strategy: 'on_retry' | 'all';\r\n        failoverTimeout?: number;\r\n        healthCheckInterval?: number;\r\n    };\r\n    pacUri?: string;\r\n    pacScript?: string;\r\n    // access control\r\n    accessKey?: string;\r\n    // logging\r\n    debugInfo: string;\r\n    loggerLevel: string;\r\n    noLogfiles?: boolean;\r\n    otel: {\r\n        seconds_bucket?: string;\r\n        milliseconds_bucket?: string;\r\n    };\r\n    showLoggerTimestamp?: boolean;\r\n    sentry: {\r\n        dsn?: string;\r\n        routeTimeout: number;\r\n    };\r\n    enableRemoteDebugging?: boolean;\r\n    // feed config\r\n    hotlink: {\r\n        template?: string;\r\n        includePaths?: string[];\r\n        excludePaths?: string[];\r\n    };\r\n    feature: {\r\n        allow_user_hotlink_template: boolean;\r\n        filter_regex_engine: string;\r\n        allow_user_supply_unsafe_domain: boolean;\r\n        disable_nsfw: boolean;\r\n    };\r\n    suffix?: string;\r\n    titleLengthLimit: number;\r\n    openai: {\r\n        apiKey?: string;\r\n        model?: string;\r\n        temperature?: number;\r\n        maxTokens?: number;\r\n        endpoint: string;\r\n        inputOption: string;\r\n        promptTitle: string;\r\n        promptDescription: string;\r\n    };\r\n    follow: {\r\n        ownerUserId?: string;\r\n        description?: string;\r\n        price?: number;\r\n        userLimit?: number;\r\n    };\r\n\r\n    // Route-specific Configurations\r\n    bilibili: {\r\n        cookies: Record<string, string | undefined>;\r\n        dmImgList?: string;\r\n        dmImgInter?: string;\r\n        excludeSubtitles?: boolean;\r\n    };\r\n    bitbucket: {\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    btbyr: {\r\n        host?: string;\r\n        cookies?: string;\r\n    };\r\n    bupt: {\r\n        portal_cookie?: string;\r\n    };\r\n    caixin: {\r\n        cookie?: string;\r\n    };\r\n    civitai: {\r\n        cookie?: string;\r\n    };\r\n    dianping: {\r\n        cookie?: string;\r\n    };\r\n    dida365: {\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    discord: {\r\n        authorization?: string;\r\n    };\r\n    discourse: {\r\n        config: Record<string, string | undefined>;\r\n    };\r\n    discuz: {\r\n        cookies: Record<string, string | undefined>;\r\n    };\r\n    disqus: {\r\n        api_key?: string;\r\n    };\r\n    douban: {\r\n        cookie?: string;\r\n    };\r\n    ehentai: {\r\n        ipb_member_id?: string;\r\n        ipb_pass_hash?: string;\r\n        sk?: string;\r\n        igneous?: string;\r\n        star?: string;\r\n        img_proxy?: string;\r\n    };\r\n    email: {\r\n        config: Record<string, string | undefined>;\r\n    };\r\n    fanbox: {\r\n        session?: string;\r\n    };\r\n    fanfou: {\r\n        consumer_key?: string;\r\n        consumer_secret?: string;\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    fantia: {\r\n        cookies?: string;\r\n    };\r\n    game4399: {\r\n        cookie?: string;\r\n    };\r\n    gelbooru: {\r\n        apiKey?: string;\r\n        userId?: string;\r\n    };\r\n    github: {\r\n        access_token?: string;\r\n    };\r\n    gitee: {\r\n        access_token?: string;\r\n    };\r\n    google: {\r\n        fontsApiKey?: string;\r\n    };\r\n    guozaoke: {\r\n        cookies?: string;\r\n    };\r\n    hefeng: {\r\n        key?: string;\r\n    };\r\n    infzm: {\r\n        cookie?: string;\r\n    };\r\n    initium: {\r\n        username?: string;\r\n        password?: string;\r\n        bearertoken?: string;\r\n    };\r\n    instagram: {\r\n        username?: string;\r\n        password?: string;\r\n        proxy?: string;\r\n        cookie?: string;\r\n    };\r\n    iwara: {\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    javdb: {\r\n        session?: string;\r\n    };\r\n    jumeili: {\r\n        cookie?: string;\r\n    };\r\n    keylol: {\r\n        cookie?: string;\r\n    };\r\n    lastfm: {\r\n        api_key?: string;\r\n    };\r\n    lightnovel: {\r\n        cookie?: string;\r\n    };\r\n    lofter: {\r\n        cookies?: string;\r\n    };\r\n    lorientlejour: {\r\n        token?: string;\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    malaysiakini: {\r\n        email?: string;\r\n        password?: string;\r\n        refreshToken?: string;\r\n    };\r\n    mangadex: {\r\n        username?: string;\r\n        password?: string;\r\n        clientId?: string;\r\n        clientSecret?: string;\r\n        refreshToken?: string;\r\n    };\r\n    manhuagui: {\r\n        cookie?: string;\r\n    };\r\n    mastodon: {\r\n        apiHost?: string;\r\n        accessToken?: string;\r\n        acctDomain?: string;\r\n    };\r\n    medium: {\r\n        cookies: Record<string, string | undefined>;\r\n        articleCookie?: string;\r\n    };\r\n    mihoyo: {\r\n        cookie?: string;\r\n    };\r\n    miniflux: {\r\n        instance?: string;\r\n        token?: string;\r\n    };\r\n    misskey: {\r\n        accessToken?: string;\r\n    };\r\n    mixi2: {\r\n        authToken?: string;\r\n        authKey?: string;\r\n    };\r\n    mox: {\r\n        cookie: string;\r\n    };\r\n    ncm: {\r\n        cookies?: string;\r\n    };\r\n    newrank: {\r\n        cookie?: string;\r\n    };\r\n    nga: {\r\n        uid?: string;\r\n        cid?: string;\r\n    };\r\n    nhentai: {\r\n        username?: string;\r\n        password?: string;\r\n    };\r\n    notion: {\r\n        key?: string;\r\n    };\r\n    patreon: {\r\n        sessionId?: string;\r\n    };\r\n    pianyuan: {\r\n        cookie?: string;\r\n    };\r\n    pixabay: {\r\n        key?: string;\r\n    };\r\n    pixiv: {\r\n        refreshToken?: string;\r\n        bypassCdn?: boolean;\r\n        bypassCdnHostname?: string;\r\n        bypassCdnDoh?: string;\r\n        imgProxy?: string;\r\n    };\r\n    pkubbs: {\r\n        cookie?: string;\r\n    };\r\n    qingting: {\r\n        id?: string;\r\n    };\r\n    readwise: {\r\n        accessToken?: string;\r\n    };\r\n    saraba1st: {\r\n        cookie?: string;\r\n        host?: string;\r\n    };\r\n    sehuatang: {\r\n        cookie?: string;\r\n    };\r\n    scboy: {\r\n        token?: string;\r\n    };\r\n    scihub: {\r\n        host?: string;\r\n    };\r\n    sis001: {\r\n        baseUrl?: string;\r\n    };\r\n    skeb: {\r\n        bearerToken?: string;\r\n    };\r\n    sorrycc: {\r\n        cookie?: string;\r\n    };\r\n    spotify: {\r\n        clientId?: string;\r\n        clientSecret?: string;\r\n        refreshToken?: string;\r\n    };\r\n    sspai: {\r\n        bearertoken?: string;\r\n    };\r\n    telegram: {\r\n        token?: string;\r\n        session?: string;\r\n        apiId?: number;\r\n        apiHash?: string;\r\n        maxConcurrentDownloads?: number;\r\n        proxy?: {\r\n            host?: string;\r\n            port?: number;\r\n            secret?: string;\r\n        };\r\n    };\r\n    tophub: {\r\n        cookie?: string;\r\n    };\r\n    tsdm39: {\r\n        cookie: string;\r\n    };\r\n    tumblr: {\r\n        clientId?: string;\r\n        clientSecret?: string;\r\n        refreshToken?: string;\r\n    };\r\n    twitter: {\r\n        username?: string[];\r\n        password?: string[];\r\n        authenticationSecret?: string[];\r\n        phoneOrEmail?: string[];\r\n        authToken?: string[];\r\n        thirdPartyApi?: string;\r\n    };\r\n    uestc: {\r\n        bbsCookie?: string;\r\n        bbsAuthStr?: string;\r\n    };\r\n    weibo: {\r\n        app_key?: string;\r\n        app_secret?: string;\r\n        cookies?: string;\r\n        redirect_url?: string;\r\n    };\r\n    wenku8: {\r\n        cookie?: string;\r\n    };\r\n    wordpress: {\r\n        cdnUrl?: string;\r\n    };\r\n    xiaoyuzhou: {\r\n        device_id?: string;\r\n        refresh_token?: string;\r\n    };\r\n    xiaohongshu: {\r\n        cookie?: string;\r\n    };\r\n    ximalaya: {\r\n        token?: string;\r\n    };\r\n    xsijishe: {\r\n        cookie?: string;\r\n        userAgent?: string;\r\n    };\r\n    xueqiu: {\r\n        cookies?: string;\r\n    };\r\n    yamibo: {\r\n        salt?: string;\r\n        auth?: string;\r\n    };\r\n    youtube: {\r\n        key?: string;\r\n        clientId?: string;\r\n        clientSecret?: string;\r\n        refreshToken?: string;\r\n    };\r\n    zhihu: {\r\n        cookies?: string;\r\n    };\r\n    zodgame: {\r\n        cookie?: string;\r\n    };\r\n    zsxq: {\r\n        accessToken?: string;\r\n    };\r\n    smzdm: {\r\n        cookie?: string;\r\n    };\r\n};\r\n\r\nconst value: Config | Record<string, any> = {};\r\n\r\nconst TRUE_UA = 'RSSHub/1.0 (+http://github.com/DIYgod/RSSHub; like FeedFetcher-Google)';\r\n\r\nconst toBoolean = (value: string | undefined, defaultValue: boolean) => {\r\n    if (value === undefined) {\r\n        return defaultValue;\r\n    } else {\r\n        return value === '' || value === '0' || value === 'false' ? false : !!value;\r\n    }\r\n};\r\n\r\nconst toInt = (value: string | undefined, defaultValue?: number) => (value === undefined ? defaultValue : Number.parseInt(value));\r\n\r\nconst calculateValue = () => {\r\n    const bilibili_cookies: Record<string, string | undefined> = {};\r\n    const email_config: Record<string, string | undefined> = {};\r\n    const discuz_cookies: Record<string, string | undefined> = {};\r\n    const medium_cookies: Record<string, string | undefined> = {};\r\n    const discourse_config: Record<string, string | undefined> = {};\r\n\r\n    for (const name in envs) {\r\n        if (name.startsWith('BILIBILI_COOKIE_')) {\r\n            const uid = name.slice(16);\r\n            bilibili_cookies[uid] = envs[name];\r\n        } else if (name.startsWith('EMAIL_CONFIG_')) {\r\n            const id = name.slice(13);\r\n            email_config[id] = envs[name];\r\n        } else if (name.startsWith('DISCUZ_COOKIE_')) {\r\n            const cid = name.slice(14);\r\n            discuz_cookies[cid] = envs[name];\r\n        } else if (name.startsWith('MEDIUM_COOKIE_')) {\r\n            const username = name.slice(14).toLowerCase();\r\n            medium_cookies[username] = envs[name];\r\n        } else if (name.startsWith('DISCOURSE_CONFIG_')) {\r\n            const id = name.slice('DISCOURSE_CONFIG_'.length);\r\n            discourse_config[id] = JSON.parse(envs[name] || '{}');\r\n        }\r\n    }\r\n\r\n    const _value = {\r\n        // app config\r\n        disallowRobot: toBoolean(envs.DISALLOW_ROBOT, false),\r\n        enableCluster: toBoolean(envs.ENABLE_CLUSTER, false),\r\n        isPackage: !!envs.IS_PACKAGE,\r\n        nodeName: envs.NODE_NAME,\r\n        puppeteerWSEndpoint: envs.PUPPETEER_WS_ENDPOINT,\r\n        chromiumExecutablePath: envs.CHROMIUM_EXECUTABLE_PATH,\r\n        // network\r\n        connect: {\r\n            port: toInt(envs.PORT, 1200), // 监听端口\r\n        },\r\n        listenInaddrAny: toBoolean(envs.LISTEN_INADDR_ANY, true), // 是否允许公网连接，取值 0 1\r\n        requestRetry: toInt(envs.REQUEST_RETRY, 2), // 请求失败重试次数\r\n        requestTimeout: toInt(envs.REQUEST_TIMEOUT, 30000), // Milliseconds to wait for the server to end the response before aborting the request\r\n        ua: envs.UA ?? (toBoolean(envs.NO_RANDOM_UA, false) ? TRUE_UA : randUserAgent({ browser: 'chrome', os: 'mac os', device: 'desktop' })),\r\n        trueUA: TRUE_UA,\r\n        allowOrigin: envs.ALLOW_ORIGIN,\r\n        // cache\r\n        cache: {\r\n            type: envs.CACHE_TYPE || (envs.CACHE_TYPE === '' ? '' : 'memory'), // 缓存类型，支持 'memory' 和 'redis'，设为空可以禁止缓存\r\n            requestTimeout: toInt(envs.CACHE_REQUEST_TIMEOUT, 60),\r\n            routeExpire: toInt(envs.CACHE_EXPIRE, 5 * 60), // 路由缓存时间，单位为秒\r\n            contentExpire: toInt(envs.CACHE_CONTENT_EXPIRE, 1 * 60 * 60), // 不变内容缓存时间，单位为秒\r\n        },\r\n        memory: {\r\n            max: toInt(envs.MEMORY_MAX, Math.pow(2, 8)), // The maximum number of items that remain in the cache. This must be a positive finite intger.\r\n            // https://github.com/isaacs/node-lru-cache#options\r\n        },\r\n        redis: {\r\n            url: envs.REDIS_URL || 'redis://localhost:6379/',\r\n        },\r\n        // proxy\r\n        proxyUri: envs.PROXY_URI,\r\n        proxyUris: envs.PROXY_URIS\r\n            ? envs.PROXY_URIS.split(',')\r\n                  .map((uri) => uri.trim())\r\n                  .filter(Boolean)\r\n            : undefined,\r\n        proxy: {\r\n            protocol: envs.PROXY_PROTOCOL,\r\n            host: envs.PROXY_HOST,\r\n            port: envs.PROXY_PORT,\r\n            auth: envs.PROXY_AUTH,\r\n            url_regex: envs.PROXY_URL_REGEX || '.*',\r\n            strategy: envs.PROXY_STRATEGY || 'all', // all / on_retry\r\n            failoverTimeout: toInt(envs.PROXY_FAILOVER_TIMEOUT, 5000),\r\n            healthCheckInterval: toInt(envs.PROXY_HEALTH_CHECK_INTERVAL, 60000),\r\n        },\r\n        pacUri: envs.PAC_URI,\r\n        pacScript: envs.PAC_SCRIPT,\r\n        // access control\r\n        accessKey: envs.ACCESS_KEY,\r\n        // logging\r\n        // 是否显示 Debug 信息，取值 'true' 'false' 'some_string' ，取值为 'true' 时永久显示，取值为 'false' 时永远隐藏，取值为 'some_string' 时请求带上 '?debug=some_string' 显示\r\n        debugInfo: envs.DEBUG_INFO || 'true',\r\n        loggerLevel: envs.LOGGER_LEVEL || 'info',\r\n        noLogfiles: toBoolean(envs.NO_LOGFILES, false),\r\n        otel: {\r\n            seconds_bucket: envs.OTEL_SECONDS_BUCKET || '0.01,0.1,1,2,5,15,30,60',\r\n            milliseconds_bucket: envs.OTEL_MILLISECONDS_BUCKET || '10,20,50,100,250,500,1000,5000,15000',\r\n        },\r\n        showLoggerTimestamp: toBoolean(envs.SHOW_LOGGER_TIMESTAMP, false),\r\n        sentry: {\r\n            dsn: envs.SENTRY,\r\n            routeTimeout: toInt(envs.SENTRY_ROUTE_TIMEOUT, 30000),\r\n        },\r\n        enableRemoteDebugging: toBoolean(envs.ENABLE_REMOTE_DEBUGGING, false),\r\n        // feed config\r\n        hotlink: {\r\n            template: envs.HOTLINK_TEMPLATE,\r\n            includePaths: envs.HOTLINK_INCLUDE_PATHS ? envs.HOTLINK_INCLUDE_PATHS.split(',') : undefined,\r\n            excludePaths: envs.HOTLINK_EXCLUDE_PATHS ? envs.HOTLINK_EXCLUDE_PATHS.split(',') : undefined,\r\n        },\r\n        feature: {\r\n            allow_user_hotlink_template: toBoolean(envs.ALLOW_USER_HOTLINK_TEMPLATE, false),\r\n            filter_regex_engine: envs.FILTER_REGEX_ENGINE || 're2',\r\n            allow_user_supply_unsafe_domain: toBoolean(envs.ALLOW_USER_SUPPLY_UNSAFE_DOMAIN, false),\r\n            disable_nsfw: toBoolean(envs.DISABLE_NSFW, false),\r\n        },\r\n        suffix: envs.SUFFIX,\r\n        titleLengthLimit: toInt(envs.TITLE_LENGTH_LIMIT, 150),\r\n        openai: {\r\n            apiKey: envs.OPENAI_API_KEY,\r\n            model: envs.OPENAI_MODEL || 'gpt-3.5-turbo-16k',\r\n            temperature: toInt(envs.OPENAI_TEMPERATURE, 0.2),\r\n            maxTokens: toInt(envs.OPENAI_MAX_TOKENS, 0) || undefined,\r\n            endpoint: envs.OPENAI_API_ENDPOINT || 'https://api.openai.com/v1',\r\n            inputOption: envs.OPENAI_INPUT_OPTION || 'description',\r\n            promptDescription: envs.OPENAI_PROMPT || 'Please summarize the following article and reply with markdown format.',\r\n            promptTitle: envs.OPENAI_PROMPT_TITLE || 'Please translate the following title into Simplified Chinese and reply only translated text.',\r\n        },\r\n        follow: {\r\n            ownerUserId: envs.FOLLOW_OWNER_USER_ID,\r\n            description: envs.FOLLOW_DESCRIPTION,\r\n            price: toInt(envs.FOLLOW_PRICE),\r\n            userLimit: toInt(envs.FOLLOW_USER_LIMIT),\r\n        },\r\n\r\n        // Route-specific Configurations\r\n        bilibili: {\r\n            cookies: bilibili_cookies,\r\n            dmImgList: envs.BILIBILI_DM_IMG_LIST,\r\n            dmImgInter: envs.BILIBILI_DM_IMG_INTER,\r\n            excludeSubtitles: toBoolean(envs.BILIBILI_EXCLUDE_SUBTITLES, false),\r\n        },\r\n        bitbucket: {\r\n            username: envs.BITBUCKET_USERNAME,\r\n            password: envs.BITBUCKET_PASSWORD,\r\n        },\r\n        btbyr: {\r\n            host: envs.BTBYR_HOST,\r\n            cookies: envs.BTBYR_COOKIE,\r\n        },\r\n        bupt: {\r\n            portal_cookie: envs.BUPT_PORTAL_COOKIE,\r\n        },\r\n        caixin: {\r\n            cookie: envs.CAIXIN_COOKIE,\r\n        },\r\n        civitai: {\r\n            cookie: envs.CIVITAI_COOKIE,\r\n        },\r\n        dianping: {\r\n            cookie: envs.DIANPING_COOKIE,\r\n        },\r\n        dida365: {\r\n            username: envs.DIDA365_USERNAME,\r\n            password: envs.DIDA365_PASSWORD,\r\n        },\r\n        discord: {\r\n            authorization: envs.DISCORD_AUTHORIZATION,\r\n        },\r\n        discourse: {\r\n            config: discourse_config,\r\n        },\r\n        discuz: {\r\n            cookies: discuz_cookies,\r\n        },\r\n        disqus: {\r\n            api_key: envs.DISQUS_API_KEY,\r\n        },\r\n        douban: {\r\n            cookie: envs.DOUBAN_COOKIE,\r\n        },\r\n        ehentai: {\r\n            ipb_member_id: envs.EH_IPB_MEMBER_ID,\r\n            ipb_pass_hash: envs.EH_IPB_PASS_HASH,\r\n            sk: envs.EH_SK,\r\n            igneous: envs.EH_IGNEOUS,\r\n            star: envs.EH_STAR,\r\n            img_proxy: envs.EH_IMG_PROXY,\r\n        },\r\n        email: {\r\n            config: email_config,\r\n        },\r\n        fanbox: {\r\n            session: envs.FANBOX_SESSION_ID,\r\n        },\r\n        fanfou: {\r\n            consumer_key: envs.FANFOU_CONSUMER_KEY,\r\n            consumer_secret: envs.FANFOU_CONSUMER_SECRET,\r\n            username: envs.FANFOU_USERNAME,\r\n            password: envs.FANFOU_PASSWORD,\r\n        },\r\n        fantia: {\r\n            cookies: envs.FANTIA_COOKIE,\r\n        },\r\n        game4399: {\r\n            cookie: envs.GAME_4399,\r\n        },\r\n        gelbooru: {\r\n            apiKey: envs.GELBOORU_API_KEY,\r\n            userId: envs.GELBOORU_USER_ID,\r\n        },\r\n        github: {\r\n            access_token: envs.GITHUB_ACCESS_TOKEN,\r\n        },\r\n        gitee: {\r\n            access_token: envs.GITEE_ACCESS_TOKEN,\r\n        },\r\n        google: {\r\n            fontsApiKey: envs.GOOGLE_FONTS_API_KEY,\r\n        },\r\n        guozaoke: {\r\n            cookies: envs.GUOZAOKE_COOKIES,\r\n        },\r\n        hefeng: {\r\n            key: envs.HEFENG_KEY,\r\n        },\r\n        infzm: {\r\n            cookie: envs.INFZM_COOKIE,\r\n        },\r\n        initium: {\r\n            username: envs.INITIUM_USERNAME,\r\n            password: envs.INITIUM_PASSWORD,\r\n            bearertoken: envs.INITIUM_BEARER_TOKEN,\r\n        },\r\n        instagram: {\r\n            username: envs.IG_USERNAME,\r\n            password: envs.IG_PASSWORD,\r\n            proxy: envs.IG_PROXY,\r\n            cookie: envs.IG_COOKIE,\r\n        },\r\n        iwara: {\r\n            username: envs.IWARA_USERNAME,\r\n            password: envs.IWARA_PASSWORD,\r\n        },\r\n        javdb: {\r\n            session: envs.JAVDB_SESSION,\r\n        },\r\n        jumeili: {\r\n            cookie: envs.JUMEILI_COOKIE,\r\n        },\r\n        keylol: {\r\n            cookie: envs.KEYLOL_COOKIE,\r\n        },\r\n        lastfm: {\r\n            api_key: envs.LASTFM_API_KEY,\r\n        },\r\n        lightnovel: {\r\n            cookie: envs.SECURITY_KEY,\r\n        },\r\n        lofter: {\r\n            cookies: envs.LOFTER_COOKIE,\r\n        },\r\n        lorientlejour: {\r\n            token: envs.LORIENTLEJOUR_TOKEN,\r\n            username: envs.LORIENTLEJOUR_USERNAME,\r\n            password: envs.LORIENTLEJOUR_PASSWORD,\r\n        },\r\n        malaysiakini: {\r\n            email: envs.MALAYSIAKINI_EMAIL,\r\n            password: envs.MALAYSIAKINI_PASSWORD,\r\n            refreshToken: envs.MALAYSIAKINI_REFRESHTOKEN,\r\n        },\r\n        mangadex: {\r\n            username: envs.MANGADEX_USERNAME, // required when refresh-token is not set\r\n            password: envs.MANGADEX_PASSWORD, // required when refresh-token is not set\r\n            clientId: envs.MANGADEX_CLIENT_ID,\r\n            clientSecret: envs.MANGADEX_CLIENT_SECRET,\r\n            refreshToken: envs.MANGADEX_REFRESH_TOKEN,\r\n        },\r\n        manhuagui: {\r\n            cookie: envs.MHGUI_COOKIE,\r\n        },\r\n        mastodon: {\r\n            apiHost: envs.MASTODON_API_HOST,\r\n            accessToken: envs.MASTODON_API_ACCESS_TOKEN,\r\n            acctDomain: envs.MASTODON_API_ACCT_DOMAIN,\r\n        },\r\n        medium: {\r\n            cookies: medium_cookies,\r\n            articleCookie: envs.MEDIUM_ARTICLE_COOKIE || '',\r\n        },\r\n        mihoyo: {\r\n            cookie: envs.MIHOYO_COOKIE,\r\n        },\r\n        miniflux: {\r\n            instance: envs.MINIFLUX_INSTANCE || 'https://reader.miniflux.app',\r\n            token: envs.MINIFLUX_TOKEN || '',\r\n        },\r\n        misskey: {\r\n            accessToken: envs.MISSKEY_ACCESS_TOKEN,\r\n        },\r\n        mixi2: {\r\n            authToken: envs.MIXI2_AUTH_TOKEN,\r\n            authKey: envs.MIXI2_AUTH_KEY,\r\n        },\r\n        mox: {\r\n            cookie: envs.MOX_COOKIE,\r\n        },\r\n        ncm: {\r\n            cookies: envs.NCM_COOKIES || '',\r\n        },\r\n        newrank: {\r\n            cookie: envs.NEWRANK_COOKIE,\r\n        },\r\n        nga: {\r\n            uid: envs.NGA_PASSPORT_UID,\r\n            cid: envs.NGA_PASSPORT_CID,\r\n        },\r\n        nhentai: {\r\n            username: envs.NHENTAI_USERNAME,\r\n            password: envs.NHENTAI_PASSWORD,\r\n        },\r\n        notion: {\r\n            key: envs.NOTION_TOKEN,\r\n        },\r\n        patreon: {\r\n            sessionId: envs.PATREON_SESSION_ID,\r\n        },\r\n        pianyuan: {\r\n            cookie: envs.PIANYUAN_COOKIE,\r\n        },\r\n        pixabay: {\r\n            key: envs.PIXABAY_KEY,\r\n        },\r\n        pixiv: {\r\n            refreshToken: envs.PIXIV_REFRESHTOKEN,\r\n            bypassCdn: toBoolean(envs.PIXIV_BYPASS_CDN, false),\r\n            bypassCdnHostname: envs.PIXIV_BYPASS_HOSTNAME || 'public-api.secure.pixiv.net',\r\n            bypassCdnDoh: envs.PIXIV_BYPASS_DOH || 'https://1.1.1.1/dns-query',\r\n            imgProxy: envs.PIXIV_IMG_PROXY || 'https://i.pixiv.re',\r\n        },\r\n        pkubbs: {\r\n            cookie: envs.PKUBBS_COOKIE,\r\n        },\r\n        qingting: {\r\n            id: envs.QINGTING_ID,\r\n        },\r\n        readwise: {\r\n            accessToken: envs.READWISE_ACCESS_TOKEN,\r\n        },\r\n        saraba1st: {\r\n            cookie: envs.SARABA1ST_COOKIE,\r\n            host: envs.SARABA1ST_HOST || 'https://stage1st.com',\r\n        },\r\n        sehuatang: {\r\n            cookie: envs.SEHUATANG_COOKIE,\r\n        },\r\n        scboy: {\r\n            token: envs.SCBOY_BBS_TOKEN,\r\n        },\r\n        scihub: {\r\n            host: envs.SCIHUB_HOST || 'https://sci-hub.se/',\r\n        },\r\n        sis001: {\r\n            baseUrl: envs.SIS001_BASE_URL || 'https://sis001.com',\r\n        },\r\n        skeb: {\r\n            bearerToken: envs.SKEB_BEARER_TOKEN,\r\n        },\r\n        sorrycc: {\r\n            cookie: envs.SORRYCC_COOKIES,\r\n        },\r\n        spotify: {\r\n            clientId: envs.SPOTIFY_CLIENT_ID,\r\n            clientSecret: envs.SPOTIFY_CLIENT_SECRET,\r\n            refreshToken: envs.SPOTIFY_REFRESHTOKEN,\r\n        },\r\n        sspai: {\r\n            bearertoken: envs.SSPAI_BEARERTOKEN,\r\n        },\r\n        telegram: {\r\n            token: envs.TELEGRAM_TOKEN,\r\n            session: envs.TELEGRAM_SESSION,\r\n            apiId: envs.TELEGRAM_API_ID,\r\n            apiHash: envs.TELEGRAM_API_HASH,\r\n            maxConcurrentDownloads: envs.TELEGRAM_MAX_CONCURRENT_DOWNLOADS,\r\n            proxy: {\r\n                host: envs.TELEGRAM_PROXY_HOST,\r\n                port: envs.TELEGRAM_PROXY_PORT,\r\n                secret: envs.TELEGRAM_PROXY_SECRET,\r\n            },\r\n        },\r\n        tophub: {\r\n            cookie: envs.TOPHUB_COOKIE,\r\n        },\r\n        tsdm39: {\r\n            cookie: envs.TSDM39_COOKIES,\r\n        },\r\n        tumblr: {\r\n            clientId: envs.TUMBLR_CLIENT_ID,\r\n            clientSecret: envs.TUMBLR_CLIENT_SECRET,\r\n            refreshToken: envs.TUMBLR_REFRESH_TOKEN,\r\n        },\r\n        twitter: {\r\n            username: envs.TWITTER_USERNAME?.split(','),\r\n            password: envs.TWITTER_PASSWORD?.split(','),\r\n            authenticationSecret: envs.TWITTER_AUTHENTICATION_SECRET?.split(','),\r\n            phoneOrEmail: envs.TWITTER_PHONE_OR_EMAIL?.split(','),\r\n            authToken: envs.TWITTER_AUTH_TOKEN?.split(','),\r\n            thirdPartyApi: envs.TWITTER_THIRD_PARTY_API,\r\n        },\r\n        uestc: {\r\n            bbsCookie: envs.UESTC_BBS_COOKIE,\r\n            bbsAuthStr: envs.UESTC_BBS_AUTH_STR,\r\n        },\r\n        weibo: {\r\n            app_key: envs.WEIBO_APP_KEY,\r\n            app_secret: envs.WEIBO_APP_SECRET,\r\n            cookies: envs.WEIBO_COOKIES,\r\n            redirect_url: envs.WEIBO_REDIRECT_URL,\r\n        },\r\n        wenku8: {\r\n            cookie: envs.WENKU8_COOKIE,\r\n        },\r\n        wordpress: {\r\n            cdnUrl: envs.WORDPRESS_CDN,\r\n        },\r\n        xiaoyuzhou: {\r\n            device_id: envs.XIAOYUZHOU_ID,\r\n            refresh_token: envs.XIAOYUZHOU_TOKEN,\r\n        },\r\n        xiaohongshu: {\r\n            cookie: envs.XIAOHONGSHU_COOKIE,\r\n        },\r\n        ximalaya: {\r\n            token: envs.XIMALAYA_TOKEN,\r\n        },\r\n        xsijishe: {\r\n            cookie: envs.XSIJISHE_COOKIE,\r\n            user_agent: envs.XSIJISHE_USER_AGENT,\r\n        },\r\n        xueqiu: {\r\n            cookies: envs.XUEQIU_COOKIES,\r\n        },\r\n        yamibo: {\r\n            salt: envs.YAMIBO_SALT,\r\n            auth: envs.YAMIBO_AUTH,\r\n        },\r\n        youtube: {\r\n            key: envs.YOUTUBE_KEY,\r\n            clientId: envs.YOUTUBE_CLIENT_ID,\r\n            clientSecret: envs.YOUTUBE_CLIENT_SECRET,\r\n            refreshToken: envs.YOUTUBE_REFRESH_TOKEN,\r\n        },\r\n        zhihu: {\r\n            cookies: envs.ZHIHU_COOKIES,\r\n        },\r\n        zodgame: {\r\n            cookie: envs.ZODGAME_COOKIE,\r\n        },\r\n        zsxq: {\r\n            accessToken: envs.ZSXQ_ACCESS_TOKEN,\r\n        },\r\n        smzdm: {\r\n            cookie: envs.SMZDM_COOKIE,\r\n        },\r\n    };\r\n\r\n    for (const name in _value) {\r\n        value[name] = _value[name];\r\n    }\r\n};\r\ncalculateValue();\r\n\r\n(async () => {\r\n    if (envs.REMOTE_CONFIG) {\r\n        const { default: logger } = await import('@/utils/logger');\r\n        try {\r\n            const data = await ofetch(envs.REMOTE_CONFIG, {\r\n                headers: {\r\n                    Authorization: `Basic ${envs.REMOTE_CONFIG_AUTH}`,\r\n                },\r\n            });\r\n            if (data) {\r\n                envs = Object.assign(envs, data);\r\n                calculateValue();\r\n                logger.info('Remote config loaded.');\r\n            } else {\r\n                logger.error('Remote config load failed.');\r\n            }\r\n        } catch (error) {\r\n            logger.error('Remote config load failed.', error);\r\n        }\r\n    }\r\n})();\r\n\r\n// @ts-expect-error value is set\r\nexport const config: Config = value;\r\n\r\nexport const setConfig = (env: Record<string, any>) => {\r\n    envs = Object.assign(process.env, env);\r\n    calculateValue();\r\n};\r\n"],"mappings":"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"}