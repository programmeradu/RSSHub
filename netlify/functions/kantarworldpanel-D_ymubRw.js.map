{"version":3,"file":"kantarworldpanel-D_ymubRw.js","names":[],"sources":["../../lib/routes/kantarworldpanel/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/:region?/:category{.+}?',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { region = 'cn-en', category = 'news' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 30;\r\n\r\n    const rootUrl = 'https://www.kantarworldpanel.com/';\r\n    const currentUrl = new URL(`${region}/${category}`, rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    let items = $('ul.slide, #newssource')\r\n        .find('li')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const a = item.find('a');\r\n            const image = item.find('img');\r\n\r\n            const title = item.find('h3.mediumFont').text().trim();\r\n\r\n            let link = a.prop('href');\r\n            link = link === '#' ? currentUrl : link;\r\n\r\n            return {\r\n                title,\r\n                link,\r\n                description: art(path.join(__dirname, 'templates/description.art'), {\r\n                    description: item.find('p.gowhite').text(),\r\n                    image: image.prop('src')\r\n                        ? {\r\n                              src: image.prop('src'),\r\n                              alt: image.prop('alt'),\r\n                          }\r\n                        : undefined,\r\n                }),\r\n                guid: link.startsWith(rootUrl) ? `${link}#${title}` : link,\r\n                pubDate: parseDate(item.find('p.medGrey').text(), 'DD/MM/YYYY'),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                // The URL similar to the example below is the file download URL.\r\n                // eg. https://www.kantarworldpanel.com/dwl.php?sn=publications&id=1632.\r\n                if (item.link === currentUrl || !item.link.startsWith(rootUrl)) {\r\n                    return item;\r\n                } else if (/dwl\\.php/.test(item.link)) {\r\n                    item.enclosure_url = item.link;\r\n                    item.enclosure_type = 'application/pdf';\r\n\r\n                    return item;\r\n                }\r\n\r\n                const detailResponse = await got(item.link);\r\n\r\n                if (!detailResponse.url.startsWith(rootUrl)) {\r\n                    return item;\r\n                }\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                item.title = content('h1.newshead').text();\r\n                item.description = content('div.center-content div.left-layout-col').html();\r\n                item.category = content('meta[name=\"keywords\"]').prop('content')?.split(/,\\s?/) ?? [];\r\n                item.pubDate = parseDate(content('p.newsdateshare').text(), 'DD/MM/YYYY');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const icon = new URL('favicon.ico', rootUrl).href;\r\n\r\n    return {\r\n        item: items,\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        image: $('#logoprint img').prop('src'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('meta[name=\"keywords\"]').prop('content'),\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"wdASA,MAAa,EAAe,CACxB,KAAM,2BACN,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,SAAS,QAAS,WAAW,QAAW,EAAI,IAAI,QAClD,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,oCACV,EAAa,IAAI,IAAI,GAAG,EAAO,GAAG,IAAY,GAAS,KAEvD,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAI,EAAK,GAEX,EAAQ,EAAE,yBACT,KAAK,MACL,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAI,EAAK,KAAK,KACd,EAAQ,EAAK,KAAK,OAElB,EAAQ,EAAK,KAAK,iBAAiB,OAAO,OAE5C,EAAO,EAAE,KAAK,QAGlB,MAFA,GAAO,IAAS,IAAM,EAAa,EAE5B,CACH,QACA,OACA,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,YAAa,EAAK,KAAK,aAAa,OACpC,MAAO,EAAM,KAAK,OACZ,CACI,IAAK,EAAM,KAAK,OAChB,IAAK,EAAM,KAAK,QAEpB,IAAA,KAEV,KAAM,EAAK,WAAW,GAAW,GAAG,EAAK,GAAG,IAAU,EACtD,QAAS,EAAU,EAAK,KAAK,aAAa,OAAQ,iBAI9D,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAGhC,GAAI,EAAK,OAAS,GAAc,CAAC,EAAK,KAAK,WAAW,GAClD,OAAO,KACA,WAAW,KAAK,EAAK,MAI5B,MAHA,GAAK,cAAgB,EAAK,KAC1B,EAAK,eAAiB,kBAEf,EAGX,IAAM,EAAiB,MAAM,EAAI,EAAK,MAEtC,GAAI,CAAC,EAAe,IAAI,WAAW,GAC/B,OAAO,EAGX,IAAM,EAAU,EAAK,EAAe,MAOpC,MALA,GAAK,MAAQ,EAAQ,eAAe,OACpC,EAAK,YAAc,EAAQ,0CAA0C,OACrE,EAAK,SAAW,EAAQ,yBAAyB,KAAK,YAAY,MAAM,SAAW,GACnF,EAAK,QAAU,EAAU,EAAQ,mBAAmB,OAAQ,cAErD,MAKnB,IAAM,EAAO,IAAI,IAAI,cAAe,GAAS,KAE7C,MAAO,CACH,KAAM,EACN,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,YAAa,EAAE,4BAA4B,KAAK,WAChD,SAAU,EAAE,QAAQ,KAAK,QACzB,MAAO,EAAE,kBAAkB,KAAK,OAChC,OACA,KAAM,EACN,SAAU,EAAE,yBAAyB,KAAK,WAC1C,WAAY"}