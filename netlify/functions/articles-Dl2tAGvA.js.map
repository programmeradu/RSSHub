{"version":3,"file":"articles-Dl2tAGvA.js","names":["MarkdownIt","route: Route","ofetch","cache"],"sources":["../../lib/routes/leetcode/articles.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport MarkdownIt from 'markdown-it';\r\nconst md = MarkdownIt({\r\n    html: true,\r\n    breaks: true,\r\n});\r\n\r\nconst host = 'https://leetcode.com';\r\nconst gqlEndpoint = `${host}/graphql`;\r\n\r\nexport const route: Route = {\r\n    path: '/articles',\r\n    categories: ['programming'],\r\n    example: '/leetcode/articles',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['leetcode.com/articles'],\r\n        },\r\n    ],\r\n    name: 'Articles',\r\n    maintainers: ['LogicJake'],\r\n    handler,\r\n    url: 'leetcode.com/articles',\r\n};\r\n\r\nasync function handler() {\r\n    const link = new URL('/articles/', host).href;\r\n    const response = await ofetch(link, { parseResponse: (txt) => txt });\r\n    const $ = load(response);\r\n\r\n    const list = $('a.list-group-item')\r\n        .toArray()\r\n        .filter((e) => $(e).find('h4.media-heading i').length === 0)\r\n        .map((item) => {\r\n            const info = {\r\n                title: $(item).find('h4.media-heading').text().trim(),\r\n                author: $(item).find('.text-500').text(),\r\n                link: new URL($(item).attr('href'), host).href,\r\n                pubDate: $(item).find('p.pull-right.media-date strong').text().trim(),\r\n            };\r\n            return info;\r\n        });\r\n\r\n    const out = await Promise.all(\r\n        list.map((info) =>\r\n            cache.tryGet(info.link, async () => {\r\n                const titleSlug = info.link.split('/')[4];\r\n\r\n                const questionContent = await ofetch(gqlEndpoint, {\r\n                    method: 'POST',\r\n                    body: {\r\n                        operationName: 'questionContent',\r\n                        variables: { titleSlug },\r\n                        query: `query questionContent($titleSlug: String!) {\r\n                                question(titleSlug: $titleSlug) {\r\n                                    content\r\n                                    mysqlSchemas\r\n                                    dataSchemas\r\n                                }\r\n                            }`,\r\n                    },\r\n                });\r\n\r\n                const officialSolution = await ofetch(gqlEndpoint, {\r\n                    method: 'POST',\r\n                    body: {\r\n                        operationName: 'officialSolution',\r\n                        variables: { titleSlug },\r\n                        query: `query officialSolution($titleSlug: String!) {\r\n                                question(titleSlug: $titleSlug) {\r\n                                    solution {\r\n                                        content\r\n                                    }\r\n                                }\r\n                            }`,\r\n                    },\r\n                });\r\n\r\n                const solution = md.render(officialSolution.data.question.solution.content);\r\n\r\n                info.description = (questionContent.data.question.content?.trim() ?? '') + solution;\r\n                info.pubDate = parseDate(info.pubDate);\r\n\r\n                return info;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('head title').text(),\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        image: 'https://assets.leetcode.com/static_assets/public/icons/favicon-192x192.png',\r\n        link,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"8UAMA,MAAM,EAAKA,EAAW,CAClB,KAAM,GACN,OAAQ,KAGN,EAAO,uBACP,EAAc,GAAG,EAAK,UAEfC,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,eACb,QAAS,qBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BAGjB,KAAM,WACN,YAAa,CAAC,aACd,UACA,IAAK,yBAGT,eAAe,GAAU,CACrB,IAAM,EAAO,IAAI,IAAI,aAAc,GAAM,KACnC,EAAW,MAAMC,EAAO,EAAM,CAAE,cAAgB,GAAQ,IACxD,EAAI,EAAK,GAET,EAAO,EAAE,qBACV,UACA,OAAQ,GAAM,EAAE,GAAG,KAAK,sBAAsB,SAAW,GACzD,IAAK,GAAS,CACX,IAAM,EAAO,CACT,MAAO,EAAE,GAAM,KAAK,oBAAoB,OAAO,OAC/C,OAAQ,EAAE,GAAM,KAAK,aAAa,OAClC,KAAM,IAAI,IAAI,EAAE,GAAM,KAAK,QAAS,GAAM,KAC1C,QAAS,EAAE,GAAM,KAAK,kCAAkC,OAAO,QAEnE,OAAO,IAGT,EAAM,MAAM,QAAQ,IACtB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAY,EAAK,KAAK,MAAM,KAAK,GAEjC,EAAkB,MAAMD,EAAO,EAAa,CAC9C,OAAQ,OACR,KAAM,CACF,cAAe,kBACf,UAAW,CAAE,aACb,MAAO;;;;;;kCAUT,EAAmB,MAAMA,EAAO,EAAa,CAC/C,OAAQ,OACR,KAAM,CACF,cAAe,mBACf,UAAW,CAAE,aACb,MAAO;;;;;;kCAUT,EAAW,EAAG,OAAO,EAAiB,KAAK,SAAS,SAAS,SAKnE,MAHA,GAAK,aAAe,EAAgB,KAAK,SAAS,SAAS,QAAU,IAAM,EAC3E,EAAK,QAAU,EAAU,EAAK,SAEvB,MAKnB,MAAO,CACH,MAAO,EAAE,cAAc,OACvB,YAAa,EAAE,mCAAmC,KAAK,WACvD,MAAO,6EACP,OACA,KAAM"}