{"version":3,"file":"common-utils-CvkwbCD5.js","names":[],"sources":["../../lib/utils/common-utils.ts"],"sourcesContent":["import { parseDate } from '@/utils/parse-date';\r\nimport title from 'title';\r\nimport os from 'node:os';\r\n\r\n// convert a string into title case\r\nconst toTitleCase = (str: string) => title(str);\r\n\r\nconst rWhiteSpace = /\\s+/;\r\nconst rAllWhiteSpace = /\\s+/g;\r\n\r\n// collapse all whitespaces into a single space (like \"white-space: normal;\" would do), and trim\r\nconst collapseWhitespace = (str?: string | null) => {\r\n    if (str && rWhiteSpace.test(str)) {\r\n        return str.replaceAll(rAllWhiteSpace, ' ').trim();\r\n    }\r\n    return str;\r\n};\r\n\r\nconst convertDateToISO8601 = (date?: string | Date | number | null) => {\r\n    if (!date) {\r\n        return date;\r\n    }\r\n    if (typeof date !== 'object') {\r\n        // some routes may call `.toUTCString()` before passing the date to ctx...\r\n        date = parseDate(date);\r\n    }\r\n    return date.toISOString();\r\n};\r\n\r\nconst getSubPath = (ctx) => {\r\n    const subPath = ctx.req.path.replace(/\\/[^/]*/, '') || '/';\r\n    return subPath;\r\n};\r\n\r\nconst getLocalhostAddress = () => {\r\n    const interfaces = os.networkInterfaces();\r\n    const address = Object.keys(interfaces)\r\n        .flatMap((name) => interfaces[name] ?? [])\r\n        .filter((iface) => iface?.family === 'IPv4' && !iface.internal)\r\n        .map((iface) => iface?.address)\r\n        .filter(Boolean);\r\n    address.push('[::]');\r\n    return address;\r\n};\r\n\r\nexport { toTitleCase, collapseWhitespace, convertDateToISO8601, getSubPath, getLocalhostAddress };\r\n"],"mappings":"0EAKA,MAAM,EAAe,GAAgB,EAAM,GAErC,EAAc,MACd,EAAiB,OAGjB,EAAsB,GACpB,GAAO,EAAY,KAAK,GACjB,EAAI,WAAW,EAAgB,KAAK,OAExC,EAGL,EAAwB,GACrB,IAGD,OAAO,GAAS,WAEhB,EAAO,EAAU,IAEd,EAAK,eAGV,EAAc,GAAQ,CACxB,IAAM,EAAU,EAAI,IAAI,KAAK,QAAQ,UAAW,KAAO,IACvD,OAAO"}