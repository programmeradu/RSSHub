{"version":3,"file":"video-tPW3n7tD.js","names":["route: Route","cache","utils","got"],"sources":["../../lib/routes/bilibili/video.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport got from '@/utils/got';\r\nimport logger from '@/utils/logger';\r\nimport type { Context } from 'hono';\r\nimport cache from './cache';\r\nimport utils, { getVideoUrl } from './utils';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/user/video/:uid/:embed?',\r\n    categories: ['social-media'],\r\n    view: ViewType.Videos,\r\n    example: '/bilibili/user/video/2267573',\r\n    parameters: { uid: '用户 id, 可在 UP 主主页中找到', embed: '默认为开启内嵌视频, 任意值为关闭' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['space.bilibili.com/:uid'],\r\n            target: '/user/video/:uid',\r\n        },\r\n    ],\r\n    name: 'UP 主投稿',\r\n    maintainers: ['DIYgod', 'Konano', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const uid = ctx.req.param('uid');\r\n    const embed = !ctx.req.param('embed');\r\n    const cookie = await cache.getCookie();\r\n    const wbiVerifyString = await cache.getWbiVerifyString();\r\n    const dmImgList = utils.getDmImgList();\r\n    const dmImgInter = utils.getDmImgInter();\r\n    const renderData = await cache.getRenderData(uid);\r\n\r\n    const params = utils.addWbiVerifyInfo(\r\n        utils.addRenderData(utils.addDmVerifyInfoWithInter(`mid=${uid}&ps=30&tid=0&pn=1&keyword=&order=pubdate&platform=web&web_location=1550101&order_avoided=true`, dmImgList, dmImgInter), renderData),\r\n        wbiVerifyString\r\n    );\r\n    const response = await got(`https://api.bilibili.com/x/space/wbi/arc/search?${params}`, {\r\n        headers: {\r\n            Referer: `https://space.bilibili.com/${uid}/video?tid=0&pn=1&keyword=&order=pubdate`,\r\n            Cookie: cookie,\r\n        },\r\n    });\r\n    const data = response.data;\r\n    if (data.code) {\r\n        logger.error(JSON.stringify(data.data));\r\n        throw new Error(`Got error code ${data.code} while fetching: ${data.message}`);\r\n    }\r\n\r\n    const usernameAndFace = await cache.getUsernameAndFaceFromUID(uid);\r\n    const name = usernameAndFace[0] || data.data.list.vlist[0]?.author;\r\n    const face = usernameAndFace[1];\r\n\r\n    return {\r\n        title: `${name} 的 bilibili 空间`,\r\n        link: `https://space.bilibili.com/${uid}`,\r\n        description: `${name} 的 bilibili 空间`,\r\n        image: face ?? undefined,\r\n        logo: face ?? undefined,\r\n        icon: face ?? undefined,\r\n        item:\r\n            data.data &&\r\n            data.data.list &&\r\n            data.data.list.vlist &&\r\n            (await Promise.all(\r\n                data.data.list.vlist.map(async (item) => {\r\n                    const subtitles = !config.bilibili.excludeSubtitles && item.bvid ? await cache.getVideoSubtitleAttachment(item.bvid) : [];\r\n                    return {\r\n                        title: item.title,\r\n                        description: utils.renderUGCDescription(embed, item.pic, item.description, item.aid, undefined, item.bvid),\r\n                        pubDate: new Date(item.created * 1000).toUTCString(),\r\n                        link: item.created > utils.bvidTime && item.bvid ? `https://www.bilibili.com/video/${item.bvid}` : `https://www.bilibili.com/video/av${item.aid}`,\r\n                        author: name,\r\n                        comments: item.comment,\r\n                        attachments: item.bvid\r\n                            ? [\r\n                                  {\r\n                                      url: getVideoUrl(item.bvid),\r\n                                      mime_type: 'text/html',\r\n                                  },\r\n                                  ...subtitles,\r\n                              ]\r\n                            : undefined,\r\n                    };\r\n                })\r\n            )),\r\n    };\r\n}\r\n"],"mappings":"ikBAQA,MAAaA,EAAe,CACxB,KAAM,2BACN,WAAY,CAAC,gBACb,KAAM,EAAS,OACf,QAAS,+BACT,WAAY,CAAE,IAAK,sBAAuB,MAAO,qBACjD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BACT,OAAQ,qBAGhB,KAAM,SACN,YAAa,CAAC,SAAU,SAAU,YAClC,WAGJ,eAAe,EAAQ,EAAc,CACjC,IAAM,EAAM,EAAI,IAAI,MAAM,OACpB,EAAQ,CAAC,EAAI,IAAI,MAAM,SACvB,EAAS,MAAMC,EAAM,YACrB,EAAkB,MAAMA,EAAM,qBAC9B,EAAYC,EAAM,eAClB,EAAaA,EAAM,gBACnB,EAAa,MAAMD,EAAM,cAAc,GAEvC,EAASC,EAAM,iBACjBA,EAAM,cAAcA,EAAM,yBAAyB,OAAO,EAAI,+FAAgG,EAAW,GAAa,GACtL,GAEE,EAAW,MAAMC,EAAI,mDAAmD,IAAU,CACpF,QAAS,CACL,QAAS,8BAA8B,EAAI,0CAC3C,OAAQ,KAGV,EAAO,EAAS,KACtB,GAAI,EAAK,KAEL,MADA,EAAO,MAAM,KAAK,UAAU,EAAK,OACvB,MAAM,kBAAkB,EAAK,KAAK,mBAAmB,EAAK,WAGxE,IAAM,EAAkB,MAAMF,EAAM,0BAA0B,GACxD,EAAO,EAAgB,IAAM,EAAK,KAAK,KAAK,MAAM,IAAI,OACtD,EAAO,EAAgB,GAE7B,MAAO,CACH,MAAO,GAAG,EAAK,gBACf,KAAM,8BAA8B,IACpC,YAAa,GAAG,EAAK,gBACrB,MAAO,GAAQ,IAAA,GACf,KAAM,GAAQ,IAAA,GACd,KAAM,GAAQ,IAAA,GACd,KACI,EAAK,MACL,EAAK,KAAK,MACV,EAAK,KAAK,KAAK,OACd,MAAM,QAAQ,IACX,EAAK,KAAK,KAAK,MAAM,IAAI,KAAO,IAAS,CACrC,IAAM,EAAY,CAAC,EAAO,SAAS,kBAAoB,EAAK,KAAO,MAAMA,EAAM,2BAA2B,EAAK,MAAQ,GACvH,MAAO,CACH,MAAO,EAAK,MACZ,YAAaC,EAAM,qBAAqB,EAAO,EAAK,IAAK,EAAK,YAAa,EAAK,IAAK,IAAA,GAAW,EAAK,MACrG,QAAS,IAAI,KAAK,EAAK,QAAU,KAAM,cACvC,KAAM,EAAK,QAAUA,EAAM,UAAY,EAAK,KAAO,kCAAkC,EAAK,OAAS,oCAAoC,EAAK,MAC5I,OAAQ,EACR,SAAU,EAAK,QACf,YAAa,EAAK,KACZ,CACI,CACI,IAAK,EAAY,EAAK,MACtB,UAAW,aAEf,GAAG,GAEP,IAAA"}