{"version":3,"file":"utils-BQ3YzHuJ.js","names":[],"sources":["../../lib/routes/18comic/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\nimport md5 from '@/utils/md5';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst defaultDomain = 'jmcomic1.me';\r\n// list of address: https://jmcomic2.bet\r\nconst allowDomain = new Set(['18comic.vip', '18comic.org', 'jmcomic.me', 'jmcomic1.me', 'jm-comic3.art', 'jm-comic.club', 'jm-comic2.ark']);\r\n\r\nconst apiDomain = 'www.cdnblackmyth.club';\r\n\r\nconst getRootUrl = (domain) => {\r\n    if (!config.feature.allow_user_supply_unsafe_domain && !allowDomain.has(domain)) {\r\n        throw new ConfigNotFoundError(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\r\n    }\r\n\r\n    return `https://${domain}`;\r\n};\r\n\r\nconst apiMapCategory = (category) => {\r\n    switch (category) {\r\n        case 'another':\r\n            return '其他漫畫';\r\n        case 'doujin':\r\n            return '同人';\r\n        case 'hanman':\r\n            return '韓漫';\r\n        case 'meiman':\r\n            return '美漫';\r\n        case 'short':\r\n            return '短篇';\r\n        case 'single':\r\n            return '單本';\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nconst getApiUrl = () => `https://${apiDomain}`;\r\n\r\n// using api to fetch data\r\nconst processApiItems = async (apiUrl: string) => {\r\n    apiUrl = apiUrl.replace(/\\?$/, '');\r\n    // get timestamp using javascript native api\r\n    const ts = Date.now();\r\n    const tokenParam = `${ts},1.7.5`;\r\n    // md5 from {token ts + \"18comicAPP\"\r\n    let token = `${ts}18comicAPP`;\r\n    token = md5(token);\r\n\r\n    const response = await got(apiUrl, {\r\n        headers: {\r\n            token,\r\n            tokenparam: tokenParam,\r\n        },\r\n    });\r\n\r\n    // decode base64\r\n    const encryptedWordArray = CryptoJS.enc.Base64.parse(response.data.data);\r\n\r\n    // to md5 hex string , this string must be 32 bytes , because it is used as key for AES-256\r\n    const md5HexStr = CryptoJS.MD5(ts + '185Hcomic3PAPP7R').toString(); // hex 字串\r\n\r\n    // convert string to WordArray that can be used as key for AES\r\n    const key = CryptoJS.enc.Utf8.parse(md5HexStr); // 32 bytes => AES-256\r\n\r\n    // create a CipherParams object from the encrypted WordArray\r\n    const cipherParams = CryptoJS.lib.CipherParams.create({\r\n        ciphertext: encryptedWordArray,\r\n    });\r\n\r\n    // decrypt the CipherParams object using AES in ECB mode with PKCS7 padding\r\n    const decrypted = CryptoJS.AES.decrypt(cipherParams, key, {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n    });\r\n\r\n    // convert the decrypted WordArray to a UTF-8 string , the result is a JSON string\r\n    const resultJson = decrypted.toString(CryptoJS.enc.Utf8);\r\n\r\n    const result = JSON.parse(resultJson);\r\n    return result;\r\n};\r\n\r\nconst ProcessItems = async (ctx, currentUrl, rootUrl) => {\r\n    currentUrl = currentUrl.replace(/\\?$/, '');\r\n\r\n    const response = await got(currentUrl);\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items = $('.video-title')\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.text().trim(),\r\n                link: `${rootUrl}${item.prev().find('a').attr('href')}`,\r\n                guid: `18comic:${item.prev().find('a').attr('href')}`,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.guid, async () => {\r\n                const detailResponse = await got(item.link);\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                item.pubDate = parseDate(content('div[itemprop=\"datePublished\"]').first().attr('content'));\r\n                item.updated = parseDate(content('div[itemprop=\"datePublished\"]').last().attr('content'));\r\n                item.category = content('span[data-type=\"tags\"]')\r\n                    .first()\r\n                    .find('a')\r\n                    .toArray()\r\n                    .map((c) => $(c).text());\r\n                item.author = content('span[data-type=\"author\"]')\r\n                    .first()\r\n                    .find('a')\r\n                    .toArray()\r\n                    .map((a) => $(a).text())\r\n                    .join(', ');\r\n                item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                    introduction: content('#intro-block .p-t-5').text(),\r\n                    images: content('.img_zoom_img img')\r\n                        .toArray()\r\n                        .map((image) => content(image).attr('data-original')),\r\n                    cover: content('.thumb-overlay img').first().attr('src'),\r\n                    category: item.category,\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        item: items,\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        allowEmpty: true,\r\n    };\r\n};\r\n\r\nexport { defaultDomain, getRootUrl, ProcessItems, getApiUrl, processApiItems, apiMapCategory };\r\n"],"mappings":"igBAWA,MAAM,EAAgB,cAEhB,EAAc,IAAI,IAAI,CAAC,cAAe,cAAe,aAAc,cAAe,gBAAiB,gBAAiB,kBAIpH,EAAc,GAAW,CAC3B,GAAI,CAAC,EAAO,QAAQ,iCAAmC,CAAC,EAAY,IAAI,GACpE,MAAM,IAAI,EAAoB,mFAGlC,MAAO,WAAW,KAGhB,EAAkB,GAAa,CACjC,OAAQ,EAAR,CACI,IAAK,UACD,MAAO,OACX,IAAK,SACD,MAAO,KACX,IAAK,SACD,MAAO,KACX,IAAK,SACD,MAAO,KACX,IAAK,QACD,MAAO,KACX,IAAK,SACD,MAAO,KACX,QACI,OAAO,OAIb,MAAkB,gCAGlB,EAAkB,KAAO,IAAmB,CAC9C,EAAS,EAAO,QAAQ,MAAO,IAE/B,IAAM,EAAK,KAAK,MACV,EAAa,GAAG,EAAG,QAErB,EAAQ,GAAG,EAAG,YAClB,EAAQ,EAAI,GAEZ,IAAM,EAAW,MAAM,EAAI,EAAQ,CAC/B,QAAS,CACL,QACA,WAAY,KAKd,EAAqB,EAAS,IAAI,OAAO,MAAM,EAAS,KAAK,MAG7D,EAAY,EAAS,IAAI,EAAK,oBAAoB,WAGlD,EAAM,EAAS,IAAI,KAAK,MAAM,GAG9B,EAAe,EAAS,IAAI,aAAa,OAAO,CAClD,WAAY,IAIV,EAAY,EAAS,IAAI,QAAQ,EAAc,EAAK,CACtD,KAAM,EAAS,KAAK,IACpB,QAAS,EAAS,IAAI,QAIpB,EAAa,EAAU,SAAS,EAAS,IAAI,MAE7C,EAAS,KAAK,MAAM,GAC1B,OAAO,GAGL,EAAe,MAAO,EAAK,EAAY,IAAY,CACrD,EAAa,EAAW,QAAQ,MAAO,IAEvC,IAAM,EAAW,MAAM,EAAI,GAErB,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,gBACT,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,IAC5E,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OAAO,OACnB,KAAM,GAAG,IAAU,EAAK,OAAO,KAAK,KAAK,KAAK,UAC9C,KAAM,WAAW,EAAK,OAAO,KAAK,KAAK,KAAK,aAsCxD,MAlCA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAM,EAAI,EAAK,MAEhC,EAAU,EAAK,EAAe,MAwBpC,MAtBA,GAAK,QAAU,EAAU,EAAQ,iCAAiC,QAAQ,KAAK,YAC/E,EAAK,QAAU,EAAU,EAAQ,iCAAiC,OAAO,KAAK,YAC9E,EAAK,SAAW,EAAQ,0BACnB,QACA,KAAK,KACL,UACA,IAAK,GAAM,EAAE,GAAG,QACrB,EAAK,OAAS,EAAQ,4BACjB,QACA,KAAK,KACL,UACA,IAAK,GAAM,EAAE,GAAG,QAChB,KAAK,MACV,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,aAAc,EAAQ,uBAAuB,OAC7C,OAAQ,EAAQ,qBACX,UACA,IAAK,GAAU,EAAQ,GAAO,KAAK,kBACxC,MAAO,EAAQ,sBAAsB,QAAQ,KAAK,OAClD,SAAU,EAAK,WAGZ,MAKZ,CACH,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,KAAM,EACN,YAAa,EAAE,mCAAmC,KAAK,WACvD,WAAY"}