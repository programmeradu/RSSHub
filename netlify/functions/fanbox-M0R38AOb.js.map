{"version":3,"file":"fanbox-M0R38AOb.js","names":["route: Route","InvalidParameterError","description: string | undefined","image: string | undefined","ofetch"],"sources":["../../lib/routes/fanbox/utils.ts","../../lib/routes/fanbox/index.ts"],"sourcesContent":["import { config } from '@/config';\r\nimport type { DataItem } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport type { ArticlePost, FilePost, ImagePost, PostDetailResponse, PostItem, TextPost, VideoPost } from './types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport function getHeaders() {\r\n    const sessionid = config.fanbox.session;\r\n    const cookie = sessionid ? `FANBOXSESSID=${sessionid}` : '';\r\n    return {\r\n        origin: 'https://fanbox.cc',\r\n        cookie,\r\n    };\r\n}\r\n\r\nfunction embedUrlMap(urlEmbed: ArticlePost['body']['urlEmbedMap'][string]) {\r\n    switch (urlEmbed.type) {\r\n        case 'html':\r\n            return urlEmbed.html;\r\n        case 'fanbox.post':\r\n            return art(path.join(__dirname, 'templates/fanbox-post.art'), {\r\n                postUrl: `https://${urlEmbed.postInfo.creatorId}.fanbox.cc/posts/${urlEmbed.postInfo.id}`,\r\n                title: urlEmbed.postInfo.title,\r\n                user: urlEmbed.postInfo.user,\r\n                excerpt: urlEmbed.postInfo.excerpt,\r\n            });\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nfunction passageConv(p) {\r\n    const seg = [...p.text];\r\n    if (p.styles) {\r\n        p.styles.map((s) => {\r\n            switch (s.type) {\r\n                case 'bold':\r\n                    seg[s.offset] = `<b>` + seg[s.offset];\r\n                    seg[s.offset + s.length - 1] += `</b>`;\r\n                    break;\r\n                default:\r\n            }\r\n            return s;\r\n        });\r\n    }\r\n    if (p.links) {\r\n        p.links.map((l) => {\r\n            seg[l.offset] = `<a href=\"${l.url}\">` + seg[l.offset];\r\n            seg[l.offset + l.length - 1] += `</a>`;\r\n            return l;\r\n        });\r\n    }\r\n    const ret = seg.join('');\r\n    return ret;\r\n}\r\n\r\nfunction parseText(body: TextPost['body']) {\r\n    return body.text || '';\r\n}\r\n\r\nfunction parseImage(body: ImagePost['body']) {\r\n    let ret = body.text || '';\r\n    for (const i of body.images) {\r\n        ret += `<hr><img src=\"${i.originalUrl}\">`;\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction parseFile(body: FilePost['body']) {\r\n    let ret = body.text || '';\r\n    for (const f of body.files) {\r\n        ret += `<br><a href=\"${f.url}\" download=\"${f.name}.${f.extension}\">${f.name}.${f.extension}</a>`;\r\n    }\r\n    return ret;\r\n}\r\n\r\nasync function parseVideo(body: VideoPost['body']) {\r\n    let ret = '';\r\n    switch (body.video.serviceProvider) {\r\n        case 'soundcloud':\r\n            ret += await getSoundCloudEmbedUrl(body.video.videoId);\r\n            break;\r\n        case 'youtube':\r\n            ret += `<iframe src=\"https://www.youtube-nocookie.com/embed/${body.video.videoId}\" frameborder=\"0\"></iframe>`;\r\n            break;\r\n        case 'vimeo':\r\n            ret += `<iframe src=\"https://player.vimeo.com/video/${body.video.videoId}\" frameborder=\"0\"></iframe>`;\r\n            break;\r\n        default:\r\n    }\r\n    ret += `<br>${body.text}`;\r\n    return ret;\r\n}\r\n\r\nasync function parseArtile(body: ArticlePost['body']) {\r\n    let ret: Array<string> = [];\r\n    for (let x = 0; x < body.blocks.length; ++x) {\r\n        const b = body.blocks[x];\r\n        ret.push('<p>');\r\n\r\n        switch (b.type) {\r\n            case 'p':\r\n                ret.push(passageConv(b));\r\n                break;\r\n            case 'header':\r\n                ret.push(`<h2>${b.text}</h2>`);\r\n                break;\r\n            case 'image': {\r\n                const i = body.imageMap[b.imageId];\r\n                ret.push(`<img src=\"${i.originalUrl}\">`);\r\n                break;\r\n            }\r\n            case 'file': {\r\n                const file = body.fileMap[b.fileId];\r\n                ret.push(`<a href=\"${file.url}\" download=\"${file.name}.${file.extension}\">${file.name}.${file.extension}</a>`);\r\n                break;\r\n            }\r\n            case 'url_embed':\r\n                ret.push(embedUrlMap(body.urlEmbedMap[b.urlEmbedId]));\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    ret = await Promise.all(ret);\r\n    return ret.join('');\r\n}\r\n\r\nasync function parseDetail(i: PostDetailResponse['body']) {\r\n    let ret = '';\r\n    if (i.feeRequired !== 0) {\r\n        ret += `Fee Required: <b>${i.feeRequired} JPY/month</b><hr>`;\r\n    }\r\n    if (i.coverImageUrl) {\r\n        ret += `<img src=\"${i.coverImageUrl}\"><hr>`;\r\n    }\r\n\r\n    if (!i.body) {\r\n        ret += i.excerpt;\r\n        return ret;\r\n    }\r\n\r\n    switch (i.type) {\r\n        case 'text':\r\n            ret += parseText(i.body);\r\n            break;\r\n        case 'file':\r\n            ret += parseFile(i.body);\r\n            break;\r\n        case 'image':\r\n            ret += parseImage(i.body);\r\n            break;\r\n        case 'video':\r\n            ret += await parseVideo(i.body);\r\n            break;\r\n        case 'article':\r\n            ret += await parseArtile(i.body);\r\n            break;\r\n        default:\r\n            ret += '<b>Unsupported content (RSSHub)</b>';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function parseItem(item: PostItem) {\r\n    return cache.tryGet(`fanbox-${item.id}-${item.updatedDatetime}`, async () => {\r\n        const postDetail = (await ofetch(`https://api.fanbox.cc/post.info?postId=${item.id}`, { headers: { ...getHeaders(), 'User-Agent': config.trueUA } })) as PostDetailResponse;\r\n        return {\r\n            title: item.title || `No title`,\r\n            description: await parseDetail(postDetail.body),\r\n            pubDate: parseDate(item.updatedDatetime),\r\n            link: `https://${item.creatorId}.fanbox.cc/posts/${item.id}`,\r\n            category: item.tags,\r\n        };\r\n    }) as Promise<DataItem>;\r\n}\r\n\r\nasync function getSoundCloudEmbedUrl(videoId: string) {\r\n    const videoUrl = `https://soundcloud.com/${videoId}`;\r\n    const apiUrl = `https://soundcloud.com/oembed?url=${encodeURIComponent(videoUrl)}&format=json&maxheight=400&format=json`;\r\n    const resp = await ofetch(apiUrl);\r\n    return resp.html;\r\n}\r\n","import InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport type { Data, Route } from '@/types';\r\nimport { isValidHost } from '@/utils/valid-host';\r\nimport type { Context } from 'hono';\r\nimport { getHeaders, parseItem } from './utils';\r\nimport type { PostListResponse, UserInfoResponse } from './types';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const route: Route = {\r\n    path: '/:creator',\r\n    categories: ['social-media'],\r\n    example: '/fanbox/official',\r\n    parameters: { creator: 'fanbox user name' },\r\n    maintainers: ['KarasuShin'],\r\n    name: 'Creator',\r\n    handler,\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'FANBOX_SESSION_ID',\r\n                description: 'Required for private posts. Can be found in browser DevTools -> Application -> Cookies -> https://www.fanbox.cc -> FANBOXSESSID',\r\n                optional: true,\r\n            },\r\n        ],\r\n        nsfw: true,\r\n    },\r\n};\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const creator = ctx.req.param('creator');\r\n    if (!isValidHost(creator)) {\r\n        throw new InvalidParameterError('Invalid user name');\r\n    }\r\n\r\n    let title = `Fanbox - ${creator}`;\r\n\r\n    let description: string | undefined;\r\n\r\n    let image: string | undefined;\r\n\r\n    try {\r\n        const userApi = `https://api.fanbox.cc/creator.get?creatorId=${creator}`;\r\n        const userInfoResponse = (await ofetch(userApi, {\r\n            headers: getHeaders(),\r\n        })) as UserInfoResponse;\r\n        title = `Fanbox - ${userInfoResponse.body.user.name}`;\r\n        description = userInfoResponse.body.description;\r\n        image = userInfoResponse.body.user.iconUrl;\r\n    } catch {\r\n        // ignore\r\n    }\r\n\r\n    const postListResponse = (await ofetch(`https://api.fanbox.cc/post.listCreator?creatorId=${creator}&limit=20`, { headers: getHeaders() })) as PostListResponse;\r\n    const items = await Promise.all(postListResponse.body.map((i) => parseItem(i)));\r\n\r\n    return {\r\n        title,\r\n        link: `https://${creator}.fanbox.cc`,\r\n        description,\r\n        image,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"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"}