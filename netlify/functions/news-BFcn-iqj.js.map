{"version":3,"file":"news-BFcn-iqj.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/dorohedoro/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/news',\r\n    categories: ['game'],\r\n    example: '/dorohedoro/news',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['dorohedoro.net/news', 'dorohedoro.net/'],\r\n        },\r\n    ],\r\n    name: 'News',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'dorohedoro.net/news',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 25;\r\n\r\n    const rootUrl = 'https://dorohedoro.net';\r\n    const apiUrl = `${rootUrl}/news/news.xml`;\r\n    const currentUrl = `${rootUrl}/news/`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: apiUrl,\r\n    });\r\n\r\n    const $ = load(response.data, {\r\n        xmlMode: true,\r\n    });\r\n\r\n    let items = $('item')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const link = item.find('permalink').text();\r\n            const isNews = /news_\\d+_\\d+\\.html/.test(link);\r\n\r\n            return {\r\n                title: item.find('title').text(),\r\n                pubDate: parseDate(item.find('date').text()),\r\n                link: `${rootUrl}${isNews ? `/news/${link}` : ''}`,\r\n                isNews,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                if (item.isNews) {\r\n                    try {\r\n                        const detailResponse = await got({\r\n                            method: 'get',\r\n                            url: item.link,\r\n                        });\r\n\r\n                        const content = load(detailResponse.data);\r\n\r\n                        content('#bk_btn').remove();\r\n\r\n                        item.title = content('.newsTitle').text();\r\n                        item.description = content('article').html();\r\n                    } catch {\r\n                        // no-empty\r\n                    }\r\n                }\r\n\r\n                delete item.isNews;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'アニメ『ドロヘドロ』',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,mBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sBAAuB,qBAGxC,KAAM,OACN,YAAa,CAAC,WACd,UACA,IAAK,uBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAE3E,EAAU,yBACV,EAAS,GAAG,EAAQ,gBACpB,EAAa,GAAG,EAAQ,QAExB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,KAAM,CAC1B,QAAS,KAGT,EAAQ,EAAE,QACT,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAO,EAAK,KAAK,aAAa,OAC9B,EAAS,qBAAqB,KAAK,GAEzC,MAAO,CACH,MAAO,EAAK,KAAK,SAAS,OAC1B,QAAS,EAAU,EAAK,KAAK,QAAQ,QACrC,KAAM,GAAG,IAAU,EAAS,SAAS,IAAS,KAC9C,YAgCZ,MA5BA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,EAAK,OACL,GAAI,CACA,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAEpC,EAAQ,WAAW,SAEnB,EAAK,MAAQ,EAAQ,cAAc,OACnC,EAAK,YAAc,EAAQ,WAAW,YAClC,EAOZ,OAFA,OAAO,EAAK,OAEL,MAKZ,CACH,MAAO,aACP,KAAM,EACN,KAAM"}