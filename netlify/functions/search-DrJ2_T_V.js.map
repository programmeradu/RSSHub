{"version":3,"file":"search-DrJ2_T_V.js","names":[],"sources":["../../lib/routes/sogou/search.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\n\r\nconst renderDescription = (description, images) => art(path.join(__dirname, './templates/description.art'), { description, images });\r\n\r\nexport const route: Route = {\r\n    path: '/search/:keyword',\r\n    categories: ['other'],\r\n    example: '/sogou/search/rss',\r\n    parameters: { keyword: '搜索关键词' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '搜索',\r\n    maintainers: ['CaoMeiYouRen'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const keyword = ctx.req.param('keyword');\r\n    const url = `https://www.sogou.com/web?query=${encodeURIComponent(keyword)}`;\r\n    const key = `sogou-search:${url}`;\r\n    const items = await cache.tryGet(\r\n        key,\r\n        async () => {\r\n            const response = (await got(url)).data;\r\n            const $ = load(response);\r\n            const result = $('#main');\r\n            return result\r\n                .find('.vrwrap')\r\n                .toArray()\r\n                .map((el) => {\r\n                    const element = $(el);\r\n                    const imgs = element\r\n                        .find('img')\r\n                        .toArray()\r\n                        .map((el2) => $(el2).attr('src'));\r\n                    const link = element.find('h3 a').first().attr('href');\r\n                    const title = element.find('h3').first().text();\r\n                    const description = element.find('.text-layout').first().text() || element.find('.space-txt').first().text() || element.find('[class^=\"translate\"]').first().text();\r\n                    const author = element.find('.citeurl span').first().text() || '';\r\n                    const pubDate = parseDate(element.find('.citeurl .cite-date').first().text().trim());\r\n                    return {\r\n                        link,\r\n                        title,\r\n                        description: renderDescription(description, imgs),\r\n                        author,\r\n                        pubDate,\r\n                    };\r\n                })\r\n                .filter((e) => e?.link);\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    return {\r\n        title: `${keyword} - 搜狗搜索`,\r\n        description: `${keyword} - 搜狗搜索`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"yeAUA,MAAM,GAAqB,EAAa,IAAW,EAAI,EAAA,KAAA,EAAA,sCAAqD,CAAE,cAAa,WAE9G,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,SACb,QAAS,oBACT,WAAY,CAAE,QAAS,SACvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,YAAa,CAAC,gBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,EAAI,IAAI,MAAM,WACxB,EAAM,mCAAmC,mBAAmB,KAC5D,EAAM,gBAAgB,IACtB,EAAQ,MAAM,EAAM,OACtB,EACA,SAAY,CACR,IAAM,GAAY,MAAM,EAAI,IAAM,KAC5B,EAAI,EAAK,GACT,EAAS,EAAE,SACjB,OAAO,EACF,KAAK,WACL,UACA,IAAK,GAAO,CACT,IAAM,EAAU,EAAE,GACZ,EAAO,EACR,KAAK,OACL,UACA,IAAK,GAAQ,EAAE,GAAK,KAAK,QACxB,EAAO,EAAQ,KAAK,QAAQ,QAAQ,KAAK,QACzC,EAAQ,EAAQ,KAAK,MAAM,QAAQ,OACnC,EAAc,EAAQ,KAAK,gBAAgB,QAAQ,QAAU,EAAQ,KAAK,cAAc,QAAQ,QAAU,EAAQ,KAAK,wBAAwB,QAAQ,OACvJ,EAAS,EAAQ,KAAK,iBAAiB,QAAQ,QAAU,GACzD,EAAU,EAAU,EAAQ,KAAK,uBAAuB,QAAQ,OAAO,QAC7E,MAAO,CACH,OACA,QACA,YAAa,EAAkB,EAAa,GAC5C,SACA,aAGP,OAAQ,GAAM,GAAG,OAE1B,EAAO,MAAM,YACb,IAGJ,MAAO,CACH,MAAO,GAAG,EAAQ,SAClB,YAAa,GAAG,EAAQ,SACxB,KAAM,EACN,KAAM"}