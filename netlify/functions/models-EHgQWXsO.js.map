{"version":3,"file":"models-EHgQWXsO.js","names":["MarkdownIt","route: Route","got","cache","data"],"sources":["../../lib/routes/modelscope/models.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport MarkdownIt from 'markdown-it';\r\nconst md = MarkdownIt({\r\n    html: true,\r\n    linkify: true,\r\n});\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/models',\r\n    categories: ['programming'],\r\n    example: '/modelscope/models',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['modelscope.cn/models'],\r\n        },\r\n    ],\r\n    name: '模型库',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'modelscope.cn/models',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://modelscope.cn';\r\n    const link = `${baseUrl}/models`;\r\n\r\n    const { data } = await got.put(`${baseUrl}/api/v1/dolphin/models`, {\r\n        json: { PageSize: ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 36, PageNumber: 1, SortBy: 'GmtModified', Target: '', SingleCriterion: [] },\r\n    });\r\n\r\n    const models = data.Data.Model.Models.map((model) => ({\r\n        title: model.ChineseName,\r\n        description: model.Description,\r\n        author: model.Organization.FullName,\r\n        link: `${link}/${model.Path}/${model.Name}`,\r\n        pubDate: parseDate(model.CreatedTime, 'X'),\r\n        category: [...new Set([...model.Tasks.map((task) => task.ChineseName), ...model.Tags])],\r\n        slug: `/${model.Path}/${model.Name}`,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        models.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data } = await got(`${baseUrl}/api/v1/models${item.slug}`);\r\n\r\n                const content = data.Data.ReadMeContent.replaceAll(/img src=\"(?!http)(.*?)\"/g, `img src=\"${baseUrl}/api/v1/models${item.slug}/repo?Revision=master&FilePath=$1&View=true\"`);\r\n                item.description = md.render(content);\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '模型库首页 · 魔搭社区',\r\n        description: 'ModelScope——汇聚各领域先进的机器学习模型，提供模型探索体验、推理、训练、部署和应用的一站式服务。在这里，共建模型开源社区，发现、学习、定制和分享心仪的模型。',\r\n        image: 'https://g.alicdn.com/sail-web/maas/0.8.10/favicon/128.ico',\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oWAIA,MAAM,EAAKA,EAAW,CAClB,KAAM,GACN,QAAS,KAIAC,EAAe,CACxB,KAAM,UACN,WAAY,CAAC,eACb,QAAS,qBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,MACN,YAAa,CAAC,UACd,UACA,IAAK,wBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,wBACV,EAAO,GAAG,EAAQ,SAElB,CAAE,QAAS,MAAMC,EAAI,IAAI,GAAG,EAAQ,wBAAyB,CAC/D,KAAM,CAAE,SAAU,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAAI,WAAY,EAAG,OAAQ,cAAe,OAAQ,GAAI,gBAAiB,MAG1J,EAAS,EAAK,KAAK,MAAM,OAAO,IAAK,IAAW,CAClD,MAAO,EAAM,YACb,YAAa,EAAM,YACnB,OAAQ,EAAM,aAAa,SAC3B,KAAM,GAAG,EAAK,GAAG,EAAM,KAAK,GAAG,EAAM,OACrC,QAAS,EAAU,EAAM,YAAa,KACtC,SAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAM,MAAM,IAAK,GAAS,EAAK,aAAc,GAAG,EAAM,QAChF,KAAM,IAAI,EAAM,KAAK,GAAG,EAAM,UAG5B,EAAQ,MAAM,QAAQ,IACxB,EAAO,IAAK,GACRC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAA,GAAS,MAAMD,EAAI,GAAG,EAAQ,gBAAgB,EAAK,QAErD,EAAUE,EAAK,KAAK,cAAc,WAAW,2BAA4B,YAAY,EAAQ,gBAAgB,EAAK,KAAK,+CAE7H,MADA,GAAK,YAAc,EAAG,OAAO,GACtB,MAKnB,MAAO,CACH,MAAO,eACP,YAAa,uFACb,MAAO,4DACP,OACA,KAAM"}