{"version":3,"file":"notice-DTLxABnx.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/nankai/notice.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const route: Route = {\r\n    path: '/notice',\r\n    categories: ['university'],\r\n    example: '/nankai/notice',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.nankai.edu.cn', 'www.nankai.edu.cn/157/list.htm'],\r\n        },\r\n    ],\r\n    name: '通知公告',\r\n    maintainers: ['vicguo0724'],\r\n    handler: async () => {\r\n        const baseUrl = 'https://www.nankai.edu.cn';\r\n        const listUrl = `${baseUrl}/157/list.htm`;\r\n        const { data: response } = await got(listUrl);\r\n        const $ = load(response);\r\n\r\n        const list = $('ul.newslist li')\r\n            .toArray()\r\n            .map((item) => {\r\n                const $item = $(item);\r\n                const $time = $item.find('.time');\r\n                const day = $time.find('.time-d').text().trim();\r\n                const monthYear = $time.contents().last().text().trim();\r\n                const pubDate = timezone(parseDate(`${monthYear}-${day}`, 'YYYY-MM-DD'), +8);\r\n\r\n                const $link = $item.find('.tit a');\r\n                let href = $link.attr('href') || '';\r\n                href = href.startsWith('http') ? href : new URL(href, baseUrl).href;\r\n\r\n                return {\r\n                    title: $link.text().trim(),\r\n                    link: href,\r\n                    pubDate,\r\n                };\r\n            });\r\n\r\n        const items = await Promise.all(\r\n            list.map((item) =>\r\n                cache.tryGet(item.link, async () => {\r\n                    try {\r\n                        // 判断link如果是https://xb.nankai.edu.cn/的则为校内访问的\r\n                        if (item.link.includes('xb.nankai.edu.cn')) {\r\n                            item.description = '该通知可能需要校内访问权限';\r\n                        } else {\r\n                            const { data: detailResponse } = await got(item.link);\r\n                            const $detail = load(detailResponse);\r\n\r\n                            // 提取正文内容\r\n                            const content = $detail('.wp_articlecontent').html() || '';\r\n                            item.description = content;\r\n                        }\r\n                    } catch {\r\n                        // 如果提取正文内容失败，则返回默认内容\r\n                        item.description = '正文内容获取失败';\r\n                    }\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n\r\n        return {\r\n            title: '南开大学通知公告',\r\n            link: listUrl,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"0ZAOA,MAAaA,EAAe,CACxB,KAAM,UACN,WAAY,CAAC,cACb,QAAS,iBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oBAAqB,oCAGtC,KAAM,OACN,YAAa,CAAC,cACd,QAAS,SAAY,CACjB,IAAM,EAAU,4BACV,EAAU,GAAG,EAAQ,eACrB,CAAE,KAAM,GAAa,MAAMC,EAAI,GAC/B,EAAI,EAAK,GAET,EAAO,EAAE,kBACV,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,SACnB,EAAM,EAAM,KAAK,WAAW,OAAO,OACnC,EAAY,EAAM,WAAW,OAAO,OAAO,OAC3C,EAAU,EAAS,EAAU,GAAG,EAAU,GAAG,IAAO,cAAe,GAEnE,EAAQ,EAAM,KAAK,UACrB,EAAO,EAAM,KAAK,SAAW,GAGjC,MAFA,GAAO,EAAK,WAAW,QAAU,EAAO,IAAI,IAAI,EAAM,GAAS,KAExD,CACH,MAAO,EAAM,OAAO,OACpB,KAAM,EACN,aAIN,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CAEA,GAAI,EAAK,KAAK,SAAS,oBACnB,EAAK,YAAc,oBAChB,CACH,GAAM,CAAE,KAAM,GAAmB,MAAMD,EAAI,EAAK,MAC1C,EAAU,EAAK,GAGf,EAAU,EAAQ,sBAAsB,QAAU,GACxD,EAAK,YAAc,QAEnB,CAEJ,EAAK,YAAc,WAEvB,OAAO,MAKnB,MAAO,CACH,MAAO,WACP,KAAM,EACN,KAAM"}