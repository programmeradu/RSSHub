{"version":3,"file":"ulapia-CgtVMkqa.js","names":["route: Route","got"],"sources":["../../lib/routes/ulapia/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst rootUrl = 'http://www.ulapia.com';\r\n\r\nconst titleMap = {\r\n    brokerage_news: '券商晨报',\r\n    stock_research: '个股研报',\r\n    industry_research: '行业研报',\r\n    strategy_research: '策略研报',\r\n    macro_research: '宏观研报',\r\n    ipo_research: 'IPO研报',\r\n};\r\n\r\nconst selectorMap = {\r\n    brokerage_news: 'div.col-md-4',\r\n    stock_research: 'div.col-md-6',\r\n    industry_research: 'div.col-md-6',\r\n    strategy_research: 'div.col-md-6',\r\n    macro_research: 'div.col-md-6',\r\n    ipo_research: 'div.col-md-6',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/reports/:category?',\r\n    categories: ['finance'],\r\n    example: '/ulapia/reports/stock_research',\r\n    parameters: { category: '频道类型，默认为券商晨报（今日晨报）' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '频道',\r\n    maintainers: ['Fatpandac'],\r\n    handler,\r\n    description: `|     个股研报    |      行业研报      |      策略研报      |     宏观研报    |    新股研报   | 券商晨报（今日晨报） |\r\n| :-------------: | :----------------: | :----------------: | :-------------: | :-----------: | :------------------: |\r\n| stock\\_research | industry\\_research | strategy\\_research | macro\\_research | ipo\\_research |    brokerage\\_news   |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category') ?? 'brokerage_news';\r\n    const url = `${rootUrl}/reports/${category}`;\r\n\r\n    const response = await got.get(url);\r\n    const $ = load(response.data);\r\n    const items = $(String(selectorMap[category]))\r\n        .toArray()\r\n        .filter((item) => $(item).find('img').attr('src'))\r\n        .map((item) => ({\r\n            title: `${$(item).find('strong').text()}  ${$(item).find('h5.mb-1').text()}`,\r\n            author: $(item).find('div.col.p-8.d-flex.px-3.py-3.flex-column.position-static > div:nth-child(4) > span:nth-child(2)').text(),\r\n            link: $(item).find('h5.mb-1 > a').attr('href'),\r\n            description: `<img src=\"${$(item).find('img').attr('src').split('!')[0]}\">`,\r\n            pubDate: parseDate($(item).find('div.mb-0.text-muted').last().text().split(':')[1], 'YYYY-MM-DD'),\r\n        }));\r\n\r\n    return {\r\n        title: ` ulapia - ${titleMap[category]}`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oTAKA,MAEM,EAAW,CACb,eAAgB,OAChB,eAAgB,OAChB,kBAAmB,OACnB,kBAAmB,OACnB,eAAgB,OAChB,aAAc,SAGZ,EAAc,CAChB,eAAgB,eAChB,eAAgB,eAChB,kBAAmB,eACnB,kBAAmB,eACnB,eAAgB,eAChB,aAAc,gBAGLA,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,WACb,QAAS,iCACT,WAAY,CAAE,SAAU,sBACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,YAAa,CAAC,aACd,UACA,YAAa;;mHAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,iBACxC,EAAM,iCAAsB,IAE5B,EAAW,MAAMC,EAAI,IAAI,GACzB,EAAI,EAAK,EAAS,MAClB,EAAQ,EAAE,OAAO,EAAY,KAC9B,UACA,OAAQ,GAAS,EAAE,GAAM,KAAK,OAAO,KAAK,QAC1C,IAAK,IAAU,CACZ,MAAO,GAAG,EAAE,GAAM,KAAK,UAAU,OAAO,IAAI,EAAE,GAAM,KAAK,WAAW,SACpE,OAAQ,EAAE,GAAM,KAAK,mGAAmG,OACxH,KAAM,EAAE,GAAM,KAAK,eAAe,KAAK,QACvC,YAAa,aAAa,EAAE,GAAM,KAAK,OAAO,KAAK,OAAO,MAAM,KAAK,GAAG,IACxE,QAAS,EAAU,EAAE,GAAM,KAAK,uBAAuB,OAAO,OAAO,MAAM,KAAK,GAAI,iBAG5F,MAAO,CACH,MAAO,aAAa,EAAS,KAC7B,KAAM,EACN,KAAM"}