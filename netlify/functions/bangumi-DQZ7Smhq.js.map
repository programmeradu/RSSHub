{"version":3,"file":"bangumi-DQZ7Smhq.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/bangumi.moe/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { getSubPath } from '@/utils/common-utils';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/*',\r\n    categories: ['anime'],\r\n    radar: [\r\n        {\r\n            source: ['bangumi.moe/'],\r\n        },\r\n    ],\r\n    name: 'Latest',\r\n    example: '/bangumi.moe',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'bangumi.moe/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const isLatest = getSubPath(ctx) === '/';\r\n    const rootUrl = 'https://bangumi.moe';\r\n\r\n    let response;\r\n    let tag_id = [];\r\n\r\n    if (isLatest) {\r\n        const apiUrl = `${rootUrl}/api/torrent/latest`;\r\n\r\n        response = await got({\r\n            method: 'get',\r\n            url: apiUrl,\r\n        });\r\n    } else {\r\n        const tagUrl = `${rootUrl}/api/tag/search`;\r\n        const torrentUrl = `${rootUrl}/api/torrent/search`;\r\n\r\n        const params = getSubPath(ctx).split('/').slice(2);\r\n\r\n        tag_id = await Promise.all(\r\n            params.map((param) =>\r\n                cache.tryGet(param, async () => {\r\n                    const paramResponse = await got({\r\n                        method: 'post',\r\n                        url: tagUrl,\r\n                        json: {\r\n                            name: decodeURIComponent(param),\r\n                            keywords: true,\r\n                            multi: true,\r\n                        },\r\n                    });\r\n\r\n                    return paramResponse.data.found ? paramResponse.data.tag.map((tag) => tag._id)[0] : '';\r\n                })\r\n            )\r\n        );\r\n\r\n        response = await got({\r\n            method: 'post',\r\n            url: torrentUrl,\r\n            json: {\r\n                tag_id,\r\n            },\r\n        });\r\n    }\r\n\r\n    let items =\r\n        response.data.torrents?.slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 30).map((item) => ({\r\n            title: item.title,\r\n            link: `${rootUrl}/torrent/${item._id}`,\r\n            description: item.introduction,\r\n            pubDate: parseDate(item.publish_time),\r\n            enclosure_url: item.magnet,\r\n            enclosure_type: 'application/x-bittorrent',\r\n            category: item.tag_ids,\r\n        })) ?? [];\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'post',\r\n                    url: `${rootUrl}/api/tag/fetch`,\r\n                    json: {\r\n                        _ids: item.category,\r\n                    },\r\n                });\r\n\r\n                item.category = [];\r\n\r\n                for (const tag of detailResponse.data) {\r\n                    for (const t of tag.synonyms) {\r\n                        item.category.push(t);\r\n                    }\r\n                }\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '萌番组 Bangumi Moe',\r\n        link: isLatest || items.length === 0 ? rootUrl : `${rootUrl}/search/${tag_id.join('+')}`,\r\n        item: items,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"iYAMA,MAAaA,EAAe,CACxB,KAAM,KACN,WAAY,CAAC,SACb,MAAO,CACH,CACI,OAAQ,CAAC,kBAGjB,KAAM,SACN,QAAS,eACT,YAAa,CAAC,WACd,UACA,IAAK,gBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAW,KAAS,IAC/B,EAAU,sBAEZ,EACA,EAAS,GAEb,GAAI,EAAU,CACV,IAAM,EAAS,GAAG,EAAQ,qBAE1B,EAAW,MAAMC,EAAI,CACjB,OAAQ,MACR,IAAK,QAEN,CACH,IAAM,EAAS,GAAG,EAAQ,iBACpB,EAAa,GAAG,EAAQ,qBAExB,EAAS,EAAW,GAAK,MAAM,KAAK,MAAM,GAEhD,EAAS,MAAM,QAAQ,IACnB,EAAO,IAAK,GACRC,EAAM,OAAO,EAAO,SAAY,CAC5B,IAAM,EAAgB,MAAMD,EAAI,CAC5B,OAAQ,OACR,IAAK,EACL,KAAM,CACF,KAAM,mBAAmB,GACzB,SAAU,GACV,MAAO,MAIf,OAAO,EAAc,KAAK,MAAQ,EAAc,KAAK,IAAI,IAAK,GAAQ,EAAI,KAAK,GAAK,OAKhG,EAAW,MAAMA,EAAI,CACjB,OAAQ,OACR,IAAK,EACL,KAAM,CACF,YAKZ,IAAI,EACA,EAAS,KAAK,UAAU,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,IAAI,IAAK,IAAU,CACnH,MAAO,EAAK,MACZ,KAAM,GAAG,EAAQ,WAAW,EAAK,MACjC,YAAa,EAAK,aAClB,QAAS,EAAU,EAAK,cACxB,cAAe,EAAK,OACpB,eAAgB,2BAChB,SAAU,EAAK,YACZ,GA0BX,MAxBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,OACR,IAAK,GAAG,EAAQ,gBAChB,KAAM,CACF,KAAM,EAAK,YAInB,EAAK,SAAW,GAEhB,IAAK,IAAM,KAAO,EAAe,KAC7B,IAAK,IAAM,KAAK,EAAI,SAChB,EAAK,SAAS,KAAK,GAI3B,OAAO,MAKZ,CACH,MAAO,kBACP,KAAM,GAAY,EAAM,SAAW,EAAI,EAAU,GAAG,EAAQ,UAAU,EAAO,KAAK,OAClF,KAAM,EACN,WAAY"}