{"version":3,"file":"contributors-Dq1APMhG.js","names":["route: Route","got","response"],"sources":["../../lib/routes/github/contributors.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/contributors/:user/:repo/:order?/:anon?',\r\n    categories: ['programming'],\r\n    example: '/github/contributors/DIYgod/RSSHub',\r\n    parameters: { user: 'User name', repo: 'Repo name', order: 'Sort order by commit numbers, desc and asc (descending by default)', anon: 'Show anonymous users. Defaults to no, use any values for yes.' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/:user/:repo/graphs/contributors', 'github.com/:user/:repo'],\r\n            target: '/contributors/:user/:repo',\r\n        },\r\n    ],\r\n    name: 'Repo Contributors',\r\n    maintainers: ['zoenglinghou'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { user, repo, order, anon } = ctx.req.param();\r\n\r\n    const host = `https://github.com/${user}/${repo}`;\r\n    const url = `https://api.github.com/repos/${user}/${repo}/contributors?` + (anon ? 'anon=1' : '');\r\n\r\n    // Use token if available\r\n    const headers = {};\r\n    if (config.github && config.github.access_token) {\r\n        headers.Authorization = `token ${config.github.access_token}`;\r\n    }\r\n\r\n    // First page\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n        headers,\r\n    });\r\n    let data = response.data;\r\n\r\n    try {\r\n        // Get total page number\r\n        const last_page_link = response.headers.link.split(',').find((elem) => elem.includes('\"last\"'));\r\n        const url_base = last_page_link.match(/<(.*)page=\\d*/)[1];\r\n        const page_count = Number(last_page_link.match(/page=(\\d*)/)[1]);\r\n\r\n        const generate_array = (n) => Array.from({ length: n - 1 }).map((_, index) => index + 2);\r\n        const page_array = generate_array(page_count);\r\n\r\n        // Get everypage\r\n        const tasks = page_array.map(async (page) => {\r\n            const response = await got({\r\n                method: 'get',\r\n                url: `${url_base}page=${page}`,\r\n                headers,\r\n            });\r\n            data = [...data, ...response.data];\r\n        });\r\n        await Promise.all(tasks);\r\n    } catch (error) {\r\n        // If only one page\r\n\r\n        // Other errors\r\n        if (!(error instanceof TypeError)) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // Sort by commits\r\n    data.sort((a, b) => a.contributions - b.contributions);\r\n    if (order !== 'asc') {\r\n        data.reverse();\r\n    }\r\n\r\n    const items = data.map((item) =>\r\n        item.type === 'Anonymous'\r\n            ? {\r\n                  title: `Contributor: ${item.name}`,\r\n                  description: `<p>Anonymous contributor</p><p>Name: ${item.name}</p><p>E-mail: ${item.email}</p><p>Contributions: ${item.contributions}</p>`,\r\n                  guid: `anon-${item.name}`,\r\n              }\r\n            : {\r\n                  title: `Contributor: ${item.login}`,\r\n                  description: `<img src=\"${item.avatar_url}\"></img><p><a href=\"${item.html_url}\">${item.login}</a></p><p>Contributions: ${item.contributions}</p>`,\r\n                  link: item.html_url,\r\n                  guid: item.id,\r\n              }\r\n    );\r\n\r\n    return {\r\n        title: `${user}/${repo} Contributors`,\r\n        link: `${host}/graphs/contributors`,\r\n        description: `New contributors for ${user}/${repo}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"iPAIA,MAAaA,EAAe,CACxB,KAAM,2CACN,WAAY,CAAC,eACb,QAAS,qCACT,WAAY,CAAE,KAAM,YAAa,KAAM,YAAa,MAAO,qEAAsE,KAAM,iEACvI,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,6CAA8C,0BACvD,OAAQ,8BAGhB,KAAM,oBACN,YAAa,CAAC,gBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,OAAM,OAAM,QAAO,QAAS,EAAI,IAAI,QAEtC,EAAO,sBAAsB,EAAK,GAAG,IACrC,EAAM,gCAAgC,EAAK,GAAG,EAAK,iBAAmB,EAAO,SAAW,IAGxF,EAAU,GACZ,EAAO,QAAU,EAAO,OAAO,eAC/B,EAAQ,cAAgB,SAAS,EAAO,OAAO,gBAInD,IAAM,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,MACA,YAEA,EAAO,EAAS,KAEpB,GAAI,CAEA,IAAM,EAAiB,EAAS,QAAQ,KAAK,MAAM,KAAK,KAAM,GAAS,EAAK,SAAS,WAC/E,EAAW,EAAe,MAAM,iBAAiB,GACjD,EAAa,OAAO,EAAe,MAAM,cAAc,IAEvD,EAAkB,GAAM,MAAM,KAAK,CAAE,OAAQ,EAAI,IAAK,KAAK,EAAG,IAAU,EAAQ,GAChF,EAAa,EAAe,GAG5B,EAAQ,EAAW,IAAI,KAAO,IAAS,CACzC,IAAMC,EAAW,MAAMD,EAAI,CACvB,OAAQ,MACR,IAAK,GAAG,EAAS,OAAO,IACxB,YAEJ,EAAO,CAAC,GAAG,EAAM,GAAGC,EAAS,QAEjC,MAAM,QAAQ,IAAI,SACb,EAAO,CAIZ,GAAI,EAAE,aAAiB,WACnB,MAAM,EAKd,EAAK,MAAM,EAAG,IAAM,EAAE,cAAgB,EAAE,eACpC,IAAU,OACV,EAAK,UAGT,IAAM,EAAQ,EAAK,IAAK,GACpB,EAAK,OAAS,YACR,CACI,MAAO,gBAAgB,EAAK,OAC5B,YAAa,wCAAwC,EAAK,KAAK,iBAAiB,EAAK,MAAM,wBAAwB,EAAK,cAAc,MACtI,KAAM,QAAQ,EAAK,QAEvB,CACI,MAAO,gBAAgB,EAAK,QAC5B,YAAa,aAAa,EAAK,WAAW,sBAAsB,EAAK,SAAS,IAAI,EAAK,MAAM,4BAA4B,EAAK,cAAc,MAC5I,KAAM,EAAK,SACX,KAAM,EAAK,KAIzB,MAAO,CACH,MAAO,GAAG,EAAK,GAAG,EAAK,eACvB,KAAM,GAAG,EAAK,sBACd,YAAa,wBAAwB,EAAK,GAAG,IAC7C,KAAM"}