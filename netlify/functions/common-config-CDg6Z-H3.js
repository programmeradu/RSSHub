import{parseDate}from"./parse-date-Bgabdhlb.js";import{ofetch_default}from"./ofetch-Bzt0BXUH.js";import{timezone}from"./timezone-BrNu6iXe.js";import{load}from"cheerio";import iconv from"iconv-lite";function transElemText($,prop){let regex=/\$\((.*)\)/g,result=prop,parseDate$1=parseDate,timezone$1=timezone;return regex.test(result)&&(result=eval(result)),result}function replaceParams(data,prop,$){let regex=/%(.*)%/g,result=prop,group=regex.exec(prop);for(;group;)result=result.replace(group[0],transElemText($,data.params[group[1]])),group=regex.exec(prop);return result}function getProp(data,prop,$){let result=data;if(Array.isArray(prop))for(let e of prop)result=transElemText($,result[e]);else result=transElemText($,result[prop]);return replaceParams(data,result,$)}async function buildData(data){let response=await ofetch_default.raw(data.url),contentType=response.headers.get(`content-type`)||``,charset=`utf-8`;for(let attr of contentType.split(`;`))attr.includes(`charset=`)&&(charset=(attr.split(`=`).pop()||`utf-8`).toLowerCase());let responseData=charset===`utf-8`?response._data:iconv.decode(await ofetch_default(data.url,{responseType:`buffer`}),charset),$=load(responseData),$item=$(data.item.item);return{link:data.link,title:getProp(data,`title`,$),description:getProp(data,`description`,$),allowEmpty:data.allowEmpty||!1,item:$item.toArray().map(e=>{let $elem=selector=>$(e).find(selector);return{title:getProp(data,[`item`,`title`],$elem),description:getProp(data,[`item`,`description`],$elem),pubDate:getProp(data,[`item`,`pubDate`],$elem),link:getProp(data,[`item`,`link`],$elem),guid:getProp(data,[`item`,`guid`],$elem)}})}}var common_config_default=buildData;export{common_config_default};
//# sourceMappingURL=common-config-CDg6Z-H3.js.map