{"version":3,"file":"decrypt-Dp1qBTI3.js","names":["route: Route","parser","cache","error: any","ofetch"],"sources":["../../lib/routes/decrypt/index.ts"],"sourcesContent":["import { Route, Data } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { load } from 'cheerio';\r\nimport logger from '@/utils/logger';\r\nimport parser from '@/utils/rss-parser';\r\n\r\nexport const route: Route = {\r\n    path: '/',\r\n    categories: ['finance'],\r\n    example: '/decrypt',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'News',\r\n    maintainers: ['pseudoyu'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['decrypt.co/'],\r\n            target: '/',\r\n        },\r\n    ],\r\n    description: 'Get latest news from Decrypt.',\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20;\r\n    const rssUrl = 'https://decrypt.co/feed';\r\n\r\n    const feed = await parser.parseURL(rssUrl);\r\n\r\n    const items = await Promise.all(\r\n        feed.items\r\n            .filter((item) => item && item.link && !item.link.includes('/videos'))\r\n            .slice(0, limit)\r\n            .map((item) =>\r\n                cache.tryGet(`decrypt:article:${item.link}`, async () => {\r\n                    if (!item.link) {\r\n                        return {};\r\n                    }\r\n\r\n                    try {\r\n                        const result = await extractFullText(item.link);\r\n                        return {\r\n                            title: item.title || 'Untitled',\r\n                            link: item.link.split('?')[0], // Clean URL by removing query parameters\r\n                            pubDate: item.pubDate ? parseDate(item.pubDate) : undefined,\r\n                            description: result?.fullText ?? (item.content || ''),\r\n                            author: item.creator || 'Decrypt',\r\n                            category: result?.tags ? [...new Set([...(item.categories ?? []), ...result.tags])] : item.categories || [],\r\n                            guid: item.guid || item.link,\r\n                            image: result?.featuredImage ?? item.enclosure?.url,\r\n                        };\r\n                    } catch (error: any) {\r\n                        logger.warn(`Couldn't fetch full content for ${item.link}: ${error.message}`);\r\n\r\n                        // Fallback to RSS content\r\n                        return {\r\n                            title: item.title || 'Untitled',\r\n                            link: item.link.split('?')[0],\r\n                            pubDate: item.pubDate ? parseDate(item.pubDate) : undefined,\r\n                            description: item.content || '',\r\n                            author: item.creator || 'Decrypt',\r\n                            category: item.categories || [],\r\n                            guid: item.guid || item.link,\r\n                            image: item.enclosure?.url,\r\n                        };\r\n                    }\r\n                })\r\n            )\r\n    );\r\n\r\n    return {\r\n        title: feed.title || 'Decrypt',\r\n        link: feed.link || 'https://decrypt.co',\r\n        description: feed.description || 'Latest news from Decrypt',\r\n        item: items,\r\n        language: feed.language || 'en',\r\n        image: feed.image?.url,\r\n    } as Data;\r\n}\r\n\r\nasync function extractFullText(url: string): Promise<{ fullText: string; featuredImage: string; tags: string[] } | null> {\r\n    try {\r\n        const response = await ofetch(url);\r\n\r\n        const $ = load(response);\r\n\r\n        const nextData = JSON.parse($('script#__NEXT_DATA__').text());\r\n        const post = nextData.props.pageProps.post;\r\n\r\n        if (post.content.length) {\r\n            const fullText = `<img src=\"${post.featuredImage.src}\" alt=\"${post.featuredImage.alt}\">` + post.content;\r\n\r\n            return {\r\n                fullText,\r\n                featuredImage: post.featuredImage.src,\r\n                tags: post.tags.data.map((tag) => tag.name),\r\n            };\r\n        }\r\n\r\n        return null;\r\n    } catch (error) {\r\n        logger.error(`Error extracting full text from ${url}: ${error}`);\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"0YAQA,MAAaA,EAAe,CACxB,KAAM,IACN,WAAY,CAAC,WACb,QAAS,WACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,YACd,UACA,MAAO,CACH,CACI,OAAQ,CAAC,eACT,OAAQ,MAGhB,YAAa,iCAGjB,eAAe,EAAQ,EAAoB,CACvC,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAG3E,EAAO,MAAMC,EAAO,SAAS,2BAE7B,EAAQ,MAAM,QAAQ,IACxB,EAAK,MACA,OAAQ,GAAS,GAAQ,EAAK,MAAQ,CAAC,EAAK,KAAK,SAAS,YAC1D,MAAM,EAAG,GACT,IAAK,GACFC,EAAM,OAAO,mBAAmB,EAAK,OAAQ,SAAY,CACrD,GAAI,CAAC,EAAK,KACN,MAAO,GAGX,GAAI,CACA,IAAM,EAAS,MAAM,EAAgB,EAAK,MAC1C,MAAO,CACH,MAAO,EAAK,OAAS,WACrB,KAAM,EAAK,KAAK,MAAM,KAAK,GAC3B,QAAS,EAAK,QAAU,EAAU,EAAK,SAAW,IAAA,GAClD,YAAa,GAAQ,WAAa,EAAK,SAAW,IAClD,OAAQ,EAAK,SAAW,UACxB,SAAU,GAAQ,KAAO,CAAC,GAAG,IAAI,IAAI,CAAC,GAAI,EAAK,YAAc,GAAK,GAAG,EAAO,QAAU,EAAK,YAAc,GACzG,KAAM,EAAK,MAAQ,EAAK,KACxB,MAAO,GAAQ,eAAiB,EAAK,WAAW,WAE/CC,EAAY,CAIjB,OAHA,EAAO,KAAK,mCAAmC,EAAK,KAAK,IAAI,EAAM,WAG5D,CACH,MAAO,EAAK,OAAS,WACrB,KAAM,EAAK,KAAK,MAAM,KAAK,GAC3B,QAAS,EAAK,QAAU,EAAU,EAAK,SAAW,IAAA,GAClD,YAAa,EAAK,SAAW,GAC7B,OAAQ,EAAK,SAAW,UACxB,SAAU,EAAK,YAAc,GAC7B,KAAM,EAAK,MAAQ,EAAK,KACxB,MAAO,EAAK,WAAW,UAO/C,MAAO,CACH,MAAO,EAAK,OAAS,UACrB,KAAM,EAAK,MAAQ,qBACnB,YAAa,EAAK,aAAe,2BACjC,KAAM,EACN,SAAU,EAAK,UAAY,KAC3B,MAAO,EAAK,OAAO,KAI3B,eAAe,EAAgB,EAA0F,CACrH,GAAI,CACA,IAAM,EAAW,MAAMC,EAAO,GAExB,EAAI,EAAK,GAET,EAAW,KAAK,MAAM,EAAE,wBAAwB,QAChD,EAAO,EAAS,MAAM,UAAU,KAEtC,GAAI,EAAK,QAAQ,OAAQ,CACrB,IAAM,EAAW,aAAa,EAAK,cAAc,IAAI,SAAS,EAAK,cAAc,IAAI,IAAM,EAAK,QAEhG,MAAO,CACH,WACA,cAAe,EAAK,cAAc,IAClC,KAAM,EAAK,KAAK,KAAK,IAAK,GAAQ,EAAI,OAI9C,OAAO,WACF,EAAO,CAEZ,OADA,EAAO,MAAM,mCAAmC,EAAI,IAAI,KACjD"}