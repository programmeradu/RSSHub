{"version":3,"file":"threads-rtAJQbaH.js","names":["ofetch","NotFoundError","cache","route: Route","debugJson: any","ofetch","threadsData: ThreadItem[] | null","userData: ThreadUser"],"sources":["../../lib/routes/threads/utils.ts","../../lib/routes/threads/index.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport dayjs from 'dayjs';\r\nimport cache from '@/utils/cache';\r\nimport NotFoundError from '@/errors/types/not-found';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { JSDOM } from 'jsdom';\r\nimport { JSONPath } from 'jsonpath-plus';\r\n\r\nconst profileUrl = (user: string) => `https://www.threads.com/@${user}`;\r\nconst threadUrl = (code: string) => `https://www.threads.com/t/${code}`;\r\n\r\nconst USER_AGENT = 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1';\r\n\r\nconst extractTokens = async (user): Promise<{ lsd: string }> => {\r\n    const response = await ofetch(profileUrl(user), {\r\n        headers: {\r\n            'User-Agent': USER_AGENT,\r\n            Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\r\n            'Accept-Encoding': 'gzip, br',\r\n            'Accept-Language': 'zh-CN,zh;q=0.9',\r\n            'Cache-Control': 'no-cache',\r\n            Pragma: 'no-cache',\r\n            'Sec-Fetch-Dest': 'document',\r\n            'Sec-Fetch-Mode': 'navigate',\r\n            'Sec-Fetch-Site': 'none',\r\n            'Sec-Fetch-User': '?1',\r\n            'Upgrade-Insecure-Requests': '1',\r\n        },\r\n    });\r\n\r\n    const $ = load(response);\r\n    const data = $('script:contains(\"LSD\"):first').text();\r\n    const lsd = data.match(/\"LSD\",\\[],{\"token\":\"([\\w@-]+)\"},/)?.[1];\r\n\r\n    if (!lsd) {\r\n        throw new NotFoundError('LSD token not found');\r\n    }\r\n\r\n    return { lsd };\r\n};\r\n\r\nconst getUserId = (user: string): Promise<string> =>\r\n    cache\r\n        .tryGet(`threads:userId:${user}`, async () => {\r\n            const response = await ofetch(profileUrl(user), {\r\n                headers: {\r\n                    'User-Agent': USER_AGENT,\r\n                    Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\r\n                    'Accept-Encoding': 'gzip, br',\r\n                    'Accept-Language': 'zh-CN,zh;q=0.9',\r\n                    'Cache-Control': 'no-cache',\r\n                    Pragma: 'no-cache',\r\n                    'Sec-Fetch-Dest': 'document',\r\n                    'Sec-Fetch-Mode': 'navigate',\r\n                    'Sec-Fetch-Site': 'none',\r\n                    'Sec-Fetch-User': '?1',\r\n                    'Upgrade-Insecure-Requests': '1',\r\n                },\r\n            });\r\n\r\n            const dom = new JSDOM(response);\r\n\r\n            for (const el of dom.window.document.querySelectorAll('script[data-sjs]')) {\r\n                try {\r\n                    const data = JSONPath({\r\n                        path: '$..user_id',\r\n                        json: JSON.parse(el.textContent || ''),\r\n                    });\r\n\r\n                    if (data?.[0]) {\r\n                        return data[0];\r\n                    }\r\n                } catch {\r\n                    // Skip invalid JSON\r\n                }\r\n            }\r\n\r\n            throw new NotFoundError('User ID not found');\r\n        })\r\n        .then((result): string => {\r\n            if (!result || typeof result !== 'string') {\r\n                throw new TypeError('Invalid user ID type');\r\n            }\r\n            return result;\r\n        });\r\n\r\nconst hasMedia = (post) => post.image_versions2 || post.carousel_media || post.video_versions;\r\n\r\nconst buildMedia = (post) => {\r\n    let html = '';\r\n\r\n    if (post.carousel_media) {\r\n        for (const media of post.carousel_media) {\r\n            const firstImage = media.image_versions2?.candidates[0];\r\n            const firstVideo = media.video_versions?.[0];\r\n            html += firstVideo ? `<video controls autoplay loop poster=\"${firstImage.url}\"><source src=\"${firstVideo.url}\"/></video>` : `<img src=\"${firstImage.url}\"/>`;\r\n        }\r\n    } else {\r\n        const mainImage = post.image_versions2?.candidates?.[0];\r\n        const mainVideo = post.video_versions?.[0];\r\n        if (mainImage) {\r\n            html += mainVideo ? `<video controls autoplay loop poster=\"${mainImage.url}\"><source src=\"${mainVideo.url}\"/></video>` : `<img src=\"${mainImage.url}\"/>`;\r\n        }\r\n    }\r\n\r\n    return html;\r\n};\r\n\r\nconst buildContent = (item, options) => {\r\n    let title = '';\r\n    let description = '';\r\n    const quotedPost = item.post.text_post_app_info?.share_info?.quoted_post;\r\n    const repostedPost = item.post.text_post_app_info?.share_info?.reposted_post;\r\n    const isReply = item.post.text_post_app_info?.reply_to_author;\r\n    const embededPost = quotedPost ?? repostedPost;\r\n\r\n    if (options.showAuthorInTitle) {\r\n        title += `@${item.post.user?.username}: `;\r\n    }\r\n\r\n    if (options.showAuthorInDesc) {\r\n        description += '<p>';\r\n        if (options.showAuthorAvatarInDesc) {\r\n            description += `<img src=\"${item.post.user?.profile_pic_url}\" width=\"48px\" height=\"48px\"> `;\r\n        }\r\n        description += `<strong>@${item.post.user?.username}</strong>`;\r\n        if (embededPost) {\r\n            description += options.showEmojiForQuotesAndReply ? ' üîÅ' : ' quoted';\r\n        } else if (isReply) {\r\n            description += options.showEmojiForQuotesAndReply ? ' ‚Ü©Ô∏è' : ' replied';\r\n        }\r\n        description += ':</p>';\r\n    }\r\n\r\n    if (item.post.caption?.text) {\r\n        title += item.post.caption?.text;\r\n        description += `<p>${item.post.caption?.text}</p>`;\r\n    }\r\n\r\n    if (hasMedia(item.post)) {\r\n        description += `<p>${buildMedia(item.post)}</p>`;\r\n    }\r\n\r\n    if (embededPost) {\r\n        if (options.showQuotedInTitle) {\r\n            title += options.showEmojiForQuotesAndReply ? ' üîÅ ' : ' QT: ';\r\n            title += `@${embededPost.user?.username}: `;\r\n            title += `\"${embededPost.caption?.text}\"`;\r\n        }\r\n        description += '<blockquote>';\r\n        description += `<p>${embededPost.caption?.text}</p>`;\r\n        if (hasMedia(embededPost)) {\r\n            description += `<p>${buildMedia(embededPost)}</p>`;\r\n        }\r\n        description += '‚Äî ';\r\n        if (options.showQuotedAuthorAvatarInDesc) {\r\n            description += `<img src=\"${embededPost.user?.profile_pic_url}\" width=\"24px\" height=\"24px\"> `;\r\n        }\r\n        description += `@${embededPost.user?.username} ‚Äî `;\r\n        description += `<a href=\"${threadUrl(embededPost.code)}\">${dayjs(embededPost.taken_at, 'X').toString()}</a>`;\r\n        description += '</blockquote>';\r\n    }\r\n    return { title, description };\r\n};\r\n\r\nexport { profileUrl, threadUrl, extractTokens, getUserId, buildContent };\r\n","import { Route, ViewType } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { threadUrl, profileUrl, extractTokens, getUserId, buildContent } from './utils';\r\nimport { JSDOM } from 'jsdom';\r\nimport { JSONPath } from 'jsonpath-plus';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const route: Route = {\r\n    path: '/:user/:routeParams?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/threads/zuck',\r\n    parameters: {\r\n        user: 'Username',\r\n        routeParams: {\r\n            description: `Extra parameters, see the table below\r\nSpecify options (in the format of query string) in parameter \\`routeParams\\` to control some extra features for threads\r\n\r\n| Key                            | Description                                                                                                                  | Accepts                | Defaults to |\r\n| ------------------------------ | ---------------------------------------------------------------------------------------------------------------------------- | ---------------------- | ----------- |\r\n| \\`showAuthorInTitle\\`            | Show author name in title                                                                                                    | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`true\\`      |\r\n| \\`showAuthorInDesc\\`             | Show author name in description (RSS body)                                                                                   | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`true\\`      |\r\n| \\`showQuotedAuthorAvatarInDesc\\` | Show avatar of quoted author in description (RSS body) (Not recommended if your RSS reader extracts images from description) | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`false\\`     |\r\n| \\`showAuthorAvatarInDesc\\`       | Show avatar of author in description (RSS body) (Not recommended if your RSS reader extracts images from description)        | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`falseP\\`    |\r\n| \\`showEmojiForQuotesAndReply\\`   | Use \"üîÅ\" instead of \"QT\", \"‚Ü©Ô∏è\" instead of \"Re\"                                                                               | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`true\\`      |\r\n| \\`showQuotedInTitle\\`            | Show quoted tweet in title                                                                                                   | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`true\\`      |\r\n| \\`replies\\`                      | Show replies                                                                                                                 | \\`0\\`/\\`1\\`/\\`true\\`/\\`false\\` | \\`true\\`      |`,\r\n        },\r\n    },\r\n    name: 'User timeline',\r\n    maintainers: ['ninboy', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { user, routeParams } = ctx.req.param();\r\n    const { lsd } = await extractTokens(user);\r\n    const userId = await getUserId(user);\r\n\r\n    const params = new URLSearchParams(routeParams);\r\n    const debugJson: any = {\r\n        params: routeParams,\r\n        lsd,\r\n    };\r\n\r\n    const options = {\r\n        showAuthorInTitle: params.get('showAuthorInTitle') ?? true,\r\n        showAuthorInDesc: params.get('showAuthorInDesc') ?? true,\r\n        showAuthorAvatarInDesc: params.get('showAuthorAvatarInDesc') ?? false,\r\n        showQuotedInTitle: params.get('showQuotedInTitle') ?? true,\r\n        showQuotedAuthorAvatarInDesc: params.get('showQuotedAuthorAvatarInDesc') ?? false,\r\n        showEmojiForQuotesAndReply: params.get('showEmojiForQuotesAndReply') ?? true,\r\n        replies: params.get('replies') ?? false,\r\n    };\r\n\r\n    const response = await ofetch(profileUrl(user), {\r\n        headers: {\r\n            'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1',\r\n            Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\r\n            'Accept-Encoding': 'gzip, br',\r\n            'Accept-Language': 'zh-CN,zh;q=0.9',\r\n            'Cache-Control': 'no-cache',\r\n            Pragma: 'no-cache',\r\n            'Sec-Fetch-Dest': 'document',\r\n            'Sec-Fetch-Mode': 'navigate',\r\n            'Sec-Fetch-Site': 'none',\r\n            'Sec-Fetch-User': '?1',\r\n            'Upgrade-Insecure-Requests': '1',\r\n        },\r\n    });\r\n\r\n    const dom = new JSDOM(response);\r\n\r\n    let threadsData: ThreadItem[] | null = null;\r\n    for (const el of dom.window.document.querySelectorAll('script[data-sjs]')) {\r\n        try {\r\n            const data = JSONPath({\r\n                path: '$..thread_items[0]',\r\n                json: JSON.parse(el.textContent || ''),\r\n            });\r\n\r\n            if (data?.length > 0) {\r\n                threadsData = data as ThreadItem[];\r\n                break;\r\n            }\r\n        } catch {\r\n            // Skip invalid JSON\r\n        }\r\n    }\r\n\r\n    if (!threadsData) {\r\n        throw new Error('Failed to fetch thread data');\r\n    }\r\n\r\n    debugJson.profileId = userId;\r\n    debugJson.response = { response: threadsData };\r\n\r\n    const userData: ThreadUser = threadsData[0]?.post?.user || { username: user, profile_pic_url: '' };\r\n\r\n    const items = threadsData\r\n        .filter((item) => user === item.post.user?.username)\r\n        .map((item) => ({\r\n            author: user,\r\n            title: buildContent(item, options).title,\r\n            description: buildContent(item, options).description,\r\n            pubDate: parseDate(item.post.taken_at, 'X'),\r\n            link: threadUrl(item.post.code),\r\n        }));\r\n\r\n    debugJson.items = items;\r\n    ctx.set('json', debugJson);\r\n\r\n    return {\r\n        title: `${user} (@${user}) on Threads`,\r\n        link: profileUrl(user),\r\n        image: userData?.profile_pic_url,\r\n        item: items,\r\n    };\r\n}\r\n\r\ninterface ThreadUser {\r\n    username: string;\r\n    profile_pic_url: string;\r\n}\r\n\r\ninterface ThreadItem {\r\n    post: {\r\n        user?: ThreadUser;\r\n        taken_at: number;\r\n        code: string;\r\n        caption?: {\r\n            text: string;\r\n        };\r\n    };\r\n}\r\n"],"mappings":"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"}