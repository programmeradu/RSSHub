{"version":3,"file":"service-DmqdozlI.js","names":["r: string[]","ofetch","time","price"],"sources":["../../lib/routes/showstart/const.ts","../../lib/routes/showstart/utils.ts","../../lib/routes/showstart/service.ts"],"sourcesContent":["const HOST = 'https://www.showstart.com';\r\nconst TITLE = '秀动网';\r\n\r\nexport { HOST, TITLE };\r\n","import md5 from '@/utils/md5';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nconst uuid = (length = 20) => {\r\n    const e = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' + Date.now();\r\n    const r: string[] = [];\r\n    for (let i = 0; i < length; i++) {\r\n        r.push(e.charAt(Math.floor(Math.random() * e.length)));\r\n    }\r\n    return r.join('');\r\n};\r\n\r\nconst cookieMap = new Map([['token', uuid(32).toLowerCase()]]);\r\n\r\nconst devioceInfo = {\r\n    vendorName: '',\r\n    deviceMode: '',\r\n    deviceName: '',\r\n    systemName: '',\r\n    systemVersion: '',\r\n    cpuMode: ' ', // Note the space\r\n    cpuCores: '',\r\n    cpuArch: '',\r\n    memerySize: '',\r\n    diskSize: '',\r\n    network: '',\r\n    resolution: '1920*1080',\r\n    pixelResolution: '',\r\n};\r\n\r\nconst getAccessToken = async () => {\r\n    const { result } = await post('/waf/gettoken');\r\n    cookieMap.set('accessToken', result.accessToken.access_token);\r\n    cookieMap.set('idToken', result.idToken.id_token);\r\n    return cookieMap.get('accessToken');\r\n};\r\n\r\nconst post = async (requestPath: string, accessToken = md5(Date.now().toString()), payload?: any) => {\r\n    const traceId = uuid(32) + Date.now();\r\n\r\n    const response = await ofetch(`https://www.showstart.com/api${requestPath}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            cdeviceinfo: encodeURIComponent(JSON.stringify(devioceInfo)),\r\n            cdeviceno: cookieMap.get('token'),\r\n            cookie: [...cookieMap.entries()].map(([key, value]) => `${key}=${value}`).join('; '),\r\n            crpsign: md5(accessToken + /* sign/cusut (empty) + idToken (empty) + userInfo.userId (empty) + */ 'web' + cookieMap.get('token') + (payload ? JSON.stringify(payload) : '') + requestPath + '999web' + traceId),\r\n            crtraceid: traceId,\r\n            csappid: 'web',\r\n            cterminal: 'web',\r\n            cusat: accessToken,\r\n            cusid: '',\r\n            cusit: '',\r\n            cusname: '',\r\n            cusut: '',\r\n            cversion: '999',\r\n        } as HeadersInit,\r\n        body: payload,\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nfunction sortBy(items: any[], key: string) {\r\n    return items.sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n            return -1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n}\r\n\r\nfunction uniqBy(items: any[], key: string) {\r\n    const set = new Set();\r\n    return items.filter((item) => {\r\n        if (set.has(item[key])) {\r\n            return false;\r\n        }\r\n        set.add(item[key]);\r\n        return true;\r\n    });\r\n}\r\n\r\nexport { post, getAccessToken, uuid, sortBy, uniqBy };\r\n","import { HOST } from './const';\r\nimport { getAccessToken, post, sortBy, uniqBy } from './utils';\r\n\r\nasync function fetchActivityList(\r\n    params: Partial<{\r\n        pageNo: string;\r\n        pageSize: string;\r\n        cityCode: string;\r\n        activityIds: string;\r\n        coupon: string;\r\n        keyword: string;\r\n        organizerId: string;\r\n        performerId: string;\r\n        showStyle: string;\r\n        showTime: string;\r\n        showType: string;\r\n        siteId: string;\r\n        sortType: string;\r\n        themeId: string;\r\n        timeRange: string;\r\n        tourId: string;\r\n        type: string;\r\n        tag: string;\r\n    }>\r\n) {\r\n    params.pageNo = params.pageNo || '1';\r\n    params.pageSize = params.pageSize || '30';\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/activity/list', accessToken, params);\r\n    return resp.result.result.map((item) => formatActivity(item));\r\n}\r\n\r\nconst image = (src: string) => (src ? `<img src=\"${src}\" />` : '');\r\nconst time = (time: string) => (time ? `<p>演出时间：${time}</p>` : '');\r\nconst address = (cityName: string, siteName: string) => (cityName || siteName ? `<p>地址：${[cityName, siteName].join(' - ')}</p>` : '');\r\nconst performers = (name: string) => (name ? `<p>艺人：${name}</p>` : '');\r\nconst price = (price: string) => (price ? `<p>票价：${price}</p>` : '');\r\n\r\nfunction formatActivity(item) {\r\n    return {\r\n        title: item.title,\r\n        link: `${HOST}/event/${item.id}`,\r\n        description: [image(item.poster), time(item.showTime), address(item.cityName, item.siteName), performers(item.performers), price(item.price)].join(''),\r\n    };\r\n}\r\n\r\nasync function fetchPerformerList(\r\n    params: Partial<{\r\n        pageNo: string;\r\n        pageSize: string;\r\n        searchKeyword: string;\r\n        styleId: string;\r\n    }>\r\n) {\r\n    params.pageNo = params.pageNo || '1';\r\n    params.pageSize = params.pageSize || '30';\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/performer/list', accessToken, params);\r\n    return resp.result.result.map((item) => ({\r\n        title: item.name,\r\n        link: `${HOST}/artist/${item.id}`,\r\n        description: `id: ${item.id}`,\r\n    }));\r\n}\r\n\r\nasync function fetchPerformerInfo(params: { performerId: string }) {\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/performer/info', accessToken, params);\r\n    return {\r\n        id: params.performerId,\r\n        name: resp.result.name,\r\n        content: resp.result.content,\r\n        avatar: resp.result.avatar,\r\n        poster: resp.result.poster,\r\n        styles: resp.result.styles,\r\n        activityList: resp.result.activities.map((item) => formatActivity(item)),\r\n    };\r\n}\r\n\r\nasync function fetchBrandInfo(params: { brandId: string }) {\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/brand/info', accessToken, params);\r\n    return {\r\n        id: params.brandId,\r\n        name: resp.result.name,\r\n        content: resp.result.content,\r\n        avatar: resp.result.avatar,\r\n        poster: resp.result.poster,\r\n        activityList: resp.result.activities.map((item) => formatActivity(item)),\r\n    };\r\n}\r\n\r\nasync function fetchSiteList(\r\n    params: Partial<{\r\n        pageNo: string;\r\n        pageSize: string;\r\n        searchKeyword: string;\r\n    }>\r\n) {\r\n    params.pageNo = params.pageNo || '1';\r\n    params.pageSize = params.pageSize || '30';\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/site/list', accessToken, params);\r\n    return resp.result.result.map((item) => ({\r\n        title: `${item.cityName} - ${item.name}`,\r\n        link: `${HOST}/venue/${item.id}`,\r\n        description: `id: ${item.id}`,\r\n    }));\r\n}\r\n\r\nasync function fetchSiteInfo(params: { siteId: string }) {\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/site/info', accessToken, params);\r\n    return {\r\n        id: params.siteId,\r\n        name: `${resp.result.cityName} - ${resp.result.name}`,\r\n        address: resp.result.address,\r\n        avatar: resp.result.avatar,\r\n        poster: resp.result.poster,\r\n    };\r\n}\r\n\r\nasync function fetchBrandList(\r\n    params: Partial<{\r\n        pageNo: string;\r\n        pageSize: string;\r\n        searchKeyword: string;\r\n    }>\r\n) {\r\n    params.pageNo = params.pageNo || '1';\r\n    params.pageSize = params.pageSize || '30';\r\n    const accessToken = await getAccessToken();\r\n    const resp = await post('/web/brand/list', accessToken, params);\r\n    return resp.result.result.map((item) => ({\r\n        title: item.name,\r\n        link: `${HOST}/host/${item.id}`,\r\n        description: `id: ${item.id}`,\r\n    }));\r\n}\r\n\r\nasync function fetchParams() {\r\n    const accessToken = await getAccessToken();\r\n    return post('/web/activity/list/params', accessToken);\r\n}\r\n\r\nasync function fetchCityList(keyword = '') {\r\n    const resp = await fetchParams();\r\n    const cities = sortBy(resp.result, 'cityCode');\r\n    return cities\r\n        .filter((item) => item.cityName.includes(keyword.trim()))\r\n        .map((item) => ({\r\n            title: item.cityName,\r\n            link: `${HOST}/event/list?cityCode=${item.cityCode}`,\r\n            description: `cityCode: ${item.cityCode}`,\r\n        }));\r\n}\r\n\r\n// styles is embed in each city item\r\n// so we need to fetch all city items and then extract styles from them\r\nasync function fetchStyleList(keyword = '') {\r\n    const resp = await fetchParams();\r\n    let styles = resp.result.flatMap((item) => item.styles) as Array<{ key: string; showName: string }>;\r\n    styles = uniqBy(styles, 'key');\r\n    styles = sortBy(styles, 'key');\r\n    return styles\r\n        .filter((item) => item.showName.includes(keyword.trim()))\r\n        .map((item) => ({\r\n            title: item.showName,\r\n            link: `${HOST}/event/list?showStyle=${item.key}`,\r\n            description: `showStyle: ${item.key}`,\r\n        }));\r\n}\r\n\r\nasync function fetchDictionary(cityCode: string, showStyle: string) {\r\n    const resp = await fetchParams();\r\n    const target = resp.result.find((item) => String(item.cityCode) === cityCode);\r\n    if (!target) {\r\n        return {};\r\n    }\r\n    return {\r\n        cityName: target.cityName,\r\n        showName: target.styles.find((item) => String(item.key) === showStyle)?.showName,\r\n    };\r\n}\r\n\r\nexport { fetchActivityList, fetchCityList, fetchStyleList, fetchPerformerList, fetchPerformerInfo, fetchSiteList, fetchSiteInfo, fetchBrandList, fetchBrandInfo, fetchDictionary };\r\n"],"mappings":"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"}