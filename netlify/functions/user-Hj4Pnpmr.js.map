{"version":3,"file":"user-Hj4Pnpmr.js","names":["s: number[]","cipher: string[]","r: number[]","temp_int: number","window_env_list: number[]","random_str_list: number[]"],"sources":["../../lib/routes/toutiao/a-bogus.ts","../../lib/routes/toutiao/user.ts"],"sourcesContent":["/* eslint-disable unicorn/prefer-spread */\r\n/* eslint-disable unicorn/prefer-math-trunc */\r\n// @ts-nocheck\r\n\r\n// Credits:\r\n// https://github.com/NearHuiwen/TiktokDouyinCrawler/blob/main/utils/a_bogus.js\r\n// https://github.com/110Art/a-bogus/blob/main/a_bogus.js\r\n// https://github.com/ShilongLee/Crawler/blob/main/lib/js/douyin.js\r\n\r\n// Reference:\r\n// https://github.com/Endy-c/gm-crypt/blob/87bfc13f4b234c538d56798ed2457da16bc006ac/src/sm3.js\r\n\r\nimport logger from '@/utils/logger';\r\n\r\nfunction rc4_encrypt(plaintext, key) {\r\n    const s: number[] = [];\r\n    for (let i = 0; i < 256; i++) {\r\n        s[i] = i;\r\n    }\r\n    for (let i = 0, j = 0; i < 256; i++) {\r\n        j = (j + s[i] + key.codePointAt(i % key.length)) % 256;\r\n        const temp = s[i];\r\n        s[i] = s[j];\r\n        s[j] = temp;\r\n    }\r\n\r\n    const cipher: string[] = [];\r\n    for (let i = 0, j = 0, k = 0; k < plaintext.length; k++) {\r\n        i = (i + 1) % 256;\r\n        j = (j + s[i]) % 256;\r\n        const temp = s[i];\r\n        s[i] = s[j];\r\n        s[j] = temp;\r\n        const t = (s[i] + s[j]) % 256;\r\n        cipher.push(String.fromCodePoint(s[t] ^ plaintext.codePointAt(k)));\r\n    }\r\n    return cipher.join('');\r\n}\r\n\r\nfunction rotateLeft32(e, r) {\r\n    return ((e << (r %= 32)) | (e >>> (32 - r))) >>> 0;\r\n}\r\n\r\nfunction T(j) {\r\n    if (0 <= j && j < 16) {\r\n        return 0x79_CC_45_19;\r\n    } else if (16 <= j && j < 64) {\r\n        return 0x7A_87_9D_8A;\r\n    } else {\r\n        logger.error('invalid j for constant Tj');\r\n    }\r\n}\r\n\r\nfunction FF(j, x, y, z) {\r\n    if (0 <= j && j < 16) {\r\n        return (x ^ y ^ z) >>> 0;\r\n    } else if (16 <= j && j < 64) {\r\n        return ((x & y) | (x & z) | (y & z)) >>> 0;\r\n    } else {\r\n        logger.error('invalid j for bool function FF');\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction GG(j, x, y, z) {\r\n    if (0 <= j && j < 16) {\r\n        return (x ^ y ^ z) >>> 0;\r\n    } else if (16 <= j && j < 64) {\r\n        return ((x & y) | (~x & z)) >>> 0;\r\n    } else {\r\n        logger.error('invalid j for bool function GG');\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction reset(this: any) {\r\n    this.reg[0] = 0x73_80_16_6F;\r\n    this.reg[1] = 0x49_14_B2_B9;\r\n    this.reg[2] = 0x17_24_42_D7;\r\n    this.reg[3] = 0xDA_8A_06_00;\r\n    this.reg[4] = 0xA9_6F_30_BC;\r\n    this.reg[5] = 0x16_31_38_AA;\r\n    this.reg[6] = 0xE3_8D_EE_4D;\r\n    this.reg[7] = 0xB0_FB_0E_4E;\r\n    this.chunk = [];\r\n    this.size = 0;\r\n}\r\n\r\nfunction strToBytes(str) {\r\n    const n = encodeURIComponent(str).replaceAll(/%([0-9A-F]{2})/g, (e, r) => String.fromCodePoint('0x' + r));\r\n    const a = Array.from({ length: n.length });\r\n    Array.prototype.forEach.call(n, (e, r) => {\r\n        a[r] = e.codePointAt(0);\r\n    });\r\n    return a;\r\n}\r\n\r\nfunction write(this: any, message) {\r\n    const a = typeof message === 'string' ? strToBytes(message) : message;\r\n    this.size += a.length;\r\n    let f = 64 - this.chunk.length;\r\n    if (a.length < f) {\r\n        this.chunk = this.chunk.concat(a);\r\n    } else {\r\n        this.chunk = this.chunk.concat(a.slice(0, f));\r\n        while (this.chunk.length >= 64) {\r\n            this._compress(this.chunk);\r\n            this.chunk = f < a.length ? a.slice(f, Math.min(f + 64, a.length)) : [];\r\n            f += 64;\r\n        }\r\n    }\r\n}\r\n\r\nfunction sum(this: any, message, encoding) {\r\n    if (message) {\r\n        this.reset();\r\n        this.write(message);\r\n    }\r\n    this._fill();\r\n    for (let f = 0; f < this.chunk.length; f += 64) {\r\n        this._compress(this.chunk.slice(f, f + 64));\r\n    }\r\n    let digest;\r\n    if (encoding === 'hex') {\r\n        digest = '';\r\n        for (let f = 0; f < 8; f++) {\r\n            digest += se(this.reg[f].toString(16), 8, '0');\r\n        }\r\n    } else {\r\n        digest = Array.from({ length: 32 });\r\n        for (let f = 0; f < 8; f++) {\r\n            let c = this.reg[f];\r\n            digest[4 * f + 3] = (255 & c) >>> 0;\r\n            c >>>= 8;\r\n            digest[4 * f + 2] = (255 & c) >>> 0;\r\n            c >>>= 8;\r\n            digest[4 * f + 1] = (255 & c) >>> 0;\r\n            c >>>= 8;\r\n            digest[4 * f] = (255 & c) >>> 0;\r\n        }\r\n    }\r\n    this.reset();\r\n    return digest;\r\n}\r\n\r\nfunction expand(e) {\r\n    const r: number[] = Array.from({ length: 132 });\r\n    for (let t = 0; t < 16; t++) {\r\n        r[t] = e[4 * t] << 24;\r\n        r[t] |= e[4 * t + 1] << 16;\r\n        r[t] |= e[4 * t + 2] << 8;\r\n        r[t] |= e[4 * t + 3];\r\n        r[t] >>>= 0;\r\n    }\r\n    for (let n = 16; n < 68; n++) {\r\n        let a = r[n - 16] ^ r[n - 9] ^ rotateLeft32(r[n - 3], 15);\r\n        a = a ^ rotateLeft32(a, 15) ^ rotateLeft32(a, 23);\r\n        r[n] = (a ^ rotateLeft32(r[n - 13], 7) ^ r[n - 6]) >>> 0;\r\n    }\r\n    for (let n = 0; n < 64; n++) {\r\n        r[n + 68] = (r[n] ^ r[n + 4]) >>> 0;\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction _compress(this: any, t) {\r\n    if (t < 64) {\r\n        logger.error('compress error: not enough data');\r\n        return;\r\n    } else {\r\n        const f = expand(t);\r\n        const i = this.reg.slice(0);\r\n        for (let c = 0; c < 64; c++) {\r\n            let o = rotateLeft32(i[0], 12) + i[4] + rotateLeft32(T(c), c);\r\n            o = (0xFF_FF_FF_FF & o) >>> 0;\r\n            o = rotateLeft32(o, 7);\r\n\r\n            const s = (o ^ rotateLeft32(i[0], 12)) >>> 0;\r\n            let u = FF(c, i[0], i[1], i[2]);\r\n            u = u + i[3] + s + f[c + 68];\r\n            u = (0xFF_FF_FF_FF & u) >>> 0;\r\n\r\n            let b = GG(c, i[4], i[5], i[6]);\r\n            b = b + i[7] + o + f[c];\r\n            b = (0xFF_FF_FF_FF & b) >>> 0;\r\n            i[3] = i[2];\r\n            i[2] = rotateLeft32(i[1], 9);\r\n            i[1] = i[0];\r\n            i[0] = u;\r\n            i[7] = i[6];\r\n            i[6] = rotateLeft32(i[5], 19);\r\n            i[5] = i[4];\r\n            i[4] = (b ^ rotateLeft32(b, 9) ^ rotateLeft32(b, 17)) >>> 0;\r\n        }\r\n        for (let l = 0; l < 8; l++) {\r\n            this.reg[l] = (this.reg[l] ^ i[l]) >>> 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction _fill(this: any) {\r\n    const a = 8 * this.size;\r\n    let f = this.chunk.push(128) % 64;\r\n    for (64 - f < 8 && (f -= 64); f < 56; f++) {\r\n        this.chunk.push(0);\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n        const c = Math.floor(a / 0x1_00_00_00_00);\r\n        this.chunk.push((c >>> (8 * (3 - i))) & 0xFF);\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n        this.chunk.push((a >>> (8 * (3 - i))) & 0xFF);\r\n    }\r\n}\r\n\r\nfunction SM3(this: any) {\r\n    this.reg = [];\r\n    this.chunk = [];\r\n    this.size = 0;\r\n    this.reset();\r\n}\r\nSM3.prototype.reset = reset;\r\nSM3.prototype.write = write;\r\nSM3.prototype.sum = sum;\r\nSM3.prototype._compress = _compress;\r\nSM3.prototype._fill = _fill;\r\n\r\nfunction result_encrypt(long_str: string, num: 's0' | 's1' | 's2' | 's3' | 's4') {\r\n    const s_obj = {\r\n        s0: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\r\n        s1: 'Dkdpgh4ZKsQB80/Mfvw36XI1R25+WUAlEi7NLboqYTOPuzmFjJnryx9HVGcaStCe=',\r\n        s2: 'Dkdpgh4ZKsQB80/Mfvw36XI1R25-WUAlEi7NLboqYTOPuzmFjJnryx9HVGcaStCe=',\r\n        s3: 'ckdp1h4ZKsUB80/Mfvw36XIgR25+WQAlEi7NLboqYTOPuzmFjJnryx9HVGDaStCe',\r\n        s4: 'Dkdpgh2ZmsQB80/MfvV36XI1R45-WUAlEixNLwoqYTOPuzKFjJnry79HbGcaStCe',\r\n    };\r\n    const constant = {\r\n        '0': 16_515_072,\r\n        '1': 258048,\r\n        '2': 4032,\r\n        str: s_obj[num],\r\n    };\r\n\r\n    let result = '';\r\n    let lound = 0;\r\n    let long_int = get_long_int(lound, long_str);\r\n    for (let i = 0; i < (long_str.length / 3) * 4; i++) {\r\n        if (Math.floor(i / 4) !== lound) {\r\n            lound += 1;\r\n            long_int = get_long_int(lound, long_str);\r\n        }\r\n        const key = i % 4;\r\n        let temp_int: number;\r\n        switch (key) {\r\n            case 0:\r\n                temp_int = (long_int & constant['0']) >> 18;\r\n                result += constant.str.charAt(temp_int);\r\n                break;\r\n            case 1:\r\n                temp_int = (long_int & constant['1']) >> 12;\r\n                result += constant.str.charAt(temp_int);\r\n                break;\r\n            case 2:\r\n                temp_int = (long_int & constant['2']) >> 6;\r\n                result += constant.str.charAt(temp_int);\r\n                break;\r\n            case 3:\r\n                temp_int = long_int & 63;\r\n                result += constant.str.charAt(temp_int);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction get_long_int(round, long_str) {\r\n    round = round * 3;\r\n    return (long_str.codePointAt(round) << 16) | (long_str.codePointAt(round + 1) << 8) | long_str.codePointAt(round + 2);\r\n}\r\n\r\nfunction gener_random(random, option) {\r\n    return [\r\n        (random & 255 & 170) | (option[0] & 85), // 163\r\n        (random & 255 & 85) | (option[0] & 170), // 87\r\n        ((random >> 8) & 255 & 170) | (option[1] & 85), // 37\r\n        ((random >> 8) & 255 & 85) | (option[1] & 170), // 41\r\n    ];\r\n}\r\n\r\n// ////////////////////////////////////////////\r\nfunction generate_rc4_bb_str(url_search_params, user_agent, window_env_str, suffix = 'cus', Arguments = [0, 1, 14]) {\r\n    const sm3 = new SM3();\r\n    const start_time = Date.now();\r\n    /**\r\n     * 进行3次加密处理\r\n     * 1: url_search_params两次sm3之的结果\r\n     * 2: 对后缀两次sm3之的结果\r\n     * 3: 对ua处理之后的结果\r\n     */\r\n    // url_search_params两次sm3之的结果\r\n    const url_search_params_list = sm3.sum(sm3.sum(url_search_params + suffix));\r\n    // 对后缀两次sm3之的结果\r\n    const cus = sm3.sum(sm3.sum(suffix));\r\n    // 对ua处理之后的结果\r\n    const ua = sm3.sum(result_encrypt(rc4_encrypt(user_agent, Reflect.apply(String.fromCharCode, null, [0.003_906_25, 1, 14])), 's3'));\r\n    //\r\n    const end_time = Date.now();\r\n    // b\r\n    const b = {\r\n        8: 3, // 固定\r\n        10: end_time, // 3次加密结束时间\r\n        15: {\r\n            aid: 6383,\r\n            pageId: 6241,\r\n            boe: false,\r\n            ddrt: 7,\r\n            paths: {\r\n                include: [{}, {}, {}, {}, {}, {}, {}],\r\n                exclude: [],\r\n            },\r\n            track: {\r\n                mode: 0,\r\n                delay: 300,\r\n                paths: [],\r\n            },\r\n            dump: true,\r\n            rpU: '',\r\n        },\r\n        16: start_time, // 3次加密开始时间\r\n        18: 44, // 固定\r\n        19: [1, 0, 1, 5],\r\n    };\r\n\r\n    // 3次加密开始时间\r\n    b[20] = (b[16] >> 24) & 255;\r\n    b[21] = (b[16] >> 16) & 255;\r\n    b[22] = (b[16] >> 8) & 255;\r\n    b[23] = b[16] & 255;\r\n    b[24] = (b[16] / 256 / 256 / 256 / 256) >> 0;\r\n    b[25] = (b[16] / 256 / 256 / 256 / 256 / 256) >> 0;\r\n\r\n    // 参数Arguments [0, 1, 14, ...]\r\n    // let Arguments = [0, 1, 14]\r\n    b[26] = (Arguments[0] >> 24) & 255;\r\n    b[27] = (Arguments[0] >> 16) & 255;\r\n    b[28] = (Arguments[0] >> 8) & 255;\r\n    b[29] = Arguments[0] & 255;\r\n\r\n    b[30] = (Arguments[1] / 256) & 255;\r\n    b[31] = Arguments[1] % 256 & 255;\r\n    b[32] = (Arguments[1] >> 24) & 255;\r\n    b[33] = (Arguments[1] >> 16) & 255;\r\n\r\n    b[34] = (Arguments[2] >> 24) & 255;\r\n    b[35] = (Arguments[2] >> 16) & 255;\r\n    b[36] = (Arguments[2] >> 8) & 255;\r\n    b[37] = Arguments[2] & 255;\r\n\r\n    // (url_search_params + \"cus\") 两次sm3之的结果\r\n    /** let url_search_params_list = [\r\n     91, 186,  35,  86, 143, 253,   6,  76,\r\n     34,  21, 167, 148,   7,  42, 192, 219,\r\n     188,  20, 182,  85, 213,  74, 213, 147,\r\n     37, 155,  93, 139,  85, 118, 228, 213\r\n     ]*/\r\n    b[38] = url_search_params_list[21];\r\n    b[39] = url_search_params_list[22];\r\n\r\n    // (\"cus\") 对后缀两次sm3之的结果\r\n    /**\r\n     * let cus = [\r\n     136, 101, 114, 147,  58,  77, 207, 201,\r\n     215, 162, 154,  93, 248,  13, 142, 160,\r\n     105,  73, 215, 241,  83,  58,  51,  43,\r\n     255,  38, 168, 141, 216, 194,  35, 236\r\n     ]*/\r\n    b[40] = cus[21];\r\n    b[41] = cus[22];\r\n\r\n    // 对ua处理之后的结果\r\n    /**\r\n     * let ua = [\r\n     129, 190,  70, 186,  86, 196, 199,  53,\r\n     99,  38,  29, 209, 243,  17, 157,  69,\r\n     147, 104,  53,  23, 114, 126,  66, 228,\r\n     135,  30, 168, 185, 109, 156, 251,  88\r\n     ]*/\r\n    b[42] = ua[23];\r\n    b[43] = ua[24];\r\n\r\n    // 3次加密结束时间\r\n    b[44] = (b[10] >> 24) & 255;\r\n    b[45] = (b[10] >> 16) & 255;\r\n    b[46] = (b[10] >> 8) & 255;\r\n    b[47] = b[10] & 255;\r\n    b[48] = b[8];\r\n    b[49] = (b[10] / 256 / 256 / 256 / 256) >> 0;\r\n    b[50] = (b[10] / 256 / 256 / 256 / 256 / 256) >> 0;\r\n\r\n    // object配置项\r\n    b[51] = b[15].pageId;\r\n    b[52] = (b[15].pageId >> 24) & 255;\r\n    b[53] = (b[15].pageId >> 16) & 255;\r\n    b[54] = (b[15].pageId >> 8) & 255;\r\n    b[55] = b[15].pageId & 255;\r\n\r\n    b[56] = b[15].aid;\r\n    b[57] = b[15].aid & 255;\r\n    b[58] = (b[15].aid >> 8) & 255;\r\n    b[59] = (b[15].aid >> 16) & 255;\r\n    b[60] = (b[15].aid >> 24) & 255;\r\n\r\n    // 中间进行了环境检测\r\n    // 代码索引:  2496 索引值:  17 （索引64关键条件）\r\n    // '1536|747|1536|834|0|30|0|0|1536|834|1536|864|1525|747|24|24|Win32'.charCodeAt()得到65位数组\r\n    /**\r\n     * let window_env_list = [49, 53, 51, 54, 124, 55, 52, 55, 124, 49, 53, 51, 54, 124, 56, 51, 52, 124, 48, 124, 51,\r\n     * 48, 124, 48, 124, 48, 124, 49, 53, 51, 54, 124, 56, 51, 52, 124, 49, 53, 51, 54, 124, 56,\r\n     * 54, 52, 124, 49, 53, 50, 53, 124, 55, 52, 55, 124, 50, 52, 124, 50, 52, 124, 87, 105, 110,\r\n     * 51, 50]\r\n     */\r\n    const window_env_list: number[] = [];\r\n    for (let index = 0; index < window_env_str.length; index++) {\r\n        window_env_list.push(window_env_str.codePointAt(index));\r\n    }\r\n    b[64] = window_env_list.length;\r\n    b[65] = b[64] & 255;\r\n    b[66] = (b[64] >> 8) & 255;\r\n\r\n    b[69] = [].length;\r\n    b[70] = b[69] & 255;\r\n    b[71] = (b[69] >> 8) & 255;\r\n\r\n    b[72] =\r\n        b[18] ^\r\n        b[20] ^\r\n        b[26] ^\r\n        b[30] ^\r\n        b[38] ^\r\n        b[40] ^\r\n        b[42] ^\r\n        b[21] ^\r\n        b[27] ^\r\n        b[31] ^\r\n        b[35] ^\r\n        b[39] ^\r\n        b[41] ^\r\n        b[43] ^\r\n        b[22] ^\r\n        b[28] ^\r\n        b[32] ^\r\n        b[36] ^\r\n        b[23] ^\r\n        b[29] ^\r\n        b[33] ^\r\n        b[37] ^\r\n        b[44] ^\r\n        b[45] ^\r\n        b[46] ^\r\n        b[47] ^\r\n        b[48] ^\r\n        b[49] ^\r\n        b[50] ^\r\n        b[24] ^\r\n        b[25] ^\r\n        b[52] ^\r\n        b[53] ^\r\n        b[54] ^\r\n        b[55] ^\r\n        b[57] ^\r\n        b[58] ^\r\n        b[59] ^\r\n        b[60] ^\r\n        b[65] ^\r\n        b[66] ^\r\n        b[70] ^\r\n        b[71];\r\n    let bb = [\r\n        b[18],\r\n        b[20],\r\n        b[52],\r\n        b[26],\r\n        b[30],\r\n        b[34],\r\n        b[58],\r\n        b[38],\r\n        b[40],\r\n        b[53],\r\n        b[42],\r\n        b[21],\r\n        b[27],\r\n        b[54],\r\n        b[55],\r\n        b[31],\r\n        b[35],\r\n        b[57],\r\n        b[39],\r\n        b[41],\r\n        b[43],\r\n        b[22],\r\n        b[28],\r\n        b[32],\r\n        b[60],\r\n        b[36],\r\n        b[23],\r\n        b[29],\r\n        b[33],\r\n        b[37],\r\n        b[44],\r\n        b[45],\r\n        b[59],\r\n        b[46],\r\n        b[47],\r\n        b[48],\r\n        b[49],\r\n        b[50],\r\n        b[24],\r\n        b[25],\r\n        b[65],\r\n        b[66],\r\n        b[70],\r\n        b[71],\r\n    ];\r\n    bb = bb.concat(window_env_list).concat(b[72]);\r\n    return rc4_encrypt(String.fromCharCode.apply(null, bb), Reflect.apply(String.fromCharCode, null, [121]));\r\n}\r\n\r\nfunction generate_random_str() {\r\n    let random_str_list: number[] = [];\r\n    random_str_list = random_str_list.concat(gener_random(Math.random() * 10000, [3, 45]));\r\n    random_str_list = random_str_list.concat(gener_random(Math.random() * 10000, [1, 0]));\r\n    random_str_list = random_str_list.concat(gener_random(Math.random() * 10000, [1, 5]));\r\n    return String.fromCharCode.apply(null, random_str_list);\r\n}\r\n\r\nexport function generate_a_bogus(url_search_params, user_agent) {\r\n    const result_str = generate_random_str() + generate_rc4_bb_str(url_search_params, user_agent, '1536|747|1536|834|0|30|0|0|1536|834|1536|864|1525|747|24|24|Win32');\r\n    return result_encrypt(result_str, 's4') + '=';\r\n}\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport randUserAgent from '@/utils/rand-user-agent';\r\nimport { generate_a_bogus } from './a-bogus';\r\nimport { Feed } from './types';\r\nimport RejectError from '@/errors/types/reject';\r\nimport { config } from '@/config';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\n\r\nexport const route: Route = {\r\n    path: '/user/token/:token',\r\n    categories: ['new-media'],\r\n    example: '/toutiao/user/token/MS4wLjABAAAAEmbqJP2CmC8XXv1BpMvQ3sQHKAxFsq8wHxj8XVIQWja6tMcB-QEbFkzkRNgMl12M',\r\n    parameters: { token: '用户 token，可在用户主页 URL 找到' },\r\n    features: {\r\n        antiCrawler: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.toutiao.com/c/user/token/:token'],\r\n        },\r\n    ],\r\n    name: '头条主页',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { token } = ctx.req.param();\r\n    const ua = randUserAgent({ browser: 'chrome', os: 'windows', device: 'desktop' });\r\n\r\n    const feed = (await cache.tryGet(\r\n        `toutiao:user:${token}`,\r\n        async () => {\r\n            const query = `category=profile_all&token=${token}&max_behot_time=0&entrance_gid&aid=24&app_name=toutiao_web`;\r\n\r\n            const data = await ofetch(`https://www.toutiao.com/api/pc/list/feed?${query}&a_bogus=${generate_a_bogus(query, ua)}`, {\r\n                headers: {\r\n                    'User-Agent': ua,\r\n                },\r\n            });\r\n\r\n            return data.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    )) as Feed[];\r\n\r\n    if (!feed) {\r\n        throw new RejectError('无法获取用户信息');\r\n    }\r\n\r\n    const items = feed.map((item) => {\r\n        switch (item.cell_type) {\r\n            case 0:\r\n            case 49: {\r\n                const video = item.video.play_addr_list.sort((a, b) => b.bitrate - a.bitrate)[0];\r\n                return {\r\n                    title: item.title,\r\n                    description: art(path.join(__dirname, 'templates/video.art'), {\r\n                        poster: item.video.origin_cover.url_list[0],\r\n                        url: item.video.play_addr_list.sort((a, b) => b.bitrate - a.bitrate)[0].play_url_list[0],\r\n                    }),\r\n                    link: `https://www.toutiao.com/video/${item.id}/`,\r\n                    pubDate: parseDate(item.publish_time, 'X'),\r\n                    author: item.user?.info.name ?? item.source,\r\n                    enclosure_url: video?.play_url_list[0],\r\n                    enclosure_type: video?.play_url_list[0] ? 'video/mp4' : undefined,\r\n                    user: {\r\n                        name: item.user?.info.name,\r\n                        avatar: item.user?.info.avatar_url,\r\n                        description: item.user?.info.desc,\r\n                    },\r\n                };\r\n            }\r\n\r\n            // text w/o title\r\n            case 32: {\r\n                const enclosure = item.large_image_list?.pop();\r\n                return {\r\n                    title: item.content?.split('\\n')[0],\r\n                    description: item.rich_content,\r\n                    link: `https://www.toutiao.com/w/${item.id}/`,\r\n                    pubDate: parseDate(item.publish_time, 'X'),\r\n                    author: item.user?.name,\r\n                    enclosure_url: enclosure?.url,\r\n                    enclosure_type: enclosure?.url ? `image/${new URL(enclosure.url).pathname.split('.').pop()}` : undefined,\r\n                    user: {\r\n                        name: item.user?.name,\r\n                        avatar: item.user?.avatar_url,\r\n                        description: item.user?.desc,\r\n                    },\r\n                };\r\n            }\r\n\r\n            // text w/ title\r\n            case 60:\r\n            default:\r\n                return {\r\n                    title: item.title,\r\n                    description: item.abstract,\r\n                    link: `https://www.toutiao.com/article/${item.id}/`,\r\n                    pubDate: parseDate(item.publish_time, 'X'),\r\n                    author: item.user_info?.name,\r\n                    user: {\r\n                        name: item.user_info?.name,\r\n                        avatar: item.user_info?.avatar_url,\r\n                        description: item.user_info?.description,\r\n                    },\r\n                };\r\n        }\r\n    });\r\n\r\n    return {\r\n        title: `${items[0].user.name}的头条主页 - 今日头条(www.toutiao.com)`,\r\n        description: items[0].user.description,\r\n        link: `https://www.toutiao.com/c/user/token/${token}/`,\r\n        image: items[0].user.avatar,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"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"}