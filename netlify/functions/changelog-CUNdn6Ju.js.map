{"version":3,"file":"changelog-CUNdn6Ju.js","names":["limit: number","baseUrl: string","targetUrl: string","ofetch","$: CheerioAPI","items: DataItem[]","$el: Cheerio<Element>","version: string","pubDateStr: string | undefined","title: string","linkUrl: string | undefined","guid: string","upDatedStr: string | undefined","description: string","processedItem: DataItem","route: Route"],"sources":["../../lib/routes/cursor/changelog.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType, type Language } from '@/types';\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { type CheerioAPI, type Cheerio, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { type Context } from 'hono';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '100', 10);\r\n\r\n    const baseUrl: string = 'https://cursor.com';\r\n    const targetUrl: string = new URL('changelog', baseUrl).href;\r\n\r\n    const response = await ofetch(targetUrl, {\r\n        headers: {\r\n            cookie: 'NEXT_LOCALE=en',\r\n        },\r\n    });\r\n    const $: CheerioAPI = load(response);\r\n    const language = ($('html').attr('lang') ?? 'en') as Language;\r\n\r\n    const items: DataItem[] = $('article.relative')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((el): DataItem => {\r\n            const $el: Cheerio<Element> = $(el);\r\n\r\n            let version: string = '';\r\n            let pubDateStr: string | undefined;\r\n\r\n            $el.find('div').each((_, div) => {\r\n                const text = $(div).text().trim();\r\n                const dateVersionMatch = text.match(/^(\\w+\\s+\\d{1,2},\\s+\\d{4})(\\d+\\.\\d+)$/);\r\n                if (dateVersionMatch) {\r\n                    pubDateStr = dateVersionMatch[1];\r\n                    version = dateVersionMatch[2];\r\n                    return false; // Stop after finding first match\r\n                }\r\n            });\r\n\r\n            const linkEl = $el.find('a[href^=\"/changelog/\"]').first();\r\n            const titleText = linkEl.length ? linkEl.text().trim() : $el.find('h2').first().text().trim();\r\n\r\n            const title: string = version ? `[${version}] ${titleText}` : titleText;\r\n\r\n            const linkUrl: string | undefined = linkEl.attr('href');\r\n            const guid: string = `cursor-changelog-${version || 'unknown'}`;\r\n            const upDatedStr: string | undefined = pubDateStr;\r\n\r\n            const $h2El = $el.find('h2').first();\r\n\r\n            if ($h2El.length) {\r\n                $h2El.prevAll().remove();\r\n                $h2El.remove();\r\n            }\r\n\r\n            const description: string = $el.html() || '';\r\n\r\n            const processedItem: DataItem = {\r\n                title,\r\n                description,\r\n                pubDate: pubDateStr ? parseDate(pubDateStr) : undefined,\r\n                link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n                guid,\r\n                id: guid,\r\n                content: {\r\n                    html: description,\r\n                    text: description,\r\n                },\r\n                updated: upDatedStr ? parseDate(upDatedStr) : undefined,\r\n                language,\r\n            };\r\n\r\n            return processedItem;\r\n        });\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('meta[property=\"og:image\"]').attr('content'),\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/changelog',\r\n    name: 'Changelog',\r\n    url: 'cursor.com',\r\n    maintainers: ['p3psi-boo', 'nczitzk'],\r\n    handler,\r\n    example: '/cursor/changelog',\r\n    parameters: undefined,\r\n    description: undefined,\r\n    categories: ['program-update'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['cursor.com/changelog'],\r\n            target: '/changelog',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"8SASA,MAAa,EAAU,KAAO,IAAgC,CAC1D,IAAMA,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,MAAO,IAEjEC,EAAkB,qBAClBC,EAAoB,IAAI,IAAI,YAAa,GAAS,KAElD,EAAW,MAAMC,EAAO,EAAW,CACrC,QAAS,CACL,OAAQ,oBAGVC,EAAgB,EAAK,GACrB,EAAY,EAAE,QAAQ,KAAK,SAAW,KAEtCC,EAAoB,EAAE,oBACvB,MAAM,EAAG,GACT,UACA,IAAK,GAAiB,CACnB,IAAMC,EAAwB,EAAE,GAE5BC,EAAkB,GAClBC,EAEJ,EAAI,KAAK,OAAO,MAAM,EAAG,IAAQ,CAC7B,IAAM,EAAO,EAAE,GAAK,OAAO,OACrB,EAAmB,EAAK,MAAM,wCACpC,GAAI,EAGA,MAFA,GAAa,EAAiB,GAC9B,EAAU,EAAiB,GACpB,KAIf,IAAM,EAAS,EAAI,KAAK,0BAA0B,QAC5C,EAAY,EAAO,OAAS,EAAO,OAAO,OAAS,EAAI,KAAK,MAAM,QAAQ,OAAO,OAEjFC,EAAgB,EAAU,IAAI,EAAQ,IAAI,IAAc,EAExDC,EAA8B,EAAO,KAAK,QAC1CC,EAAe,oBAAoB,GAAW,YAC9CC,EAAiC,EAEjC,EAAQ,EAAI,KAAK,MAAM,QAEzB,EAAM,SACN,EAAM,UAAU,SAChB,EAAM,UAGV,IAAMC,EAAsB,EAAI,QAAU,GAEpCC,EAA0B,CAC5B,QACA,cACA,QAAS,EAAa,EAAU,GAAc,IAAA,GAC9C,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QAAS,EAAa,EAAU,GAAc,IAAA,GAC9C,YAGJ,OAAO,IAGf,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,mCAAmC,KAAK,WACvD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EAAE,6BAA6B,KAAK,WAC3C,aAIKC,EAAe,CACxB,KAAM,aACN,KAAM,YACN,IAAK,aACL,YAAa,CAAC,YAAa,WAC3B,UACA,QAAS,oBACT,WAAY,IAAA,GACZ,YAAa,IAAA,GACb,WAAY,CAAC,kBACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBACT,OAAQ,eAGhB,KAAM,EAAS"}