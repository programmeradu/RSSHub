{"version":3,"file":"1x-C2Fl33WB.js","names":[],"sources":["../../lib/routes/1x/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx) => {\r\n    const { category = 'latest/awarded' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 30;\r\n\r\n    const rootUrl = 'https://1x.com';\r\n    const currentUrl = new URL(`gallery/${category}`, rootUrl).href;\r\n\r\n    const { data: currentResponse } = await got(currentUrl);\r\n\r\n    const $ = load(currentResponse);\r\n\r\n    const language = $('html').prop('lang');\r\n    const apiUrl = new URL(`backend/lm2.php?style=normal&mode=${$('input#lm_mode').prop('value')}`, rootUrl).href;\r\n\r\n    const { data: response } = await got(apiUrl);\r\n\r\n    const $$ = load(response);\r\n\r\n    const items = $$('div.photos-feed-item')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const title = item.find('span.photos-feed-data-title').first().text() || 'Untitled';\r\n            const image = item.find('img').prop('src');\r\n            const author = item.find('span.photos-feed-data-name').first().text();\r\n\r\n            const text = `${title} by ${author}`;\r\n\r\n            const description = art(path.join(__dirname, 'templates/description.art'), {\r\n                images: image\r\n                    ? [\r\n                          {\r\n                              src: image,\r\n                              alt: title,\r\n                          },\r\n                      ]\r\n                    : undefined,\r\n                description: text,\r\n            });\r\n\r\n            const id = item.find('img[id]').prop('id').split(/-/).pop();\r\n            const guid = `1x-${id}`;\r\n\r\n            return {\r\n                title,\r\n                description,\r\n                link: new URL(`photo/${id}`, rootUrl).href,\r\n                author,\r\n                guid,\r\n                id: guid,\r\n                content: {\r\n                    html: description,\r\n                    text,\r\n                },\r\n                image,\r\n                banner: image,\r\n                language,\r\n                enclosure_url: image,\r\n                enclosure_type: image ? `image/${image.split(/\\./).pop()}` : undefined,\r\n                enclosure_title: title,\r\n            };\r\n        });\r\n\r\n    const image = new URL($('img.themedlogo').prop('src'), rootUrl).href;\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        link: currentUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image,\r\n        author: $('meta[property=\"og:site_name\"]').prop('content'),\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:category{.+}?',\r\n    name: 'Gallery',\r\n    url: '1x.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/1x/latest/awarded',\r\n    parameters: { category: 'Category, Latest Awarded by default' },\r\n    description: `::: tip\r\nFill in the field in the path with the part of the corresponding page URL after \\`https://1x.com/gallery/\\` or \\`https://1x.com/photo/\\`. Here are the examples:\r\n\r\nIf you subscribe to [Abstract Awarded](https://1x.com/gallery/abstract/awarded), you should fill in the path with the part \\`abstract/awarded\\` from the page URL \\`https://1x.com/gallery/abstract/awarded\\`. In this case, the route will be [\\`/1x/abstract/awarded\\`](https://rsshub.app/1x/abstract/awarded).\r\n\r\nIf you subscribe to [Wildlife Published](https://1x.com/gallery/wildlife/published), you should fill in the path with the part \\`wildlife/published\\` from the page URL \\`https://1x.com/gallery/wildlife/published\\`. In this case, the route will be [\\`/1x/wildlife/published\\`](https://rsshub.app/1x/wildlife/published).\r\n:::`,\r\n    categories: ['design', 'picture'],\r\n\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['/gallery/:category*', '/photos/:category*'],\r\n            target: '/1x/:category',\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"+WAOA,MAAa,EAAU,KAAO,IAAQ,CAClC,GAAM,CAAE,WAAW,kBAAqB,EAAI,IAAI,QAC1C,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,iBACV,EAAa,IAAI,IAAI,WAAW,IAAY,GAAS,KAErD,CAAE,KAAM,GAAoB,MAAM,EAAI,GAEtC,EAAI,EAAK,GAET,EAAW,EAAE,QAAQ,KAAK,QAC1B,EAAS,IAAI,IAAI,qCAAqC,EAAE,iBAAiB,KAAK,WAAY,GAAS,KAEnG,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAK,EAAK,GAEV,EAAQ,EAAG,wBACZ,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,+BAA+B,QAAQ,QAAU,WACnE,EAAQ,EAAK,KAAK,OAAO,KAAK,OAC9B,EAAS,EAAK,KAAK,8BAA8B,QAAQ,OAEzD,EAAO,GAAG,EAAM,MAAM,IAEtB,EAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACvE,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,GACN,YAAa,IAGX,EAAK,EAAK,KAAK,WAAW,KAAK,MAAM,MAAM,KAAK,MAChD,EAAO,MAAM,IAEnB,MAAO,CACH,QACA,cACA,KAAM,IAAI,IAAI,SAAS,IAAM,GAAS,KACtC,SACA,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,QAEJ,MAAA,EACA,OAAQ,EACR,WACA,cAAe,EACf,eAAgB,EAAQ,SAAS,EAAM,MAAM,MAAM,QAAU,IAAA,GAC7D,gBAAiB,KAIvB,EAAQ,IAAI,IAAI,EAAE,kBAAkB,KAAK,OAAQ,GAAS,KAEhE,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,4BAA4B,KAAK,WAChD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,QACA,OAAQ,EAAE,iCAAiC,KAAK,WAChD,aAIK,EAAe,CACxB,KAAM,kBACN,KAAM,UACN,IAAK,SACL,YAAa,CAAC,WACd,UACA,QAAS,qBACT,WAAY,CAAE,SAAU,uCACxB,YAAa,yxBAOb,WAAY,CAAC,SAAU,WAEvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sBAAuB,sBAChC,OAAQ"}