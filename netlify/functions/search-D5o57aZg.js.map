{"version":3,"file":"search-D5o57aZg.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/github/search.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as url from 'node:url';\r\n\r\nconst host = 'https://github.com';\r\n\r\nexport const route: Route = {\r\n    path: '/search/:query/:sort?/:order?',\r\n    categories: ['programming'],\r\n    example: '/github/search/RSSHub/bestmatch/desc',\r\n    parameters: { query: 'search keyword', sort: 'Sort options (default to bestmatch)', order: 'Sort order, desc and asc (desc descending by default)' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Search Result',\r\n    maintainers: ['LogicJake'],\r\n    handler,\r\n    description: `| Sort options     | sort      |\r\n| ---------------- | --------- |\r\n| Best match       | bestmatch |\r\n| Most stars       | stars     |\r\n| Most forks       | forks     |\r\n| Recently updated | updated   |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const query = ctx.req.param('query');\r\n    let sort = ctx.req.param('sort') || 'bestmatch';\r\n    const order = ctx.req.param('order') || 'desc';\r\n\r\n    if (sort === 'bestmatch') {\r\n        sort = '';\r\n    }\r\n\r\n    const suffix = 'search?o='.concat(order, '&q=', encodeURIComponent(query), '&s=', sort, '&type=Repositories');\r\n    const link = url.resolve(host, suffix);\r\n    const response = await ofetch(link, {\r\n        headers: {\r\n            accept: 'application/json',\r\n        },\r\n    });\r\n\r\n    const out = response.payload.results.map((item) => {\r\n        const {\r\n            repo: { repository },\r\n            hl_trunc_description,\r\n        } = item;\r\n\r\n        return {\r\n            title: repository.name,\r\n            author: repository.owner_login,\r\n            link: host.concat(`/${repository.owner_login}/${repository.name}`),\r\n            description: hl_trunc_description,\r\n        } as DataItem;\r\n    });\r\n\r\n    return {\r\n        allowEmpty: true,\r\n        title: `${query}的搜索结果`,\r\n        link,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"sMAIA,MAAM,EAAO,qBAEAA,EAAe,CACxB,KAAM,gCACN,WAAY,CAAC,eACb,QAAS,uCACT,WAAY,CAAE,MAAO,iBAAkB,KAAM,sCAAuC,MAAO,yDAC3F,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,gBACN,YAAa,CAAC,aACd,UACA,YAAa;;;;;mCAQjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SACxB,EAAO,EAAI,IAAI,MAAM,SAAW,YAC9B,EAAQ,EAAI,IAAI,MAAM,UAAY,OAEpC,IAAS,cACT,EAAO,IAGX,IAAM,EAAS,YAAmB,OAAc,mBAAmB,QAAe,sBAC5E,EAAO,EAAI,QAAQ,EAAM,GACzB,EAAW,MAAMC,EAAO,EAAM,CAChC,QAAS,CACL,OAAQ,sBAIV,EAAM,EAAS,QAAQ,QAAQ,IAAK,GAAS,CAC/C,GAAM,CACF,KAAM,CAAE,cACR,wBACA,EAEJ,MAAO,CACH,MAAO,EAAW,KAClB,OAAQ,EAAW,YACnB,KAAM,EAAK,OAAO,IAAI,EAAW,YAAY,GAAG,EAAW,QAC3D,YAAa,KAIrB,MAAO,CACH,WAAY,GACZ,MAAO,GAAG,EAAM,OAChB,OACA,KAAM"}