{"version":3,"file":"cointelegraph-BGQHWcm0.js","names":["route: Route","parser","cache","ofetch"],"sources":["../../lib/routes/cointelegraph/index.ts"],"sourcesContent":["import { Route, Data, DataItem } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { load } from 'cheerio';\r\nimport logger from '@/utils/logger';\r\nimport parser from '@/utils/rss-parser';\r\n\r\nexport const route: Route = {\r\n    path: '/',\r\n    categories: ['finance'],\r\n    example: '/cointelegraph',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'News',\r\n    maintainers: ['pseudoyu'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['cointelegraph.com/'],\r\n            target: '/',\r\n        },\r\n    ],\r\n    description: 'Get latest news from Cointelegraph with full text.',\r\n};\r\n\r\nasync function handler(): Promise<Data> {\r\n    const rssUrl = 'https://cointelegraph.com/rss';\r\n    const feed = await parser.parseURL(rssUrl);\r\n\r\n    const items = await Promise.all(\r\n        feed.items\r\n            .filter((item) => item.link && /\\/news|\\/explained|\\/innovation-circle/.test(item.link))\r\n            .map((item) => ({\r\n                ...item,\r\n                link: item.link?.split('?')[0],\r\n            }))\r\n            .map((item) =>\r\n                cache.tryGet(item.link!, async () => {\r\n                    const link = item.link!;\r\n\r\n                    // Extract full text\r\n                    const fullText = await extractFullText(link);\r\n\r\n                    if (!fullText) {\r\n                        logger.warn(`Failed to extract content from ${link}`);\r\n                    }\r\n\r\n                    // Create article item\r\n                    return {\r\n                        title: item.title || 'Untitled',\r\n                        description: fullText || item.content,\r\n                        pubDate: item.pubDate ? parseDate(item.pubDate) : undefined,\r\n                        link,\r\n                        author: item.creator || 'CoinTelegraph',\r\n                        category: item.categories?.map((c) => c.trim()) || [],\r\n                        image: item.enclosure?.url,\r\n                    } as DataItem;\r\n                })\r\n            )\r\n    );\r\n\r\n    // Filter out null items\r\n    const validItems = items.filter((item): item is DataItem => item !== null);\r\n\r\n    return {\r\n        title: feed.title || 'CoinTelegraph News',\r\n        link: feed.link || 'https://cointelegraph.com',\r\n        description: feed.description || 'Latest news from CoinTelegraph',\r\n        language: feed.language || 'en',\r\n        item: validItems,\r\n    };\r\n}\r\n\r\nasync function extractFullText(url: string): Promise<string | null> {\r\n    try {\r\n        const response = await ofetch(url);\r\n        const $ = load(response);\r\n        const nuxtData = $('script:contains(\"window.__NUXT__\")').text();\r\n        const fullText = JSON.parse(nuxtData.match(/\\.fullText=(\".*?\");/)?.[1] || '{}');\r\n        const cover = $('.post-cover__image');\r\n\r\n        // Remove unwanted elements\r\n        cover.find('source').remove();\r\n        cover.find('img').removeAttr('srcset');\r\n        cover.find('img').attr(\r\n            'src',\r\n            cover\r\n                .find('img')\r\n                .attr('src')\r\n                ?.match(/(https:\\/\\/s3\\.cointelegraph\\.com\\/.+)/)?.[1] || ''\r\n        );\r\n\r\n        return cover.html() + fullText || null;\r\n    } catch (error) {\r\n        logger.error(`Error fetching article content: ${error}`);\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"0YAQA,MAAaA,EAAe,CACxB,KAAM,IACN,WAAY,CAAC,WACb,QAAS,iBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,YACd,UACA,MAAO,CACH,CACI,OAAQ,CAAC,sBACT,OAAQ,MAGhB,YAAa,sDAGjB,eAAe,GAAyB,CACpC,IACM,EAAO,MAAMC,EAAO,SAAS,iCAE7B,EAAQ,MAAM,QAAQ,IACxB,EAAK,MACA,OAAQ,GAAS,EAAK,MAAQ,yCAAyC,KAAK,EAAK,OACjF,IAAK,IAAU,CACZ,GAAG,EACH,KAAM,EAAK,MAAM,MAAM,KAAK,MAE/B,IAAK,GACFC,EAAM,OAAO,EAAK,KAAO,SAAY,CACjC,IAAM,EAAO,EAAK,KAGZ,EAAW,MAAM,EAAgB,GAOvC,OALK,GACD,EAAO,KAAK,kCAAkC,KAI3C,CACH,MAAO,EAAK,OAAS,WACrB,YAAa,GAAY,EAAK,QAC9B,QAAS,EAAK,QAAU,EAAU,EAAK,SAAW,IAAA,GAClD,OACA,OAAQ,EAAK,SAAW,gBACxB,SAAU,EAAK,YAAY,IAAK,GAAM,EAAE,SAAW,GACnD,MAAO,EAAK,WAAW,SAOrC,EAAa,EAAM,OAAQ,GAA2B,IAAS,MAErE,MAAO,CACH,MAAO,EAAK,OAAS,qBACrB,KAAM,EAAK,MAAQ,4BACnB,YAAa,EAAK,aAAe,iCACjC,SAAU,EAAK,UAAY,KAC3B,KAAM,GAId,eAAe,EAAgB,EAAqC,CAChE,GAAI,CACA,IAAM,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GACT,EAAW,EAAE,sCAAsC,OACnD,EAAW,KAAK,MAAM,EAAS,MAAM,yBAAyB,IAAM,MACpE,EAAQ,EAAE,sBAahB,OAVA,EAAM,KAAK,UAAU,SACrB,EAAM,KAAK,OAAO,WAAW,UAC7B,EAAM,KAAK,OAAO,KACd,MACA,EACK,KAAK,OACL,KAAK,QACJ,MAAM,4CAA4C,IAAM,IAG3D,EAAM,OAAS,GAAY,WAC7B,EAAO,CAEZ,OADA,EAAO,MAAM,mCAAmC,KACzC"}