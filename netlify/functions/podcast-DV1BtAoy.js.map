{"version":3,"file":"podcast-DV1BtAoy.js","names":[],"sources":["../../lib/routes/scientificamerican/podcast.ts"],"sourcesContent":["import path from 'node:path';\r\n\r\nimport { type CheerioAPI, load } from 'cheerio';\r\nimport { type Context } from 'hono';\r\n\r\nimport { type DataItem, type Route, type Data, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { id } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '12', 10);\r\n\r\n    const baseUrl: string = 'https://www.scientificamerican.com';\r\n    const targetUrl: string = new URL(`podcast${id ? `/${id}` : 's'}/`, baseUrl).href;\r\n\r\n    const response = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(response);\r\n    const language: string = $('html').attr('lang') ?? 'en';\r\n    const data: string | undefined = response.match(/window\\.__DATA__=JSON\\.parse\\(`(.*?)`\\)/)?.[1];\r\n    const parsedData = data ? JSON.parse(data.replaceAll('\\\\\\\\', '\\\\')) : undefined;\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = parsedData\r\n        ? parsedData.initialData.props.results.slice(0, limit).map((item): DataItem => {\r\n              const title: string = item.title;\r\n              const image: string | undefined = item.image_url;\r\n              const description: string = art(path.join(__dirname, 'templates/description.art'), {\r\n                  images: image\r\n                      ? [\r\n                            {\r\n                                src: image,\r\n                                alt: item.image_alt_text || title,\r\n                                width: item.image_width,\r\n                                height: item.image_height,\r\n                            },\r\n                        ]\r\n                      : undefined,\r\n                  intro: item.summary,\r\n              });\r\n              const pubDate: number | string = item.date_published;\r\n              const linkUrl: string | undefined = item.url;\r\n              const categories: string[] = [...new Set([item.category, item.subtype, item.column, item.digital_column].filter(Boolean))];\r\n              const authors: DataItem['author'] = item.authors.map((author) => ({\r\n                  name: author.name,\r\n                  url: author.url ? new URL(author.url, baseUrl).href : undefined,\r\n                  avatar: author.picture_file,\r\n              }));\r\n              const guid: string = `-${item.id}`;\r\n              const updated: number | string = item.release_date ?? pubDate;\r\n\r\n              let processedItem: DataItem = {\r\n                  title,\r\n                  description,\r\n                  pubDate: pubDate ? timezone(parseDate(pubDate), +8) : undefined,\r\n                  link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n                  category: categories,\r\n                  author: authors,\r\n                  doi: item.article_doi,\r\n                  guid,\r\n                  id: guid,\r\n                  content: {\r\n                      html: description,\r\n                      text: item.summary ?? description,\r\n                  },\r\n                  image,\r\n                  banner: image,\r\n                  updated: updated ? timezone(parseDate(updated), +8) : undefined,\r\n                  language,\r\n              };\r\n\r\n              const enclosureUrl: string | undefined = item.media_url;\r\n\r\n              if (enclosureUrl) {\r\n                  const enclosureType: string = `audio/${enclosureUrl.replace(/\\?.*$/, '').split(/\\./).pop()}`;\r\n\r\n                  processedItem = {\r\n                      ...processedItem,\r\n                      enclosure_url: enclosureUrl,\r\n                      enclosure_type: enclosureType,\r\n                      enclosure_title: title,\r\n                      itunes_item_image: image,\r\n                  };\r\n              }\r\n\r\n              return processedItem;\r\n          })\r\n        : [];\r\n\r\n    items = (\r\n        await Promise.all(\r\n            items.map((item) => {\r\n                if (!item.link) {\r\n                    return item;\r\n                }\r\n\r\n                return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                    const detailResponse = await ofetch(item.link);\r\n\r\n                    const detailData: string | undefined = detailResponse.match(/window\\.__DATA__=JSON\\.parse\\(`(.*?)`\\)/)?.[1];\r\n                    const parsedDetailData = detailData ? JSON.parse(detailData.replaceAll('\\\\\\\\', '\\\\')) : undefined;\r\n\r\n                    if (!parsedDetailData) {\r\n                        return item;\r\n                    }\r\n\r\n                    const articleData = parsedDetailData.initialData.article;\r\n\r\n                    const title: string = articleData.title;\r\n                    const image: string | undefined = articleData.image_url;\r\n                    const description: string = art(path.join(__dirname, 'templates/description.art'), {\r\n                        images: image\r\n                            ? [\r\n                                  {\r\n                                      src: image,\r\n                                      alt: articleData.image_alt_text || title,\r\n                                      width: articleData.image_width,\r\n                                      height: articleData.image_height,\r\n                                  },\r\n                              ]\r\n                            : undefined,\r\n                        intro: articleData.summary,\r\n                        content: articleData.content,\r\n                    });\r\n                    const pubDate: number | string = articleData.published_at_date_time;\r\n                    const categories: string[] = [...new Set([articleData.display_category, articleData.primary_category, articleData.subcategory, ...(articleData.categories ?? []), articleData.podcast_series_name])];\r\n                    const authors: DataItem['author'] = articleData.authors.map((author) => ({\r\n                        name: author.name,\r\n                        url: author.url ? new URL(author.url, baseUrl).href : undefined,\r\n                        avatar: author.picture_file,\r\n                    }));\r\n                    const guid: string = `scientificamerican-${articleData.id}`;\r\n                    const updated: number | string = articleData.updated_at_date_time ?? pubDate;\r\n\r\n                    let processedItem: DataItem = {\r\n                        title,\r\n                        description,\r\n                        pubDate: pubDate ? timezone(parseDate(pubDate), +8) : undefined,\r\n                        category: categories,\r\n                        author: authors,\r\n                        doi: articleData.article_doi,\r\n                        guid,\r\n                        id: guid,\r\n                        content: {\r\n                            html: description,\r\n                            text: articleData.summary ?? description,\r\n                        },\r\n                        image,\r\n                        banner: image,\r\n                        updated: updated ? timezone(parseDate(updated), +8) : undefined,\r\n                        language,\r\n                    };\r\n\r\n                    const enclosureUrl: string | undefined = articleData.media_url;\r\n\r\n                    if (enclosureUrl) {\r\n                        const enclosureType: string = `audio/${enclosureUrl.replace(/\\?.*$/, '').split(/\\./).pop()}`;\r\n\r\n                        processedItem = {\r\n                            ...processedItem,\r\n                            enclosure_url: enclosureUrl,\r\n                            enclosure_type: enclosureType,\r\n                            enclosure_title: title,\r\n                            itunes_item_image: image,\r\n                        };\r\n                    }\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...processedItem,\r\n                    };\r\n                });\r\n            })\r\n        )\r\n    ).filter((_): _ is DataItem => true);\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('meta[property=\"og:image\"]').attr('content'),\r\n        author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        language,\r\n        feedLink: $('link[type=\"application/rss+xml\"]').attr('href'),\r\n        itunes_author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        itunes_category: 'Science',\r\n        id: $('meta[property=\"og:url\"]').attr('content'),\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/podcast/:id?',\r\n    name: 'Podcasts',\r\n    url: 'www.scientificamerican.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/scientificamerican/podcast',\r\n    parameters: {\r\n        id: 'ID, see below',\r\n    },\r\n    description: `:::tip\r\nIf you subscribe to [Science Quickly](https://www.scientificamerican.com/podcast/science-quickly/)，where the URL is \\`https://www.scientificamerican.com/podcast/science-quickly/\\`, extract the part \\`https://www.scientificamerican.com/podcast/\\` to the end, which is \\`science-quickly\\`, and use it as the parameter to fill in. Therefore, the route will be [\\`/scientificamerican/podcast/science-quickly\\`](https://rsshub.app/scientificamerican/podcast/science-quickly).\r\n:::\r\n\r\n| All | Science Quickly | Uncertain    |\r\n| --- | --------------- | ------------ |\r\n|     | science-quickly | science-talk |\r\n`,\r\n    categories: ['new-media'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.scientificamerican.com/podcasts/', 'www.scientificamerican.com/podcast/:id'],\r\n            target: (params) => {\r\n                const id: string = params.id;\r\n\r\n                return `/scientificamerican/podcast${id ? `/${id}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: 'Science Quickly',\r\n            source: ['www.scientificamerican.com/podcast/science-quickly/'],\r\n            target: '/podcast/science-quickly',\r\n        },\r\n        {\r\n            title: 'Uncertain',\r\n            source: ['www.scientificamerican.com/podcast/science-talk/'],\r\n            target: '/podcast/science-talk',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n\r\n    zh: {\r\n        path: '/podcast/:id?',\r\n        name: 'Podcasts',\r\n        url: 'www.scientificamerican.com',\r\n        maintainers: ['nczitzk'],\r\n        handler,\r\n        example: '/scientificamerican/podcast',\r\n        parameters: {\r\n            id: 'ID，见下表',\r\n        },\r\n        description: `:::tip\r\n若订阅 [Science Quickly](https://www.scientificamerican.com/podcast/science-quickly/)，网址为 \\`https://www.scientificamerican.com/podcast/science-quickly/\\`，请截取 \\`https://www.scientificamerican.com/podcast/\\` 到末尾 \\`/\\` 的部分 \\`science-quickly\\` 作为 \\`id\\` 参数填入，此时目标路由为 [\\`/scientificamerican/podcast/science-quickly\\`](https://rsshub.app/scientificamerican/podcast/science-quickly)。\r\n:::\r\n\r\n| 全部 | Science Quickly | Uncertain    |\r\n| ---- | --------------- | ------------ |\r\n|      | science-quickly | science-talk |\r\n`,\r\n    },\r\n};\r\n"],"mappings":"ogBAaA,MAAa,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,MAAO,EAAI,IAAI,QACjB,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhE,EAAkB,qCAClB,EAAoB,IAAI,IAAI,UAAU,EAAK,IAAI,IAAO,IAAI,GAAI,GAAS,KAEvE,EAAW,MAAM,EAAO,GACxB,EAAgB,EAAK,GACrB,EAAmB,EAAE,QAAQ,KAAK,SAAW,KAC7C,EAA2B,EAAS,MAAM,6CAA6C,GACvF,EAAa,EAAO,KAAK,MAAM,EAAK,WAAW,OAAQ,OAAS,IAAA,GAElE,EAAoB,GA2JxB,MAzJA,GAAQ,EACF,EAAW,YAAY,MAAM,QAAQ,MAAM,EAAG,GAAO,IAAK,GAAmB,CACzE,IAAM,EAAgB,EAAK,MACrB,EAA4B,EAAK,UACjC,EAAsB,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC/E,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,EAAK,gBAAkB,EAC5B,MAAO,EAAK,YACZ,OAAQ,EAAK,eAGrB,IAAA,GACN,MAAO,EAAK,UAEV,EAA2B,EAAK,eAChC,EAA8B,EAAK,IACnC,EAAuB,CAAC,GAAG,IAAI,IAAI,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,OAAQ,EAAK,gBAAgB,OAAO,WAC1G,EAA8B,EAAK,QAAQ,IAAK,IAAY,CAC9D,KAAM,EAAO,KACb,IAAK,EAAO,IAAM,IAAI,IAAI,EAAO,IAAK,GAAS,KAAO,IAAA,GACtD,OAAQ,EAAO,gBAEb,EAAe,IAAI,EAAK,KACxB,EAA2B,EAAK,cAAgB,EAElD,EAA0B,CAC1B,QACA,cACA,QAAS,EAAU,EAAS,EAAU,GAAU,GAAM,IAAA,GACtD,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,SAAU,EACV,OAAQ,EACR,IAAK,EAAK,YACV,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,KAAM,EAAK,SAAW,GAE1B,QACA,OAAQ,EACR,QAAS,EAAU,EAAS,EAAU,GAAU,GAAM,IAAA,GACtD,YAGE,EAAmC,EAAK,UAE9C,GAAI,EAAc,CACd,IAAM,EAAwB,SAAS,EAAa,QAAQ,QAAS,IAAI,MAAM,MAAM,QAErF,EAAgB,CACZ,GAAG,EACH,cAAe,EACf,eAAgB,EAChB,gBAAiB,EACjB,kBAAmB,GAI3B,OAAO,IAEX,GAEN,GACI,MAAM,QAAQ,IACV,EAAM,IAAK,GACF,EAAK,KAIH,EAAM,OAAO,EAAK,KAAM,SAA+B,CAC1D,IAAM,EAAiB,MAAM,EAAO,EAAK,MAEnC,EAAiC,EAAe,MAAM,6CAA6C,GACnG,EAAmB,EAAa,KAAK,MAAM,EAAW,WAAW,OAAQ,OAAS,IAAA,GAExF,GAAI,CAAC,EACD,OAAO,EAGX,IAAM,EAAc,EAAiB,YAAY,QAE3C,EAAgB,EAAY,MAC5B,EAA4B,EAAY,UACxC,EAAsB,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC/E,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,EAAY,gBAAkB,EACnC,MAAO,EAAY,YACnB,OAAQ,EAAY,eAG5B,IAAA,GACN,MAAO,EAAY,QACnB,QAAS,EAAY,UAEnB,EAA2B,EAAY,uBACvC,EAAuB,CAAC,GAAG,IAAI,IAAI,CAAC,EAAY,iBAAkB,EAAY,iBAAkB,EAAY,YAAa,GAAI,EAAY,YAAc,GAAK,EAAY,uBACxK,EAA8B,EAAY,QAAQ,IAAK,IAAY,CACrE,KAAM,EAAO,KACb,IAAK,EAAO,IAAM,IAAI,IAAI,EAAO,IAAK,GAAS,KAAO,IAAA,GACtD,OAAQ,EAAO,gBAEb,EAAe,sBAAsB,EAAY,KACjD,EAA2B,EAAY,sBAAwB,EAEjE,EAA0B,CAC1B,QACA,cACA,QAAS,EAAU,EAAS,EAAU,GAAU,GAAM,IAAA,GACtD,SAAU,EACV,OAAQ,EACR,IAAK,EAAY,YACjB,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,KAAM,EAAY,SAAW,GAEjC,QACA,OAAQ,EACR,QAAS,EAAU,EAAS,EAAU,GAAU,GAAM,IAAA,GACtD,YAGE,EAAmC,EAAY,UAErD,GAAI,EAAc,CACd,IAAM,EAAwB,SAAS,EAAa,QAAQ,QAAS,IAAI,MAAM,MAAM,QAErF,EAAgB,CACZ,GAAG,EACH,cAAe,EACf,eAAgB,EAChB,gBAAiB,EACjB,kBAAmB,GAI3B,MAAO,CACH,GAAG,EACH,GAAG,KA5EA,KAiFrB,OAAQ,GAAqB,IAExB,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,4BAA4B,KAAK,WAChD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EAAE,6BAA6B,KAAK,WAC3C,OAAQ,EAAE,iCAAiC,KAAK,WAChD,WACA,SAAU,EAAE,oCAAoC,KAAK,QACrD,cAAe,EAAE,iCAAiC,KAAK,WACvD,gBAAiB,UACjB,GAAI,EAAE,2BAA2B,KAAK,aAIjC,EAAe,CACxB,KAAM,gBACN,KAAM,WACN,IAAK,6BACL,YAAa,CAAC,WACd,UACA,QAAS,8BACT,WAAY,CACR,GAAI,iBAER,YAAa,gmBAQb,WAAY,CAAC,aACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uCAAwC,0CACjD,OAAS,GAAW,CAChB,IAAM,EAAa,EAAO,GAE1B,MAAO,8BAA8B,EAAK,IAAI,IAAO,OAG7D,CACI,MAAO,kBACP,OAAQ,CAAC,uDACT,OAAQ,4BAEZ,CACI,MAAO,YACP,OAAQ,CAAC,oDACT,OAAQ,0BAGhB,KAAM,EAAS,SAEf,GAAI,CACA,KAAM,gBACN,KAAM,WACN,IAAK,6BACL,YAAa,CAAC,WACd,UACA,QAAS,8BACT,WAAY,CACR,GAAI,UAER,YAAa"}