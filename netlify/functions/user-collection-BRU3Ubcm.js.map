{"version":3,"file":"user-collection-BRU3Ubcm.js","names":["route: Route","cache","got","utils"],"sources":["../../lib/routes/bilibili/user-collection.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport cache from './cache';\r\nimport utils from './utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { queryToBoolean } from '@/utils/readable-social';\r\n\r\nconst notFoundData = {\r\n    title: '此 bilibili 频道不存在',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/user/collection/:uid/:sid/:embed?/:sortReverse?/:page?',\r\n    categories: ['social-media'],\r\n    example: '/bilibili/user/collection/245645656/529166',\r\n    parameters: {\r\n        uid: '用户 id, 可在 UP 主主页中找到',\r\n        sid: '合集 id, 可在合集页面的 URL 中找到',\r\n        embed: '默认为开启内嵌视频, 任意值为关闭',\r\n        sortReverse: '默认:默认排序 1:升序排序',\r\n        page: '页码, 默认1',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'UP 主频道的合集',\r\n    maintainers: ['shininome', 'cscnk52'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = Number.parseInt(ctx.req.param('uid'));\r\n    const sid = Number.parseInt(ctx.req.param('sid'));\r\n    const embed = queryToBoolean(ctx.req.param('embed') || 'true');\r\n    const sortReverse = Number.parseInt(ctx.req.param('sortReverse')) === 1;\r\n    const page = ctx.req.param('page') ? Number.parseInt(ctx.req.param('page')) : 1;\r\n    const limit = ctx.req.query('limit') ?? 25;\r\n\r\n    const link = `https://space.bilibili.com/${uid}/channel/collectiondetail?sid=${sid}`;\r\n    const [userName, face] = await cache.getUsernameAndFaceFromUID(uid);\r\n    const host = `https://api.bilibili.com/x/polymer/web-space/seasons_archives_list?mid=${uid}&season_id=${sid}&sort_reverse=${sortReverse}&page_num=${page}&page_size=${limit}`;\r\n\r\n    const response = await got(host, {\r\n        headers: {\r\n            Referer: link,\r\n        },\r\n    });\r\n\r\n    const data = response.data.data;\r\n    if (!data.archives) {\r\n        return notFoundData;\r\n    }\r\n\r\n    return {\r\n        title: `${userName} 的 bilibili 合集 ${data.meta.name}`,\r\n        link,\r\n        description: `${userName} 的 bilibili 合集`,\r\n        image: face,\r\n        logo: face,\r\n        icon: face,\r\n        item: data.archives.map((item) => ({\r\n            title: item.title,\r\n            description: utils.renderUGCDescription(embed, item.pic, '', item.aid, undefined, item.bvid),\r\n            pubDate: parseDate(item.pubdate, 'X'),\r\n            link: item.pubdate > utils.bvidTime && item.bvid ? `https://www.bilibili.com/video/${item.bvid}` : `https://www.bilibili.com/video/av${item.aid}`,\r\n            author: userName,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"2kBAOA,MAAM,EAAe,CACjB,MAAO,oBAGEA,EAAe,CACxB,KAAM,0DACN,WAAY,CAAC,gBACb,QAAS,6CACT,WAAY,CACR,IAAK,sBACL,IAAK,yBACL,MAAO,oBACP,YAAa,iBACb,KAAM,WAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,YACN,YAAa,CAAC,YAAa,WAC3B,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,OAAO,SAAS,EAAI,IAAI,MAAM,QACpC,EAAM,OAAO,SAAS,EAAI,IAAI,MAAM,QACpC,EAAQ,EAAe,EAAI,IAAI,MAAM,UAAY,QACjD,EAAc,OAAO,SAAS,EAAI,IAAI,MAAM,kBAAoB,EAChE,EAAO,EAAI,IAAI,MAAM,QAAU,OAAO,SAAS,EAAI,IAAI,MAAM,SAAW,EACxE,EAAQ,EAAI,IAAI,MAAM,UAAY,GAElC,EAAO,8BAA8B,EAAI,gCAAgC,IACzE,CAAC,EAAU,GAAQ,MAAMC,EAAM,0BAA0B,GACzD,EAAO,0EAA0E,EAAI,aAAa,EAAI,gBAAgB,EAAY,YAAY,EAAK,aAAa,IAEhK,EAAW,MAAMC,EAAI,EAAM,CAC7B,QAAS,CACL,QAAS,KAIX,EAAO,EAAS,KAAK,KAK3B,OAJK,EAAK,SAIH,CACH,MAAO,GAAG,EAAS,iBAAiB,EAAK,KAAK,OAC9C,OACA,YAAa,GAAG,EAAS,gBACzB,MAAO,EACP,KAAM,EACN,KAAM,EACN,KAAM,EAAK,SAAS,IAAK,IAAU,CAC/B,MAAO,EAAK,MACZ,YAAaC,EAAM,qBAAqB,EAAO,EAAK,IAAK,GAAI,EAAK,IAAK,IAAA,GAAW,EAAK,MACvF,QAAS,EAAU,EAAK,QAAS,KACjC,KAAM,EAAK,QAAUA,EAAM,UAAY,EAAK,KAAO,kCAAkC,EAAK,OAAS,oCAAoC,EAAK,MAC5I,OAAQ,MAfL"}