{"version":3,"file":"tag-Bsessal-.js","names":["route: Route","got"],"sources":["../../lib/routes/dockerhub/tag.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { hash } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/tag/:owner/:image/:limits?',\r\n    categories: ['program-update'],\r\n    example: '/dockerhub/tag/library/mariadb',\r\n    parameters: { owner: 'Image owner', image: 'Image name', limits: 'Tag count, 10 by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Image New Tag',\r\n    maintainers: ['pseudoyu'],\r\n    handler,\r\n    description: `::: warning\r\n  Use \\`library\\` as the \\`owner\\` for official images, such as [https://rsshub.app/dockerhub/tag/library/mysql](https://rsshub.app/dockerhub/tag/library/mysql)\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { owner, image, limits } = ctx.req.param();\r\n\r\n    const namespace = `${owner}/${image}`;\r\n    const link = `https://hub.docker.com/r/${namespace}`;\r\n\r\n    const pageSize = Number.isNaN(Number.parseInt(limits)) ? 10 : Number.parseInt(limits);\r\n\r\n    const data = await got.get(`https://hub.docker.com/v2/repositories/${namespace}/tags/?page_size=${pageSize}`);\r\n    const metadata = await got.get(`https://hub.docker.com/v2/repositories/${namespace}/`);\r\n\r\n    const tags = data.data.results;\r\n\r\n    return {\r\n        title: `${namespace} tags`,\r\n        description: metadata.data.description,\r\n        link,\r\n        language: 'en',\r\n        item: tags.map((item) => {\r\n            const architectures = item.images?.length ? item.images.map((img) => `${img.os}/${img.architecture}`).join(', ') : 'unknown architectures';\r\n\r\n            const imageDigest = item.digest?.replace(':', '-') || '';\r\n            const layerLink = `https://hub.docker.com/layers/${owner === 'library' ? `${image}/` : ''}${namespace}/${item.name}/images/${imageDigest}`;\r\n\r\n            return {\r\n                title: `${namespace}:${item.name} was updated`,\r\n                description: `${namespace}:${item.name} was updated, supporting the ${architectures}`,\r\n                link: layerLink,\r\n                author: owner,\r\n                pubDate: parseDate(item.tag_last_pushed),\r\n                guid: `${namespace}:${item.name}@${hash(item.images || [])}`,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"0VAKA,MAAaA,EAAe,CACxB,KAAM,8BACN,WAAY,CAAC,kBACb,QAAS,iCACT,WAAY,CAAE,MAAO,cAAe,MAAO,aAAc,OAAQ,4BACjE,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,gBACN,YAAa,CAAC,YACd,UACA,YAAa,kLAKjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAO,QAAO,UAAW,EAAI,IAAI,QAEnC,EAAY,GAAG,EAAM,GAAG,IACxB,EAAO,4BAA4B,IAEnC,EAAW,OAAO,MAAM,OAAO,SAAS,IAAW,GAAK,OAAO,SAAS,GAExE,EAAO,MAAMC,EAAI,IAAI,0CAA0C,EAAU,mBAAmB,KAC5F,EAAW,MAAMA,EAAI,IAAI,0CAA0C,EAAU,IAE7E,EAAO,EAAK,KAAK,QAEvB,MAAO,CACH,MAAO,GAAG,EAAU,OACpB,YAAa,EAAS,KAAK,YAC3B,OACA,SAAU,KACV,KAAM,EAAK,IAAK,GAAS,CACrB,IAAM,EAAgB,EAAK,QAAQ,OAAS,EAAK,OAAO,IAAK,GAAQ,GAAG,EAAI,GAAG,GAAG,EAAI,gBAAgB,KAAK,MAAQ,wBAE7G,EAAc,EAAK,QAAQ,QAAQ,IAAK,MAAQ,GAChD,EAAY,iCAAiC,IAAU,UAAY,GAAG,EAAM,GAAK,KAAK,EAAU,GAAG,EAAK,KAAK,UAAU,IAE7H,MAAO,CACH,MAAO,GAAG,EAAU,GAAG,EAAK,KAAK,cACjC,YAAa,GAAG,EAAU,GAAG,EAAK,KAAK,+BAA+B,IACtE,KAAM,EACN,OAAQ,EACR,QAAS,EAAU,EAAK,iBACxB,KAAM,GAAG,EAAU,GAAG,EAAK,KAAK,GAAG,EAAK,EAAK,QAAU"}