{"version":3,"file":"utils-G1dgBSPM.js","names":[],"sources":["../../lib/routes/zuvio/utils.ts"],"sourcesContent":["import { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport got from '@/utils/got';\r\n\r\nconst token =\r\n    'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0OTcyMzI1MjMsInN5c3RlbV9uYW1lIjoiZm9ydW0iLCJ6dXZpb19pZCI6LTk5OSwiZW1haWwiOm51bGwsIm5hbWUiOm51bGwsInVuaXZlcnNpdHlfaWQiOm51bGwsInVuaXZlcnNpdHlfbmFtZSI6bnVsbH0.0KoJiSnyazsJxLCNEnqnuNUdKsJFhBdCn3R2BJpoUtk';\r\nconst apiUrl = 'https://forum.zuvio.com.tw/api';\r\nconst rootUrl = 'https://irs.zuvio.com.tw/student5/chickenM';\r\n\r\nconst renderDesc = (data) => {\r\n    let output = '';\r\n    if (data.ref_article) {\r\n        output += art(path.join(__dirname, 'templates/ref_article.art'), {\r\n            ref_article: data.ref_article,\r\n        });\r\n    }\r\n    output += renderSections(data.sections);\r\n    return output;\r\n};\r\n\r\nconst renderSections = (sections) => {\r\n    let output = '';\r\n    for (const section of sections) {\r\n        switch (section.type) {\r\n            case 'text':\r\n                output += section.content.replaceAll('\\n', '<br>');\r\n\r\n                break;\r\n\r\n            case 'img':\r\n                output += art(path.join(__dirname, 'templates/img.art'), { section });\r\n\r\n                break;\r\n\r\n            case 'youtube':\r\n                output += art(path.join(__dirname, 'templates/youtube.art'), { section });\r\n\r\n                break;\r\n\r\n            case 'link':\r\n                output += art(path.join(__dirname, 'templates/link.art'), { section });\r\n\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unknown section type: ${section.type}`);\r\n        }\r\n    }\r\n    return output;\r\n};\r\n\r\nconst getBoards = (tryGet) =>\r\n    tryGet('zuvio:boards', async () => {\r\n        const { data } = await got(`${apiUrl}/board`, {\r\n            searchParams: {\r\n                api_token: token,\r\n                user_id: '0',\r\n            },\r\n        });\r\n\r\n        return data.map((item) => ({\r\n            title: item.name,\r\n            description: art(path.join(__dirname, 'templates/rss.art'), { id: item.id }),\r\n            boardId: item.id,\r\n            link: `${rootUrl}/articles/${item.id}`,\r\n        }));\r\n    });\r\n\r\nexport { token, apiUrl, rootUrl, renderDesc, renderSections, getBoards };\r\n"],"mappings":"gMAIA,MAAM,EACF,2PACE,EAAS,iCACT,EAAU,6CAEV,EAAc,GAAS,CACzB,IAAI,EAAS,GAOb,OANI,EAAK,cACL,GAAU,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC7D,YAAa,EAAK,eAG1B,GAAU,EAAe,EAAK,UACvB,GAGL,EAAkB,GAAa,CACjC,IAAI,EAAS,GACb,IAAK,IAAM,KAAW,EAClB,OAAQ,EAAQ,KAAhB,CACI,IAAK,OACD,GAAU,EAAQ,QAAQ,WAAW;EAAM,QAE3C,MAEJ,IAAK,MACD,GAAU,EAAI,EAAA,KAAA,EAAA,8BAA2C,CAAE,YAE3D,MAEJ,IAAK,UACD,GAAU,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAAE,YAE/D,MAEJ,IAAK,OACD,GAAU,EAAI,EAAA,KAAA,EAAA,+BAA4C,CAAE,YAE5D,MAEJ,QACI,MAAU,MAAM,yBAAyB,EAAQ,QAG7D,OAAO,GAGL,EAAa,GACf,EAAO,eAAgB,SAAY,CAC/B,GAAM,CAAE,QAAS,MAAM,EAAI,GAAG,EAAO,QAAS,CAC1C,aAAc,CACV,UAAW,EACX,QAAS,OAIjB,OAAO,EAAK,IAAK,IAAU,CACvB,MAAO,EAAK,KACZ,YAAa,EAAI,EAAA,KAAA,EAAA,8BAA2C,CAAE,GAAI,EAAK,KACvE,QAAS,EAAK,GACd,KAAM,GAAG,EAAQ,YAAY,EAAK"}