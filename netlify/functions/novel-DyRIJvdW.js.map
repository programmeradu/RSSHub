{"version":3,"file":"novel-DyRIJvdW.js","names":["route: Route","ofetch","list: DataItem[]","cache","response","$"],"sources":["../../lib/routes/zxcs/novel.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport type { Route, DataItem } from '@/types';\r\n\r\nconst types = {\r\n    jinqigengxin: '近期更新',\r\n    dushi: '都市',\r\n    xianxia: '仙侠',\r\n    xuanhuan: '玄幻',\r\n    qihuan: '奇幻',\r\n    lishi: '历史',\r\n    youxi: '游戏',\r\n    wuxia: '武侠',\r\n    kehuan: '科幻',\r\n    tiyu: '体育',\r\n    lingyi: '灵异',\r\n    junshi: '军事',\r\n    erciyuan: '轻小说',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/novel/:type',\r\n    name: '小说列表',\r\n    url: 'zxcs.info',\r\n    maintainers: ['liaochuan'],\r\n    example: '/zxcs/novel/jinqigengxin',\r\n    parameters: { type: '小说类型, 可在对应类型页 URL 中找到' },\r\n    description: `支持小说类型：${Object.entries(types)\r\n        .map(([key, value]) => `${key}-${value}`)\r\n        .join(',')}`,\r\n    categories: ['reading'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['zxcs.info/:type'],\r\n            target: '/novel/:type',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { type } = ctx.req.param();\r\n\r\n    const baseUrl = `https://www.zxcs.info`;\r\n    const link = `${baseUrl}/${type}`;\r\n    const response = await ofetch(link);\r\n    const $ = load(response);\r\n\r\n    const list: DataItem[] = $('div.book-info')\r\n        .toArray()\r\n        .map((item) => {\r\n            const $item = $(item);\r\n            const a = $item.find('a').first();\r\n            return {\r\n                title: a.text(),\r\n                link: String(a.attr('href')),\r\n                pubDate: parseDate($item.find('.update').text()),\r\n                category: [],\r\n                description: '',\r\n                image: '',\r\n                author: '',\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(String(item.link), async () => {\r\n                const response = await ofetch(String(item.link));\r\n                const $ = load(response);\r\n                const links = String(item.link).split('/');\r\n                item.category = [types[String(links.at(-2))]];\r\n                item.description = String($('.intro').first().html());\r\n                item.image = baseUrl + String($('.book-cover img').attr('src'));\r\n                item.author = $('.author').text();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `知轩藏书 - ${types[type]}`,\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAM,EAAQ,CACV,aAAc,OACd,MAAO,KACP,QAAS,KACT,SAAU,KACV,OAAQ,KACR,MAAO,KACP,MAAO,KACP,MAAO,KACP,OAAQ,KACR,KAAM,KACN,OAAQ,KACR,OAAQ,KACR,SAAU,OAGDA,EAAe,CACxB,KAAM,eACN,KAAM,OACN,IAAK,YACL,YAAa,CAAC,aACd,QAAS,2BACT,WAAY,CAAE,KAAM,yBACpB,YAAa,UAAU,OAAO,QAAQ,GACjC,KAAK,CAAC,EAAK,KAAW,GAAG,EAAI,GAAG,KAChC,KAAK,OACV,WAAY,CAAC,WACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mBACT,OAAQ,iBAGhB,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAS,EAAI,IAAI,QAEnB,EAAU,wBACV,EAAO,GAAG,EAAQ,GAAG,IACrB,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GAETC,EAAmB,EAAE,iBACtB,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAI,EAAM,KAAK,KAAK,QAC1B,MAAO,CACH,MAAO,EAAE,OACT,KAAM,OAAO,EAAE,KAAK,SACpB,QAAS,EAAU,EAAM,KAAK,WAAW,QACzC,SAAU,GACV,YAAa,GACb,MAAO,GACP,OAAQ,MAId,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,OAAO,EAAK,MAAO,SAAY,CACxC,IAAMC,EAAW,MAAMH,EAAO,OAAO,EAAK,OACpCI,EAAI,EAAKD,GACT,EAAQ,OAAO,EAAK,MAAM,MAAM,KAKtC,MAJA,GAAK,SAAW,CAAC,EAAM,OAAO,EAAM,GAAG,OACvC,EAAK,YAAc,OAAOC,EAAE,UAAU,QAAQ,QAC9C,EAAK,MAAQ,EAAU,OAAOA,EAAE,mBAAmB,KAAK,QACxD,EAAK,OAASA,EAAE,WAAW,OACpB,MAKnB,MAAO,CACH,MAAO,UAAU,EAAM,KACvB,OACA,KAAM"}