{"version":3,"file":"collection-BS4TPhkL.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/itc/collection.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\n\r\n/**\r\n * OpenGithub - Github开源项目精选\r\n *  colType：0 | 1 | 2 | 3\r\n */\r\n\r\nenum COL_TYPE {\r\n    HANDPICK,\r\n    SPECIAL,\r\n    WEEKLY,\r\n    MONTHLY,\r\n}\r\n\r\nconst RESULT_DESC_MAP = {\r\n    [COL_TYPE.HANDPICK]: 'OpenGithub - Github开源项目精选 - 精选文章',\r\n    [COL_TYPE.SPECIAL]: 'OpenGithub - Github开源项目精选 - 专栏',\r\n    [COL_TYPE.WEEKLY]: 'OpenGithub - Github开源项目精选 - 周刊',\r\n    [COL_TYPE.MONTHLY]: 'OpenGithub - Github开源项目精选 - 月刊',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/collection/:colType',\r\n    categories: ['blog'],\r\n    example: '/itc/collection/1',\r\n    radar: [\r\n        {\r\n            source: ['open.itc.cn/'],\r\n        },\r\n    ],\r\n    name: '合集',\r\n    maintainers: ['cnkmmk'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const url = 'https://open.itc.cn';\r\n\r\n    const colType = ctx.req.param('colType');\r\n\r\n    const result = {\r\n        title: RESULT_DESC_MAP[colType] ?? 'NULL',\r\n        link: url,\r\n        description: RESULT_DESC_MAP[colType] ?? 'NULL',\r\n        item: [] as DataItem[],\r\n    };\r\n    const response = await ofetch(`${url}/github/collection/list?colType=${colType}`);\r\n    const $ = load(response);\r\n\r\n    result.item = [...$('.tab-pane > .row > .card')].map((item) => {\r\n        const date = $(item).find('.d-flex.mt-3.ms-sm-auto').text()?.split(':')?.[1];\r\n        const dataObject = date ? new Date(date) : undefined;\r\n\r\n        return {\r\n            title: $(item).find('a.btn-link').text(),\r\n            description: $(item).find('.d-sm-inline-block').text(),\r\n            link: $(item).find('a.btn-link').attr('href') || '',\r\n            pubDate: dataObject,\r\n            category: [...$(item).find('.nav.nav-stack.small li')].map((sub) => $(sub).find('.badge').text()),\r\n        };\r\n    });\r\n\r\n    return result;\r\n}\r\n"],"mappings":"0MASA,IAAK,EAAA,SAAA,EAAL,OACI,GAAA,EAAA,SAAA,GAAA,WACA,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,QAAA,GAAA,aAJC,GAAA,IAOL,MAAM,EAAkB,EACnB,EAAS,UAAW,oCACpB,EAAS,SAAU,kCACnB,EAAS,QAAS,kCAClB,EAAS,SAAU,kCAGXA,EAAe,CACxB,KAAM,uBACN,WAAY,CAAC,QACb,QAAS,oBACT,MAAO,CACH,CACI,OAAQ,CAAC,kBAGjB,KAAM,KACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,sBAEN,EAAU,EAAI,IAAI,MAAM,WAExB,EAAS,CACX,MAAO,EAAgB,IAAY,OACnC,KAAM,EACN,YAAa,EAAgB,IAAY,OACzC,KAAM,IAEJ,EAAW,MAAMC,EAAO,GAAG,EAAI,kCAAkC,KACjE,EAAI,EAAK,GAef,MAbA,GAAO,KAAO,CAAC,GAAG,EAAE,6BAA6B,IAAK,GAAS,CAC3D,IAAM,EAAO,EAAE,GAAM,KAAK,2BAA2B,QAAQ,MAAM,OAAO,GACpE,EAAa,EAAO,IAAI,KAAK,GAAQ,IAAA,GAE3C,MAAO,CACH,MAAO,EAAE,GAAM,KAAK,cAAc,OAClC,YAAa,EAAE,GAAM,KAAK,sBAAsB,OAChD,KAAM,EAAE,GAAM,KAAK,cAAc,KAAK,SAAW,GACjD,QAAS,EACT,SAAU,CAAC,GAAG,EAAE,GAAM,KAAK,4BAA4B,IAAK,GAAQ,EAAE,GAAK,KAAK,UAAU,WAI3F"}