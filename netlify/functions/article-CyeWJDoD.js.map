{"version":3,"file":"article-CyeWJDoD.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/paulgraham/article.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: ['/articles', '/essays', '/'],\r\n    categories: ['blog'],\r\n    example: '/paulgraham/articles',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['paulgraham.com/articles.html'],\r\n        },\r\n    ],\r\n    name: 'Essays',\r\n    maintainers: ['Maecenas', 'nczitzk', 'dvorak0'],\r\n    handler,\r\n    url: 'paulgraham.com/articles.html',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 30;\r\n\r\n    const rootUrl = 'https://paulgraham.com';\r\n    const currentUrl = new URL('articles.html', rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    let items = $('font a')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.text(),\r\n                link: new URL(item.prop('href'), rootUrl).href,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const content = load(detailResponse);\r\n\r\n                const description = content('font').first();\r\n\r\n                item.title = content('title').text();\r\n                item.description = description.html();\r\n                item.pubDate = parseDate(description.contents().first().text(), 'MMMM YYYY');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const author = 'Paul Graham';\r\n    const title = $('title').text();\r\n    const icon = $('link[rel=\"shortcut icon\"]').prop('href');\r\n\r\n    return {\r\n        item: items,\r\n        title: `${author} - ${title}`,\r\n        link: currentUrl,\r\n        description: title,\r\n        language: 'en',\r\n        image: $(`img[alt=\"${title}\"]`).prop('src'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: title,\r\n        author,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,CAAC,YAAa,UAAW,KAC/B,WAAY,CAAC,QACb,QAAS,uBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,kCAGjB,KAAM,SACN,YAAa,CAAC,WAAY,UAAW,WACrC,UACA,IAAK,gCAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,yBACV,EAAa,IAAI,IAAI,gBAAiB,GAAS,KAE/C,CAAE,KAAM,GAAa,MAAMC,EAAI,GAE/B,EAAI,EAAK,GAEX,EAAQ,EAAE,UACT,MAAM,EAAG,GACT,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OACZ,KAAM,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,QAItD,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAMD,EAAI,EAAK,MAE1C,EAAU,EAAK,GAEf,EAAc,EAAQ,QAAQ,QAMpC,MAJA,GAAK,MAAQ,EAAQ,SAAS,OAC9B,EAAK,YAAc,EAAY,OAC/B,EAAK,QAAU,EAAU,EAAY,WAAW,QAAQ,OAAQ,aAEzD,MAKnB,IAAM,EAAS,cACT,EAAQ,EAAE,SAAS,OACnB,EAAO,EAAE,6BAA6B,KAAK,QAEjD,MAAO,CACH,KAAM,EACN,MAAO,GAAG,EAAO,KAAK,IACtB,KAAM,EACN,YAAa,EACb,SAAU,KACV,MAAO,EAAE,YAAY,EAAM,KAAK,KAAK,OACrC,OACA,KAAM,EACN,SAAU,EACV,SACA,WAAY"}