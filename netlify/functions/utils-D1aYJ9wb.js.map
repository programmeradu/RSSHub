{"version":3,"file":"utils-D1aYJ9wb.js","names":[],"sources":["../../lib/routes/newslaundry/utils.ts"],"sourcesContent":["import { Data, DataItem } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const rootUrl = 'https://www.newslaundry.com';\r\n\r\nexport async function fetchCollection(collectionSlug: string, customUrl?: string, skipFirstItem: boolean = false) {\r\n    const apiUrl = `${rootUrl}/api/v1/collections/${collectionSlug}`;\r\n    const currentUrl = customUrl || `${rootUrl}/${collectionSlug}`;\r\n\r\n    const response = await ofetch(apiUrl);\r\n\r\n    if (!response.items || !response.items.length) {\r\n        throw new Error('No articles found');\r\n    }\r\n\r\n    // Skip first item if requested\r\n    const itemsToProcess = skipFirstItem ? response.items.slice(1) : response.items;\r\n    const items = itemsToProcess.map((item) => processStory(item.story));\r\n\r\n    return {\r\n        title: `${response.name} - Newslaundry`,\r\n        description: response.summary || `${response.name} articles from Newslaundry`,\r\n        link: currentUrl,\r\n        item: items,\r\n        language: 'en',\r\n        logo: `${rootUrl}/favicon.ico`,\r\n        icon: `${rootUrl}/favicon.ico`,\r\n    } as Data;\r\n}\r\n\r\nfunction processStory(story: any): DataItem {\r\n    const articleUrl = story.url;\r\n    const pubDate = story['published-at'] ? parseDate(story['published-at']) : null;\r\n\r\n    // Prepare data for template\r\n    const heroImage = story['hero-image-s3-key'] ? `https://media.assettype.com/${story['hero-image-s3-key']}?auto=format%2Ccompress&fit=max&dpr=1.0&format=webp` : null;\r\n\r\n    // Extract elements from cards\r\n    const elements =\r\n        story.cards?.flatMap(\r\n            (card) =>\r\n                card?.['story-elements']\r\n                    ?.map((element) => {\r\n                        if (element.type === 'text' && element.text) {\r\n                            return {\r\n                                type: 'text',\r\n                                text: element.text,\r\n                            };\r\n                        } else if (element.type === 'image' && element['image-s3-key']) {\r\n                            return {\r\n                                type: 'image',\r\n                                url: `https://media.assettype.com/${element['image-s3-key']}?auto=format%2Ccompress&format=webp`,\r\n                                alt: element['alt-text'] || '',\r\n                                title: element.title || '',\r\n                            };\r\n                        } else if (element.type === 'jsembed' && element['embed-js']) {\r\n                            try {\r\n                                return {\r\n                                    type: 'jsembed',\r\n                                    content: Buffer.from(element['embed-js'], 'base64').toString(),\r\n                                };\r\n                            } catch {\r\n                                // Skip if unable to decode\r\n                                return null;\r\n                            }\r\n                        } else if (element.type === 'youtube-video' && element.url) {\r\n                            return {\r\n                                type: 'youtube-video',\r\n                                url: element.url,\r\n                                embedUrl: element['embed-url'] || '',\r\n                            };\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .filter(Boolean) || []\r\n        ) || [];\r\n\r\n    // Render content using template\r\n    const content = art(path.join(__dirname, 'templates/description.art'), {\r\n        heroImage,\r\n        heroAlt: story['hero-image-alt-text'] || '',\r\n        heroCaption: story['hero-image-caption'] || '',\r\n        heroAttribution: story['hero-image-attribution'],\r\n        elements,\r\n        subheadline: story.subheadline,\r\n    });\r\n\r\n    // Extract author information\r\n    const authors =\r\n        story.authors?.map((author) => ({\r\n            name: author.name,\r\n            url: author.slug ? `${rootUrl}/author/${author.slug}` : undefined,\r\n        })) || [];\r\n\r\n    return {\r\n        title: story.headline,\r\n        link: articleUrl,\r\n        image: heroImage,\r\n        description: content || story.subheadline,\r\n        pubDate,\r\n        updated: story['last-correction-published-at'] ? parseDate(story['last-correction-published-at']) : undefined,\r\n        author: authors.length > 0 ? authors : story['author-name'],\r\n        category: story.tags?.map((tag) => tag.name) || [],\r\n    } as DataItem;\r\n}\r\n"],"mappings":"2PAMA,MAAa,EAAU,8BAEvB,eAAsB,EAAgB,EAAwB,EAAoB,EAAyB,GAAO,CAC9G,IAAM,EAAS,GAAG,EAAQ,sBAAsB,IAC1C,EAAa,GAAa,GAAG,EAAQ,GAAG,IAExC,EAAW,MAAM,EAAO,GAE9B,GAAI,CAAC,EAAS,OAAS,CAAC,EAAS,MAAM,OACnC,MAAU,MAAM,qBAIpB,IAAM,EAAiB,EAAgB,EAAS,MAAM,MAAM,GAAK,EAAS,MACpE,EAAQ,EAAe,IAAK,GAAS,EAAa,EAAK,QAE7D,MAAO,CACH,MAAO,GAAG,EAAS,KAAK,gBACxB,YAAa,EAAS,SAAW,GAAG,EAAS,KAAK,4BAClD,KAAM,EACN,KAAM,EACN,SAAU,KACV,KAAM,GAAG,EAAQ,cACjB,KAAM,GAAG,EAAQ,eAIzB,SAAS,EAAa,EAAsB,CACxC,IAAM,EAAa,EAAM,IACnB,EAAU,EAAM,gBAAkB,EAAU,EAAM,iBAAmB,KAGrE,EAAY,EAAM,qBAAuB,+BAA+B,EAAM,qBAAqB,qDAAuD,KAG1J,EACF,EAAM,OAAO,QACR,GACG,IAAO,mBACD,IAAK,GAAY,CACf,GAAI,EAAQ,OAAS,QAAU,EAAQ,KACnC,MAAO,CACH,KAAM,OACN,KAAM,EAAQ,SAEX,EAAQ,OAAS,SAAW,EAAQ,gBAC3C,MAAO,CACH,KAAM,QACN,IAAK,+BAA+B,EAAQ,gBAAgB,qCAC5D,IAAK,EAAQ,aAAe,GAC5B,MAAO,EAAQ,OAAS,OAErB,EAAQ,OAAS,WAAa,EAAQ,YAC7C,GAAI,CACA,MAAO,CACH,KAAM,UACN,QAAS,OAAO,KAAK,EAAQ,YAAa,UAAU,iBAEpD,CAEJ,OAAO,aAEJ,EAAQ,OAAS,iBAAmB,EAAQ,IACnD,MAAO,CACH,KAAM,gBACN,IAAK,EAAQ,IACb,SAAU,EAAQ,cAAgB,IAG1C,OAAO,OAEV,OAAO,UAAY,KAC3B,GAGH,EAAU,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACnE,YACA,QAAS,EAAM,wBAA0B,GACzC,YAAa,EAAM,uBAAyB,GAC5C,gBAAiB,EAAM,0BACvB,WACA,YAAa,EAAM,cAIjB,EACF,EAAM,SAAS,IAAK,IAAY,CAC5B,KAAM,EAAO,KACb,IAAK,EAAO,KAAO,GAAG,EAAQ,UAAU,EAAO,OAAS,IAAA,OACrD,GAEX,MAAO,CACH,MAAO,EAAM,SACb,KAAM,EACN,MAAO,EACP,YAAa,GAAW,EAAM,YAC9B,UACA,QAAS,EAAM,gCAAkC,EAAU,EAAM,iCAAmC,IAAA,GACpG,OAAQ,EAAQ,OAAS,EAAI,EAAU,EAAM,eAC7C,SAAU,EAAM,MAAM,IAAK,GAAQ,EAAI,OAAS"}