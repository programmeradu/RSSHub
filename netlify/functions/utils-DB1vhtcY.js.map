{"version":3,"file":"utils-DB1vhtcY.js","names":[],"sources":["../../lib/routes/qq/ac/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst rootUrl = 'https://ac.qq.com';\r\nconst mobileRootUrl = 'https://m.ac.qq.com';\r\nconst ProcessItems = async (ctx, currentUrl, time, title) => {\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items = $(`${time ? `.${time}-month-data ` : ''}.text-overflow`)\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 30)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.text(),\r\n                guid: `${rootUrl}${item.attr('href')}`,\r\n                link: `${mobileRootUrl}${item.attr('href').replace(/Comic\\/ComicInfo/, 'comic/index')}`,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.guid, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                item.link = item.guid;\r\n                item.author = content('.author-wr')\r\n                    .toArray()\r\n                    .map((a) => $(a).text().trim())\r\n                    .join(', ');\r\n                item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                    image: content('.head-cover')?.attr('src') ?? '',\r\n                    description: content('.head-info-desc')?.text() ?? '',\r\n                    chapters: content('.reverse .bottom-chapter-item .chapter-link')\r\n                        .toArray()\r\n                        .map((chapter) => ({\r\n                            link: content(chapter).attr('href'),\r\n                            title: content(chapter).find('.comic-title')?.text() ?? '',\r\n                            image: content(chapter).find('.cover-image')?.attr('src') ?? '',\r\n                        })),\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `${title} - 腾讯动漫`,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n};\r\n\r\nexport { rootUrl, mobileRootUrl, ProcessItems };\r\n"],"mappings":"mRAMA,MAAM,EAAU,oBACV,EAAgB,sBAChB,EAAe,MAAO,EAAK,EAAY,EAAM,IAAU,CACzD,IAAM,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,GAAG,EAAO,IAAI,EAAK,cAAgB,GAAG,iBAC/C,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,IAC5E,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OACZ,KAAM,GAAG,IAAU,EAAK,KAAK,UAC7B,KAAM,GAAG,IAAgB,EAAK,KAAK,QAAQ,QAAQ,mBAAoB,oBAoCnF,MAhCA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAM,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAmBpC,MAjBA,GAAK,KAAO,EAAK,KACjB,EAAK,OAAS,EAAQ,cACjB,UACA,IAAK,GAAM,EAAE,GAAG,OAAO,QACvB,KAAK,MACV,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,MAAO,EAAQ,gBAAgB,KAAK,QAAU,GAC9C,YAAa,EAAQ,oBAAoB,QAAU,GACnD,SAAU,EAAQ,+CACb,UACA,IAAK,IAAa,CACf,KAAM,EAAQ,GAAS,KAAK,QAC5B,MAAO,EAAQ,GAAS,KAAK,iBAAiB,QAAU,GACxD,MAAO,EAAQ,GAAS,KAAK,iBAAiB,KAAK,QAAU,QAIlE,MAKZ,CACH,MAAO,GAAG,EAAM,SAChB,KAAM,EACN,KAAM"}