{"version":3,"file":"feeds-Dlbc2JA2.js","names":[],"sources":["../../lib/routes/bsky/feeds.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { resolveHandle, getFeed, getFeedGenerator } from './utils';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/profile/:handle/feed/:space/:routeParams?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/bsky.app/profile/jaz.bsky.social/feed/cv:cat',\r\n    parameters: {\r\n        handle: 'User handle, can be found in URL',\r\n        space: 'Space ID, can be found in URL',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Feeds',\r\n    maintainers: ['FerrisChi'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const handle = ctx.req.param('handle');\r\n    const space = ctx.req.param('space');\r\n\r\n    const DID = await resolveHandle(handle, cache.tryGet);\r\n    const uri = `at://${DID}/app.bsky.feed.generator/${space}`;\r\n    const profile = await getFeedGenerator(uri, cache.tryGet);\r\n    const feeds = await getFeed(uri, cache.tryGet);\r\n\r\n    const items = feeds.feed.map(({ post }) => ({\r\n        title: post.record.text.split('\\n')[0],\r\n        description: art(path.join(__dirname, 'templates/post.art'), {\r\n            text: post.record.text.replaceAll('\\n', '<br>'),\r\n            embed: post.embed,\r\n            // embed.$type \"app.bsky.embed.record#view\" and \"app.bsky.embed.recordWithMedia#view\" are not handled\r\n        }),\r\n        author: post.author.displayName,\r\n        pubDate: parseDate(post.record.createdAt),\r\n        link: `https://bsky.app/profile/${post.author.handle}/post/${post.uri.split('app.bsky.feed.post/')[1]}`,\r\n        upvotes: post.likeCount,\r\n        comments: post.replyCount,\r\n    }));\r\n\r\n    ctx.set('json', {\r\n        DID,\r\n        profile,\r\n        feeds,\r\n    });\r\n\r\n    return {\r\n        title: `${profile.view.displayName} â€” Bluesky`,\r\n        description: profile.view.description?.replaceAll('\\n', ' '),\r\n        link: `https://bsky.app/profile/${handle}/feed/${space}`,\r\n        image: profile.view.avatar,\r\n        icon: profile.view.avatar,\r\n        logo: profile.view.avatar,\r\n        item: items,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"yiBAQA,MAAa,EAAe,CACxB,KAAM,6CACN,WAAY,CAAC,gBACb,KAAM,EAAS,YACf,QAAS,gDACT,WAAY,CACR,OAAQ,mCACR,MAAO,iCAEX,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,QACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAS,EAAI,IAAI,MAAM,UACvB,EAAQ,EAAI,IAAI,MAAM,SAEtB,EAAM,MAAM,EAAc,EAAQ,EAAM,QACxC,EAAM,QAAQ,EAAI,2BAA2B,IAC7C,EAAU,MAAM,EAAiB,EAAK,EAAM,QAC5C,EAAQ,MAAM,EAAQ,EAAK,EAAM,QAEjC,EAAQ,EAAM,KAAK,KAAK,CAAE,WAAY,CACxC,MAAO,EAAK,OAAO,KAAK,MAAM;GAAM,GACpC,YAAa,EAAI,EAAA,KAAA,EAAA,+BAA4C,CACzD,KAAM,EAAK,OAAO,KAAK,WAAW;EAAM,QACxC,MAAO,EAAK,QAGhB,OAAQ,EAAK,OAAO,YACpB,QAAS,EAAU,EAAK,OAAO,WAC/B,KAAM,4BAA4B,EAAK,OAAO,OAAO,QAAQ,EAAK,IAAI,MAAM,uBAAuB,KACnG,QAAS,EAAK,UACd,SAAU,EAAK,cASnB,OANA,EAAI,IAAI,OAAQ,CACZ,MACA,UACA,UAGG,CACH,MAAO,GAAG,EAAQ,KAAK,YAAY,YACnC,YAAa,EAAQ,KAAK,aAAa,WAAW;EAAM,KACxD,KAAM,4BAA4B,EAAO,QAAQ,IACjD,MAAO,EAAQ,KAAK,OACpB,KAAM,EAAQ,KAAK,OACnB,KAAM,EAAQ,KAAK,OACnB,KAAM,EACN,WAAY"}