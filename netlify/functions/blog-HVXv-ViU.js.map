{"version":3,"file":"blog-HVXv-ViU.js","names":["route: Route","got","cache","description"],"sources":["../../lib/routes/tokeninsight/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nconst baseURL = 'https://www.tokeninsight.com/';\r\nconst title = 'TokenInsight';\r\nconst link = 'https://www.tokeninsight.com/';\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:lang?',\r\n    categories: ['finance'],\r\n    example: '/tokeninsight/blog/en',\r\n    parameters: { lang: 'Language, see below, Chinese by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['tokeninsight.com/:lang/blogs'],\r\n            target: '/blog/:lang',\r\n        },\r\n    ],\r\n    name: 'Blogs',\r\n    maintainers: ['fuergaosi233'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const lang = ctx.req.param('lang') ?? 'zh';\r\n\r\n    const getBlogs = async () => {\r\n        const url = `${baseURL}api/user/search/getAllList`;\r\n        const response = (\r\n            await got.post(url, {\r\n                form: {\r\n                    isRecommend: 2,\r\n                    language: lang === 'zh' ? 'cn' : lang,\r\n                },\r\n            })\r\n        ).data;\r\n        return response.data.blogsList;\r\n    };\r\n\r\n    const getBlogInfomation = async (blog) => {\r\n        const { publishDate, title, id } = blog;\r\n        const blogUrl = `${baseURL}${lang}/blogs/${id}`;\r\n        const description = await cache.tryGet(blogUrl, async () => {\r\n            const res = await got(blogUrl);\r\n            const $ = load(res.data);\r\n            const description = $('.detail_html_box').html();\r\n            return description;\r\n        });\r\n        return {\r\n            // 文章标题\r\n            title,\r\n            // 文章正文\r\n            description,\r\n            // 文章发布时间\r\n            pubDate: parseDate(publishDate),\r\n            // 文章链接\r\n            link: blogUrl,\r\n        };\r\n    };\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 30;\r\n    const blogs = (await getBlogs()).slice(0, limit);\r\n    const list = await Promise.all(blogs.map((element) => getBlogInfomation(element)));\r\n    return {\r\n        title: `${lang === 'zh' ? '博客' : 'Blogs'} | ${title}`,\r\n        link: `${link}${lang}/blogs`,\r\n        item: list,\r\n    };\r\n}\r\n"],"mappings":"wWAKA,MAAM,EAAU,gCAIHA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,WACb,QAAS,wBACT,WAAY,CAAE,KAAM,2CACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,gCACT,OAAQ,gBAGhB,KAAM,QACN,YAAa,CAAC,gBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,KAEhC,EAAW,SAAY,CACzB,IAAM,EAAM,GAAG,EAAQ,4BACjB,GACF,MAAMC,EAAI,KAAK,EAAK,CAChB,KAAM,CACF,YAAa,EACb,SAAU,IAAS,KAAO,KAAO,MAG3C,KACF,OAAO,EAAS,KAAK,WAGnB,EAAoB,KAAO,IAAS,CACtC,GAAM,CAAE,cAAa,MAAA,EAAO,MAAO,EAC7B,EAAU,GAAG,IAAU,EAAK,SAAS,IACrC,EAAc,MAAMC,EAAM,OAAO,EAAS,SAAY,CACxD,IAAM,EAAM,MAAMD,EAAI,GAChB,EAAI,EAAK,EAAI,MACbE,EAAc,EAAE,oBAAoB,OAC1C,OAAOA,IAEX,MAAO,CAEH,MAAA,EAEA,cAEA,QAAS,EAAU,GAEnB,KAAM,IAGR,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAC3E,GAAS,MAAM,KAAY,MAAM,EAAG,GACpC,EAAO,MAAM,QAAQ,IAAI,EAAM,IAAK,GAAY,EAAkB,KACxE,MAAO,CACH,MAAO,GAAG,IAAS,KAAO,KAAO,QAAQ,iBACzC,KAAM,gCAAU,EAAK,QACrB,KAAM"}