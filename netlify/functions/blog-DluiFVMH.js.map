{"version":3,"file":"blog-DluiFVMH.js","names":["route: Route","got","items: DataItem[]"],"sources":["../../lib/routes/huggingface/blog.ts"],"sourcesContent":["import { Route, type DataItem } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['programming'],\r\n    example: '/huggingface/blog',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['huggingface.co/blog', 'huggingface.co/'],\r\n        },\r\n    ],\r\n    name: '英文博客',\r\n    maintainers: ['cesaryuan', 'zcf0508'],\r\n    handler,\r\n    url: 'huggingface.co/blog',\r\n};\r\n\r\ninterface Author {\r\n    user: string;\r\n    guest: boolean;\r\n    org?: string;\r\n}\r\n\r\ninterface Blog {\r\n    authors: Author[];\r\n    canonical: boolean;\r\n    isUpvotedByUser: boolean;\r\n    publishedAt: string;\r\n    slug: string;\r\n    title: string;\r\n    upvotes: number;\r\n    thumbnail: string;\r\n    guest: boolean;\r\n}\r\n\r\ninterface BlogData {\r\n    blog: Blog;\r\n    blogUrl: string;\r\n    lang: string;\r\n    loggedInUser: string;\r\n}\r\n\r\nasync function handler() {\r\n    const { body: response } = await got('https://huggingface.co/blog');\r\n    const $ = load(response);\r\n\r\n    /** @type {Array<{blog: {local: string, title: string, author: string, thumbnail: string, date: string, tags: Array<string>}, blogUrl: string, lang: 'zh', link: string}>} */\r\n    const papers = $('div[data-target=\"BlogThumbnail\"]')\r\n        .toArray()\r\n        .map((item) => {\r\n            const props = $(item).data('props') as BlogData;\r\n            const link = $(item).find('a').attr('href');\r\n            return {\r\n                ...props,\r\n                link,\r\n            };\r\n        });\r\n\r\n    const items: DataItem[] = papers.map((item) => ({\r\n        title: item.blog.title,\r\n        link: `https://huggingface.co${item.link}`,\r\n        pubDate: parseDate(item.blog.publishedAt),\r\n        author: item.blog.authors.map((author) => ({\r\n            name: author.user,\r\n        })),\r\n        upvotes: item.blog.upvotes,\r\n        image: new URL(item.blog.thumbnail, 'https://huggingface.co').toString(),\r\n    }));\r\n\r\n    return {\r\n        title: 'Huggingface 英文博客',\r\n        link: 'https://huggingface.co/blog',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oTAKA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,eACb,QAAS,oBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sBAAuB,qBAGxC,KAAM,OACN,YAAa,CAAC,YAAa,WAC3B,UACA,IAAK,uBA4BT,eAAe,GAAU,CACrB,GAAM,CAAE,KAAM,GAAa,MAAMC,EAAI,+BAC/B,EAAI,EAAK,GAGT,EAAS,EAAE,oCACZ,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GAAM,KAAK,SACrB,EAAO,EAAE,GAAM,KAAK,KAAK,KAAK,QACpC,MAAO,CACH,GAAG,EACH,UAINC,EAAoB,EAAO,IAAK,IAAU,CAC5C,MAAO,EAAK,KAAK,MACjB,KAAM,yBAAyB,EAAK,OACpC,QAAS,EAAU,EAAK,KAAK,aAC7B,OAAQ,EAAK,KAAK,QAAQ,IAAK,IAAY,CACvC,KAAM,EAAO,QAEjB,QAAS,EAAK,KAAK,QACnB,MAAO,IAAI,IAAI,EAAK,KAAK,UAAW,0BAA0B,cAGlE,MAAO,CACH,MAAO,mBACP,KAAM,8BACN,KAAM"}