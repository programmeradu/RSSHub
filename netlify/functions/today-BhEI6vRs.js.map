{"version":3,"file":"today-BhEI6vRs.js","names":["got","item"],"sources":["../../lib/routes/bangumi.tv/calendar/_base.ts","../../lib/routes/bangumi.tv/calendar/today.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { config } from '@/config';\r\n\r\nconst getData = (tryGet) => {\r\n    const bgmCalendarUrl = 'https://api.bgm.tv/calendar';\r\n    const bgmDataUrl = 'https://cdn.jsdelivr.net/npm/bangumi-data/dist/data.json';\r\n\r\n    const urls = [bgmCalendarUrl, bgmDataUrl];\r\n\r\n    return Promise.all(\r\n        urls.map((item, i) =>\r\n            tryGet(\r\n                item,\r\n                async () => {\r\n                    const { data } = await got(item);\r\n\r\n                    if (i === 1) {\r\n                        // 只保留有 bangumi id 的番剧\r\n                        const items = [];\r\n                        for (const item of data.items) {\r\n                            const bgmSite = item.sites.find((s) => s.site === 'bangumi');\r\n                            if (bgmSite) {\r\n                                item.bgmId = bgmSite.id;\r\n                                items.push(item);\r\n                            }\r\n                        }\r\n                        data.items = items;\r\n                    }\r\n\r\n                    return data;\r\n                },\r\n                config.cache.contentExpire,\r\n                false\r\n            )\r\n        )\r\n    );\r\n};\r\nexport default getData;\r\n","import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport getData from './_base';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/calendar/today',\r\n    categories: ['anime'],\r\n    example: '/bangumi.tv/calendar/today',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['bgm.tv/calendar'],\r\n        },\r\n    ],\r\n    name: '放送列表',\r\n    maintainers: ['magic-akari'],\r\n    handler,\r\n    url: 'bgm.tv/calendar',\r\n};\r\n\r\nasync function handler() {\r\n    const [list, data] = await getData(cache.tryGet);\r\n    const siteMeta = data.siteMeta;\r\n\r\n    const today = new Date(Date.now());\r\n    // 将 UTC 时间向前移动9小时，即可在数值上表示东京时间\r\n    today.setUTCHours(today.getUTCHours() + 9);\r\n    const day = today.getUTCDay();\r\n\r\n    const todayList = list.find((l) => l.weekday.id % 7 === day);\r\n    const todayBgmId = new Set(todayList.items.map((t) => t.id.toString()));\r\n    const images: { [key: string]: string } = {};\r\n    for (const item of todayList.items) {\r\n        images[item.id] = (item.images || {}).large;\r\n    }\r\n    const todayBgm = data.items.filter((d) => todayBgmId.has(d.bgmId));\r\n    for (const bgm of todayBgm) {\r\n        bgm.image = images[bgm.bgmId];\r\n    }\r\n\r\n    return {\r\n        title: 'bangumi 每日放送',\r\n        link: 'https://bgm.tv/calendar',\r\n        item: todayBgm.map((bgm) => {\r\n            const updated = new Date(Date.now());\r\n            updated.setSeconds(0);\r\n            const begin = new Date(bgm.begin || updated);\r\n            updated.setHours(begin.getHours());\r\n            updated.setMinutes(begin.getMinutes());\r\n            updated.setSeconds(begin.getSeconds());\r\n\r\n            const link = `https://bangumi.tv/subject/${bgm.bgmId}`;\r\n            const id = `${link}#${new Intl.DateTimeFormat('zh-CN').format(updated)}`;\r\n\r\n            const html = art(path.join(__dirname, '../templates/today.art'), {\r\n                bgm,\r\n                siteMeta,\r\n            });\r\n\r\n            return {\r\n                id,\r\n                guid: id,\r\n                title: [\r\n                    bgm.title,\r\n                    Object.values(bgm.titleTranslate)\r\n                        .map((t) => t.join('｜'))\r\n                        .join('｜'),\r\n                ]\r\n                    .filter(Boolean) // don't join if empty\r\n                    .join('｜'),\r\n                updated: updated.toISOString(),\r\n                pubDate: updated.toUTCString(),\r\n                link,\r\n                description: html,\r\n                content: { html },\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"qZAGA,MAAA,EAAA,GAAA,kGAMI,OAAA,QAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,SAAA,wBAOgB,GAAA,IAAA,EAAA,UAGI,IAAA,IAAA,KAAA,EAAA,MAAA,2CAEI,IACI,EAAA,MAAA,EAAA,GACA,EAAA,KAAA,IAGR,EAAA,MAAA,EAGJ,OAAA,gCAQpB,IAAA,EAAA,EC9BA,MAAa,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,SACb,QAAS,6BACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qBAGjB,KAAM,OACN,YAAa,CAAC,eACd,UACA,IAAK,mBAGT,eAAe,GAAU,CACrB,GAAM,CAAC,EAAM,GAAQ,MAAM,EAAQ,EAAM,QACnC,EAAW,EAAK,SAEhB,EAAQ,IAAI,KAAK,KAAK,OAE5B,EAAM,YAAY,EAAM,cAAgB,GACxC,IAAM,EAAM,EAAM,YAEZ,EAAY,EAAK,KAAM,GAAM,EAAE,QAAQ,GAAK,IAAM,GAClD,EAAa,IAAI,IAAI,EAAU,MAAM,IAAK,GAAM,EAAE,GAAG,aACrD,EAAoC,GAC1C,IAAK,IAAM,KAAQ,EAAU,MACzB,EAAO,EAAK,KAAO,EAAK,QAAU,IAAI,MAE1C,IAAM,EAAW,EAAK,MAAM,OAAQ,GAAM,EAAW,IAAI,EAAE,QAC3D,IAAK,IAAM,KAAO,EACd,EAAI,MAAQ,EAAO,EAAI,OAG3B,MAAO,CACH,MAAO,eACP,KAAM,0BACN,KAAM,EAAS,IAAK,GAAQ,CACxB,IAAM,EAAU,IAAI,KAAK,KAAK,OAC9B,EAAQ,WAAW,GACnB,IAAM,EAAQ,IAAI,KAAK,EAAI,OAAS,GACpC,EAAQ,SAAS,EAAM,YACvB,EAAQ,WAAW,EAAM,cACzB,EAAQ,WAAW,EAAM,cAEzB,IAAM,EAAO,8BAA8B,EAAI,QACzC,EAAK,GAAG,EAAK,GAAG,IAAI,KAAK,eAAe,SAAS,OAAO,KAExD,EAAO,EAAI,EAAA,KAAA,EAAA,gCAAgD,CAC7D,MACA,aAGJ,MAAO,CACH,KACA,KAAM,EACN,MAAO,CACH,EAAI,MACJ,OAAO,OAAO,EAAI,gBACb,IAAK,GAAM,EAAE,KAAK,MAClB,KAAK,MAET,OAAO,SACP,KAAK,KACV,QAAS,EAAQ,cACjB,QAAS,EAAQ,cACjB,OACA,YAAa,EACb,QAAS,CAAE"}