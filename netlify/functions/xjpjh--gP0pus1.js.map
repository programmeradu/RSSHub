{"version":3,"file":"xjpjh--gP0pus1.js","names":["route: Route","got","title","cache","response","$"],"sources":["../../lib/routes/people/xjpjh.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport * as url from 'node:url';\r\n\r\nconst host = 'http://jhsjk.people.cn';\r\n\r\nexport const route: Route = {\r\n    path: '/xjpjh/:keyword?/:year?',\r\n    categories: ['traditional-media'],\r\n    example: '/people/xjpjh',\r\n    parameters: { keyword: '关键词，默认不填', year: '年份，默认 all' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['people.com.cn/'],\r\n            target: '/:site?/:category?',\r\n        },\r\n    ],\r\n    name: '习近平系列重要讲话',\r\n    maintainers: [],\r\n    handler,\r\n    url: 'people.com.cn/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    let keyword = ctx.req.param('keyword') || 'all';\r\n    let year = ctx.req.param('year') || 0;\r\n\r\n    let title = '习近平系列重要讲话';\r\n    title = title + '-' + keyword;\r\n    if (keyword === 'all') {\r\n        keyword = '';\r\n    }\r\n    if (year === 0) {\r\n        title = title + '-all';\r\n    } else {\r\n        title = title + '-' + year;\r\n        year = year - 1811;\r\n    }\r\n\r\n    const link = `http://jhsjk.people.cn/result?keywords=${keyword}&year=${year}`;\r\n    const response = await got.get(link);\r\n\r\n    const $ = load(response.data);\r\n\r\n    const list = $('ul.list_14.p1_2.clearfix li')\r\n        .slice(0, 10)\r\n        .toArray()\r\n        .map((element) => {\r\n            const info = {\r\n                title: $(element).find('a').text(),\r\n                link: $(element).find('a').attr('href'),\r\n            };\r\n            return info;\r\n        });\r\n\r\n    const out = await Promise.all(\r\n        list.map(async (info) => {\r\n            const title = info.title;\r\n            const itemUrl = url.resolve(host, info.link);\r\n\r\n            const cacheIn = await cache.get(itemUrl);\r\n            if (cacheIn) {\r\n                return JSON.parse(cacheIn);\r\n            }\r\n\r\n            const response = await got.get(itemUrl);\r\n            const $ = load(response.data);\r\n            const description = $('div.d2txt_con.clearfix').html().trim();\r\n\r\n            const single = {\r\n                title,\r\n                link: itemUrl,\r\n                description,\r\n            };\r\n            cache.set(itemUrl, JSON.stringify(single));\r\n            return single;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title,\r\n        link,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"8UAMA,MAEaA,EAAe,CACxB,KAAM,0BACN,WAAY,CAAC,qBACb,QAAS,gBACT,WAAY,CAAE,QAAS,WAAY,KAAM,aACzC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,kBACT,OAAQ,uBAGhB,KAAM,YACN,YAAa,GACb,UACA,IAAK,kBAGT,eAAe,EAAQ,EAAK,CACxB,IAAI,EAAU,EAAI,IAAI,MAAM,YAAc,MACtC,EAAO,EAAI,IAAI,MAAM,SAAW,EAEhC,EAAQ,YACZ,EAAQ,EAAQ,IAAM,EAClB,IAAY,QACZ,EAAU,IAEV,IAAS,EACT,GAAgB,QAEhB,EAAQ,EAAQ,IAAM,EACtB,GAAc,MAGlB,IAAM,EAAO,0CAA0C,EAAQ,QAAQ,IACjE,EAAW,MAAMC,EAAI,IAAI,GAEzB,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,+BACV,MAAM,EAAG,IACT,UACA,IAAK,GAAY,CACd,IAAM,EAAO,CACT,MAAO,EAAE,GAAS,KAAK,KAAK,OAC5B,KAAM,EAAE,GAAS,KAAK,KAAK,KAAK,SAEpC,OAAO,IAGT,EAAM,MAAM,QAAQ,IACtB,EAAK,IAAI,KAAO,IAAS,CACrB,IAAMC,EAAQ,EAAK,MACb,EAAU,EAAI,QAAQ,yBAAM,EAAK,MAEjC,EAAU,MAAMC,EAAM,IAAI,GAChC,GAAI,EACA,OAAO,KAAK,MAAM,GAGtB,IAAMC,EAAW,MAAMH,EAAI,IAAI,GACzBI,EAAI,EAAKD,EAAS,MAClB,EAAcC,EAAE,0BAA0B,OAAO,OAEjD,EAAS,CACX,MAAA,EACA,KAAM,EACN,eAGJ,OADA,EAAM,IAAI,EAAS,KAAK,UAAU,IAC3B,KAIf,MAAO,CACH,QACA,OACA,KAAM"}