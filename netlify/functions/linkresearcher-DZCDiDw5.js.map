{"version":3,"file":"linkresearcher-DZCDiDw5.js","names":[],"sources":["../../lib/routes/linkresearcher/index.ts"],"sourcesContent":["import { ViewType, type Data, type DataItem, type Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport crypto from 'node:crypto';\r\nimport type { Context } from 'hono';\r\nimport type { DetailResponse, SearchResultItem } from './types';\r\nimport cache from '@/utils/cache';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst templatePath = path.join(__dirname, 'templates/bilingual.art');\r\n\r\nconst baseURL = 'https://www.linkresearcher.com';\r\nconst apiURL = `${baseURL}/api`;\r\n\r\nexport const route: Route = {\r\n    name: 'Articles',\r\n    path: '/:params',\r\n    example: '/linkresearcher/category=theses&columns=Nature%20导读&subject=生物',\r\n    maintainers: ['y9c', 'KarasuShin'],\r\n    handler,\r\n    view: ViewType.Articles,\r\n    categories: ['journal'],\r\n    parameters: {\r\n        params: {\r\n            description: 'search parameters, support `category`, `subject`, `columns`, `query`',\r\n        },\r\n    },\r\n    zh: {\r\n        name: '文章',\r\n    },\r\n    'zh-TW': {\r\n        name: '文章',\r\n    },\r\n};\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const categoryMap = { theses: '论文', information: '新闻', careers: '职业' } as const;\r\n    const params = ctx.req.param('params');\r\n    const filters = new URLSearchParams(params);\r\n\r\n    const subject = filters.get('subject');\r\n    const columns = filters.get('columns');\r\n    const query = filters.get('query') ?? '';\r\n    const category = filters.get('category') ?? ('theses' as keyof typeof categoryMap);\r\n\r\n    if (!(category in categoryMap)) {\r\n        throw new InvalidParameterError('Invalid category');\r\n    }\r\n    let title = categoryMap[category] as string;\r\n\r\n    const token = crypto.randomUUID();\r\n\r\n    const data: {\r\n        filters: {\r\n            status: boolean;\r\n            subject?: string;\r\n            columns?: string;\r\n        };\r\n    } = { filters: { status: true } };\r\n\r\n    if (subject) {\r\n        data.filters.subject = subject;\r\n        title = `${title}「${subject}」`;\r\n    }\r\n\r\n    if (columns) {\r\n        data.filters.columns = columns;\r\n        title = `${title}「${columns}」`;\r\n    }\r\n\r\n    const dataURL = `${baseURL}/api/${category === 'careers' ? 'articles' : category}/search`;\r\n    const pageResponse = await ofetch<{\r\n        hits: SearchResultItem[];\r\n    }>(dataURL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json; charset=UTF-8',\r\n            'x-xsrf-token': token,\r\n            cookie: `XSRF-TOKEN=${token}`,\r\n        },\r\n        params: {\r\n            from: 0,\r\n            size: 20,\r\n            type: category === 'careers' ? 'CAREER' : 'SEARCH',\r\n        },\r\n        body: {\r\n            ...data,\r\n            query,\r\n        },\r\n    });\r\n\r\n    const items = await Promise.all(\r\n        pageResponse.hits.map((item) => {\r\n            const link = `${baseURL}/${category}/${item.id}`;\r\n            return cache.tryGet(link, async () => {\r\n                const response = await ofetch<DetailResponse>(`${apiURL}/${category === 'theses' ? 'theses' : 'information'}/${item.id}`, {\r\n                    responseType: 'json',\r\n                });\r\n\r\n                const dataItem: DataItem = {\r\n                    title: response.title,\r\n                    pubDate: parseDate(response.onlineTime),\r\n                    link,\r\n                    image: response.cover,\r\n                };\r\n\r\n                dataItem.description =\r\n                    'zhTextList' in response && 'enTextList' in response\r\n                        ? art(templatePath, {\r\n                              zh: response.zhTextList,\r\n                              en: response.enTextList,\r\n                          })\r\n                        : response.content;\r\n\r\n                if ('paperList' in response) {\r\n                    const { doi, authors } = response.paperList[0];\r\n                    dataItem.doi = doi;\r\n                    dataItem.author = authors.map((author) => ({ name: author }));\r\n                }\r\n\r\n                return dataItem;\r\n            }) as unknown as DataItem;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `领研 | ${title}`,\r\n        description:\r\n            '领研是链接华人学者的人才及成果平台。领研为国内外高校、科研机构及科技企业提供科研人才招聘服务，也是青年研究者的职业发展指导及线上培训平台；研究者还可将自己的研究论文上传至领研，与超过五十万华人学者分享工作的最新进展。',\r\n        image: `${baseURL}/assets/images/logo-app.png`,\r\n        link: baseURL,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"0hBAWA,MAAM,EAAe,EAAA,KAAA,EAAA,oCAEf,EAAU,iCACV,EAAS,GAAG,EAAQ,MAEb,EAAe,CACxB,KAAM,WACN,KAAM,WACN,QAAS,iEACT,YAAa,CAAC,MAAO,cACrB,UACA,KAAM,EAAS,SACf,WAAY,CAAC,WACb,WAAY,CACR,OAAQ,CACJ,YAAa,yEAGrB,GAAI,CACA,KAAM,MAEV,QAAS,CACL,KAAM,OAId,eAAe,EAAQ,EAA6B,CAChD,IAAM,EAAc,CAAE,OAAQ,KAAM,YAAa,KAAM,QAAS,MAC1D,EAAS,EAAI,IAAI,MAAM,UACvB,EAAU,IAAI,gBAAgB,GAE9B,EAAU,EAAQ,IAAI,WACtB,EAAU,EAAQ,IAAI,WACtB,EAAQ,EAAQ,IAAI,UAAY,GAChC,EAAW,EAAQ,IAAI,aAAgB,SAE7C,GAAI,EAAE,KAAY,GACd,MAAM,IAAI,EAAsB,oBAEpC,IAAI,EAAQ,EAAY,GAElB,EAAQ,EAAO,aAEf,EAMF,CAAE,QAAS,CAAE,OAAQ,KAErB,IACA,EAAK,QAAQ,QAAU,EACvB,EAAQ,GAAG,EAAM,GAAG,EAAQ,IAG5B,IACA,EAAK,QAAQ,QAAU,EACvB,EAAQ,GAAG,EAAM,GAAG,EAAQ,IAGhC,IAAM,EAAU,GAAG,EAAQ,OAAO,IAAa,UAAY,WAAa,EAAS,SAC3E,EAAe,MAAM,EAExB,EAAS,CACR,OAAQ,OACR,QAAS,CACL,eAAgB,kCAChB,eAAgB,EAChB,OAAQ,cAAc,KAE1B,OAAQ,CACJ,KAAM,EACN,KAAM,GACN,KAAM,IAAa,UAAY,SAAW,UAE9C,KAAM,CACF,GAAG,EACH,WAIF,EAAQ,MAAM,QAAQ,IACxB,EAAa,KAAK,IAAK,GAAS,CAC5B,IAAM,EAAO,GAAG,EAAQ,GAAG,EAAS,GAAG,EAAK,KAC5C,OAAO,EAAM,OAAO,EAAM,SAAY,CAClC,IAAM,EAAW,MAAM,EAAuB,GAAG,EAAO,GAAG,IAAa,SAAW,SAAW,cAAc,GAAG,EAAK,KAAM,CACtH,aAAc,SAGZ,EAAqB,CACvB,MAAO,EAAS,MAChB,QAAS,EAAU,EAAS,YAC5B,OACA,MAAO,EAAS,OAWpB,GARA,EAAS,YACL,eAAgB,GAAY,eAAgB,EACtC,EAAI,EAAc,CACd,GAAI,EAAS,WACb,GAAI,EAAS,aAEjB,EAAS,QAEf,cAAe,EAAU,CACzB,GAAM,CAAE,MAAK,WAAY,EAAS,UAAU,GAC5C,EAAS,IAAM,EACf,EAAS,OAAS,EAAQ,IAAK,IAAY,CAAE,KAAM,KAGvD,OAAO,OAKnB,MAAO,CACH,MAAO,QAAQ,IACf,YACI,+GACJ,MAAO,GAAG,EAAQ,6BAClB,KAAM,EACN,KAAM"}