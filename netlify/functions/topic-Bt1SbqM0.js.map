{"version":3,"file":"topic-Bt1SbqM0.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/guancha/topic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseRelativeDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/topic/:id/:order?',\r\n    radar: [\r\n        {\r\n            source: ['guancha.cn/'],\r\n            target: '/:category?',\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: ['occupy5', 'nczitzk'],\r\n    handler,\r\n    url: 'guancha.cn/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id') ?? '0';\r\n    const order = ctx.req.param('order') ?? '1';\r\n\r\n    const rootUrl = 'https://user.guancha.cn';\r\n    const currentUrl = `${rootUrl}/${id === '0' ? 'main/index-list.json?' : 'topic/post-list?topic_id=' + id}&page=1&order=${order}`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items = $('.list-item h4 a, ul.home li .list-item h4 a')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.text(),\r\n                link: `${rootUrl}${item.attr('href')}&page=0`,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                item.pubDate = parseRelativeDate(content('.time1').text());\r\n                item.author = content('.user-main h4 a').first().text();\r\n                item.description = content('.article-txt-content').html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    $('h1.title span').remove();\r\n\r\n    return {\r\n        title: `观察者网 - ${id === '0' ? '风闻' : $('h1.title').text()}`,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"gXAMA,MAAaA,EAAe,CACxB,KAAM,qBACN,MAAO,CACH,CACI,OAAQ,CAAC,eACT,OAAQ,gBAGhB,KAAM,UACN,YAAa,CAAC,UAAW,WACzB,UACA,IAAK,eAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,OAAS,IAC5B,EAAQ,EAAI,IAAI,MAAM,UAAY,IAElC,EAAU,0BACV,EAAa,GAAG,EAAQ,GAAG,IAAO,IAAM,wBAA0B,4BAA8B,EAAG,gBAAgB,IAEnH,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,+CACT,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OACZ,KAAM,GAAG,IAAU,EAAK,KAAK,QAAQ,YAyBjD,MArBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAMpC,MAJA,GAAK,QAAU,EAAkB,EAAQ,UAAU,QACnD,EAAK,OAAS,EAAQ,mBAAmB,QAAQ,OACjD,EAAK,YAAc,EAAQ,wBAAwB,OAE5C,MAKnB,EAAE,iBAAiB,SAEZ,CACH,MAAO,UAAU,IAAO,IAAM,KAAO,EAAE,YAAY,SACnD,KAAM,EACN,KAAM"}