{"version":3,"file":"list-DA0YVQQr.js","names":[],"sources":["../../lib/routes/fangchan/list.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nimport { type CheerioAPI, type Cheerio, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { type Context } from 'hono';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { id = 'datalist' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n\r\n    const baseUrl: string = 'http://www.fangchan.com';\r\n    const apiBaseUrl: string = 'http://news.fangchan.com';\r\n    const targetUrl: string = new URL(id.endsWith('/') ? id : `${id}/`, baseUrl).href;\r\n    const apiUrl: string = new URL(`api/${id.endsWith('/') ? id.replace(/\\/$/, '') : id}.json`, apiBaseUrl).href;\r\n\r\n    const targetResponse = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(targetResponse);\r\n    const language = $('html').attr('lang') ?? 'zh-CN';\r\n\r\n    const response = await ofetch(apiUrl, {\r\n        query: {\r\n            pagesize: limit,\r\n            page: 1,\r\n        },\r\n    });\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = response.data.slice(0, limit).map((item): DataItem => {\r\n        const title: string = item.title;\r\n        const description: string = art(path.join(__dirname, 'templates/description.art'), {\r\n            intro: item.zhaiyao,\r\n        });\r\n        const pubDate: number | string = item.createtime;\r\n        const linkUrl: string | undefined = item.url;\r\n        const categories: string[] = [...new Set([item.topcolumn, item.subcolumn, ...(item.keyword?.split(/,/) ?? [])].filter(Boolean))];\r\n        const image: string | undefined = item.pic;\r\n        const updated: number | string = item.createtime;\r\n\r\n        const processedItem: DataItem = {\r\n            title,\r\n            description,\r\n            pubDate: pubDate ? parseDate(pubDate, 'X') : undefined,\r\n            link: linkUrl,\r\n            id: categories,\r\n            content: {\r\n                html: description,\r\n                text: item.zhaiyao ?? description,\r\n            },\r\n            image,\r\n            banner: image,\r\n            updated: updated ? parseDate(updated, 'X') : undefined,\r\n            language,\r\n        };\r\n\r\n        return processedItem;\r\n    });\r\n\r\n    items = (\r\n        await Promise.all(\r\n            items.map((item) => {\r\n                if (!item.link) {\r\n                    return item;\r\n                }\r\n\r\n                return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                    const detailResponse = await ofetch(item.link);\r\n                    const $$: CheerioAPI = load(detailResponse);\r\n\r\n                    const title: string = $$('div.summary-text h').text();\r\n                    const description: string = (item.description ?? '') + ($$('div.top-info').html() ?? '') + ($$('div.summary-text-p').html() ?? '');\r\n                    const pubDateStr: string | undefined = $$('span.news-date')\r\n                        .text()\r\n                        .match(/\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}/)?.[1];\r\n                    const idEls: Element[] = $$('a.news-column, div.label span').toArray();\r\n                    const categories: string[] = [...new Set([...(item.id as string[]), ...idEls.map((el) => $$(el).text()).filter(Boolean)].filter(Boolean))];\r\n                    const authors: DataItem['author'] = $$('span.news-date')\r\n                        .text()\r\n                        ?.split(/\\d{4}-\\d{2}-\\d{2}/)?.[0]\r\n                        ?.trim()\r\n                        ?.split(/\\s/)\r\n                        ?.map((author) => ({\r\n                            name: author,\r\n                        }));\r\n                    const upDatedStr: string | undefined = pubDateStr;\r\n\r\n                    let processedItem: DataItem = {\r\n                        title,\r\n                        description,\r\n                        pubDate: pubDateStr ? timezone(parseDate(pubDateStr), +8) : item.pubDate,\r\n                        id: categories,\r\n                        author: authors,\r\n                        content: {\r\n                            html: description,\r\n                            text: description,\r\n                        },\r\n                        updated: upDatedStr ? timezone(parseDate(upDatedStr), +8) : item.updated,\r\n                        language,\r\n                    };\r\n\r\n                    const extraLinkEls: Element[] = $$('ul.xgxw-ul li a').toArray();\r\n                    const extraLinks = extraLinkEls\r\n                        .map((extraLinkEl) => {\r\n                            const $$extraLinkEl: Cheerio<Element> = $$(extraLinkEl);\r\n\r\n                            return {\r\n                                url: $$extraLinkEl.attr('href'),\r\n                                type: 'related',\r\n                                content_html: $$extraLinkEl.text(),\r\n                            };\r\n                        })\r\n                        .filter((_): _ is { url: string; type: string; content_html: string } => true);\r\n\r\n                    if (extraLinks) {\r\n                        processedItem = {\r\n                            ...processedItem,\r\n                            _extra: {\r\n                                links: extraLinks,\r\n                            },\r\n                        };\r\n                    }\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...processedItem,\r\n                    };\r\n                });\r\n            })\r\n        )\r\n    ).filter((_): _ is DataItem => true);\r\n\r\n    const author: string = '中房网';\r\n\r\n    return {\r\n        title: `${author} - ${$('div.curmbs a').text()}`,\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        author,\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/list/:id?',\r\n    name: '列表',\r\n    url: 'www.fangchan.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/fangchan/list/datalist',\r\n    parameters: {\r\n        id: {\r\n            description: '分类，默认为 `datalist`，即数据研究，可在对应分类页 URL 中找到',\r\n            options: [\r\n                {\r\n                    label: '数据研究',\r\n                    value: 'datalist',\r\n                },\r\n                {\r\n                    label: '行业测评',\r\n                    value: 'industrylist',\r\n                },\r\n                {\r\n                    label: '政策法规',\r\n                    value: 'policylist',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    description: `:::tip\r\n若订阅 [列表](https://www.fangchan.com/)，网址为 \\`https://www.fangchan.com/\\`，请截取 \\`https://www.fangchan.com/\\` 到末尾 \\`.html\\` 的部分 \\`datalist\\` 作为 \\`id\\` 参数填入，此时目标路由为 [\\`/fangchan/datalist\\`](https://rsshub.app/fangchan/datalist)。\r\n:::\r\n\r\n| [数据研究](https://www.fangchan.com/datalist)         | [行业测评](https://www.fangchan.com/industrylist)             | [政策法规](https://www.fangchan.com/policylist)           |\r\n| ----------------------------------------------------- | ------------------------------------------------------------- | --------------------------------------------------------- |\r\n| [datalist](https://rsshub.app/fangchan/list/datalist) | [industrylist](https://rsshub.app/fangchan/list/industrylist) | [policylist](https://rsshub.app/fangchan/list/policylist) |\r\n`,\r\n    categories: ['new-media'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.fangchan.com/:id'],\r\n            target: (params) => {\r\n                const id: string = params.id;\r\n\r\n                return `/fangchan/list/${id ? `/${id}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '数据研究',\r\n            source: ['www.fangchan.com/datalist'],\r\n            target: '/list/datalist',\r\n        },\r\n        {\r\n            title: '行业测评',\r\n            source: ['www.fangchan.com/industrylist'],\r\n            target: '/list/industrylist',\r\n        },\r\n        {\r\n            title: '政策法规',\r\n            source: ['www.fangchan.com/policylist'],\r\n            target: '/list/policylist',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"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"}