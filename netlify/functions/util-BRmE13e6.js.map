{"version":3,"file":"util-BRmE13e6.js","names":["u"],"sources":["../../lib/routes/xiaoheihe/util.ts"],"sourcesContent":["// Copied from https://github.com/huandu/heybox-url\r\n\r\nimport { createHash } from 'node:crypto';\r\n\r\nconst dict = 'JKMNPQRTX1234OABCDFG56789H';\r\n\r\nconst md5 = (str) => {\r\n    const h = createHash('md5');\r\n    h.update(str);\r\n    return h.digest();\r\n};\r\n\r\nfunction c0(v) {\r\n    return c1(v) ^ c2(v) ^ c3(v);\r\n}\r\n\r\nfunction c1(v) {\r\n    return c2(c3(convertByte(v)));\r\n}\r\n\r\nfunction c2(v) {\r\n    return c3(convertByte(v));\r\n}\r\n\r\nfunction c3(v) {\r\n    return convertByte(v) ^ v;\r\n}\r\n\r\nfunction convertByte(v) {\r\n    return v & 0x80 ? 0xFF & ((v << 1) ^ 0x1B) : v << 1;\r\n}\r\n\r\n/**\r\n * Calculate checksum for a 4-byte data.\r\n * @param {number[]} data\r\n * @returns {number}\r\n */\r\nconst checksum = (data) =>\r\n    [c0(data[0]) ^ c1(data[1]) ^ c2(data[2]) ^ c3(data[3]), c3(data[0]) ^ c0(data[1]) ^ c1(data[2]) ^ c2(data[3]), c2(data[0]) ^ c3(data[1]) ^ c0(data[2]) ^ c1(data[3]), c1(data[0]) ^ c2(data[1]) ^ c3(data[2]) ^ c0(data[3])].reduce(\r\n        (prev, value) => prev + value\r\n    ) % 100;\r\n\r\nexport const calculate = (url, timestamp = 0, nonce = '') => {\r\n    timestamp ||= Math.trunc(Date.now() / 1000);\r\n    nonce ||= md5(Math.random().toString()).toString('hex').toUpperCase();\r\n\r\n    const { pathname } = new URL(url);\r\n    const ts = timestamp + 1;\r\n    const u = '/' + pathname.split('/').filter(Boolean).join('/') + '/';\r\n\r\n    let key = '';\r\n    const nonceHash = md5((nonce + dict).replaceAll(/\\D/g, ''))\r\n        .toString('hex')\r\n        .toLowerCase();\r\n    const rnd = md5(ts + u + nonceHash)\r\n        .toString('hex')\r\n        .replaceAll(/\\D/g, '')\r\n        .slice(0, 9)\r\n        .padEnd(9, '0');\r\n\r\n    for (let c = +rnd, i = 0; i < 5; i++) {\r\n        const u = c % dict.length;\r\n        c = Math.trunc(c / dict.length);\r\n        key += dict[u];\r\n    }\r\n\r\n    const suffix = checksum([...key].slice(-4).map((c) => c.codePointAt(0)))\r\n        .toString()\r\n        .padStart(2, '0');\r\n\r\n    const query = `hkey=${key}${suffix}&_time=${timestamp}&nonce=${nonce}`;\r\n    const urlObj = new URL(url);\r\n    urlObj.search += urlObj.search ? '&' + query : query;\r\n    return urlObj.toString();\r\n};\r\n"],"mappings":"yCAIA,MAAM,EAAO,6BAEP,EAAO,GAAQ,CACjB,IAAM,EAAI,EAAW,OAErB,OADA,EAAE,OAAO,GACF,EAAE,UAGb,SAAS,EAAG,EAAG,CACX,OAAO,EAAG,GAAK,EAAG,GAAK,EAAG,GAG9B,SAAS,EAAG,EAAG,CACX,OAAO,EAAG,EAAG,EAAY,KAG7B,SAAS,EAAG,EAAG,CACX,OAAO,EAAG,EAAY,IAG1B,SAAS,EAAG,EAAG,CACX,OAAO,EAAY,GAAK,EAG5B,SAAS,EAAY,EAAG,CACpB,OAAO,EAAI,IAAO,KAAS,GAAK,EAAK,IAAQ,GAAK,EAQtD,MAAM,EAAY,GACd,CAAC,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAK,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAK,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAK,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,IAAM,EAAG,EAAK,KAAK,QACxN,EAAM,IAAU,EAAO,GACxB,IAEK,GAAa,EAAK,EAAY,EAAG,EAAQ,KAAO,CACzD,IAAc,KAAK,MAAM,KAAK,MAAQ,KACtC,IAAU,EAAI,KAAK,SAAS,YAAY,SAAS,OAAO,cAExD,GAAM,CAAE,YAAa,IAAI,IAAI,GACvB,EAAK,EAAY,EACjB,EAAI,IAAM,EAAS,MAAM,KAAK,OAAO,SAAS,KAAK,KAAO,IAE5D,EAAM,GACJ,EAAY,GAAK,EAAQ,GAAM,WAAW,MAAO,KAClD,SAAS,OACT,cACC,EAAM,EAAI,EAAK,EAAI,GACpB,SAAS,OACT,WAAW,MAAO,IAClB,MAAM,EAAG,GACT,OAAO,EAAG,KAEf,IAAK,IAAI,EAAI,CAAC,EAAK,EAAI,EAAG,EAAI,EAAG,IAAK,CAClC,IAAMA,EAAI,EAAI,GACd,EAAI,KAAK,MAAM,EAAI,IACnB,GAAO,EAAKA,GAGhB,IAAM,EAAS,EAAS,CAAC,GAAG,GAAK,MAAM,IAAI,IAAK,GAAM,EAAE,YAAY,KAC/D,WACA,SAAS,EAAG,KAEX,EAAQ,QAAQ,IAAM,EAAO,SAAS,EAAU,SAAS,IACzD,EAAS,IAAI,IAAI,GAEvB,MADA,GAAO,QAAU,EAAO,OAAS,IAAM,EAAQ,EACxC,EAAO"}