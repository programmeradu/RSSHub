{"version":3,"file":"jwc-D5s0eQ4m.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/nankai/jwc.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const route: Route = {\r\n    path: '/jwc',\r\n    categories: ['university'],\r\n    example: '/nankai/jwc',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['jwc.nankai.edu.cn/tzgg/list.htm'],\r\n            target: '/jwc',\r\n        },\r\n    ],\r\n    name: '教务处通知公告',\r\n    maintainers: ['vicguo0724'],\r\n    description: '南开大学教务处通知公告',\r\n    url: 'jwc.nankai.edu.cn',\r\n    handler: async () => {\r\n        const baseUrl = 'https://jwc.nankai.edu.cn';\r\n        const { data: response } = await got(`${baseUrl}/tzgg/list.htm`);\r\n        const $ = load(response);\r\n\r\n        // 解析列表页面中的所有通知项\r\n        const list = $('.page-con-list-news .item')\r\n            .toArray()\r\n            .map((item) => {\r\n                const $item = $(item);\r\n                const $link = $item.find('.t a');\r\n                const $dateDay = $item.find('.d .d-d');\r\n                const $dateMonth = $item.find('.d .d-m');\r\n\r\n                // 构建完整的日期\r\n                const day = $dateDay.text().trim(); // 格式：04\r\n                const monthYear = $dateMonth.text().trim(); // 格式：2025/06\r\n                const fullDate = `${monthYear}/${day}`; // 2025/06/04\r\n\r\n                let linkStr = $link.attr('href');\r\n                // 处理相对链接\r\n                if (linkStr && !linkStr.startsWith('http')) {\r\n                    linkStr = `${baseUrl}${linkStr}`;\r\n                }\r\n\r\n                return {\r\n                    title: $link.text().trim(),\r\n                    link: linkStr,\r\n                    pubDate: timezone(parseDate(fullDate, 'YYYY/MM/DD'), +8),\r\n                };\r\n            })\r\n            .filter((item) => item.link); // 过滤掉没有链接的项目\r\n\r\n        // 获取每个通知的详细内容\r\n        const items = await Promise.all(\r\n            list.map((item) =>\r\n                cache.tryGet(item.link, async () => {\r\n                    try {\r\n                        const { data: response } = await got(item.link);\r\n                        const $ = load(response);\r\n\r\n                        // 获取发布时间（更精确的时间）\r\n                        const publishTimeText = $('.page-news-souse').text();\r\n                        const timeMatch = publishTimeText.match(/发布时间：(\\d{4}-\\d{2}-\\d{2})/);\r\n                        if (timeMatch) {\r\n                            item.pubDate = timezone(parseDate(timeMatch[1]), +8);\r\n                        }\r\n\r\n                        // 获取文章内容\r\n                        const content = $('.page-news-con .wp_articlecontent');\r\n                        if (content.length > 0) {\r\n                            // 处理PDF链接，转换为绝对链接\r\n                            content.find('a').each((i, el) => {\r\n                                const $el = $(el);\r\n                                const href = $el.attr('href');\r\n                                if (href && !href.startsWith('http')) {\r\n                                    if (href.startsWith('/')) {\r\n                                        $el.attr('href', `${baseUrl}${href}`);\r\n                                    } else {\r\n                                        $el.attr('href', `${baseUrl}/${href}`);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            // 处理PDF播放器div，提取PDF链接\r\n                            content.find('.wp_pdf_player').each((i, el) => {\r\n                                const $el = $(el);\r\n\r\n                                const pdfSrc = $el.attr('pdfsrc');\r\n                                const sudyfileAttr = ($(el).attr('sudyfile-attr') || '{}').replaceAll(\"'\", '\"');\r\n                                const sudyfileAttrJson = JSON.parse(sudyfileAttr);\r\n                                const fileName = sudyfileAttrJson.title || '未命名文件.pdf';\r\n                                if (pdfSrc) {\r\n                                    let pdfUrl = pdfSrc;\r\n                                    if (!pdfUrl.startsWith('http')) {\r\n                                        pdfUrl = `${baseUrl}${pdfUrl}`;\r\n                                    }\r\n                                    // 替换PDF播放器为下载链接\r\n                                    $el.replaceWith(`<p><a href=\"${pdfUrl}\" target=\"_blank\">${fileName}</a></p>`);\r\n                                }\r\n                            });\r\n\r\n                            item.description = content.html();\r\n                        } else {\r\n                            item.description = '无法获取内容详情';\r\n                        }\r\n                    } catch {\r\n                        item.description = '获取内容失败';\r\n                    }\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n\r\n        return {\r\n            title: '南开大学教务处-通知公告',\r\n            link: `${baseUrl}/tzgg/list.htm`,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"0ZAOA,MAAaA,EAAe,CACxB,KAAM,OACN,WAAY,CAAC,cACb,QAAS,cACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mCACT,OAAQ,SAGhB,KAAM,UACN,YAAa,CAAC,cACd,YAAa,cACb,IAAK,oBACL,QAAS,SAAY,CACjB,IAAM,EAAU,4BACV,CAAE,KAAM,GAAa,MAAMC,EAAI,GAAG,EAAQ,iBAC1C,EAAI,EAAK,GAGT,EAAO,EAAE,6BACV,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,QACnB,EAAW,EAAM,KAAK,WACtB,EAAa,EAAM,KAAK,WAGxB,EAAM,EAAS,OAAO,OACtB,EAAY,EAAW,OAAO,OAC9B,EAAW,GAAG,EAAU,GAAG,IAE7B,EAAU,EAAM,KAAK,QAMzB,OAJI,GAAW,CAAC,EAAQ,WAAW,UAC/B,EAAU,GAAG,IAAU,KAGpB,CACH,MAAO,EAAM,OAAO,OACpB,KAAM,EACN,QAAS,EAAS,EAAU,EAAU,cAAe,MAG5D,OAAQ,GAAS,EAAK,MAGrB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CACA,GAAM,CAAE,KAAMC,GAAa,MAAMF,EAAI,EAAK,MACpCG,EAAI,EAAKD,GAGT,EAAkBC,EAAE,oBAAoB,OACxC,EAAY,EAAgB,MAAM,4BACpC,IACA,EAAK,QAAU,EAAS,EAAU,EAAU,IAAK,IAIrD,IAAM,EAAUA,EAAE,qCACd,EAAQ,OAAS,GAEjB,EAAQ,KAAK,KAAK,MAAM,EAAG,IAAO,CAC9B,IAAM,EAAMA,EAAE,GACR,EAAO,EAAI,KAAK,QAClB,GAAQ,CAAC,EAAK,WAAW,UACrB,EAAK,WAAW,KAChB,EAAI,KAAK,OAAQ,GAAG,IAAU,KAE9B,EAAI,KAAK,OAAQ,GAAG,EAAQ,GAAG,QAM3C,EAAQ,KAAK,kBAAkB,MAAM,EAAG,IAAO,CAC3C,IAAM,EAAMA,EAAE,GAER,EAAS,EAAI,KAAK,UAClB,GAAgBA,EAAE,GAAI,KAAK,kBAAoB,MAAM,WAAW,IAAK,KACrE,EAAmB,KAAK,MAAM,GAC9B,EAAW,EAAiB,OAAS,YAC3C,GAAI,EAAQ,CACR,IAAI,EAAS,EACR,EAAO,WAAW,UACnB,EAAS,GAAG,IAAU,KAG1B,EAAI,YAAY,eAAe,EAAO,oBAAoB,EAAS,cAI3E,EAAK,YAAc,EAAQ,QAE3B,EAAK,YAAc,gBAEnB,CACJ,EAAK,YAAc,SAEvB,OAAO,MAKnB,MAAO,CACH,MAAO,eACP,KAAM,GAAG,EAAQ,gBACjB,KAAM"}