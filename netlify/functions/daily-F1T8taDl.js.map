{"version":3,"file":"daily-F1T8taDl.js","names":[],"sources":["../../lib/routes/iknowwhatyoudownload/daily.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport dayjs from 'dayjs';\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\ninterface TableData {\r\n    key: string;\r\n    count: string;\r\n    percent: string;\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/stats/daily/:country',\r\n    categories: ['other'],\r\n    example: '/iknowwhatyoudownload/stats/daily/CN',\r\n    url: 'iknowwhatyoudownload.com',\r\n    name: 'Daily Torrents Statistics',\r\n    maintainers: ['p3psi-boo'],\r\n    parameters: { country: 'the country of the stats. ISO 3166-1 alpha-2 code.' },\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { country } = ctx.req.param();\r\n    const baseUrl = `https://iknowwhatyoudownload.com/en/stat/${country}/daily/q?statDate=`;\r\n\r\n    const dates = Array.from({ length: 7 }, (_, i) => dayjs().subtract(i, 'day'));\r\n\r\n    const items = (\r\n        await Promise.all(\r\n            dates.map((dateObj) => {\r\n                const dateFormatted = dateObj.format('YYYY-MM-DD');\r\n                const url = `${baseUrl}${dateFormatted}`;\r\n                return cache.tryGet(url, async () => {\r\n                    const response = await got({\r\n                        method: 'get',\r\n                        url,\r\n                    });\r\n\r\n                    if (!response) {\r\n                        return {};\r\n                    }\r\n\r\n                    const $ = load(response.data);\r\n\r\n                    const numStats: { percent: string; desc: string }[] = [];\r\n                    $('.usePercent').each((_, elem) => {\r\n                        numStats.push({\r\n                            percent: $(elem).text(),\r\n                            desc: $(elem).parent().find('span').last().text(),\r\n                        });\r\n                    });\r\n\r\n                    const tableData: TableData[] = [];\r\n                    const dataMatch = response.data.match(/data:\\s*\\[([\\d\",\\s]+)\\]/);\r\n                    const labelsMatch = response.data.match(/labels:\\s*\\[(.*?)\\]/);\r\n\r\n                    if (dataMatch?.[1] && labelsMatch?.[1]) {\r\n                        const dataList = dataMatch[1].split(',').map((s) => s.trim().replaceAll('\"', ''));\r\n                        const labelsList = labelsMatch[1]\r\n                            .split(',')\r\n                            .map((s) => s.replaceAll('\"', '').trim())\r\n                            .filter((i) => i !== '');\r\n\r\n                        for (const index in labelsList) {\r\n                            const label = labelsList[index];\r\n                            const count = dataList[index];\r\n                            const [key, percent] = label.split(' ');\r\n                            tableData.push({\r\n                                key,\r\n                                count,\r\n                                percent,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    const topList = $('.tab-pane')\r\n                        .toArray()\r\n                        .map((item) => ({\r\n                            title: $(item).attr('id')?.toUpperCase(),\r\n                            content: $(item).find('ul').toString(),\r\n                        }));\r\n\r\n                    const content = art(path.join(__dirname, 'templates/daily.art'), {\r\n                        numStats,\r\n                        tableData,\r\n                        topList,\r\n                    });\r\n\r\n                    return {\r\n                        title: `Daily Torrents Statistics in ${country} for ${dateFormatted}`,\r\n                        link: url,\r\n                        description: content,\r\n                        pubDate: dateObj.toDate(),\r\n                    };\r\n                });\r\n            })\r\n        )\r\n    ).filter((item) => Object.keys(item).length > 0);\r\n\r\n    return {\r\n        title: `Daily Torrents Statistics in ${country} - iknownwhatyoudownload`,\r\n        link: 'https://iknowwhatyoudownload.com',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wbAcA,MAAa,EAAe,CACxB,KAAM,wBACN,WAAY,CAAC,SACb,QAAS,uCACT,IAAK,2BACL,KAAM,4BACN,YAAa,CAAC,aACd,WAAY,CAAE,QAAS,sDACvB,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAY,EAAI,IAAI,QACtB,EAAU,4CAA4C,EAAQ,oBAE9D,EAAQ,MAAM,KAAK,CAAE,OAAQ,IAAM,EAAG,IAAM,IAAQ,SAAS,EAAG,QAEhE,GACF,MAAM,QAAQ,IACV,EAAM,IAAK,GAAY,CACnB,IAAM,EAAgB,EAAQ,OAAO,cAC/B,EAAM,GAAG,IAAU,IACzB,OAAO,EAAM,OAAO,EAAK,SAAY,CACjC,IAAM,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,QAGJ,GAAI,CAAC,EACD,MAAO,GAGX,IAAM,EAAI,EAAK,EAAS,MAElB,EAAgD,GACtD,EAAE,eAAe,MAAM,EAAG,IAAS,CAC/B,EAAS,KAAK,CACV,QAAS,EAAE,GAAM,OACjB,KAAM,EAAE,GAAM,SAAS,KAAK,QAAQ,OAAO,WAInD,IAAM,EAAyB,GACzB,EAAY,EAAS,KAAK,MAAM,2BAChC,EAAc,EAAS,KAAK,MAAM,uBAExC,GAAI,IAAY,IAAM,IAAc,GAAI,CACpC,IAAM,EAAW,EAAU,GAAG,MAAM,KAAK,IAAK,GAAM,EAAE,OAAO,WAAW,IAAK,KACvE,EAAa,EAAY,GAC1B,MAAM,KACN,IAAK,GAAM,EAAE,WAAW,IAAK,IAAI,QACjC,OAAQ,GAAM,IAAM,IAEzB,IAAK,IAAM,KAAS,EAAY,CAC5B,IAAM,EAAQ,EAAW,GACnB,EAAQ,EAAS,GACjB,CAAC,EAAK,GAAW,EAAM,MAAM,KACnC,EAAU,KAAK,CACX,MACA,QACA,aAKZ,IAAM,EAAU,EAAE,aACb,UACA,IAAK,IAAU,CACZ,MAAO,EAAE,GAAM,KAAK,OAAO,cAC3B,QAAS,EAAE,GAAM,KAAK,MAAM,cAG9B,EAAU,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAC7D,WACA,YACA,YAGJ,MAAO,CACH,MAAO,gCAAgC,EAAQ,OAAO,IACtD,KAAM,EACN,YAAa,EACb,QAAS,EAAQ,gBAKnC,OAAQ,GAAS,OAAO,KAAK,GAAM,OAAS,GAE9C,MAAO,CACH,MAAO,gCAAgC,EAAQ,0BAC/C,KAAM,mCACN,KAAM"}