{"version":3,"file":"userplayrecords-I1ZjjsZa.js","names":[],"sources":["../../lib/routes/163/music/userplayrecords.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst headers = {\r\n    cookie: config.ncm.cookies,\r\n    Referer: 'https://music.163.com/',\r\n};\r\n\r\nfunction getItem(records) {\r\n    if (!records || records.length === 0) {\r\n        return [\r\n            {\r\n                title: '暂无听歌排行',\r\n            },\r\n        ];\r\n    }\r\n\r\n    return records.map((record, index) => {\r\n        const song = record.song;\r\n\r\n        const artists_paintext = song.ar.map((a) => a.name).join('/');\r\n\r\n        const html = art(path.join(__dirname, '../templates/music/userplayrecords.art'), {\r\n            index,\r\n            record,\r\n            song,\r\n        });\r\n\r\n        return {\r\n            title: `[${index + 1}] ${song.name} - ${artists_paintext}`,\r\n            link: `http://music.163.com/song?id=${song.id}`,\r\n            author: artists_paintext,\r\n            description: html,\r\n        };\r\n    });\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/music/user/playrecords/:uid/:type?',\r\n    categories: ['multimedia'],\r\n    example: '/163/music/user/playrecords/45441555/1',\r\n    parameters: { uid: '用户 uid, 可在用户主页 URL 中找到', type: '排行榜类型，0所有时间(默认)，1最近一周' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'NCM_COOKIES',\r\n                optional: true,\r\n                description: '网易云音乐登陆后的 cookie 值，可在浏览器控制台通过`document.cookie`获取。',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '用户听歌排行',\r\n    maintainers: ['alfredcai'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = ctx.req.param('uid');\r\n    const type = Number.parseInt(ctx.req.param('type')) || 0;\r\n\r\n    const url = `https://music.163.com/api/v1/play/record?uid=${uid}&type=${type}`;\r\n    const response = await got(url, { headers });\r\n\r\n    const records = type === 1 ? response.data.weekData : response.data.allData;\r\n\r\n    return {\r\n        title: `${type === 1 ? '听歌榜单（最近一周）' : '听歌榜单（所有时间}'} - ${uid}}`,\r\n        link: `https://music.163.com/user/home?id=${uid}`,\r\n        updated: response.headers.date,\r\n        item: getItem(records),\r\n    };\r\n}\r\n"],"mappings":"iWAOA,MAAM,EAAU,CACZ,OAAQ,EAAO,IAAI,QACnB,QAAS,0BAGb,SAAS,EAAQ,EAAS,CAStB,MARI,CAAC,GAAW,EAAQ,SAAW,EACxB,CACH,CACI,MAAO,WAKZ,EAAQ,KAAK,EAAQ,IAAU,CAClC,IAAM,EAAO,EAAO,KAEd,EAAmB,EAAK,GAAG,IAAK,GAAM,EAAE,MAAM,KAAK,KAEnD,EAAO,EAAI,EAAA,KAAA,EAAA,0CAAgE,CAC7E,QACA,SACA,SAGJ,MAAO,CACH,MAAO,IAAI,EAAQ,EAAE,IAAI,EAAK,KAAK,KAAK,IACxC,KAAM,gCAAgC,EAAK,KAC3C,OAAQ,EACR,YAAa,KAKzB,MAAa,EAAe,CACxB,KAAM,sCACN,WAAY,CAAC,cACb,QAAS,yCACT,WAAY,CAAE,IAAK,yBAA0B,KAAM,yBACnD,SAAU,CACN,cAAe,CACX,CACI,KAAM,cACN,SAAU,GACV,YAAa,sDAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,EAAI,IAAI,MAAM,OACpB,EAAO,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,EAEjD,EAAM,gDAAgD,EAAI,QAAQ,IAClE,EAAW,MAAM,EAAI,EAAK,CAAE,YAE5B,EAAU,IAAS,EAAI,EAAS,KAAK,SAAW,EAAS,KAAK,QAEpE,MAAO,CACH,MAAO,GAAG,IAAS,EAAI,aAAe,aAAa,KAAK,EAAI,GAC5D,KAAM,sCAAsC,IAC5C,QAAS,EAAS,QAAQ,KAC1B,KAAM,EAAQ"}