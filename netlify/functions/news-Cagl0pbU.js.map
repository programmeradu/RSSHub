{"version":3,"file":"news-Cagl0pbU.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/gmu/news.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport type { Context } from 'hono';\r\nimport type { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/news/:type?',\r\n    categories: ['university'],\r\n    example: '/gmu/news/gyyw',\r\n    parameters: {\r\n        type: {\r\n            description: '新闻类型，见下表，默认为 gyyw',\r\n            options: [\r\n                { value: 'gyyw', label: '赣医要闻' },\r\n                { value: 'ybdt', label: '院部动态' },\r\n                { value: 'mtgy', label: '媒体赣医' },\r\n                { value: 'xsjz', label: '学术讲座' },\r\n            ],\r\n            default: 'gyyw',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gmu.cn/xwzx/gyyw.htm', 'gmu.cn/'],\r\n            target: '/news/gyyw',\r\n        },\r\n        {\r\n            source: ['gmu.cn/xwzx/ybdt.htm'],\r\n            target: '/news/ybdt',\r\n        },\r\n        {\r\n            source: ['gmu.cn/xwzx/mtgy.htm'],\r\n            target: '/news/mtgy',\r\n        },\r\n        {\r\n            source: ['gmu.cn/xwzx/xsjz.htm'],\r\n            target: '/news/xsjz',\r\n        },\r\n    ],\r\n    name: '新闻中心',\r\n    maintainers: ['FrankFahey'],\r\n    url: 'gmu.cn/xwzx/gyyw.htm',\r\n    handler,\r\n};\r\n\r\nexport async function handler(ctx: Context) {\r\n    const type = (ctx.req.param?.('type') as string) || 'gyyw';\r\n    const newsType = {\r\n        gyyw: { title: '赣医要闻', url: '/xwzx/gyyw.htm' },\r\n        ybdt: { title: '院部动态', url: '/xwzx/ybdt.htm' },\r\n        mtgy: { title: '媒体赣医', url: '/xwzx/mtgy.htm' },\r\n        xsjz: { title: '学术讲座', url: '/xwzx/xsjz.htm' },\r\n    }[type] || { title: '赣医要闻', url: '/xwzx/gyyw.htm' };\r\n\r\n    const baseUrl = 'https://gmu.cn';\r\n    const link = `${baseUrl}${newsType.url}`;\r\n\r\n    const response = await got(link, {\r\n        https: {\r\n            rejectUnauthorized: false,\r\n        },\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const list = $('.list ul li');\r\n\r\n    const items = await Promise.all(\r\n        list.toArray().map(async (item) => {\r\n            const element = $(item);\r\n            const a = element.find('a');\r\n            const dateText = element.find('i').text();\r\n            const href = a.attr('href');\r\n            const title = a.text().trim();\r\n\r\n            if (!href || !title) {\r\n                return null;\r\n            }\r\n\r\n            const pubDate = parseDate(dateText);\r\n            if (!pubDate) {\r\n                return null;\r\n            }\r\n\r\n            const fullLink = new URL(href, link).href;\r\n\r\n            // Use cache.tryGet to cache the article content\r\n            return await cache.tryGet(`gmu:news:${fullLink}`, async () => {\r\n                try {\r\n                    const contentResponse = await got(fullLink, {\r\n                        https: {\r\n                            rejectUnauthorized: false,\r\n                        },\r\n                    });\r\n                    const content = load(contentResponse.data);\r\n\r\n                    // 获取新闻内容\r\n                    const articleContent = content('.v_news_content').html() || '暂无详细内容';\r\n\r\n                    return {\r\n                        title,\r\n                        link: fullLink,\r\n                        pubDate,\r\n                        description: articleContent,\r\n                    };\r\n                } catch {\r\n                    // 如果获取文章内容失败，返回基本信息\r\n                    return {\r\n                        title,\r\n                        link: fullLink,\r\n                        pubDate,\r\n                        description: '暂无详细内容',\r\n                    };\r\n                }\r\n            });\r\n        })\r\n    );\r\n\r\n    const result = items.filter((item): item is { title: string; link: string; pubDate: Date; description: string } => item !== null);\r\n\r\n    return {\r\n        title: `赣南医科大学 - ${newsType.title}`,\r\n        link,\r\n        description: `赣南医科大学${newsType.title}`,\r\n        item: result,\r\n    };\r\n}\r\n"],"mappings":"wWAOA,MAAaA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,cACb,QAAS,iBACT,WAAY,CACR,KAAM,CACF,YAAa,oBACb,QAAS,CACL,CAAE,MAAO,OAAQ,MAAO,QACxB,CAAE,MAAO,OAAQ,MAAO,QACxB,CAAE,MAAO,OAAQ,MAAO,QACxB,CAAE,MAAO,OAAQ,MAAO,SAE5B,QAAS,SAGjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAAwB,WACjC,OAAQ,cAEZ,CACI,OAAQ,CAAC,wBACT,OAAQ,cAEZ,CACI,OAAQ,CAAC,wBACT,OAAQ,cAEZ,CACI,OAAQ,CAAC,wBACT,OAAQ,eAGhB,KAAM,OACN,YAAa,CAAC,cACd,IAAK,uBACL,WAGJ,eAAsB,EAAQ,EAAc,CACxC,IAAM,EAAQ,EAAI,IAAI,QAAQ,SAAsB,OAC9C,EAAW,CACb,KAAM,CAAE,MAAO,OAAQ,IAAK,kBAC5B,KAAM,CAAE,MAAO,OAAQ,IAAK,kBAC5B,KAAM,CAAE,MAAO,OAAQ,IAAK,kBAC5B,KAAM,CAAE,MAAO,OAAQ,IAAK,mBAC9B,IAAS,CAAE,MAAO,OAAQ,IAAK,kBAG3B,EAAO,iBAAa,EAAS,MAE7B,EAAW,MAAMC,EAAI,EAAM,CAC7B,MAAO,CACH,mBAAoB,MAItB,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,eAET,EAAQ,MAAM,QAAQ,IACxB,EAAK,UAAU,IAAI,KAAO,IAAS,CAC/B,IAAM,EAAU,EAAE,GACZ,EAAI,EAAQ,KAAK,KACjB,EAAW,EAAQ,KAAK,KAAK,OAC7B,EAAO,EAAE,KAAK,QACd,EAAQ,EAAE,OAAO,OAEvB,GAAI,CAAC,GAAQ,CAAC,EACV,OAAO,KAGX,IAAM,EAAU,EAAU,GAC1B,GAAI,CAAC,EACD,OAAO,KAGX,IAAM,EAAW,IAAI,IAAI,EAAM,GAAM,KAGrC,OAAO,MAAMC,EAAM,OAAO,YAAY,IAAY,SAAY,CAC1D,GAAI,CACA,IAAM,EAAkB,MAAMD,EAAI,EAAU,CACxC,MAAO,CACH,mBAAoB,MAGtB,EAAU,EAAK,EAAgB,MAG/B,EAAiB,EAAQ,mBAAmB,QAAU,SAE5D,MAAO,CACH,QACA,KAAM,EACN,UACA,YAAa,QAEb,CAEJ,MAAO,CACH,QACA,KAAM,EACN,UACA,YAAa,gBAO3B,EAAS,EAAM,OAAQ,GAAsF,IAAS,MAE5H,MAAO,CACH,MAAO,YAAY,EAAS,QAC5B,OACA,YAAa,SAAS,EAAS,QAC/B,KAAM"}