{"version":3,"file":"album-CZe_K9bF.js","names":["cache","ofetch","route: Route","_desc: string"],"sources":["../../lib/routes/ximalaya/utils.ts","../../lib/routes/ximalaya/album.ts"],"sourcesContent":["import crypto from 'node:crypto';\r\n/*\r\nconst getParams = (ep) => {\r\n    const a1 = 'xkt3a41psizxrh9l';\r\n    const a = [\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59,\r\n        60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\r\n        44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1,\r\n    ];\r\n    let o = ep.length;\r\n    let r = 0;\r\n    let n, e;\r\n    const a2 = [];\r\n    while (r < o) {\r\n        e = a[255 & ep[r].charCodeAt()];\r\n        r += 1;\r\n        while (r < o && -1 === e) {\r\n            e = a[255 & ep[r].charCodeAt()];\r\n            r += 1;\r\n        }\r\n\r\n        if (-1 === e) {\r\n            break;\r\n        }\r\n        n = a[255 & ep[r].charCodeAt()];\r\n        r += 1;\r\n        while (r < o && -1 === n) {\r\n            n = a[255 & ep[r].charCodeAt()];\r\n            r += 1;\r\n        }\r\n        if (-1 === n) {\r\n            break;\r\n        }\r\n        a2.push((e << 2) | ((48 & n) >> 4));\r\n        e = 255 & ep[r].charCodeAt();\r\n        r += 1;\r\n        if (61 === e) {\r\n            break;\r\n        }\r\n        e = a[e];\r\n        while (r < o && -1 === e) {\r\n            e = 255 & ep[r].charCodeAt();\r\n            if (61 === e) {\r\n                break;\r\n            }\r\n            e = a[e];\r\n        }\r\n        if (-1 === e) {\r\n            break;\r\n        }\r\n        a2.push(((15 & n) << 4) | ((60 & e) >> 2));\r\n        n = 255 & ep[r].charCodeAt();\r\n        r += 1;\r\n        if (61 === n) {\r\n            break;\r\n        }\r\n        n = a[n];\r\n        while (r < o && -1 === n) {\r\n            n = 255 & ep[r].charCodeAt();\r\n            if (61 === n) {\r\n                break;\r\n            }\r\n            n = a[n];\r\n        }\r\n        if (-1 === n) {\r\n            break;\r\n        }\r\n        a2.push(((3 & e) << 6) | n);\r\n    }\r\n\r\n    const r1 = Array.from(Array.from({ length: 256 }), (v, i) => i);\r\n\r\n    let i = '';\r\n    o = 0;\r\n    for (let a = 0; a < 256; a++) {\r\n        o = (o + r1[a] + a1[a % a1.length].charCodeAt()) % 256;\r\n        [r1[a], r1[o]] = [r1[o], r1[a]];\r\n    }\r\n\r\n    let a3 = 0;\r\n    o = 0;\r\n    for (const u of a2) {\r\n        a3 = (a3 + 1) % 256;\r\n        o = (o + r1[a3]) % 256;\r\n        [r1[a3], r1[o]] = [r1[o], r1[a3]];\r\n        i += String.fromCharCode(u ^ r1[(r1[a3] + r1[o]) % 256]);\r\n    }\r\n    i = i.split('-');\r\n    return {\r\n        sign: i[1],\r\n        buy_key: i[0],\r\n        token: i[2],\r\n        timestamp: i[3],\r\n    };\r\n};\r\n\r\nconst getPath = (seed, fileId) => {\r\n    let t = String.raw`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/\\:._-1234567890`;\r\n    let cgStr = '';\r\n    const l = t.length;\r\n    let o;\r\n    const idKey = fileId.split('*');\r\n    for (let i = 0; i < l; i++) {\r\n        seed = (211 * seed + 30031) % 65536;\r\n        o = Number.parseInt((seed * t.length) / 65536);\r\n        cgStr += t[o];\r\n        t = t.split(t[o]).join('');\r\n    }\r\n\r\n    const url = idKey.map((id) => cgStr[id]).join('');\r\n    return url;\r\n};\r\n\r\nconst getUrl = (r) => {\r\n    const params = getParams(r.ep);\r\n    params.duration = r.duration;\r\n    const paramsArray = Object.keys(params)\r\n        .filter((key) => params[key])\r\n        .map((key) => `${key}=${params[key]}`);\r\n    const url = `https://audiopay.cos.xmcdn.com/download/${r.apiVersion}/${getPath(r.seed, r.fileId)}?${paramsArray.join('&')}`;\r\n    return url;\r\n};\r\n*/\r\n\r\nconst getRandom16 = (len) =>\r\n    crypto\r\n        .randomBytes(Math.ceil(len / 2))\r\n        .toString('hex')\r\n        .slice(0, len);\r\n\r\nconst decryptUrl = (encryptedUrl) => {\r\n    const o = [\r\n        183, 174, 108, 16, 131, 159, 250, 5, 239, 110, 193, 202, 153, 137, 251, 176, 119, 150, 47, 204, 97, 237, 1, 71, 177, 42, 88, 218, 166, 82, 87, 94, 14, 195, 69, 127, 215, 240, 225, 197, 238, 142, 123, 44, 219, 50, 190, 29,\r\n        181, 186, 169, 98, 139, 185, 152, 13, 141, 76, 6, 157, 200, 132, 182, 49, 20, 116, 136, 43, 155, 194, 101, 231, 162, 242, 151, 213, 53, 60, 26, 134, 211, 56, 28, 223, 107, 161, 199, 15, 229, 61, 96, 41, 66, 158, 254, 21, 165,\r\n        253, 103, 89, 3, 168, 40, 246, 81, 95, 58, 31, 172, 78, 99, 45, 148, 187, 222, 124, 55, 203, 235, 64, 68, 149, 180, 35, 113, 207, 118, 111, 91, 38, 247, 214, 7, 212, 209, 189, 241, 18, 115, 173, 25, 236, 121, 249, 75, 57,\r\n        216, 10, 175, 112, 234, 164, 70, 206, 198, 255, 140, 230, 12, 32, 83, 46, 245, 0, 62, 227, 72, 191, 156, 138, 248, 114, 220, 90, 84, 170, 128, 19, 24, 122, 146, 80, 39, 37, 8, 34, 22, 11, 93, 130, 63, 154, 244, 160, 144, 79,\r\n        23, 133, 92, 54, 102, 210, 65, 67, 27, 196, 201, 106, 143, 52, 74, 100, 217, 179, 48, 233, 126, 117, 184, 226, 85, 171, 167, 86, 2, 147, 17, 135, 228, 252, 105, 30, 192, 129, 178, 120, 36, 145, 51, 163, 77, 205, 73, 4, 188,\r\n        125, 232, 33, 243, 109, 224, 104, 208, 221, 59, 9,\r\n    ];\r\n\r\n    const a = [204, 53, 135, 197, 39, 73, 58, 160, 79, 24, 12, 83, 180, 250, 101, 60, 206, 30, 10, 227, 36, 95, 161, 16, 135, 150, 235, 116, 242, 116, 165, 171];\r\n\r\n    const padding = '='.repeat((4 - (encryptedUrl.length % 4)) % 4);\r\n    const encryptedData = Buffer.from(encryptedUrl.replace('_', '/').replace('-', '+') + padding, 'base64');\r\n    if (encryptedData.length < 16) {\r\n        return encryptedUrl;\r\n    }\r\n    const data = encryptedData.subarray(0, -16);\r\n    const iv = encryptedData.subarray(-16);\r\n    const decryptedData = new Uint8Array(data);\r\n    for (let i = 0; i < decryptedData.length; i++) {\r\n        decryptedData[i] = o[decryptedData[i]];\r\n    }\r\n    for (let i = 0; i < decryptedData.length; i += 16) {\r\n        const block = decryptedData.subarray(i, i + 16);\r\n        for (const [j, element] of block.entries()) {\r\n            decryptedData[i + j] = element ^ iv[j];\r\n        }\r\n    }\r\n    for (let i = 0; i < decryptedData.length; i += 32) {\r\n        const block = decryptedData.subarray(i, i + 32);\r\n        for (const [j, element] of block.entries()) {\r\n            decryptedData[i + j] = element ^ a[j];\r\n        }\r\n    }\r\n    return Buffer.from(decryptedData).toString('utf8');\r\n};\r\nexport { /* getUrl, */ getRandom16, decryptUrl };\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { getRandom16, decryptUrl } from './utils';\r\nconst baseUrl = 'https://www.ximalaya.com';\r\nimport { config } from '@/config';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { Album, RichIntro, TrackInfoResponse } from './types';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\n// Find category from: https://help.apple.com/itc/podcasts_connect/?lang=en#/itc9267a2f12\r\nconst categoryDict = {\r\n    人文: 'Society & Culture',\r\n    历史: 'History',\r\n    头条: 'News',\r\n    娱乐: 'Leisure',\r\n    音乐: 'Music',\r\n    IT科技: 'Technology',\r\n};\r\n\r\nfunction getAlbumData(albumId) {\r\n    return cache.tryGet(`ximalaya:albumInfo:${albumId}`, async () => {\r\n        const response = await ofetch(`${baseUrl}/revision/album/v1/simple`, {\r\n            query: {\r\n                albumId,\r\n            },\r\n            parseResponse: JSON.parse,\r\n        });\r\n        return response.data.albumPageMainInfo as Album;\r\n    });\r\n}\r\n\r\nfunction judgeTrue(str, ...validStrings) {\r\n    if (!str) {\r\n        return false;\r\n    }\r\n    str = str.toLowerCase();\r\n    if (str === 'true' || str === '1') {\r\n        return true;\r\n    }\r\n    for (const _s of validStrings) {\r\n        if (str === _s) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const route: Route = {\r\n    path: ['/:type/:id/:all/:shownote?'],\r\n    categories: ['multimedia'],\r\n    example: '/ximalaya/album/299146',\r\n    parameters: {\r\n        type: '专辑类型, 通常可以使用 `album`，可在对应专辑页面的 URL 中找到',\r\n        id: '专辑 id, 可在对应专辑页面的 URL 中找到',\r\n        all: '是否需要获取全部节目，填入 `1`、`true`、`all` 视为获取所有节目，填入其他则不获取。',\r\n    },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'XIMALAYA_TOKEN',\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: true,\r\n        supportScihub: false,\r\n    },\r\n    name: '专辑',\r\n    maintainers: ['lengthmin', 'jjeejj', 'prnake'],\r\n    handler,\r\n    description: `目前喜马拉雅的 API 只能一集一集的获取各节目上的 ShowNote，会极大的占用系统资源，所以默认为不获取节目的 ShowNote。\r\n\r\n::: warning\r\n  专辑类型即 url 中的分类拼音，使用通用分类 \\`album\\` 通常是可行的，专辑 id 是跟在**分类拼音**后的那个 id, 不要输成某集的 id 了\r\n\r\n  **付费内容需要配置好已购买账户的 token 才能收听，详情见部署页面的配置模块**\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type'); // 专辑分类\r\n    const id = ctx.req.param('id'); // 专辑id\r\n    const shouldAll = judgeTrue(ctx.req.param('all'), 'all');\r\n    const shouldShowNote = judgeTrue(ctx.req.param('shownote'), 'shownote');\r\n    const pageSize = shouldAll ? 200 : 30;\r\n\r\n    const albumData = await getAlbumData(id);\r\n\r\n    const isPaid = albumData.isPaid;\r\n\r\n    const author = albumData.anchorName;\r\n\r\n    const albumTitle = albumData.albumTitle; // 专辑标题\r\n    const albumCover = 'https:' + albumData.cover;\r\n    const albumIntro = sanitizeHtml(albumData.detailRichIntro, { allowedTags: [], allowedAttributes: {} }); // 专辑介绍\r\n\r\n    const albumCategory = albumData.categoryTitle; // 专辑分类名字\r\n\r\n    // sort 为 1 时是降序\r\n    // const isAsc = albumData.store.AlbumDetailTrackList.sort === 0;\r\n    // 喜马拉雅的 API 的 query 参数 isAsc=0 时才是升序，不写就是降序。\r\n    const trackInfoApi = `https://mobile.ximalaya.com/mobile/v1/album/track/?albumId=${id}&pageSize=${pageSize}&pageId=`;\r\n    const trackInfoResponse = await ofetch<TrackInfoResponse>(trackInfoApi + '1', {\r\n        parseResponse: JSON.parse,\r\n    });\r\n    const maxPageId = trackInfoResponse.data.maxPageId; // 最大页数\r\n\r\n    let playList = trackInfoResponse.data.list;\r\n\r\n    if (shouldAll) {\r\n        const promises = [];\r\n        for (let i = 2; i <= maxPageId; i++) {\r\n            // string + number -> string\r\n            promises.push(\r\n                ofetch<TrackInfoResponse>(trackInfoApi + i, {\r\n                    parseResponse: JSON.parse,\r\n                })\r\n            );\r\n        }\r\n        const responses = await Promise.all(promises);\r\n        for (const j of responses) {\r\n            playList = [...playList, ...j.data.list];\r\n        }\r\n    }\r\n\r\n    await Promise.all(\r\n        playList.map(async (item) => {\r\n            item.desc = await cache.tryGet(`ximalaya:trackRichInfo:${item.trackId}:${shouldShowNote.toString()}`, async () => {\r\n                let _desc: string = '';\r\n                if (shouldShowNote) {\r\n                    const trackRichInfoApi = `https://mobile.ximalaya.com/mobile-track/richIntro?trackId=${item.trackId}`;\r\n                    const trackRichInfoResponse = await ofetch<RichIntro>(trackRichInfoApi);\r\n                    _desc = trackRichInfoResponse.richIntro;\r\n                }\r\n                if (!_desc) {\r\n                    _desc = item.intro;\r\n                }\r\n                return _desc;\r\n            });\r\n        })\r\n    );\r\n\r\n    const token = config.ximalaya.token;\r\n    if (isPaid && token) {\r\n        const randomToken = getRandom16(8) + '-' + getRandom16(4) + '-' + getRandom16(4) + '-' + getRandom16(4) + '-' + getRandom16(12);\r\n        await Promise.all(\r\n            playList.map(async (item) => {\r\n                const timestamp = Math.floor(Date.now());\r\n                const trackPayInfoApi = `https://www.ximalaya.com/mobile-playpage/track/v3/baseInfo/${timestamp}?device=www2&trackQualityLevel=2&trackId=${item.trackId}`;\r\n                const data = await cache.tryGet('ximalaya:trackPayInfo' + trackPayInfoApi, async () => {\r\n                    const trackPayInfoResponse = await ofetch(trackPayInfoApi, {\r\n                        headers: {\r\n                            'user-agent': 'ting_6.7.9(GM1900,Android29)',\r\n                            cookie: `1&_device=android&${randomToken}&6.7.9;1&_token=${token}`,\r\n                        },\r\n                    });\r\n                    const trackInfo = trackPayInfoResponse.trackInfo;\r\n                    const _item = {};\r\n                    if (!trackInfo.isAuthorized) {\r\n                        return _item;\r\n                    }\r\n                    _item.playPathAacv224 = decryptUrl(trackInfo.playUrlList[0].url);\r\n                    return _item;\r\n                });\r\n\r\n                if (data.playPathAacv224) {\r\n                    item.playPathAacv224 = data.playPathAacv224;\r\n                }\r\n                if (data.desc) {\r\n                    item.desc = data.desc;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    const resultItems = playList.map((item) => {\r\n        const title = item.title;\r\n        const trackId = item.trackId;\r\n        const itunesItemImage = item.coverLarge.split('!')[0] ?? albumCover;\r\n        const link = `${baseUrl}/sound/${trackId}`;\r\n        const pubDate = parseDate(item.createdAt, 'x');\r\n        const duration = item.duration; // 时间长度：单位（秒）\r\n        const enclosureUrl = item.playPathAacv224 || item.playPathAacv164;\r\n\r\n        let resultItem = {\r\n            title,\r\n            link,\r\n            description: item.desc || '',\r\n            pubDate,\r\n            itunes_item_image: itunesItemImage,\r\n        };\r\n\r\n        if (enclosureUrl) {\r\n            if (isPaid) {\r\n                resultItem.description = '[该内容需付费] ' + resultItem.description;\r\n            }\r\n            resultItem = {\r\n                ...resultItem,\r\n                enclosure_url: enclosureUrl,\r\n                itunes_duration: duration,\r\n                enclosure_type: 'audio/x-m4a',\r\n            };\r\n        } else {\r\n            resultItem.description = '[该内容需付费] ' + resultItem.description;\r\n        }\r\n\r\n        return resultItem;\r\n    });\r\n\r\n    return {\r\n        title: albumTitle,\r\n        link: `${baseUrl}/${type}/${id}`,\r\n        description: albumIntro,\r\n        image: albumCover,\r\n        itunes_author: author,\r\n        itunes_category: categoryDict[albumCategory] || albumCategory,\r\n        item: resultItems,\r\n    };\r\n}\r\n"],"mappings":"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"}