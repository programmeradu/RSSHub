{"version":3,"file":"recent-actions-CY0gBBL9.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/codeforces/recent-actions.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/recent-actions/:minrating?',\r\n    categories: ['programming'],\r\n    example: '/codeforces/recent-actions',\r\n    parameters: { minrating: 'The minimum blog/comment rating required. Default: 1' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['codeforces.com/recent-actions'],\r\n            target: '/recent-actions',\r\n        },\r\n    ],\r\n    name: 'Recent actions',\r\n    maintainers: [],\r\n    handler,\r\n    url: 'codeforces.com/recent-actions',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const minRating = ctx.req.param('minrating') || 1;\r\n\r\n    const rsp = await ofetch('https://codeforces.com/api/recentActions?maxCount=100');\r\n\r\n    const actions = rsp.result.map((action) => {\r\n        const pubDate = new Date(action.timeSeconds * 1000);\r\n\r\n        const blog = action.blogEntry;\r\n        const blogId = blog.id;\r\n        const blogTitle = load(blog.title).text();\r\n\r\n        if (action.comment) {\r\n            const c = action.comment;\r\n            return {\r\n                title: `@${c.commentatorHandle} commented on \"${blogTitle}\"`,\r\n                description: load(c.text).text(),\r\n                pubDate,\r\n                link: `https://codeforces.com/blog/entry/${blogId}?#comment-${c.id}`,\r\n                rating: c.rating,\r\n            };\r\n        }\r\n        return {\r\n            title: `@${blog.authorHandle} posted \"${blogTitle}\"`,\r\n            description: blogTitle,\r\n            pubDate,\r\n            link: `https://codeforces.com/blog/entry/${blogId}`,\r\n            rating: blog.rating,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: 'Codeforces - Recent actions',\r\n        link: 'https://codeforces.com/recent-actions',\r\n        item: actions\r\n            .filter((a) => a.rating >= minRating)\r\n            .map((a) => ({\r\n                title: a.title,\r\n                description: a.description,\r\n                pubDate: a.pubDate,\r\n                link: a.link,\r\n            })),\r\n    };\r\n}\r\n"],"mappings":"0MAIA,MAAaA,EAAe,CACxB,KAAM,8BACN,WAAY,CAAC,eACb,QAAS,6BACT,WAAY,CAAE,UAAW,wDACzB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iCACT,OAAQ,oBAGhB,KAAM,iBACN,YAAa,GACb,UACA,IAAK,iCAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAY,EAAI,IAAI,MAAM,cAAgB,EAE1C,EAAM,MAAMC,EAAO,yDAEnB,EAAU,EAAI,OAAO,IAAK,GAAW,CACvC,IAAM,EAAU,IAAI,KAAK,EAAO,YAAc,KAExC,EAAO,EAAO,UACd,EAAS,EAAK,GACd,EAAY,EAAK,EAAK,OAAO,OAEnC,GAAI,EAAO,QAAS,CAChB,IAAM,EAAI,EAAO,QACjB,MAAO,CACH,MAAO,IAAI,EAAE,kBAAkB,iBAAiB,EAAU,GAC1D,YAAa,EAAK,EAAE,MAAM,OAC1B,UACA,KAAM,qCAAqC,EAAO,YAAY,EAAE,KAChE,OAAQ,EAAE,QAGlB,MAAO,CACH,MAAO,IAAI,EAAK,aAAa,WAAW,EAAU,GAClD,YAAa,EACb,UACA,KAAM,qCAAqC,IAC3C,OAAQ,EAAK,UAIrB,MAAO,CACH,MAAO,8BACP,KAAM,wCACN,KAAM,EACD,OAAQ,GAAM,EAAE,QAAU,GAC1B,IAAK,IAAO,CACT,MAAO,EAAE,MACT,YAAa,EAAE,YACf,QAAS,EAAE,QACX,KAAM,EAAE"}