{"version":3,"file":"trophy-q0LNrAzo.js","names":["route: Route","got","response","$","list","items","item"],"sources":["../../lib/routes/ps/trophy.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/trophy/:id',\r\n    categories: ['game'],\r\n    example: '/ps/trophy/DIYgod_',\r\n    parameters: { id: 'User ID' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'PlayStation Network user trophy',\r\n    maintainers: ['DIYgod'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: `https://psnprofiles.com/${id}?order=last-trophy`,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const list = $('.zebra tr')\r\n        .filter((element) => $(element).find('.progress-bar span').text() !== '0%')\r\n        .toArray()\r\n        .map((e) => $(e).find('.title').attr('href'))\r\n        .slice(0, 3);\r\n\r\n    const items = await Promise.all(\r\n        list.map(async (item) => {\r\n            const link = 'https://psnprofiles.com' + item + '?order=date&trophies=earned&lang=zh-cn';\r\n\r\n            const response = await got({\r\n                method: 'get',\r\n                url: link,\r\n            });\r\n\r\n            const $ = load(response.data);\r\n\r\n            const list = $('.zebra tr.completed');\r\n            const items = list.toArray().map((item) => {\r\n                item = $(item);\r\n                const classMap = {\r\n                    Platinum: '白金',\r\n                    Gold: '金',\r\n                    Silver: '银',\r\n                    Bronze: '铜',\r\n                };\r\n                return {\r\n                    title: item.find('.title').text() + ' - ' + $('.page h3').eq(0).text().trim().replace(' Trophies', ''),\r\n                    description: `<img src=\"${item.find('.trophy source').attr('srcset').split(' ')[1]}\"><br>${item\r\n                        .find('.title')\r\n                        .parent()\r\n                        .contents()\r\n                        .filter((_, element) => element.nodeType === 3)\r\n                        .text()\r\n                        .trim()}<br>等级：${classMap[item.find('td').eq(5).find('img').attr('title')]}<br>珍贵度：${item.find('.hover-show .typo-top').text()}`,\r\n                    link: 'https://psnprofiles.com' + item.find('.title').attr('href'),\r\n                    pubDate: new Date(\r\n                        +new Date(\r\n                            item\r\n                                .find('.typo-top-date nobr')\r\n                                .contents()\r\n                                .filter((_, element) => element.nodeType === 3)\r\n                                .text() +\r\n                                ' ' +\r\n                                item.find('.typo-bottom-date').text()\r\n                        ) +\r\n                            8 * 60 * 60 * 1000\r\n                    ).toUTCString(),\r\n                };\r\n            });\r\n\r\n            return items;\r\n        })\r\n    );\r\n    let result = [];\r\n    for (const item of items) {\r\n        result = [...result, ...item];\r\n    }\r\n    result = result.sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));\r\n\r\n    return {\r\n        title: `${id} 的 PSN 奖杯`,\r\n        link: `https://psnprofiles.com/${id}/log`,\r\n        item: result,\r\n    };\r\n}\r\n"],"mappings":"+PAIA,MAAaA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,QACb,QAAS,qBACT,WAAY,CAAE,GAAI,WAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,kCACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,2BAA2B,EAAG,sBAGjC,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,aACV,OAAQ,GAAY,EAAE,GAAS,KAAK,sBAAsB,SAAW,MACrE,UACA,IAAK,GAAM,EAAE,GAAG,KAAK,UAAU,KAAK,SACpC,MAAM,EAAG,GAER,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAI,KAAO,IAAS,CACrB,IAAM,EAAO,0BAA4B,EAAO,yCAE1CC,EAAW,MAAMD,EAAI,CACvB,OAAQ,MACR,IAAK,IAGHE,EAAI,EAAKD,EAAS,MAElBE,EAAOD,EAAE,uBACTE,EAAQD,EAAK,UAAU,IAAK,GAAS,CACvC,EAAOD,EAAEG,GACT,IAAM,EAAW,CACb,SAAU,KACV,KAAM,IACN,OAAQ,IACR,OAAQ,KAEZ,MAAO,CACH,MAAOA,EAAK,KAAK,UAAU,OAAS,MAAQH,EAAE,YAAY,GAAG,GAAG,OAAO,OAAO,QAAQ,YAAa,IACnG,YAAa,aAAaG,EAAK,KAAK,kBAAkB,KAAK,UAAU,MAAM,KAAK,GAAG,QAAQA,EACtF,KAAK,UACL,SACA,WACA,QAAQ,EAAG,IAAY,EAAQ,WAAa,GAC5C,OACA,OAAO,SAAS,EAASA,EAAK,KAAK,MAAM,GAAG,GAAG,KAAK,OAAO,KAAK,UAAU,UAAUA,EAAK,KAAK,yBAAyB,SAC5H,KAAM,0BAA4BA,EAAK,KAAK,UAAU,KAAK,QAC3D,QAAS,IAAI,KACT,CAAC,IAAI,KACDA,EACK,KAAK,uBACL,WACA,QAAQ,EAAG,IAAY,EAAQ,WAAa,GAC5C,OACD,IACAA,EAAK,KAAK,qBAAqB,QAEnC,IAAS,GAAK,KACpB,iBAIV,OAAOD,KAGX,EAAS,GACb,IAAK,IAAM,KAAQ,EACf,EAAS,CAAC,GAAG,EAAQ,GAAG,GAI5B,MAFA,GAAS,EAAO,MAAM,EAAG,IAAM,IAAI,KAAK,EAAE,SAAW,IAAI,KAAK,EAAE,UAEzD,CACH,MAAO,GAAG,EAAG,WACb,KAAM,2BAA2B,EAAG,MACpC,KAAM"}