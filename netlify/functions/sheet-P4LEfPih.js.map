{"version":3,"file":"sheet-P4LEfPih.js","names":["route: Route","got","apiKey"],"sources":["../../lib/routes/themoviedb/sheet.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport apiKey from './api-key';\r\nimport { MEDIA_TYPE_TO_ITEM_HANDLE } from './utils';\r\n\r\nconst API_PATH = {\r\n    movie: {\r\n        'now-playing': 'movie/now_playing',\r\n        upcoming: 'movie/upcoming',\r\n        'top-rated': 'movie/top_rated',\r\n    },\r\n    tv: {\r\n        'airing-today': 'tv/airing_today',\r\n        'on-the-air': 'tv/on_the_air',\r\n        'top-rated': 'tv/top_rated',\r\n    },\r\n};\r\n\r\nconst TITLE = {\r\n    movie: {\r\n        'now-playing': 'Now Playing Movies',\r\n        upcoming: 'Upcoming Movies',\r\n        'top-rated': 'Top Rated Movies',\r\n    },\r\n    tv: {\r\n        'airing-today': 'TV Shows Airing Today',\r\n        'on-the-air': 'Currently Airing TV Shows',\r\n        'top-rated': 'Top Rated TV Shows',\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:mediaType/:sheet/:lang?',\r\n    categories: ['multimedia'],\r\n    example: '/themoviedb/tv/top-rated/en-US',\r\n    parameters: { mediaType: '`movie` or `tv`', sheet: 'Sheet, see below', lang: 'Language' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Sheet',\r\n    maintainers: ['x2cf'],\r\n    handler,\r\n    description: `When \\`mediaType\\` is \\`tv\\`, \\`sheet\\` should be:\r\n\r\n| Airing Today | On TV      | Top Rated |\r\n| ------------ | ---------- | --------- |\r\n| airing-today | on-the-air | top-rated |\r\n\r\n  When \\`mediaType\\` is \\`movie\\`, \\`sheet\\` should be:\r\n\r\n| Now Playing | Upcoming | Top Rated |\r\n| ----------- | -------- | --------- |\r\n| now-playing | upcoming | top-rated |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { mediaType, sheet, lang } = ctx.req.param();\r\n    const { data } = await got(`https://api.themoviedb.org/3/${API_PATH[mediaType][sheet]}`, {\r\n        searchParams: {\r\n            language: lang,\r\n            api_key: apiKey(),\r\n        },\r\n    });\r\n\r\n    return {\r\n        title: `${TITLE[mediaType][sheet]} â€” TMDB`,\r\n        link: `https://www.themoviedb.org/${mediaType}/${sheet}`,\r\n        item: data.results.map((item) => MEDIA_TYPE_TO_ITEM_HANDLE[mediaType](item, lang)),\r\n    };\r\n}\r\n"],"mappings":"mXAKA,MAAM,EAAW,CACb,MAAO,CACH,cAAe,oBACf,SAAU,iBACV,YAAa,mBAEjB,GAAI,CACA,eAAgB,kBAChB,aAAc,gBACd,YAAa,iBAIf,EAAQ,CACV,MAAO,CACH,cAAe,qBACf,SAAU,kBACV,YAAa,oBAEjB,GAAI,CACA,eAAgB,wBAChB,aAAc,4BACd,YAAa,uBAIRA,EAAe,CACxB,KAAM,4BACN,WAAY,CAAC,cACb,QAAS,iCACT,WAAY,CAAE,UAAW,kBAAmB,MAAO,mBAAoB,KAAM,YAC7E,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,QACN,YAAa,CAAC,QACd,UACA,YAAa,kWAajB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,YAAW,QAAO,QAAS,EAAI,IAAI,QACrC,CAAE,QAAS,MAAMC,EAAI,gCAAgC,EAAS,GAAW,KAAU,CACrF,aAAc,CACV,SAAU,EACV,QAASC,OAIjB,MAAO,CACH,MAAO,GAAG,EAAM,GAAW,GAAO,SAClC,KAAM,8BAA8B,EAAU,GAAG,IACjD,KAAM,EAAK,QAAQ,IAAK,GAAS,EAA0B,GAAW,EAAM"}