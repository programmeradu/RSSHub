{"version":3,"file":"advisor-9Cne6gQ-.js","names":["route: Route","got","cache","response","ofetch","$"],"sources":["../../lib/routes/github/advisor.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/advisor/data/:type?/:category?',\r\n    categories: ['programming'],\r\n    example: '/github/advisor/data/reviewed/composer',\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/advisories', 'github.com'],\r\n        },\r\n    ],\r\n    name: 'Github Advisory Database RSS',\r\n    maintainers: ['sd0ric4'],\r\n    handler,\r\n    description: `\r\n| Type | Description | Explanation |\r\n| --- | --- | --- |\r\n| reviewed | Reviewed | 已审核 |\r\n| unreviewed | Unreviewed | 未审核 |\r\n\r\n| Category | Description | Explanation |\r\n| --- | --- | --- |\r\n| composer | Composer | PHP 依赖管理工具 |\r\n| go | Go | Go 语言包管理工具 |\r\n| maven | Maven | Java 项目管理工具 |\r\n| npm | NPM | Node.js 包管理工具 |\r\n| nuget | NuGet | .NET 包管理工具 |\r\n| pip | Pip | Python 包管理工具 |\r\n| pub | Pub | Dart 包管理工具 |\r\n| rubygems | RubyGems | Ruby 包管理工具 |\r\n| rust | Rust | Rust 包管理工具 |\r\n| erlang | Erlang | Erlang 包管理工具 |\r\n| actions | Actions | GitHub Actions |\r\n| swift | Swift | Swift 包管理工具 |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { category, type } = ctx.req.param();\r\n\r\n    const apiRootUrl = 'https://github.com/advisories';\r\n    const apiUrl = `${apiRootUrl}?query=type%3A${type}+ecosystem%3A${category}`;\r\n    const currentUrl = `https://github.com/advisories`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: apiUrl,\r\n    });\r\n    const $ = load(response.data);\r\n\r\n    const list = $('div.Box-row')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const a = item.find('a.Link--primary');\r\n            const b = item.find('relative-time').attr('datetime');\r\n            const title = a.text() || 'No title';\r\n            const link = a.attr('href') || '#';\r\n            const pubDate = parseDate(b || '');\r\n\r\n            return {\r\n                title,\r\n                link: `https://github.com${link}`,\r\n                pubDate,\r\n                description: '',\r\n            };\r\n        });\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(item.link);\r\n                const $ = load(response);\r\n\r\n                item.description = $('.comment-body').first().html() || '';\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n    return {\r\n        title: `GitHub Advisory Database RSS - ${category} - ${type}`,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"iYAOA,MAAaA,EAAe,CACxB,KAAM,kCACN,WAAY,CAAC,eACb,QAAS,yCACT,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBAAyB,gBAG1C,KAAM,+BACN,YAAa,CAAC,WACd,UACA,YAAa;;;;;;;;;;;;;;;;;;;kCAsBjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAU,QAAS,EAAI,IAAI,QAG7B,EAAS,8CAA8B,EAAK,eAAe,IAG3D,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAEH,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,eACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,mBACd,EAAI,EAAK,KAAK,iBAAiB,KAAK,YACpC,EAAQ,EAAE,QAAU,WACpB,EAAO,EAAE,KAAK,SAAW,IACzB,EAAU,EAAU,GAAK,IAE/B,MAAO,CACH,QACA,KAAM,qBAAqB,IAC3B,UACA,YAAa,MAGnB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMC,EAAO,EAAK,MAC7BC,EAAI,EAAKF,GAIf,MAFA,GAAK,YAAcE,EAAE,iBAAiB,QAAQ,QAAU,GAEjD,MAInB,MAAO,CACH,MAAO,kCAAkC,EAAS,KAAK,IACvD,KAAM,gCACN,KAAM"}