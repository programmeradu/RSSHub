{"version":3,"file":"information-CU3TuiuT.js","names":[],"sources":["../../lib/routes/cbndata/information.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { type CheerioAPI, load } from 'cheerio';\r\nimport { type Context } from 'hono';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { id = 'all' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '50', 10);\r\n\r\n    const baseUrl: string = 'https://www.cbndata.com';\r\n    const targetUrl: string = new URL(`information?tag_id=${id}`, baseUrl).href;\r\n    const apiUrl: string = new URL('api/v3/informations', baseUrl).href;\r\n\r\n    const targetResponse = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(targetResponse);\r\n    const language = $('html').attr('lang') ?? 'zh';\r\n\r\n    const response = await ofetch(apiUrl, {\r\n        query: {\r\n            page: 1,\r\n            per_page: limit,\r\n        },\r\n    });\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = response.data.slice(0, limit).map((item): DataItem => {\r\n        const title: string = item.title;\r\n        const image: string | undefined = item.image;\r\n        const description: string | undefined = art(path.join(__dirname, 'templates/description.art'), {\r\n            images: image\r\n                ? [\r\n                      {\r\n                          src: image,\r\n                          alt: title,\r\n                      },\r\n                  ]\r\n                : undefined,\r\n        });\r\n        const pubDate: number | string = item.date;\r\n        const linkUrl: string | undefined = item.id ? `information/${item.id}` : undefined;\r\n        const categories: string[] = item.tags;\r\n        const guid: string = `cbndata-information-${item.id}`;\r\n        const updated: number | string = pubDate;\r\n\r\n        const processedItem: DataItem = {\r\n            title,\r\n            description,\r\n            pubDate: pubDate ? parseDate(pubDate) : undefined,\r\n            link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n            category: categories,\r\n            guid,\r\n            id: guid,\r\n            content: {\r\n                html: description,\r\n                text: description,\r\n            },\r\n            image,\r\n            banner: image,\r\n            updated: updated ? parseDate(updated) : undefined,\r\n            language,\r\n        };\r\n\r\n        return processedItem;\r\n    });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) => {\r\n            if (!item.link) {\r\n                return item;\r\n            }\r\n\r\n            return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                const detailResponse = await ofetch(item.link);\r\n\r\n                const dataStr: string | undefined = detailResponse.match(/<script>window\\.__INITIAL_STATE__=(.*?);<\\/script>/)?.[1];\r\n\r\n                if (!dataStr) {\r\n                    return item;\r\n                }\r\n\r\n                const data = JSON.parse(dataStr)?.data;\r\n\r\n                if (!data) {\r\n                    return item;\r\n                }\r\n\r\n                const title: string = data.title;\r\n                const description: string | undefined =\r\n                    item.description +\r\n                    art(path.join(__dirname, 'templates/description.art'), {\r\n                        description: data.content,\r\n                    });\r\n                const pubDate: number | string = data.date;\r\n                const linkUrl: string | undefined = data.id ? `information/${data.id}` : undefined;\r\n                const categories: string[] = [...new Set(((data.tags?.map((c) => c.name) ?? []) as string[]).filter(Boolean))];\r\n                const authors: DataItem['author'] = [\r\n                    {\r\n                        name: data.author,\r\n                        url: undefined,\r\n                        avatar: undefined,\r\n                    },\r\n                ];\r\n                const guid: string = `cbndata-information-${data.id}`;\r\n                const image: string | undefined = data.thumbnail_url;\r\n                const updated: number | string = pubDate;\r\n\r\n                const processedItem: DataItem = {\r\n                    title,\r\n                    description,\r\n                    pubDate: pubDate ? parseDate(pubDate) : undefined,\r\n                    link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n                    category: categories,\r\n                    author: authors,\r\n                    guid,\r\n                    id: guid,\r\n                    content: {\r\n                        html: description,\r\n                        text: description,\r\n                    },\r\n                    image,\r\n                    banner: image,\r\n                    updated: updated ? parseDate(updated) : undefined,\r\n                    language,\r\n                };\r\n\r\n                return {\r\n                    ...item,\r\n                    ...processedItem,\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    const tag: string = response.home_tags.find((t: { id: number; name: string }) => String(t.id) === id)?.name ?? '';\r\n    const title: string = `${tag ? `${tag}-` : ''}${$('title').text().trim()}`;\r\n\r\n    return {\r\n        title,\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('img.logo-logoImage').attr('src'),\r\n        author: title.split(/\\|/).pop(),\r\n        language,\r\n        id: targetUrl,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/information/:id?',\r\n    name: '看点',\r\n    url: 'www.cbndata.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/cbndata/information/all',\r\n    parameters: {\r\n        id: {\r\n            description: '分类，默认为 `all`，即全部，可在对应分类页 URL 中找到',\r\n            options: [\r\n                {\r\n                    label: '全部',\r\n                    value: 'all',\r\n                },\r\n                {\r\n                    label: '美妆个护',\r\n                    value: '1',\r\n                },\r\n                {\r\n                    label: '服饰鞋包',\r\n                    value: '2559',\r\n                },\r\n                {\r\n                    label: '宠物',\r\n                    value: '2419',\r\n                },\r\n                {\r\n                    label: '营销',\r\n                    value: '2484',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    description: `:::tip\r\n订阅 [美妆个护](https://www.cbndata.com/information?tag_id=1)，其源网址为 \\`https://www.cbndata.com/information?tag_id=1\\`，请参考该 URL 指定部分构成参数，此时路由为 [\\`/cbndata/information/1\\`](https://rsshub.app/cbndata/information/1)。\r\n:::\r\n\r\n| 分类                                                        | ID                                                  |\r\n| ----------------------------------------------------------- | --------------------------------------------------- |\r\n| [全部](https://www.cbndata.com/information?tag_id=all)      | [all](https://rsshub.app/cbndata/information/all)   |\r\n| [美妆个护](https://www.cbndata.com/information?tag_id=1)    | [1](https://rsshub.app/cbndata/information/1)       |\r\n| [服饰鞋包](https://www.cbndata.com/information?tag_id=2559) | [2559](https://rsshub.app/cbndata/information/2559) |\r\n| [宠物](https://www.cbndata.com/information?tag_id=2419)     | [2419](https://rsshub.app/cbndata/information/2419) |\r\n| [营销](https://www.cbndata.com/information?tag_id=2484)     | [2484](https://rsshub.app/cbndata/information/2484) |\r\n`,\r\n    categories: ['new-media'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.cbndata.com/information'],\r\n            target: (params, url) => {\r\n                const urlObj: URL = new URL(url);\r\n                const id: string | undefined = urlObj.searchParams.get('tag_id') ?? undefined;\r\n\r\n                return `/information${id ? `/${id}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '全部',\r\n            source: ['www.cbndata.com/information'],\r\n            target: '/information/all',\r\n        },\r\n        {\r\n            title: '美妆个护',\r\n            source: ['www.cbndata.com/information'],\r\n            target: '/information/1',\r\n        },\r\n        {\r\n            title: '服饰鞋包',\r\n            source: ['www.cbndata.com/information'],\r\n            target: '/information/2559',\r\n        },\r\n        {\r\n            title: '宠物',\r\n            source: ['www.cbndata.com/information'],\r\n            target: '/information/2419',\r\n        },\r\n        {\r\n            title: '营销',\r\n            source: ['www.cbndata.com/information'],\r\n            target: '/information/2484',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"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"}