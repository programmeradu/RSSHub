{"version":3,"file":"user-DiOHI5Ef.js","names":["route: Route","cache","ofetch"],"sources":["../../lib/routes/pinterest/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { BoardsFeedResource, UserActivityPinsResource, UserProfile } from './types';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:username/:type?',\r\n    categories: ['picture'],\r\n    example: '/pinterest/user/howieserious',\r\n    parameters: {\r\n        username: 'Username',\r\n        type: {\r\n            description: 'Type, default to `_created`',\r\n            default: '_created',\r\n            options: [\r\n                { value: '_created', label: 'Created' },\r\n                { value: '_saved', label: 'Saved' },\r\n            ],\r\n        },\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.pinterest.com/:id/:type?', 'www.pinterest.com/:id'],\r\n            target: '/user/:id/:type?',\r\n        },\r\n    ],\r\n    name: 'User',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nconst baseUrl = 'https://www.pinterest.com';\r\n\r\nasync function handler(ctx) {\r\n    const { username, type = '_created' } = ctx.req.param();\r\n\r\n    const profile = await getUserResource(username);\r\n    const response = type === '_created' ? await getUserActivityPinsResource(username, profile.id) : await getBoardsFeedResource(username);\r\n\r\n    const items =\r\n        type === '_created'\r\n            ? (response as UserActivityPinsResource[]).map((item) => ({\r\n                  title: item.title || item.seo_title,\r\n                  description: `${item.grid_description}<br><img src=\"${item.images.orig.url}\">`,\r\n                  link: `${baseUrl}${item.seo_url}`,\r\n                  author: item.pinner.full_name,\r\n                  pubDate: parseDate(item.created_at),\r\n                  image: item.images.orig.url,\r\n              }))\r\n            : (response as BoardsFeedResource[]).map((item) => ({\r\n                  title: item.name,\r\n                  description: item.description + (item.images?.['170x'] ? '<br>' + item.images['170x'].map((img) => `<img src=\"${img.url}\">`).join('') : ''),\r\n                  link: `${baseUrl}${item.url}`,\r\n                  author: item.owner.full_name,\r\n                  pubDate: parseDate(item.created_at),\r\n                  image: item.image_cover_hd_url,\r\n              }));\r\n\r\n    return {\r\n        title: profile.seo_title,\r\n        description: profile.seo_description,\r\n        image: profile.image_xlarge_url ?? profile.image_medium_url,\r\n        link: `${baseUrl}/${username}/`,\r\n        item: items,\r\n    };\r\n}\r\n\r\nconst getUserResource = (username: string) =>\r\n    cache.tryGet(`pinterest:user:${username}`, async () => {\r\n        const response = await ofetch(`${baseUrl}/resource/UserResource/get/`, {\r\n            headers: {\r\n                'x-pinterest-pws-handler': 'www/[username]/_created.js',\r\n            },\r\n            query: {\r\n                source_url: `/${username}/_created`,\r\n                data: JSON.stringify({ options: { username, field_set_key: 'unauth_profile' }, context: {} }),\r\n                _: Date.now(),\r\n            },\r\n        });\r\n\r\n        return response.resource_response.data;\r\n    }) as Promise<UserProfile>;\r\n\r\nconst getUserActivityPinsResource = async (username: string, userId: string) => {\r\n    const response = await ofetch(`${baseUrl}/resource/UserActivityPinsResource/get/`, {\r\n        headers: {\r\n            'x-pinterest-pws-handler': 'www/[username]/_created.js',\r\n        },\r\n        query: {\r\n            source_url: `/${username}/_created`,\r\n            data: JSON.stringify({ options: { exclude_add_pin_rep: true, field_set_key: 'grid_item', is_own_profile_pins: false, user_id: userId, username }, context: {} }),\r\n            _: Date.now(),\r\n        },\r\n    });\r\n\r\n    return response.resource_response.data as UserActivityPinsResource[];\r\n};\r\n\r\nconst getBoardsFeedResource = async (username: string) => {\r\n    const response = await ofetch(`${baseUrl}/resource/BoardsFeedResource/get/`, {\r\n        headers: {\r\n            'x-pinterest-pws-handler': 'www/[username]/_saved.js',\r\n        },\r\n        query: {\r\n            source_url: `/${username}/_saved`,\r\n            data: JSON.stringify({ options: { field_set_key: 'profile_grid_item', filter_stories: false, sort: 'last_pinned_to', username }, context: {} }),\r\n            _: Date.now(),\r\n        },\r\n    });\r\n\r\n    return (response.resource_response.data as BoardsFeedResource[]).filter((item) => item.node_id);\r\n};\r\n"],"mappings":"oRAMA,MAAaA,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,WACb,QAAS,+BACT,WAAY,CACR,SAAU,WACV,KAAM,CACF,YAAa,8BACb,QAAS,WACT,QAAS,CACL,CAAE,MAAO,WAAY,MAAO,WAC5B,CAAE,MAAO,SAAU,MAAO,YAItC,MAAO,CACH,CACI,OAAQ,CAAC,+BAAgC,yBACzC,OAAQ,qBAGhB,KAAM,OACN,YAAa,CAAC,UACd,WAGE,EAAU,4BAEhB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAU,OAAO,YAAe,EAAI,IAAI,QAE1C,EAAU,MAAM,EAAgB,GAChC,EAAW,IAAS,WAAa,MAAM,EAA4B,EAAU,EAAQ,IAAM,MAAM,EAAsB,GAEvH,EACF,IAAS,WACF,EAAwC,IAAK,IAAU,CACpD,MAAO,EAAK,OAAS,EAAK,UAC1B,YAAa,GAAG,EAAK,iBAAiB,gBAAgB,EAAK,OAAO,KAAK,IAAI,IAC3E,KAAM,GAAG,IAAU,EAAK,UACxB,OAAQ,EAAK,OAAO,UACpB,QAAS,EAAU,EAAK,YACxB,MAAO,EAAK,OAAO,KAAK,OAE3B,EAAkC,IAAK,IAAU,CAC9C,MAAO,EAAK,KACZ,YAAa,EAAK,aAAe,EAAK,SAAS,QAAU,OAAS,EAAK,OAAO,QAAQ,IAAK,GAAQ,aAAa,EAAI,IAAI,KAAK,KAAK,IAAM,IACxI,KAAM,GAAG,IAAU,EAAK,MACxB,OAAQ,EAAK,MAAM,UACnB,QAAS,EAAU,EAAK,YACxB,MAAO,EAAK,sBAG1B,MAAO,CACH,MAAO,EAAQ,UACf,YAAa,EAAQ,gBACrB,MAAO,EAAQ,kBAAoB,EAAQ,iBAC3C,KAAM,GAAG,EAAQ,GAAG,EAAS,GAC7B,KAAM,GAId,MAAM,EAAmB,GACrBC,EAAM,OAAO,kBAAkB,IAAY,SAAY,CACnD,IAAM,EAAW,MAAMC,EAAO,GAAG,EAAQ,6BAA8B,CACnE,QAAS,CACL,0BAA2B,8BAE/B,MAAO,CACH,WAAY,IAAI,EAAS,WACzB,KAAM,KAAK,UAAU,CAAE,QAAS,CAAE,WAAU,cAAe,kBAAoB,QAAS,KACxF,EAAG,KAAK,SAIhB,OAAO,EAAS,kBAAkB,OAGpC,EAA8B,MAAO,EAAkB,IAAmB,CAC5E,IAAM,EAAW,MAAMA,EAAO,GAAG,EAAQ,yCAA0C,CAC/E,QAAS,CACL,0BAA2B,8BAE/B,MAAO,CACH,WAAY,IAAI,EAAS,WACzB,KAAM,KAAK,UAAU,CAAE,QAAS,CAAE,oBAAqB,GAAM,cAAe,YAAa,oBAAqB,GAAO,QAAS,EAAQ,YAAY,QAAS,KAC3J,EAAG,KAAK,SAIhB,OAAO,EAAS,kBAAkB,MAGhC,EAAwB,KAAO,IAAqB,CACtD,IAAM,EAAW,MAAMA,EAAO,GAAG,EAAQ,mCAAoC,CACzE,QAAS,CACL,0BAA2B,4BAE/B,MAAO,CACH,WAAY,IAAI,EAAS,SACzB,KAAM,KAAK,UAAU,CAAE,QAAS,CAAE,cAAe,oBAAqB,eAAgB,GAAO,KAAM,iBAAkB,YAAY,QAAS,KAC1I,EAAG,KAAK,SAIhB,OAAQ,EAAS,kBAAkB,KAA8B,OAAQ,GAAS,EAAK"}