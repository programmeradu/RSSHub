{"version":3,"file":"utils-RmvNkXWq.js","names":["ele","got"],"sources":["../../lib/routes/pingwest/utils.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport { parseDate, parseRelativeDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nconst modifiedLink = (link) => (link.startsWith('http') ? link : `https:${link}`);\r\n\r\nconst statusListParser = ($) => {\r\n    const items = $('.item')\r\n        .toArray()\r\n        .map((ele) => {\r\n            const timestamp = ele.attribs.pt;\r\n            const $item = load(ele);\r\n            const mainNode = $item('.news-detail');\r\n            const imgsStr = mainNode\r\n                .find('img')\r\n                .toArray()\r\n                .map((ele) => `<img src=\"${ele.attribs.src.split('?x-')[0]}\">`)\r\n                .join('<br>');\r\n            const link = mainNode.find('.content a').first().attr('href');\r\n            const content = mainNode\r\n                .text()\r\n                .trim()\r\n                .replace(/展开全文$/, '');\r\n            return {\r\n                title: content,\r\n                link: link.startsWith('http') ? link : `https:${link}`,\r\n                description: [content, imgsStr].filter((s) => !!s).join('<br>'),\r\n                pubDate: new Date(timestamp * 1000).toUTCString(),\r\n            };\r\n        });\r\n    return items;\r\n};\r\n\r\nconst articleListParser = async ($, needFullText, cache) => {\r\n    const items = await Promise.all(\r\n        $('.item')\r\n            .toArray()\r\n            .map(async (ele) => {\r\n                const $item = load(ele);\r\n\r\n                let titleNode, authorNode;\r\n                if ($item('.news-detail').children().length <= 2) {\r\n                    // newsflash\r\n                    titleNode = $item('.news-detail .content .text');\r\n                    authorNode = $item('.news-detail .content .op');\r\n                } else {\r\n                    // article\r\n                    titleNode = $item('.news-detail .title');\r\n                    authorNode = $item('.news-detail .author');\r\n                }\r\n                const title = titleNode.find('a').text();\r\n                const prefixUrl = titleNode.find('a').attr('href');\r\n                const link = modifiedLink(prefixUrl);\r\n                const imgUrl = $item('.news-img img')?.attr('src')?.split('?x-')[0];\r\n                const author = authorNode.children().first().text();\r\n                const timestamp = authorNode.find('.time').text();\r\n                const date = /小时前/.test(timestamp) ? parseRelativeDate(timestamp) : parseDate(timestamp, ['YYYY M D', 'M D']);\r\n                let description = $item('.desc').text();\r\n                const shortText = imgUrl ? `<br><img src=\"${imgUrl}\">` : '';\r\n                description += needFullText ? await getFullArticle(link, cache) : shortText;\r\n\r\n                return {\r\n                    title,\r\n                    link,\r\n                    description,\r\n                    author,\r\n                    pubDate: timezone(date, 8),\r\n                };\r\n            })\r\n    );\r\n\r\n    return items;\r\n};\r\n\r\nconst getFullArticle = (link, cache) =>\r\n    cache.tryGet(link, async () => {\r\n        const { data } = await got(link);\r\n        const $ = load(data);\r\n        $('img').each((_, ele) => {\r\n            if (ele.attribs.src.includes('?x-')) {\r\n                ele.attribs.src = ele.attribs.src.split('?x-')[0];\r\n            }\r\n        });\r\n        const description = $('section .article-style').html();\r\n        return description;\r\n    });\r\n\r\nexport default { articleListParser, statusListParser };\r\n"],"mappings":"6MAKA,MAAM,EAAgB,GAAU,EAAK,WAAW,QAAU,EAAO,SAAS,IAEpE,EAAoB,GAAM,CAC5B,IAAM,EAAQ,EAAE,SACX,UACA,IAAK,GAAQ,CACV,IAAM,EAAY,EAAI,QAAQ,GACxB,EAAQ,EAAK,GACb,EAAW,EAAM,gBACjB,EAAU,EACX,KAAK,OACL,UACA,IAAK,GAAQ,aAAaA,EAAI,QAAQ,IAAI,MAAM,OAAO,GAAG,KAC1D,KAAK,QACJ,EAAO,EAAS,KAAK,cAAc,QAAQ,KAAK,QAChD,EAAU,EACX,OACA,OACA,QAAQ,QAAS,IACtB,MAAO,CACH,MAAO,EACP,KAAM,EAAK,WAAW,QAAU,EAAO,SAAS,IAChD,YAAa,CAAC,EAAS,GAAS,OAAQ,GAAM,CAAC,CAAC,GAAG,KAAK,QACxD,QAAS,IAAI,KAAK,EAAY,KAAM,iBAGhD,OAAO,GAGL,EAAoB,MAAO,EAAG,EAAc,IAAU,CACxD,IAAM,EAAQ,MAAM,QAAQ,IACxB,EAAE,SACG,UACA,IAAI,KAAO,IAAQ,CAChB,IAAM,EAAQ,EAAK,GAEf,EAAW,EACX,EAAM,gBAAgB,WAAW,QAAU,GAE3C,EAAY,EAAM,+BAClB,EAAa,EAAM,+BAGnB,EAAY,EAAM,uBAClB,EAAa,EAAM,yBAEvB,IAAM,EAAQ,EAAU,KAAK,KAAK,OAC5B,EAAY,EAAU,KAAK,KAAK,KAAK,QACrC,EAAO,EAAa,GACpB,EAAS,EAAM,kBAAkB,KAAK,QAAQ,MAAM,OAAO,GAC3D,EAAS,EAAW,WAAW,QAAQ,OACvC,EAAY,EAAW,KAAK,SAAS,OACrC,EAAO,MAAM,KAAK,GAAa,EAAkB,GAAa,EAAU,EAAW,CAAC,WAAY,QAClG,EAAc,EAAM,SAAS,OAC3B,EAAY,EAAS,iBAAiB,EAAO,IAAM,GAGzD,MAFA,IAAe,EAAe,MAAM,EAAe,EAAM,GAAS,EAE3D,CACH,QACA,OACA,cACA,SACA,QAAS,EAAS,EAAM,OAKxC,OAAO,GAGL,GAAkB,EAAM,IAC1B,EAAM,OAAO,EAAM,SAAY,CAC3B,GAAM,CAAE,QAAS,MAAMC,EAAI,GACrB,EAAI,EAAK,GACf,EAAE,OAAO,MAAM,EAAG,IAAQ,CAClB,EAAI,QAAQ,IAAI,SAAS,SACzB,EAAI,QAAQ,IAAM,EAAI,QAAQ,IAAI,MAAM,OAAO,MAGvD,IAAM,EAAc,EAAE,0BAA0B,OAChD,OAAO,IAGf,IAAA,EAAe,CAAE,oBAAmB"}