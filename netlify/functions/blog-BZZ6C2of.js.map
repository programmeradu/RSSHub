{"version":3,"file":"blog-BZZ6C2of.js","names":["limit: number","baseUrl: string","targetUrl: string","ofetch","buildId: string | undefined","$: CheerioAPI","apiUrl: string","items: DataItem[]","title: string","description: string | undefined","pubDate: number | string","linkUrl: string | undefined","categories: string[]","authors: DataItem['author']","guid: string","updated: number | string","processedItem: DataItem","cache","detailUrl: string","route: Route","category: string"],"sources":["../../lib/routes/tidb/blog.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { type CheerioAPI, load } from 'cheerio';\r\nimport { type Context } from 'hono';\r\n\r\nconst escapeHtml = (text: string): string => text?.replace(/&/g, '&amp;')?.replace(/</g, '&lt;')?.replace(/>/g, '&gt;')?.replace(/'/g, '&quot;')?.replace(/'/g, '&#039;') ?? text;\r\n\r\nconst parseTextChildren = (children: any[]): string => children.map((child: any) => escapeHtml(child.text)).join('');\r\n\r\nconst parseImageNode = (node: any): string => {\r\n    const titleAttr = node.title ? ` title=\"${escapeHtml(node.title)}\"` : '';\r\n    const altAttr = node.alt ? ` alt=\"${escapeHtml(node.alt)}\"` : '';\r\n    const styleAttr = node.size ? ` style=\"width:${node.size.width}px;height:${node.size.height}px;\"` : '';\r\n    return `<img src=\"${escapeHtml(node.url)}\"${titleAttr}${altAttr}${styleAttr}>`;\r\n};\r\n\r\nconst parseListItemNode = (listItem: any): string => `<li>${parseContentToHtml(listItem.children)}</li>`;\r\n\r\nconst parseListNode = (node: any): string => {\r\n    const tag = node.ordered ? 'ol' : 'ul';\r\n    const startAttr = node.ordered && node.start !== 1 ? ` start=\"${node.start}\"` : '';\r\n    const listItemsHtml = node.children.map((item: any) => parseListItemNode(item)).join('');\r\n    return `<${tag}${startAttr}>${listItemsHtml}</${tag}>`;\r\n};\r\n\r\nconst parseParagraphChildren = (children: any[]): string =>\r\n    children\r\n        .map((child: any) => {\r\n            if (child.text !== undefined) {\r\n                return escapeHtml(child.text);\r\n            } else if (child.type === 'image') {\r\n                return parseImageNode(child);\r\n            }\r\n            return '';\r\n        })\r\n        .join('');\r\n\r\nconst parseContentToHtml = (content: any[]): string =>\r\n    content\r\n        ?.map((node: any) => {\r\n            switch (node.type) {\r\n                case 'paragraph':\r\n                    return `<p>${parseParagraphChildren(node.children)}</p>`;\r\n                case 'image':\r\n                    return parseImageNode(node);\r\n                case 'heading':\r\n                    return `<h${node.depth}>${parseTextChildren(node.children)}</h${node.depth ?? ''}>`;\r\n                case 'code':\r\n                    return `<pre><code${node.lang ? ` class=\"language-${node.lang}\"` : ''}>${parseTextChildren(node.children)}</code></pre>`;\r\n                case 'list':\r\n                    return parseListNode(node);\r\n                case 'blockquote':\r\n                    return `<blockquote>${parseContentToHtml(node.children)}</blockquote>`;\r\n                default:\r\n                    return '';\r\n            }\r\n        })\r\n        .join('') ?? '';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { category = 'latest' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '20', 10);\r\n\r\n    const baseUrl: string = 'https://tidb.net';\r\n    const targetUrl: string = new URL(`blog${category === 'latest' ? '' : `/c/${category}`}`, baseUrl).href;\r\n    const targetResponse = await ofetch(targetUrl);\r\n\r\n    const buildId: string | undefined = targetResponse.match(/\"buildId\":\"(.*?)\"/)?.[1];\r\n\r\n    if (!buildId) {\r\n        throw new Error('Build ID not found.');\r\n    }\r\n\r\n    const $: CheerioAPI = load(targetResponse);\r\n    const language = $('html').attr('lang') ?? 'zh';\r\n\r\n    const apiUrl: string = new URL(`_next/data/${buildId}/${language}/blog${category === 'latest' ? '' : `/c/${category}`}.json`, baseUrl).href;\r\n\r\n    const response = await ofetch(apiUrl, {\r\n        query: {\r\n            latest: true,\r\n        },\r\n    });\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = response.pageProps.blogs.content.slice(0, limit).map((item): DataItem => {\r\n        const title: string = item.title;\r\n        const description: string | undefined = item.summary;\r\n        const pubDate: number | string = item.publishedAt;\r\n        const linkUrl: string | undefined = item.slug ? `blog/${item.slug}` : undefined;\r\n        const categories: string[] = [...new Set([item.category?.name, ...(item.tags ?? []).map((c) => c.name)].filter(Boolean))];\r\n        const authors: DataItem['author'] = item.author?.username\r\n            ? [\r\n                  {\r\n                      name: item.author.username,\r\n                      url: new URL(`u/${item.author.username}`, baseUrl).href,\r\n                      avatar: item.author.avatarURL,\r\n                  },\r\n              ]\r\n            : undefined;\r\n        const guid: string = item.slug ?? '';\r\n        const updated: number | string = item.lastModifiedAt ?? pubDate;\r\n\r\n        const processedItem: DataItem = {\r\n            title,\r\n            description,\r\n            pubDate: pubDate ? parseDate(pubDate) : undefined,\r\n            link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n            category: categories,\r\n            author: authors,\r\n            guid,\r\n            id: guid,\r\n            content: {\r\n                html: description,\r\n                text: description,\r\n            },\r\n            updated: updated ? parseDate(updated) : undefined,\r\n            language,\r\n        };\r\n\r\n        return processedItem;\r\n    });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) => {\r\n            if (!item.link) {\r\n                return item;\r\n            }\r\n\r\n            return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                const detailUrl: string = new URL(`blog/api/posts/${item.guid}/detail`, baseUrl).href;\r\n\r\n                const detailResponse = await ofetch(detailUrl, {\r\n                    query: {\r\n                        visit: true,\r\n                    },\r\n                });\r\n\r\n                const title: string = detailResponse.title;\r\n                const description: string | undefined = detailResponse.content ? parseContentToHtml(JSON.parse(detailResponse.content)) : item.description;\r\n                const pubDate: number | string = detailResponse.publishedAt;\r\n                const linkUrl: string | undefined = `blog/${detailResponse.slug}`;\r\n                const categories: string[] = [...new Set([detailResponse.category?.name, ...(detailResponse.tags ?? []).map((c) => c.name)].filter(Boolean))];\r\n                const authors: DataItem['author'] = detailResponse.author?.username\r\n                    ? [\r\n                          {\r\n                              name: detailResponse.author.username,\r\n                              url: new URL(`u/${detailResponse.author.username}`, baseUrl).href,\r\n                              avatar: detailResponse.author.avatarURL,\r\n                          },\r\n                      ]\r\n                    : undefined;\r\n                const guid: string = `tidb-blog-${detailResponse.slug}`;\r\n                const updated: number | string = detailResponse.lastModifiedAt ?? pubDate;\r\n\r\n                const processedItem: DataItem = {\r\n                    title,\r\n                    description,\r\n                    pubDate: pubDate ? parseDate(pubDate) : undefined,\r\n                    link: new URL(linkUrl, baseUrl).href,\r\n                    category: categories,\r\n                    author: authors,\r\n                    guid,\r\n                    id: guid,\r\n                    content: {\r\n                        html: description,\r\n                        text: description,\r\n                    },\r\n                    updated: updated ? parseDate(updated) : undefined,\r\n                    language,\r\n                };\r\n\r\n                return {\r\n                    ...item,\r\n                    ...processedItem,\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    const title: string = $('title').text();\r\n\r\n    return {\r\n        title,\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('meta[property=\"og:image\"]').attr('content'),\r\n        author: title.split(/\\|/).pop()?.trim(),\r\n        language,\r\n        id: targetUrl,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/blog/c/:category?',\r\n    name: '专栏分类',\r\n    url: 'tidb.net',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/tidb/blog/c/latest',\r\n    parameters: {\r\n        category: {\r\n            description: '分类，默认为 `latest`，即全部文章，可在对应分类页 URL 中找到',\r\n            options: [\r\n                {\r\n                    label: '全部文章',\r\n                    value: 'latest',\r\n                },\r\n                {\r\n                    label: '管理与运维',\r\n                    value: 'management-and-operation',\r\n                },\r\n                {\r\n                    label: '实践案例',\r\n                    value: 'practical-case',\r\n                },\r\n                {\r\n                    label: '架构选型',\r\n                    value: 'architecture-selection',\r\n                },\r\n                {\r\n                    label: '原理解读',\r\n                    value: 'principle-interpretation',\r\n                },\r\n                {\r\n                    label: '应用开发',\r\n                    value: 'application-development',\r\n                },\r\n                {\r\n                    label: '社区动态',\r\n                    value: 'community-feeds',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    description: `:::tip\r\n订阅 [管理与运维](https://tidb.net/blog/c/management-and-operation)，其源网址为 \\`https://tidb.net/blog/c/management-and-operation\\`，请参考该 URL 指定部分构成参数，此时路由为 [\\`/tidb/blog/c/management-and-operation\\`](https://rsshub.app/tidb/blog/c/management-and-operation)。\r\n:::\r\n\r\n| 分类                                                           | ID                                                                                  |\r\n| -------------------------------------------------------------- | ----------------------------------------------------------------------------------- |\r\n| [全部文章](https://tidb.net/blog)                              | [latest](https://rsshub.app/tidb/blog)                                              |\r\n| [管理与运维](https://tidb.net/blog/c/management-and-operation) | [management-and-operation](https://rsshub.app/tidb/blog/c/management-and-operation) |\r\n| [实践案例](https://tidb.net/blog/c/practical-case)             | [practical-case](https://rsshub.app/tidb/blog/c/practical-case)                     |\r\n| [架构选型](https://tidb.net/blog/c/architecture-selection)     | [architecture-selection](https://rsshub.app/tidb/blog/c/architecture-selection)     |\r\n| [原理解读](https://tidb.net/blog/c/principle-interpretation)   | [principle-interpretation](https://rsshub.app/tidb/blog/c/principle-interpretation) |\r\n| [应用开发](https://tidb.net/blog/c/application-development)    | [application-development](https://rsshub.app/tidb/blog/c/application-development)   |\r\n| [社区动态](https://tidb.net/blog/c/community-feeds)            | [community-feeds](https://rsshub.app/tidb/blog/c/community-feeds)                   |\r\n\r\n`,\r\n    categories: ['programming'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['tidb.net/blog', 'tidb.net/blog/c/:category'],\r\n            target: (params) => {\r\n                const category: string = params.category;\r\n\r\n                return `/tidb/blog/c${category ? `/${category}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '全部文章',\r\n            source: ['tidb.net/blog'],\r\n            target: '/blog/c/latest',\r\n        },\r\n        {\r\n            title: '管理与运维',\r\n            source: ['tidb.net/blog/c/management-and-operation'],\r\n            target: '/blog/c/management-and-operation',\r\n        },\r\n        {\r\n            title: '实践案例',\r\n            source: ['tidb.net/blog/c/practical-case'],\r\n            target: '/blog/c/practical-case',\r\n        },\r\n        {\r\n            title: '架构选型',\r\n            source: ['tidb.net/blog/c/architecture-selection'],\r\n            target: '/blog/c/architecture-selection',\r\n        },\r\n        {\r\n            title: '原理解读',\r\n            source: ['tidb.net/blog/c/principle-interpretation'],\r\n            target: '/blog/c/principle-interpretation',\r\n        },\r\n        {\r\n            title: '应用开发',\r\n            source: ['tidb.net/blog/c/application-development'],\r\n            target: '/blog/c/application-development',\r\n        },\r\n        {\r\n            title: '社区动态',\r\n            source: ['tidb.net/blog/c/community-feeds'],\r\n            target: '/blog/c/community-feeds',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"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"}