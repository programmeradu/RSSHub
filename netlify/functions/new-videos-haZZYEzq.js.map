{"version":3,"file":"new-videos-haZZYEzq.js","names":[],"sources":["../../lib/routes/spankbang/new-videos.ts"],"sourcesContent":["import { Data, Route } from '@/types';\r\n\r\nimport puppeteer from '@/utils/puppeteer';\r\nimport * as cheerio from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { config } from '@/config';\r\nimport logger from '@/utils/logger';\r\nimport cache from '@/utils/cache';\r\n\r\nconst render = (data) => art(path.join(__dirname, 'templates/video.art'), data);\r\n\r\nconst handler = async () => {\r\n    const baseUrl = 'https://spankbang.com';\r\n    const link = `${baseUrl}/new_videos/`;\r\n\r\n    const browser = await puppeteer();\r\n\r\n    const data = await cache.tryGet(\r\n        link,\r\n        async () => {\r\n            const page = await browser.newPage();\r\n            await page.setRequestInterception(true);\r\n            page.on('request', (request) => {\r\n                request.resourceType() === 'document' ? request.continue() : request.abort();\r\n            });\r\n            logger.http(`Requesting ${link}`);\r\n            await page.goto(link, {\r\n                waitUntil: 'domcontentloaded',\r\n            });\r\n\r\n            const response = await page.content();\r\n            const $ = cheerio.load(response);\r\n\r\n            const items = $('.video-item')\r\n                .toArray()\r\n                .map((item) => {\r\n                    const $item = $(item);\r\n                    const thumb = $item.find('.thumb');\r\n                    const cover = $item.find('img.cover');\r\n\r\n                    return {\r\n                        title: thumb.attr('title'),\r\n                        link: new URL(thumb.attr('href')!, baseUrl).href,\r\n                        description: render({\r\n                            cover: cover.data('src'),\r\n                            preview: cover.data('preview'),\r\n                        }),\r\n                    };\r\n                });\r\n\r\n            return {\r\n                title: $('head title').text(),\r\n                description: $('head meta[name=\"description\"]').attr('content'),\r\n                item: items,\r\n            };\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    await browser.close();\r\n\r\n    return {\r\n        title: data.title,\r\n        description: data.description,\r\n        link,\r\n        item: data.item,\r\n    } as unknown as Promise<Data>;\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/new_videos',\r\n    categories: ['multimedia'],\r\n    example: '/spankbang/new_videos',\r\n    name: 'New Porn Videos',\r\n    maintainers: ['TonyRL'],\r\n    features: {\r\n        antiCrawler: true,\r\n        requirePuppeteer: true,\r\n        nsfw: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['spankbang.com/new_videos/', 'spankbang.com/'],\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n"],"mappings":"0ZAUA,MAAM,EAAU,GAAS,EAAI,EAAA,KAAA,EAAA,gCAA6C,GAEpE,EAAU,SAAY,CACxB,IAAM,EAAU,wBACV,EAAO,GAAG,EAAQ,cAElB,EAAU,MAAM,IAEhB,EAAO,MAAM,EAAM,OACrB,EACA,SAAY,CACR,IAAM,EAAO,MAAM,EAAQ,UAC3B,MAAM,EAAK,uBAAuB,IAClC,EAAK,GAAG,UAAY,GAAY,CAC5B,EAAQ,iBAAmB,WAAa,EAAQ,WAAa,EAAQ,UAEzE,EAAO,KAAK,cAAc,KAC1B,MAAM,EAAK,KAAK,EAAM,CAClB,UAAW,qBAGf,IAAM,EAAW,MAAM,EAAK,UACtB,EAAI,EAAQ,KAAK,GAEjB,EAAQ,EAAE,eACX,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,UACnB,EAAQ,EAAM,KAAK,aAEzB,MAAO,CACH,MAAO,EAAM,KAAK,SAClB,KAAM,IAAI,IAAI,EAAM,KAAK,QAAU,GAAS,KAC5C,YAAa,EAAO,CAChB,MAAO,EAAM,KAAK,OAClB,QAAS,EAAM,KAAK,gBAKpC,MAAO,CACH,MAAO,EAAE,cAAc,OACvB,YAAa,EAAE,iCAAiC,KAAK,WACrD,KAAM,IAGd,EAAO,MAAM,YACb,IAKJ,OAFA,MAAM,EAAQ,QAEP,CACH,MAAO,EAAK,MACZ,YAAa,EAAK,YAClB,OACA,KAAM,EAAK,OAIN,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,cACb,QAAS,wBACT,KAAM,kBACN,YAAa,CAAC,UACd,SAAU,CACN,YAAa,GACb,iBAAkB,GAClB,KAAM,IAEV,MAAO,CACH,CACI,OAAQ,CAAC,4BAA6B,oBAG9C"}