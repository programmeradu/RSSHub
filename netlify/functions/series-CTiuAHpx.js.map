{"version":3,"file":"series-CTiuAHpx.js","names":[],"sources":["../../lib/routes/yenpress/series.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport type { Context } from 'hono';\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport * as cheerio from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst render = (data) => art(path.join(__dirname, 'templates/series.art'), data);\r\n\r\nexport const route: Route = {\r\n    path: '/series/:name',\r\n    example: '/yenpress/series/alya-sometimes-hides-her-feelings-in-russian',\r\n    parameters: { name: 'Series name' },\r\n    name: 'Series',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['yenpress.com/series/:name'],\r\n            target: '/series/:name',\r\n        },\r\n    ],\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const { name: series } = ctx.req.param();\r\n    const baseUrl = 'https://yenpress.com';\r\n    const link = `https://yenpress.com/series/${series}`;\r\n\r\n    const response = await ofetch(link);\r\n    const $ = cheerio.load(response);\r\n\r\n    const list = $('.show-more-container .inline_block')\r\n        .toArray()\r\n        .map((item) => {\r\n            const $item = $(item);\r\n            return {\r\n                title: $item.find('span').text().trim(),\r\n                link: new URL($item.find('a').attr('href')!, baseUrl).href,\r\n            };\r\n        }) as DataItem[];\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link!, async () => {\r\n                const response = await ofetch(item.link!);\r\n                const $ = cheerio.load(response);\r\n\r\n                item.category = $('.detail-labels.mobile-only')\r\n                    .eq(0)\r\n                    .find('a')\r\n                    .toArray()\r\n                    .map((a) => $(a).text().trim());\r\n\r\n                $('svg, .social-share, .desktop-only, .detail-labels').remove();\r\n\r\n                const cover = $('.book-info').find('.book-cover-img').html();\r\n\r\n                const bookInfo = $('.buy-info .deliver')\r\n                    .toArray()\r\n                    .map((item, i) => ({\r\n                        deliver: $(item).text().trim(),\r\n                        price: $('.book-price').eq(i).text().trim(),\r\n                        from: $('.services')\r\n                            .eq(i)\r\n                            .find('.service')\r\n                            .toArray()\r\n                            .map((service) => {\r\n                                const a = $(service).find('a');\r\n                                return {\r\n                                    name: a.text().trim(),\r\n                                    link: a.attr('href'),\r\n                                };\r\n                            }),\r\n                        detail: $('.detail-info')\r\n                            .eq(i)\r\n                            .find('div span')\r\n                            .toArray()\r\n                            .map((span) => {\r\n                                const $span = $(span);\r\n                                return {\r\n                                    key: $span.text().trim(),\r\n                                    value: $span.next().text().trim(),\r\n                                };\r\n                            }),\r\n                    }));\r\n\r\n                const info = $('.book-info');\r\n                info.find('.buy-info, .series-cover').remove();\r\n\r\n                item.description = render({\r\n                    cover: cover! + info.html(),\r\n                    bookInfo,\r\n                });\r\n                item.pubDate = timezone(parseDate(bookInfo[0].detail.find((d) => d.key === 'Release Date')!.value), 0);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('head title').text().trim(),\r\n        description: $('.social-share p').text().trim(),\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"gdAWA,MAAM,EAAU,GAAS,EAAI,EAAA,KAAA,EAAA,iCAA8C,GAE9D,EAAe,CACxB,KAAM,gBACN,QAAS,gEACT,WAAY,CAAE,KAAM,eACpB,KAAM,SACN,YAAa,CAAC,UACd,UACA,MAAO,CACH,CACI,OAAQ,CAAC,6BACT,OAAQ,mBAKpB,eAAe,EAAQ,EAAc,CACjC,GAAM,CAAE,KAAM,GAAW,EAAI,IAAI,QAE3B,EAAO,+BAA+B,IAEtC,EAAW,MAAM,EAAO,GACxB,EAAI,EAAQ,KAAK,GAEjB,EAAO,EAAE,sCACV,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GAChB,MAAO,CACH,MAAO,EAAM,KAAK,QAAQ,OAAO,OACjC,KAAM,IAAI,IAAI,EAAM,KAAK,KAAK,KAAK,QAAU,wBAAS,QAI5D,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAO,SAAY,CACjC,IAAM,EAAW,MAAM,EAAO,EAAK,MAC7B,EAAI,EAAQ,KAAK,GAEvB,EAAK,SAAW,EAAE,8BACb,GAAG,GACH,KAAK,KACL,UACA,IAAK,GAAM,EAAE,GAAG,OAAO,QAE5B,EAAE,qDAAqD,SAEvD,IAAM,EAAQ,EAAE,cAAc,KAAK,mBAAmB,OAEhD,EAAW,EAAE,sBACd,UACA,KAAK,EAAM,KAAO,CACf,QAAS,EAAE,GAAM,OAAO,OACxB,MAAO,EAAE,eAAe,GAAG,GAAG,OAAO,OACrC,KAAM,EAAE,aACH,GAAG,GACH,KAAK,YACL,UACA,IAAK,GAAY,CACd,IAAM,EAAI,EAAE,GAAS,KAAK,KAC1B,MAAO,CACH,KAAM,EAAE,OAAO,OACf,KAAM,EAAE,KAAK,WAGzB,OAAQ,EAAE,gBACL,GAAG,GACH,KAAK,YACL,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GAChB,MAAO,CACH,IAAK,EAAM,OAAO,OAClB,MAAO,EAAM,OAAO,OAAO,aAKzC,EAAO,EAAE,cASf,OARA,EAAK,KAAK,4BAA4B,SAEtC,EAAK,YAAc,EAAO,CACtB,MAAO,EAAS,EAAK,OACrB,aAEJ,EAAK,QAAU,EAAS,EAAU,EAAS,GAAG,OAAO,KAAM,GAAM,EAAE,MAAQ,gBAAiB,OAAQ,GAE7F,MAKnB,MAAO,CACH,MAAO,EAAE,cAAc,OAAO,OAC9B,YAAa,EAAE,mBAAmB,OAAO,OACzC,OACA,KAAM"}