{"version":3,"file":"phoronix-DTTl1Ru7.js","names":["parser","cache","got","route: Route","category","response","html"],"sources":["../../lib/routes/phoronix/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport parser from '@/utils/rss-parser';\r\nimport { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc.js';\r\nimport timezone from 'dayjs/plugin/timezone.js';\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nconst redirectCacheKey = 'phoronix:redirect';\r\nconst webArticlesCacheKey = 'phoronix:web-articles';\r\nconst articleCacheKey = 'phoronix:articles';\r\n\r\nconst baseUrl = 'https://www.phoronix.com';\r\nconst rssUrl = `${baseUrl}/rss.php`;\r\n\r\nconst feedFetch = async () => {\r\n    const feed = await parser.parseURL(rssUrl);\r\n    return {\r\n        title: feed.title,\r\n        link: feed.link,\r\n        description: feed.description,\r\n        item: feed.items,\r\n        language: feed.language,\r\n        icon: 'https://www.phoronix.com/android-chrome-192x192.png',\r\n        image: 'https://www.phoronix.com/android-chrome-192x192.png',\r\n        logo: 'https://www.phoronix.com/phxcms7-css/phoronix.png',\r\n        // Copied from the web page metadata\r\n        category: [\r\n            'Linux Hardware Reviews',\r\n            'Linux hardware benchmarks',\r\n            'Linux Hardware',\r\n            'Linux benchmarking',\r\n            'Desktop Linux',\r\n            'GNU/Linux benchmarks',\r\n            'Open Source AMD',\r\n            'Linux How To',\r\n            'X.Org drivers',\r\n            'Ubuntu hardware',\r\n            'Phoronix Test Suite',\r\n        ],\r\n    };\r\n};\r\n\r\nconst webFetchCb = (response) => {\r\n    const $ = load(response.body);\r\n    return {\r\n        title: $('title').text(),\r\n        link: response.url,\r\n        description: $('meta[name=\"Description\"]').attr('content'),\r\n        item: [\r\n            ...new Set(\r\n                $('#main a')\r\n                    .toArray()\r\n                    .map((e) => e.attribs.href)\r\n            ),\r\n        ]\r\n            .filter((link) => link && (link.startsWith('/review/') || link.startsWith('/news/')))\r\n            .map((link) => ({ link: `${baseUrl}${link}` })),\r\n        language: 'en-us',\r\n        icon: 'https://www.phoronix.com/android-chrome-192x192.png',\r\n        image: 'https://www.phoronix.com/android-chrome-192x192.png',\r\n        logo: 'https://www.phoronix.com/phxcms7-css/phoronix.png',\r\n        category: $('meta[name=\"keywords\"]').attr('content').split(', '),\r\n    };\r\n};\r\n\r\nconst webFetch = (url) =>\r\n    cache.tryGet(`${webArticlesCacheKey}:${url}`, async () => {\r\n        try {\r\n            return webFetchCb(await got(url));\r\n        } catch (error) {\r\n            if ((error.name === 'HTTPError' || error.name === 'FetchError') && error.response.statusCode === 404) {\r\n                return '404';\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n\r\nconst legacyFetch = async (page, queryOrItem) => {\r\n    const legacyUrl = new URL('/scan.php', baseUrl);\r\n    legacyUrl.searchParams.set('page', page);\r\n    if (queryOrItem) {\r\n        if (page === 'category') {\r\n            legacyUrl.searchParams.set('item', queryOrItem);\r\n        } else {\r\n            legacyUrl.searchParams.set('q', queryOrItem);\r\n        }\r\n    }\r\n\r\n    let response;\r\n    const webUrl = await cache.tryGet(`${redirectCacheKey}:${legacyUrl.toString()}`, async () => {\r\n        response = await got(legacyUrl.toString());\r\n        return response.url;\r\n    });\r\n    if (response) {\r\n        const feed = webFetchCb(response);\r\n        cache.set(`${webArticlesCacheKey}:${webUrl}`, feed);\r\n        return feed;\r\n    }\r\n    return await webFetch(webUrl);\r\n};\r\n\r\nconst tryFetch = async (category, topic) => {\r\n    const webUrl = topic ? `${baseUrl}/${category}/${topic}` : `${baseUrl}/${category}`;\r\n    let feed = await webFetch(webUrl);\r\n    if (feed === '404') {\r\n        feed = await legacyFetch(category, topic);\r\n    }\r\n    return feed;\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:category?/:topic?',\r\n    categories: ['new-media'],\r\n    example: '/phoronix/linux/KDE',\r\n    parameters: {\r\n        category: 'Category',\r\n        topic: 'Topic. You may find available parameters from their navigator links. E.g. to subscribe to `https://www.phoronix.com/reviews/Operating+Systems`, fill in the path `/phoronix/reviews/Operating+Systems`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['phoronix.com/:category?/:topic?'],\r\n        },\r\n    ],\r\n    name: 'News & Reviews',\r\n    maintainers: ['oppliate', 'Rongronggg9'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { category, topic } = ctx.req.param();\r\n    let feed;\r\n    switch (category) {\r\n        case 'category':\r\n        case 'news_topic':\r\n            feed = await legacyFetch(category, topic);\r\n            break;\r\n        case 'rss':\r\n            feed = await feedFetch();\r\n            break;\r\n        default:\r\n            feed = category ? await tryFetch(category, topic) : await feedFetch();\r\n            break;\r\n    }\r\n\r\n    feed.item = await Promise.all(\r\n        feed.item.map((item) =>\r\n            cache.tryGet(`${articleCacheKey}:${item.link}`, async () => {\r\n                const response = await got(item.link);\r\n                const html = response.body;\r\n                const $ = load(html);\r\n                const content = $('.content');\r\n\r\n                // Author\r\n                const authorSelector = $('.author > a');\r\n                // the last 2 are the category and comments\r\n                const author = authorSelector\r\n                    .slice(0, -2)\r\n                    .toArray()\r\n                    .map((e) => $(e).text());\r\n                const category = [];\r\n                if (item.link.includes('/news/')) {\r\n                    category.push('News');\r\n                } else if (item.link.includes('/review/')) {\r\n                    category.push('Review');\r\n                }\r\n                const categorySelector = authorSelector.eq(-2);\r\n                if (categorySelector.length) {\r\n                    category.push(categorySelector.text());\r\n                }\r\n                let pubDate;\r\n                if (!item.pubDate) {\r\n                    // the text next to the category is the date\r\n                    let pubDateReadable = categorySelector.length && categorySelector[0].nextSibling?.nodeValue;\r\n                    if (pubDateReadable) {\r\n                        pubDateReadable = pubDateReadable.replaceAll(/on|at|\\./g, '').trim();\r\n                        pubDate = /\\d{4}$/.test(pubDateReadable)\r\n                            ? // Only date, no time\r\n                              // Michael Larabel lives in Indiana, USA, so we assume TZ=America/Indiana/Indianapolis\r\n                              // https://www.phoronix.com/review/phoronix_office_2014\r\n                              // Here we use the trick to take daylight saving into account.\r\n                              dayjs\r\n                                  // If we don't append \"UTC\" at the end,\r\n                                  // dayjs.utc() may still parse the date in the platform (local) timezone.\r\n                                  // E.g., if the platform timezone is UTC+8, then:\r\n                                  // > dayjs.utc('2 Dec 2023').toString()\r\n                                  // 'Fri, 01 Dec 2023 16:00:00 GMT'\r\n                                  // > dayjs.utc('2 Dec 2023 UTC').toString()\r\n                                  // 'Sat, 02 Dec 2023 00:00:00 GMT'\r\n                                  // Append \"UTC\" at the end to explicitly prohibit the weird behavior.\r\n                                  .utc(`${pubDateReadable} 08:00 UTC`)\r\n                                  .tz('America/Indiana/Indianapolis', true)\r\n                            : // date, time, and timezone (including daylight saving)\r\n                              dayjs(pubDateReadable);\r\n                        if (!pubDate.isValid()) {\r\n                            pubDate = pubDateReadable;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Maybe it's paginated\r\n                const links = $('.pagination > a')\r\n                    .toArray()\r\n                    .map((pager) => `${baseUrl}${pager.attribs.href}`)\r\n                    .slice(0, -1); // the last one is \"next page\"\r\n\r\n                if (links.length) {\r\n                    const pages = await Promise.all(\r\n                        links.map((link) =>\r\n                            cache.tryGet(link, async () => {\r\n                                const response = await got(link);\r\n                                const html = response.data;\r\n                                const $$ = load(html);\r\n                                const page = $$('.content');\r\n                                return page.html();\r\n                            })\r\n                        )\r\n                    );\r\n                    content.append(pages);\r\n                }\r\n\r\n                const images = content.find('img');\r\n                // Remove topic image\r\n                const topicImage = images.first();\r\n                if (topicImage.attr('src')?.startsWith('/assets/categories/')) {\r\n                    const topicImageContainer = topicImage.parent();\r\n                    if (topicImageContainer.text().trim()) {\r\n                        topicImage.remove();\r\n                    } else {\r\n                        topicImageContainer.remove();\r\n                    }\r\n                }\r\n                // High-res images\r\n                images.each((_, img) => {\r\n                    img.attribs.src = img.attribs.src.replace(/_med$/, '');\r\n                });\r\n\r\n                return {\r\n                    title: item.title || $('article h1').text(),\r\n                    pubDate: item.pubDate || pubDate,\r\n                    author: author.join(', '),\r\n                    link: item.link,\r\n                    summary: $('meta[name=\"twitter:description\"]').attr('content'),\r\n                    description: content.html(),\r\n                    image: $('meta[name=\"twitter:image\"]').attr('content'),\r\n                    category: item.category || category,\r\n                };\r\n            })\r\n        )\r\n    );\r\n\r\n    return feed;\r\n}\r\n"],"mappings":"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"}