{"version":3,"file":"list-BP8fJa3-.js","names":[],"sources":["../../lib/routes/591/list.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport path from 'node:path';\r\n\r\nimport { CookieJar } from 'tough-cookie';\r\nimport { load } from 'cheerio';\r\n\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport { isValidHost } from '@/utils/valid-host';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\nconst cookieJar = new CookieJar();\r\n\r\nconst client = got.extend({\r\n    cookieJar,\r\n});\r\n\r\nfunction appendRentalAPIParams(urlString) {\r\n    const searchParams = new URLSearchParams(urlString);\r\n\r\n    searchParams.set('is_format_data', '1');\r\n    searchParams.set('is_new_list', '1');\r\n    searchParams.set('type', '1');\r\n\r\n    return searchParams.toString();\r\n}\r\n\r\nasync function getToken() {\r\n    const html = await client('https://rent.591.com.tw').text();\r\n\r\n    const $ = load(html);\r\n    const csrfToken = $('meta[name=\"csrf-token\"]').attr('content');\r\n\r\n    if (!csrfToken) {\r\n        throw new Error('CSRF token not found');\r\n    }\r\n\r\n    return csrfToken;\r\n}\r\n\r\nasync function getHouseList(houseListURL) {\r\n    const csrfToken = await getToken();\r\n\r\n    const data = await client({\r\n        url: houseListURL,\r\n        headers: {\r\n            'X-CSRF-TOKEN': csrfToken,\r\n        },\r\n    }).json();\r\n\r\n    const {\r\n        data: { data: houseList },\r\n    } = data;\r\n\r\n    return houseList;\r\n}\r\n\r\n/**\r\n\r\n@typedef {object} House\r\n@property {string} title - The title of the house.\r\n@property {string} type - The type of the house.\r\n@property {number} post_id - The post id of the house.\r\n@property {string} kind_name - The name of the kind of the house.\r\n@property {string} room_str - A string representation of the number of rooms in the house.\r\n@property {string} floor_str - A string representation of the floor of the house.\r\n@property {string} community - The community the house is located in.\r\n@property {string} price - The price of the house.\r\n@property {string} price_unit - The unit of the price of the house.\r\n@property {string[]} photo_list - A list of photos of the house.\r\n@property {string} section_name - The name of the section where the house is located.\r\n@property {string} street_name - The name of the street where the house is located.\r\n@property {string} location - The location of the house.\r\n@property {RentTagItem[]} rent_tag - An array of rent tags for the house.\r\n@property {string} area - The area of the house.\r\n@property {string} role_name - The name of the role of the house.\r\n@property {string} contact - The contact information for the house.\r\n@property {string} refresh_time - The time the information about the house was last refreshed.\r\n@property {number} yesterday_hit - The number of hits the house received yesterday.\r\n@property {number} is_vip - A flag indicating whether the house is VIP or not.\r\n@property {number} is_combine - A flag indicating whether the house is combined or not.\r\n@property {number} hurry - A flag indicating whether there is a hurry for the house.\r\n@property {number} is_socail - A flag indicating whether the house is social or not.\r\n@property {Surrounding} surrounding - The surrounding area of the house.\r\n@property {string} discount_price_str - A string representation of the discounted price of the house.\r\n@property {number} cases_id - The id of the cases for the house.\r\n@property {number} is_video - A flag indicating whether there is a video for the house.\r\n@property {number} preferred - A flag indicating whether the house is preferred or not.\r\n@property {number} cid - The id of the house.\r\n*/\r\n\r\n/**\r\n\r\n@typedef {object} RentTagItem\r\n@property {string} id - The id of the rent tag item.\r\n@property {string} name - The name of the rent tag item.\r\n*/\r\n/**\r\n\r\n@typedef {object} Surrounding\r\n@property {string} type - The type of the surrounding.\r\n@property {string} desc - The description of the surrounding.\r\n@property {string} distance - The distance to the surrounding.\r\n*/\r\n\r\nconst renderHouse = (house) => art(path.join(__dirname, 'templates/house.art'), { house });\r\n\r\nexport const route: Route = {\r\n    path: '/:country/rent/:query?',\r\n    categories: ['other'],\r\n    example: '/591/tw/rent/order=posttime&orderType=desc',\r\n    parameters: { country: 'Country code. Only tw is supported now', query: 'Query Parameters' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Rental house',\r\n    maintainers: ['Yukaii'],\r\n    handler,\r\n    description: `::: tip\r\n  Copy the URL of the 591 filter housing page and remove the front part \\`https://rent.591.com.tw/?\\`, you will get the query parameters.\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const query = ctx.req.param('query') ?? '';\r\n    const country = ctx.req.param('country') ?? 'tw';\r\n\r\n    if (!isValidHost(country) && country !== 'tw') {\r\n        throw new InvalidParameterError('Invalid country codes. Only \"tw\" is supported now.');\r\n    }\r\n\r\n    /** @type {House[]} */\r\n    const houses = await getHouseList(`https://rent.591.com.tw/home/search/rsList?${appendRentalAPIParams(query)}`);\r\n\r\n    const queryUrl = `https://rent.591.com.tw/?${query}`;\r\n\r\n    const items = houses.map((house) => {\r\n        const { title, post_id, price, price_unit } = house;\r\n\r\n        const itemUrl = `https://rent.591.com.tw/home/${post_id}`;\r\n        const itemTitle = `${title} - ${price} ${price_unit}`;\r\n\r\n        const description = renderHouse(house);\r\n\r\n        return {\r\n            title: itemTitle,\r\n            description,\r\n            link: itemUrl,\r\n        };\r\n    });\r\n\r\n    ctx.set('json', {\r\n        houses,\r\n    });\r\n\r\n    return {\r\n        title: '591 租屋 - 自訂查詢',\r\n        link: queryUrl,\r\n        description: `591 租屋 - 自訂查詢, query: ${query}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"2hBAYA,MAAM,EAAY,IAAI,EAEhB,EAAS,EAAI,OAAO,CACtB,cAGJ,SAAS,EAAsB,EAAW,CACtC,IAAM,EAAe,IAAI,gBAAgB,GAMzC,OAJA,EAAa,IAAI,iBAAkB,KACnC,EAAa,IAAI,cAAe,KAChC,EAAa,IAAI,OAAQ,KAElB,EAAa,WAGxB,eAAe,GAAW,CACtB,IAAM,EAAO,MAAM,EAAO,2BAA2B,OAE/C,EAAI,EAAK,GACT,EAAY,EAAE,2BAA2B,KAAK,WAEpD,GAAI,CAAC,EACD,MAAU,MAAM,wBAGpB,OAAO,EAGX,eAAe,EAAa,EAAc,CACtC,IAAM,EAAY,MAAM,IAElB,EAAO,MAAM,EAAO,CACtB,IAAK,EACL,QAAS,CACL,eAAgB,KAErB,OAEG,CACF,KAAM,CAAE,KAAM,IACd,EAEJ,OAAO,EAmDX,MAAM,EAAe,GAAU,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAAE,UAErE,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,SACb,QAAS,6CACT,WAAY,CAAE,QAAS,yCAA0C,MAAO,oBACxE,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,eACN,YAAa,CAAC,UACd,UACA,YAAa;;MAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,UAAY,GAClC,EAAU,EAAI,IAAI,MAAM,YAAc,KAE5C,GAAI,CAAC,EAAY,IAAY,IAAY,KACrC,MAAM,IAAI,EAAsB,sDAIpC,IAAM,EAAS,MAAM,EAAa,8CAA8C,EAAsB,MAEhG,EAAW,4BAA4B,IAEvC,EAAQ,EAAO,IAAK,GAAU,CAChC,GAAM,CAAE,QAAO,UAAS,QAAO,cAAe,EAExC,EAAU,gCAAgC,IAC1C,EAAY,GAAG,EAAM,KAAK,EAAM,GAAG,IAEnC,EAAc,EAAY,GAEhC,MAAO,CACH,MAAO,EACP,cACA,KAAM,KAQd,OAJA,EAAI,IAAI,OAAQ,CACZ,WAGG,CACH,MAAO,gBACP,KAAM,EACN,YAAa,yBAAyB,IACtC,KAAM"}