{"version":3,"file":"news-Dy-IIM9r.js","names":["route: Route","got","items: DataItem[]","match: RegExpExecArray | null","content: NodeContent[]","customPreset: PresetFactory"],"sources":["../../lib/routes/steam/news.ts"],"sourcesContent":["import { Route, Data, DataItem } from '@/types';\r\nimport type { BBobCoreTagNodeTree, PresetFactory, NodeContent } from '@bbob/types';\r\n\r\nimport got from '@/utils/got';\r\nimport bbobHTML from '@bbob/html';\r\nimport presetHTML5 from '@bbob/preset-html5';\r\nimport { getUniqAttr } from '@bbob/plugin-helper';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport type { Context } from 'hono';\r\n\r\nexport const route: Route = {\r\n    path: '/news/:appid/:language?',\r\n    name: 'News',\r\n    url: 'steamcommunity.com',\r\n    maintainers: ['keocheung'],\r\n    handler,\r\n    example: '/news/958260/english',\r\n    parameters: {\r\n        appid: 'Game App ID, all digits, can be found in the URL',\r\n        language: 'Language, english by default, see below for more languages',\r\n    },\r\n    description: `\r\n<details>\r\n<summary>More languages</summary>\r\n\r\n| 语言代码                                          | 语言名称   |\r\n| ------------------------------------------------- | ---------- |\r\n| English                                           | english    |\r\n| Español - España (Spanish - Spain)                | spanish    |\r\n| Français (French)                                 | french     |\r\n| Italiano (Italian)                                | italian    |\r\n| Deutsch (German)                                  | german     |\r\n| Ελληνικά (Greek)                                  | greek      |\r\n| 한국어 (Korean)                                   | koreana    |\r\n| 简体中文 (Simplified Chinese)                     | schinese   |\r\n| 繁體中文 (Traditional Chinese)                    | tchinese   |\r\n| Русский (Russian)                                 | russian    |\r\n| ไทย (Thai)                                        | thai       |\r\n| 日本語 (Japanese)                                 | japanese   |\r\n| Português (Portuguese)                            | portuguese |\r\n| Português - Brasil (Portuguese - Brazil)          | brazilian  |\r\n| Polski (Polish)                                   | polish     |\r\n| Dansk (Danish)                                    | danish     |\r\n| Nederlands (Dutch)                                | dutch      |\r\n| Suomi (Finnish)                                   | finnish    |\r\n| Norsk (Norwegian)                                 | norwegian  |\r\n| Svenska (Swedish)                                 | swedish    |\r\n| Čeština (Czech)                                   | czech      |\r\n| Magyar (Hungarian)                                | hungarian  |\r\n| Română (Romanian)                                 | romanian   |\r\n| Български (Bulgarian)                             | bulgarian  |\r\n| Türkçe (Turkish)                                  | turkish    |\r\n| Українська (Ukrainian)                            | ukrainian  |\r\n| Tiếng Việt (Vietnamese)                           | vietnamese |\r\n| Español - Latinoamérica (Spanish - Latin America) | latam      |\r\n\r\n</details>\r\n    `,\r\n    categories: ['game'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            title: 'News',\r\n            source: ['steamcommunity.com/app/:appid', 'steamcommunity.com/app/:appid/allnews', 'steamcommunity.com/app/:appid/announcements', 'steamcommunity.com/app/:appid/news'],\r\n            target: '/news/:appid',\r\n        },\r\n    ],\r\n};\r\n\r\nconst langMap = {\r\n    english: 'en',\r\n    german: 'de',\r\n    french: 'fr',\r\n    italian: 'it',\r\n    korean: 'ko',\r\n    spanish: 'es',\r\n    schinese: 'zh-Hans',\r\n    tchinese: 'zh-Hant',\r\n    japanese: 'ja',\r\n    portuguese: 'pt-PT',\r\n    brazilian: 'pt-BR',\r\n    russian: 'ru',\r\n    polish: 'pl',\r\n    danish: 'da',\r\n    dutch: 'nl',\r\n    finnish: 'fi',\r\n    norwegian: 'no',\r\n    swedish: 'sv',\r\n    czech: 'cs',\r\n    hungarian: 'hu',\r\n    turkish: 'tr',\r\n    thai: 'th',\r\n    ukrainian: 'uk',\r\n    vietnamese: 'vi',\r\n    romanian: 'ro',\r\n    greek: 'el',\r\n    arabic: 'ar',\r\n    latam: 'es-419',\r\n    bulgarian: 'bg',\r\n};\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const { appid = '958260', language = 'english' } = ctx.req.param();\r\n    const limitQuery = ctx.req.query('limit');\r\n    const limit = limitQuery ? Number.parseInt(limitQuery, 10) : 100;\r\n\r\n    const rootUrl = 'https://steamcommunity.com';\r\n    const apiRootUrl = 'https://store.steampowered.com';\r\n    const clanRootUrl = 'https://clan.fastly.steamstatic.com';\r\n    const sharedRootUrl = 'https://shared.fastly.steamstatic.com';\r\n    const apiUrl = new URL('events/ajaxgetpartnereventspageable/', apiRootUrl).href;\r\n\r\n    const { data: response } = await got(apiUrl, {\r\n        searchParams: {\r\n            clan_accountid: 0,\r\n            appid,\r\n            offset: 0,\r\n            count: limit,\r\n            l: language,\r\n        },\r\n    });\r\n\r\n    const items: DataItem[] = response.events.slice(0, limit).map((item): DataItem => {\r\n        const title = item.event_name;\r\n        const description = `<div lang=\"${langMap[language] || ''}\">${bbobHTML(\r\n            item.announcement_body.body\r\n                .replaceAll('{STEAM_CLAN_IMAGE}', `${clanRootUrl}/images`)\r\n                .replaceAll('[olist]', '[list=1]')\r\n                .replaceAll('[/olist]', '[/list]')\r\n                .replaceAll(/(\\[\\/h\\d\\])\\n/g, '$1')\r\n                .replaceAll(/(\\[list(?:=.*?)?\\])\\n/g, '$1'),\r\n            [customPreset(), linebreakRenderer, plainUrlRenderer]\r\n        )}</div>`;\r\n        const jsondata = JSON.parse(item.jsondata);\r\n        const titleImage = jsondata.localized_title_image?.[0];\r\n        const capsuleImage = jsondata.localized_capsule_image?.[0];\r\n\r\n        return {\r\n            title,\r\n            description,\r\n            pubDate: parseDate(item.announcement_body.posttime, 'X'),\r\n            link: new URL(`games/${appid}/announcements/detail/${item.announcement_body.gid}`, rootUrl).href,\r\n            category: item.announcement_body.tags,\r\n            content: {\r\n                html: description,\r\n                text: item.announcement_body.body,\r\n            },\r\n            updated: parseDate(item.announcement_body.updatetime, 'X'),\r\n            image: capsuleImage ? new URL(`images/${item.announcement_body.clanid}/${capsuleImage}`, clanRootUrl).href : undefined,\r\n            banner: titleImage ? new URL(`images/${item.announcement_body.clanid}/${titleImage}`, clanRootUrl).href : undefined,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: `App ${appid} News`,\r\n        link: new URL(`app/${appid}/allnews/`, rootUrl).href,\r\n        image: new URL(`store_item_assets/steam/apps/${appid}/hero_capsule.jpg`, sharedRootUrl).href,\r\n        item: items,\r\n        language: langMap[language] || null,\r\n    };\r\n}\r\n\r\nconst linebreakRenderer = (tree: BBobCoreTagNodeTree) =>\r\n    tree.walk((node) => {\r\n        if (typeof node === 'string' && node === '\\n') {\r\n            return {\r\n                tag: 'br',\r\n                content: null,\r\n            };\r\n        }\r\n        return node;\r\n    });\r\n\r\nconst plainUrlRenderer = (tree: BBobCoreTagNodeTree) =>\r\n    tree.walk((node) => {\r\n        if (typeof node === 'string' && /https?:\\/\\/[^\\s]+/.test(node)) {\r\n            let lastIndex = 0;\r\n            let match: RegExpExecArray | null;\r\n            const content: NodeContent[] = [];\r\n\r\n            const urlRe = /https?:\\/\\/[^\\s]+/g;\r\n            while ((match = urlRe.exec(node)) !== null) {\r\n                if (match.index > lastIndex) {\r\n                    content.push(node.slice(lastIndex, match.index));\r\n                }\r\n                content.push({\r\n                    tag: 'a',\r\n                    attrs: {\r\n                        href: match[0],\r\n                        rel: 'noopener',\r\n                        target: '_blank',\r\n                    },\r\n                    content: match[0],\r\n                });\r\n\r\n                lastIndex = match.index + match[0].length;\r\n            }\r\n\r\n            if (lastIndex < node.length) {\r\n                content.push(node.slice(lastIndex));\r\n            }\r\n\r\n            if (content.length === 0) {\r\n                return node;\r\n            }\r\n            if (content.length === 1) {\r\n                return content[0];\r\n            }\r\n            return {\r\n                tag: 'span',\r\n                content,\r\n            };\r\n        }\r\n        return node;\r\n    });\r\n\r\nconst customPreset: PresetFactory = presetHTML5.extend((tags) => ({\r\n    ...tags,\r\n    b: (node) => ({\r\n        tag: 'b',\r\n        content: node.content,\r\n    }),\r\n    i: (node) => ({\r\n        tag: 'i',\r\n        content: node.content,\r\n    }),\r\n    u: (node) => ({\r\n        tag: 'u',\r\n        content: node.content,\r\n    }),\r\n    s: (node) => ({\r\n        tag: 's',\r\n        content: node.content,\r\n    }),\r\n    url: (node) => ({\r\n        tag: 'a',\r\n        attrs: {\r\n            href: Object.keys(node.attrs as Record<string, string>)[0],\r\n            rel: 'noopener',\r\n            target: '_blank',\r\n        },\r\n        content: node.content,\r\n    }),\r\n    previewyoutube: (node) => ({\r\n        tag: 'iframe',\r\n        attrs: {\r\n            src: `https://www.youtube-nocookie.com/embed/${(getUniqAttr(node.attrs) as string).match(/[A-Za-z0-9_-]+/)?.[0]}`,\r\n            title: 'YouTube video player',\r\n            frameborder: '0',\r\n            allowFullScreen: '1',\r\n        },\r\n    }),\r\n    video: (node, { render }) => ({\r\n        tag: 'video',\r\n        attrs: {\r\n            controls: '',\r\n            preload: 'metadata',\r\n            poster: node.attrs?.poster,\r\n        },\r\n        content: render(\r\n            Object.entries({\r\n                webm: 'video/webm',\r\n                mp4: 'video/mp4',\r\n            }).map(([key, type]) => ({\r\n                tag: 'source',\r\n                attrs: {\r\n                    src: node.attrs?.[key],\r\n                    type,\r\n                },\r\n            }))\r\n        ),\r\n    }),\r\n}));\r\n"],"mappings":"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"}