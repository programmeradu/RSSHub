{"version":3,"file":"news-CbnR8vRN.js","names":[],"sources":["../../lib/routes/ali213/news.ts"],"sourcesContent":["import path from 'node:path';\r\n\r\nimport { type CheerioAPI, type Cheerio, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { type Context } from 'hono';\r\n\r\nimport { type DataItem, type Route, type Data, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { category = 'new' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n\r\n    const rootUrl: string = 'https://www.ali213.net';\r\n    const targetUrl: string = new URL(`news/${category.endsWith('/') ? category : `${category}/`}`, rootUrl).href;\r\n\r\n    const response = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(response);\r\n    const language: string = $('html').prop('lang') ?? 'zh-CN';\r\n\r\n    let items: DataItem[] = $('div.n_lone')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item): DataItem => {\r\n            const $item: Cheerio<Element> = $(item);\r\n\r\n            const aEl: Cheerio<Element> = $item.find('h2.lone_t a');\r\n\r\n            const title: string = aEl.prop('title') || aEl.text();\r\n            const link: string | undefined = aEl.prop('href');\r\n\r\n            const imageEl: Cheerio<Element> = $item.find('img');\r\n            const imageSrc: string | undefined = imageEl?.prop('src');\r\n            const imageAlt: string | undefined = imageEl?.prop('alt');\r\n\r\n            const intro: string = $item.find('div.lone_f_r_t').text();\r\n\r\n            const description: string = art(path.join(__dirname, 'templates/description.art'), {\r\n                images: imageEl\r\n                    ? [\r\n                          {\r\n                              src: imageSrc,\r\n                              alt: imageAlt,\r\n                          },\r\n                      ]\r\n                    : undefined,\r\n                intro,\r\n            });\r\n\r\n            const author: DataItem['author'] = $item.find('div.lone_f_r_f span').last().text().split(/：/).pop();\r\n\r\n            return {\r\n                title,\r\n                description,\r\n                pubDate: parseDate($item.find('div.lone_f_r_f span').first().text()),\r\n                link,\r\n                author,\r\n                content: {\r\n                    html: description,\r\n                    text: $item.find('div.lone_f_r_t').text(),\r\n                },\r\n                image: imageSrc,\r\n                banner: imageSrc,\r\n                language,\r\n            };\r\n        });\r\n\r\n    items = (\r\n        await Promise.all(\r\n            items.map((item) => {\r\n                if (!item.link && typeof item.link !== 'string') {\r\n                    return item;\r\n                }\r\n\r\n                return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                    try {\r\n                        const detailResponse = await ofetch(item.link);\r\n                        const $$: CheerioAPI = load(detailResponse);\r\n\r\n                        const title: string = $$('h1.newstit').text();\r\n                        const image: string | undefined = $$('div#Content img').first().prop('src');\r\n\r\n                        const mediaContent: Cheerio<Element> = $$('div#Content p span img');\r\n                        const media: Record<string, Record<string, string>> = {};\r\n\r\n                        if (mediaContent.length) {\r\n                            mediaContent.each((_, el) => {\r\n                                const $$el: Cheerio<Element> = $$(el);\r\n\r\n                                const pEl: Cheerio<Element> = $$el.closest('p');\r\n\r\n                                const mediaUrl: string | undefined = $$el.prop('src');\r\n                                const mediaType: string | undefined = mediaUrl?.split(/\\./).pop();\r\n\r\n                                if (mediaType && mediaUrl) {\r\n                                    media[mediaType] = { url: mediaUrl };\r\n\r\n                                    pEl.replaceWith(\r\n                                        art(path.join(__dirname, 'templates/description.art'), {\r\n                                            images: [\r\n                                                {\r\n                                                    src: mediaUrl,\r\n                                                },\r\n                                            ],\r\n                                        })\r\n                                    );\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        const description: string = art(path.join(__dirname, 'templates/description.art'), {\r\n                            description: $$('div#Content').html() ?? '',\r\n                        });\r\n\r\n                        const extraLinks = $$('div.extend_read ul li a')\r\n                            .toArray()\r\n                            .map((el) => {\r\n                                const $$el: Cheerio<Element> = $$(el);\r\n\r\n                                return {\r\n                                    url: $$el.prop('href'),\r\n                                    type: 'related',\r\n                                    content_html: $$el.prop('title') || $$el.text(),\r\n                                };\r\n                            })\r\n                            .filter((_): _ is { url: string; type: string; content_html: string } => true);\r\n\r\n                        return {\r\n                            ...item,\r\n                            title,\r\n                            description,\r\n                            pubDate: timezone(parseDate($$('div.newstag_l').text().split(/\\s/)[0]), +8),\r\n                            content: {\r\n                                html: description,\r\n                                text: $$('div#Content').html() ?? '',\r\n                            },\r\n                            image,\r\n                            banner: image,\r\n                            language,\r\n                            media: Object.keys(media).length > 0 ? media : undefined,\r\n                            _extra: {\r\n                                links: extraLinks.length > 0 ? extraLinks : undefined,\r\n                            },\r\n                        };\r\n                    } catch {\r\n                        return item;\r\n                    }\r\n                });\r\n            })\r\n        )\r\n    ).filter((_): _ is DataItem => true);\r\n\r\n    const author = '游侠网';\r\n    const title = $('div.news-list-title').text();\r\n    const feedImage = new URL('news/images/ali213_app_big.png', rootUrl).href;\r\n\r\n    return {\r\n        title: `${author} - ${title}`,\r\n        description: title,\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: feedImage,\r\n        author,\r\n        language,\r\n        id: targetUrl,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/news/:category?',\r\n    name: '资讯',\r\n    url: 'www.ali213.net',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/ali213/news/new',\r\n    parameters: {\r\n        category: '分类，默认为 `new`，即最新资讯，可在对应分类页 URL 中找到',\r\n    },\r\n    description: `::: tip\r\n若订阅 [游戏资讯](https://www.ali213.net/news/game/)，网址为 \\`https://www.ali213.net/news/game/\\`，请截取 \\`https://www.ali213.net/news/\\` 到末尾 \\`/\\` 的部分 \\`game\\` 作为 \\`category\\` 参数填入，此时目标路由为 [\\`/ali213/news/game\\`](https://rsshub.app/ali213/news/game)。\r\n:::\r\n\r\n| 分类名称 | 分类 ID |\r\n| -------- | ------- |\r\n| 最新资讯 | new     |\r\n| 评测     | pingce  |\r\n| 游戏     | game    |\r\n| 动漫     | comic   |\r\n| 影视     | movie   |\r\n| 科技     | tech    |\r\n| 电竞     | esports |\r\n| 娱乐     | amuse   |\r\n| 手游     | mobile  |\r\n`,\r\n    categories: ['game'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.ali213.net/news/:category'],\r\n            target: (params) => {\r\n                const category = params.category;\r\n\r\n                return `/news/${category ? `/${category}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '最新资讯',\r\n            source: ['www.ali213.net/news/new'],\r\n            target: '/news/new',\r\n        },\r\n        {\r\n            title: '评测',\r\n            source: ['www.ali213.net/news/pingce'],\r\n            target: '/news/pingce',\r\n        },\r\n        {\r\n            title: '游戏',\r\n            source: ['www.ali213.net/news/game'],\r\n            target: '/news/game',\r\n        },\r\n        {\r\n            title: '动漫',\r\n            source: ['www.ali213.net/news/comic'],\r\n            target: '/news/comic',\r\n        },\r\n        {\r\n            title: '影视',\r\n            source: ['www.ali213.net/news/movie'],\r\n            target: '/news/movie',\r\n        },\r\n        {\r\n            title: '科技',\r\n            source: ['www.ali213.net/news/tech'],\r\n            target: '/news/tech',\r\n        },\r\n        {\r\n            title: '电竞',\r\n            source: ['www.ali213.net/news/esports'],\r\n            target: '/news/esports',\r\n        },\r\n        {\r\n            title: '娱乐',\r\n            source: ['www.ali213.net/news/amuse'],\r\n            target: '/news/amuse',\r\n        },\r\n        {\r\n            title: '手游',\r\n            source: ['www.ali213.net/news/mobile'],\r\n            target: '/news/mobile',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"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"}