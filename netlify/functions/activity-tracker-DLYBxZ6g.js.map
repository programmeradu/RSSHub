{"version":3,"file":"activity-tracker-DLYBxZ6g.js","names":["obj: Record<string, string>","limit: number","params: URLSearchParams","baseUrl: string","apiBaseUrl: string","targetUrl: string","apiUrl: string","ofetch","$: CheerioAPI","items: DataItem[]","title: string","description: string | undefined","pubDate: number | string","linkUrl: string | undefined","categories: string[]","authors: DataItem['author']","updated: number | string","processedItem: DataItem","route: Route","urlObj: URL","filters: string"],"sources":["../../lib/routes/digitalpolicyalert/activity-tracker.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { type CheerioAPI, load } from 'cheerio';\r\nimport { type Context } from 'hono';\r\n\r\nconst createSearchParams = (queryString: string, limit: number = 30): URLSearchParams => {\r\n    const params = new URLSearchParams(queryString);\r\n    params.set('offset', '0');\r\n    params.set('limit', limit.toString());\r\n    return params;\r\n};\r\n\r\nconst searchParamsToObject = (searchParams: URLSearchParams): Record<string, string> => {\r\n    const obj: Record<string, string> = {};\r\n    for (const [key, value] of searchParams.entries()) {\r\n        obj[key] = value;\r\n    }\r\n    return obj;\r\n};\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { filters } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n    const params: URLSearchParams = createSearchParams(filters, limit);\r\n\r\n    const baseUrl: string = 'https://digitalpolicyalert.org';\r\n    const apiBaseUrl: string = 'https://api.globaltradealert.org';\r\n    const targetUrl: string = new URL(`activity-tracker?${params.toString()}`, baseUrl).href;\r\n    const apiUrl: string = new URL('dpa/intervention', apiBaseUrl).href;\r\n\r\n    const response = await ofetch(apiUrl, {\r\n        query: searchParamsToObject(params),\r\n    });\r\n\r\n    const targetResponse = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(targetResponse);\r\n    const language = $('html').attr('lang') ?? 'en';\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = response.results.slice(0, limit).map((item): DataItem => {\r\n        const title: string = item.title;\r\n        const description: string | undefined = item.latest_event?.description ?? undefined;\r\n        const pubDate: number | string = item.latest_event?.date;\r\n        const linkUrl: string | undefined = item.slug ? `change/${item.slug}` : undefined;\r\n        const categories: string[] = [\r\n            ...new Set([\r\n                ...(item.economic_activities?.map((activity) => activity.name) ?? []),\r\n                ...(item.implementers?.map((implementer) => implementer.name) ?? []),\r\n                ...(item.policies?.map((policy) => policy.name) ?? []),\r\n                item.status?.name,\r\n                item.type?.name,\r\n            ]),\r\n        ].filter(Boolean);\r\n        const authors: DataItem['author'] =\r\n            item.implementers?.map((author) => ({\r\n                name: author.name,\r\n                url: undefined,\r\n                avatar: undefined,\r\n            })) ?? undefined;\r\n        const updated: number | string = pubDate;\r\n\r\n        const processedItem: DataItem = {\r\n            title,\r\n            description,\r\n            pubDate: pubDate ? parseDate(pubDate) : undefined,\r\n            link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n            category: categories,\r\n            author: authors,\r\n            content: {\r\n                html: description,\r\n                text: description,\r\n            },\r\n            updated: updated ? parseDate(updated) : undefined,\r\n            language,\r\n        };\r\n\r\n        return processedItem;\r\n    });\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: $('meta[property=\"og:image\"]').attr('content') ? new URL($('meta[property=\"og:image\"]').attr('content'), baseUrl).href : undefined,\r\n        author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        language,\r\n        id: $('meta[property=\"og:url\"]').attr('content'),\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/activity-tracker/:filters?',\r\n    name: 'Activity Tracker',\r\n    url: 'digitalpolicyalert.org',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/digitalpolicyalert/activity-tracker',\r\n    parameters: {\r\n        filter: {\r\n            description: 'Filter, all by default',\r\n        },\r\n    },\r\n    description: `:::tip\r\nTo subscribe to [Activity Tracker - International trade](https://digitalpolicyalert.org/activity-tracker?policy=1), where the source URL is \\`https://digitalpolicyalert.org/activity-tracker?policy=1\\`, extract the certain parts from this URL to be used as parameters, resulting in the route as [\\`/digitalpolicyalert/activity-tracker/policy=1\\`](https://rsshub.app/digitalpolicyalert/activity-tracker/policy=1).\r\n:::\r\n`,\r\n    categories: ['other'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['digitalpolicyalert.org'],\r\n            target: (_, url) => {\r\n                const urlObj: URL = new URL(url);\r\n                const filters: string = createSearchParams(urlObj.searchParams.toString()).toString();\r\n\r\n                return `/digitalpolicyalert/activity-tracker${filters ? `/${filters}` : ''}`;\r\n            },\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"8SAQA,MAAM,GAAsB,EAAqB,EAAgB,KAAwB,CACrF,IAAM,EAAS,IAAI,gBAAgB,GAGnC,OAFA,EAAO,IAAI,SAAU,KACrB,EAAO,IAAI,QAAS,EAAM,YACnB,GAGL,EAAwB,GAA0D,CACpF,IAAMA,EAA8B,GACpC,IAAK,GAAM,CAAC,EAAK,KAAU,EAAa,UACpC,EAAI,GAAO,EAEf,OAAO,GAGE,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,WAAY,EAAI,IAAI,QACtBC,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAChEC,EAA0B,EAAmB,EAAS,GAEtDC,EAAkB,iCAElBE,EAAoB,IAAI,IAAI,oBAAoB,EAAO,aAAc,GAAS,KAC9EC,EAAiB,IAAI,IAAI,mBAAoB,oCAAY,KAEzD,EAAW,MAAMC,EAAO,EAAQ,CAClC,MAAO,EAAqB,KAG1B,EAAiB,MAAMA,EAAO,GAC9BC,EAAgB,EAAK,GACrB,EAAW,EAAE,QAAQ,KAAK,SAAW,KAEvCC,EAAoB,GA0CxB,MAxCA,GAAQ,EAAS,QAAQ,MAAM,EAAG,GAAO,IAAK,GAAmB,CAC7D,IAAMC,EAAgB,EAAK,MACrBC,EAAkC,EAAK,cAAc,aAAe,IAAA,GACpEC,EAA2B,EAAK,cAAc,KAC9CC,EAA8B,EAAK,KAAO,UAAU,EAAK,OAAS,IAAA,GAClEC,EAAuB,CACzB,GAAG,IAAI,IAAI,CACP,GAAI,EAAK,qBAAqB,IAAK,GAAa,EAAS,OAAS,GAClE,GAAI,EAAK,cAAc,IAAK,GAAgB,EAAY,OAAS,GACjE,GAAI,EAAK,UAAU,IAAK,GAAW,EAAO,OAAS,GACnD,EAAK,QAAQ,KACb,EAAK,MAAM,QAEjB,OAAO,SACHC,EACF,EAAK,cAAc,IAAK,IAAY,CAChC,KAAM,EAAO,KACb,IAAK,IAAA,GACL,OAAQ,IAAA,OACL,IAAA,GACLC,EAA2B,EAE3BC,EAA0B,CAC5B,QACA,cACA,QAAS,EAAU,EAAU,GAAW,IAAA,GACxC,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,SAAU,EACV,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QAAS,EAAU,EAAU,GAAW,IAAA,GACxC,YAGJ,OAAO,IAGJ,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,mCAAmC,KAAK,WACvD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EAAE,6BAA6B,KAAK,WAAa,IAAI,IAAI,EAAE,6BAA6B,KAAK,WAAY,GAAS,KAAO,IAAA,GAChI,OAAQ,EAAE,iCAAiC,KAAK,WAChD,WACA,GAAI,EAAE,2BAA2B,KAAK,aAIjCC,EAAe,CACxB,KAAM,8BACN,KAAM,mBACN,IAAK,yBACL,YAAa,CAAC,WACd,UACA,QAAS,uCACT,WAAY,CACR,OAAQ,CACJ,YAAa,2BAGrB,YAAa,yaAIb,WAAY,CAAC,SACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BACT,QAAS,EAAG,IAAQ,CAChB,IAAMC,EAAc,IAAI,IAAI,GACtBC,EAAkB,EAAmB,EAAO,aAAa,YAAY,WAE3E,MAAO,uCAAuC,EAAU,IAAI,IAAY,QAIpF,KAAM,EAAS"}