{"version":3,"file":"user-DE2EDF_j.js","names":["route: Route","puppeteer","response","cache","data","error: unknown"],"sources":["../../lib/routes/xueqiu/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport sanitizeHtml from 'sanitize-html';\r\nimport { parseToken } from '@/routes/xueqiu/cookies';\r\nimport puppeteer from '@/utils/puppeteer';\r\n\r\nconst rootUrl = 'https://xueqiu.com';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:id/:type?',\r\n    categories: ['finance'],\r\n    example: '/xueqiu/user/8152922548',\r\n    parameters: { id: '用户 id, 可在用户主页 URL 中找到', type: '动态的类型, 不填则默认全部' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: true,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['xueqiu.com/u/:id'],\r\n            target: '/user/:id',\r\n        },\r\n    ],\r\n    name: '用户动态',\r\n    maintainers: ['imlonghao'],\r\n    handler,\r\n    description: `| 原发布 | 长文 | 问答 | 热门 | 交易 |\r\n| ------ | ---- | ---- | ---- | ---- |\r\n| 0      | 2    | 4    | 9    | 11   |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const type = ctx.req.param('type') || 10;\r\n    const typename = {\r\n        10: '全部',\r\n        0: '原发布',\r\n        2: '长文',\r\n        4: '问答',\r\n        9: '热门',\r\n        11: '交易',\r\n    };\r\n\r\n    const link = `${rootUrl}/u/${id}`;\r\n    const token = await parseToken(link);\r\n\r\n    const browser = await puppeteer();\r\n    try {\r\n        const mainPage = await browser.newPage();\r\n\r\n        await mainPage.setExtraHTTPHeaders({\r\n            Cookie: token as string,\r\n            Referer: link,\r\n        });\r\n\r\n        await mainPage.goto(link, {\r\n            waitUntil: 'domcontentloaded',\r\n        });\r\n        await mainPage.waitForFunction(() => document.readyState === 'complete');\r\n\r\n        const apiUrl = `${rootUrl}/v4/statuses/user_timeline.json?user_id=${id}&type=${type}`;\r\n        const response = await mainPage.evaluate(async (url) => {\r\n            const response = await fetch(url);\r\n            return response.json();\r\n        }, apiUrl);\r\n\r\n        if (!response?.statuses) {\r\n            throw new Error('获取用户动态数据失败');\r\n        }\r\n\r\n        const data = response.statuses.filter((s) => s.mark !== 1);\r\n\r\n        if (!data.length) {\r\n            throw new Error('未找到有效的动态数据');\r\n        }\r\n\r\n        const items = await Promise.all(\r\n            data.map((item) =>\r\n                cache.tryGet(item.target, async () => {\r\n                    const detailUrl = rootUrl + item.target;\r\n                    try {\r\n                        await mainPage.goto(detailUrl, {\r\n                            waitUntil: 'domcontentloaded',\r\n                        });\r\n                        await mainPage.waitForFunction(() => document.readyState === 'complete');\r\n\r\n                        const content = await mainPage.evaluate(() => {\r\n                            const articleContent = document.querySelector('.article__bd')?.innerHTML || '';\r\n                            const statusMatch = document.documentElement.innerHTML.match(/SNOWMAN_STATUS = (.*?});/);\r\n                            return {\r\n                                articleContent,\r\n                                statusData: statusMatch ? statusMatch[1] : null,\r\n                            };\r\n                        });\r\n\r\n                        if (content.statusData) {\r\n                            const data = JSON.parse(content.statusData);\r\n                            item.text = data.text;\r\n                        }\r\n\r\n                        const retweetedStatus = item.retweeted_status ? `<blockquote>${item.retweeted_status.user.screen_name}:&nbsp;${item.retweeted_status.description}</blockquote>` : '';\r\n                        const description = content.articleContent || item.description + retweetedStatus;\r\n\r\n                        return {\r\n                            title: item.title || sanitizeHtml(description, { allowedTags: [], allowedAttributes: {} }),\r\n                            description: item.text ? item.text + retweetedStatus : description,\r\n                            pubDate: parseDate(item.created_at),\r\n                            link: rootUrl + item.target,\r\n                        };\r\n                    } catch (error: unknown) {\r\n                        if (error instanceof Error && !error.message?.includes('ERR_ABORTED')) {\r\n                            throw error;\r\n                        }\r\n                        const retweetedStatus = item.retweeted_status ? `<blockquote>${item.retweeted_status.user.screen_name}:&nbsp;${item.retweeted_status.description}</blockquote>` : '';\r\n                        const description = item.description + retweetedStatus;\r\n\r\n                        return {\r\n                            title: item.title || sanitizeHtml(description, { allowedTags: [], allowedAttributes: {} }),\r\n                            description: item.description,\r\n                            pubDate: parseDate(item.created_at),\r\n                            link: rootUrl + item.target,\r\n                        };\r\n                    }\r\n                })\r\n            )\r\n        );\r\n\r\n        const extractProfileImage = (user: any): string | undefined => {\r\n            if (!user?.profile_image_url || !user?.photo_domain) {\r\n                return undefined;\r\n            }\r\n\r\n            const imageUrls = user.profile_image_url.split(',').filter(Boolean);\r\n            if (imageUrls.length === 0) {\r\n                return undefined;\r\n            }\r\n\r\n            // Priority order for image sizes\r\n            const sizePriority = ['!180x180.png', '!50x50.png', '!30x30.png'];\r\n\r\n            const selectedImageUrl = sizePriority.map((size) => imageUrls.find((url) => url.includes(size))).find(Boolean) || imageUrls[0];\r\n\r\n            const baseDomain = user.photo_domain.startsWith('//') ? `https:${user.photo_domain}` : user.photo_domain;\r\n\r\n            return `${baseDomain}${selectedImageUrl}`;\r\n        };\r\n\r\n        const profileImage = extractProfileImage(data[0].user);\r\n\r\n        return {\r\n            title: `${data[0].user.screen_name} 的雪球${typename[type]}动态`,\r\n            link,\r\n            description: `${data[0].user.screen_name} 的雪球${typename[type]}动态`,\r\n            image: profileImage,\r\n            item: items,\r\n        };\r\n    } finally {\r\n        await browser.close();\r\n    }\r\n}\r\n"],"mappings":"iXAOA,MAAM,EAAU,qBAEHA,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,WACb,QAAS,0BACT,WAAY,CAAE,GAAI,wBAAyB,KAAM,kBACjD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oBACT,OAAQ,cAGhB,KAAM,OACN,YAAa,CAAC,aACd,UACA,YAAa;;yCAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAO,EAAI,IAAI,MAAM,SAAW,GAChC,EAAW,CACb,GAAI,KACJ,EAAG,MACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,GAAI,MAGF,EAAO,GAAG,EAAQ,KAAK,IACvB,EAAQ,MAAM,EAAW,GAEzB,EAAU,MAAMC,IACtB,GAAI,CACA,IAAM,EAAW,MAAM,EAAQ,UAE/B,MAAM,EAAS,oBAAoB,CAC/B,OAAQ,EACR,QAAS,IAGb,MAAM,EAAS,KAAK,EAAM,CACtB,UAAW,qBAEf,MAAM,EAAS,oBAAsB,SAAS,aAAe,YAE7D,IAAM,EAAS,GAAG,EAAQ,0CAA0C,EAAG,QAAQ,IACzE,EAAW,MAAM,EAAS,SAAS,KAAO,IAAQ,CACpD,IAAMC,EAAW,MAAM,MAAM,GAC7B,OAAOA,EAAS,QACjB,GAEH,GAAI,CAAC,GAAU,SACX,MAAU,MAAM,cAGpB,IAAM,EAAO,EAAS,SAAS,OAAQ,GAAM,EAAE,OAAS,GAExD,GAAI,CAAC,EAAK,OACN,MAAU,MAAM,cAGpB,IAAM,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,OAAQ,SAAY,CAClC,IAAM,EAAY,EAAU,EAAK,OACjC,GAAI,CACA,MAAM,EAAS,KAAK,EAAW,CAC3B,UAAW,qBAEf,MAAM,EAAS,oBAAsB,SAAS,aAAe,YAE7D,IAAM,EAAU,MAAM,EAAS,aAAe,CAC1C,IAAM,EAAiB,SAAS,cAAc,iBAAiB,WAAa,GACtE,EAAc,SAAS,gBAAgB,UAAU,MAAM,4BAC7D,MAAO,CACH,iBACA,WAAY,EAAc,EAAY,GAAK,QAInD,GAAI,EAAQ,WAAY,CACpB,IAAMC,EAAO,KAAK,MAAM,EAAQ,YAChC,EAAK,KAAOA,EAAK,KAGrB,IAAM,EAAkB,EAAK,iBAAmB,eAAe,EAAK,iBAAiB,KAAK,YAAY,SAAS,EAAK,iBAAiB,YAAY,eAAiB,GAC5J,EAAc,EAAQ,gBAAkB,EAAK,YAAc,EAEjE,MAAO,CACH,MAAO,EAAK,OAAS,EAAa,EAAa,CAAE,YAAa,GAAI,kBAAmB,KACrF,YAAa,EAAK,KAAO,EAAK,KAAO,EAAkB,EACvD,QAAS,EAAU,EAAK,YACxB,KAAM,EAAU,EAAK,cAEpBC,EAAgB,CACrB,GAAI,aAAiB,OAAS,CAAC,EAAM,SAAS,SAAS,eACnD,MAAM,EAEV,IAAM,EAAkB,EAAK,iBAAmB,eAAe,EAAK,iBAAiB,KAAK,YAAY,SAAS,EAAK,iBAAiB,YAAY,eAAiB,GAC5J,EAAc,EAAK,YAAc,EAEvC,MAAO,CACH,MAAO,EAAK,OAAS,EAAa,EAAa,CAAE,YAAa,GAAI,kBAAmB,KACrF,YAAa,EAAK,YAClB,QAAS,EAAU,EAAK,YACxB,KAAM,EAAU,EAAK,aAOnC,EAAuB,GAAkC,CAC3D,GAAI,CAAC,GAAM,mBAAqB,CAAC,GAAM,aACnC,OAGJ,IAAM,EAAY,EAAK,kBAAkB,MAAM,KAAK,OAAO,SAC3D,GAAI,EAAU,SAAW,EACrB,OAIJ,IAAM,EAAe,CAAC,eAAgB,aAAc,cAE9C,EAAmB,EAAa,IAAK,GAAS,EAAU,KAAM,GAAQ,EAAI,SAAS,KAAQ,KAAK,UAAY,EAAU,GAEtH,EAAa,EAAK,aAAa,WAAW,MAAQ,SAAS,EAAK,eAAiB,EAAK,aAE5F,MAAO,GAAG,IAAa,KAGrB,EAAe,EAAoB,EAAK,GAAG,MAEjD,MAAO,CACH,MAAO,GAAG,EAAK,GAAG,KAAK,YAAY,MAAM,EAAS,GAAM,IACxD,OACA,YAAa,GAAG,EAAK,GAAG,KAAK,YAAY,MAAM,EAAS,GAAM,IAC9D,MAAO,EACP,KAAM,UAEJ,CACN,MAAM,EAAQ"}