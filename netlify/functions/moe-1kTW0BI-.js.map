{"version":3,"file":"moe-1kTW0BI-.js","names":["route: Route","got","cache","response"],"sources":["../../lib/routes/gov/moe/moe.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport logger from '@/utils/logger';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst moeUrl = 'https://www.moe.gov.cn/';\r\nconst typesIdMap = [\r\n    { type: 'policy_anal', id: 'tt_con2', name: '政策解读' },\r\n    { type: 'newest_file', id: 'nine_con1', name: '最新文件' },\r\n    { type: 'notice', id: 'nine_con2', name: '公告公示' },\r\n    { type: 'edu_ministry_news', id: 'nine_con3', name: '教育部简报' },\r\n    { type: 'edu_focus_news', id: 'eight_con2 .pchide>.TRS_Editor', name: '教育要闻' },\r\n];\r\n\r\nexport const route: Route = {\r\n    path: '/moe/:type',\r\n    categories: ['government'],\r\n    example: '/gov/moe/policy_anal',\r\n    parameters: { type: '分类名' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '新闻',\r\n    maintainers: ['Crawler995'],\r\n    handler,\r\n    description: `|   政策解读   |   最新文件   | 公告公示 |      教育部简报     |     教育要闻     |\r\n| :----------: | :----------: | :------: | :-----------------: | :--------------: |\r\n| policy\\_anal | newest\\_file |  notice  | edu\\_ministry\\_news | edu\\_focus\\_news |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type');\r\n    let id = '';\r\n    let name = '';\r\n\r\n    for (const item of typesIdMap) {\r\n        if (item.type === type) {\r\n            id = item.id;\r\n            name = item.name;\r\n        }\r\n    }\r\n\r\n    if (id === '') {\r\n        logger.error('The given type not found.');\r\n        return;\r\n    }\r\n\r\n    const response = await got(moeUrl);\r\n\r\n    const $ = load(response.data);\r\n    const newsLis = $('div#' + id + '>ul>li');\r\n\r\n    return {\r\n        title: name,\r\n        link: moeUrl,\r\n        item: await Promise.all(\r\n            newsLis.toArray().map(async (item) => {\r\n                item = $(item);\r\n\r\n                const firstA = item.find('a');\r\n                const itemUrl = new URL(firstA.attr('href'), moeUrl).href;\r\n\r\n                // some live pages have no content, just return the liva page url\r\n                const infos = itemUrl.includes('/live/')\r\n                    ? {\r\n                          description: firstA.html(),\r\n                      }\r\n                    : await cache.tryGet(itemUrl, async () => {\r\n                          const res = {};\r\n                          const response = await got({\r\n                              method: 'get',\r\n                              url: itemUrl,\r\n                              headers: {\r\n                                  Referer: moeUrl,\r\n                              },\r\n                          });\r\n                          const data = load(response.data);\r\n\r\n                          if (itemUrl.includes('www.gov.cn')) {\r\n                              res.description = data('#UCAP-CONTENT').html();\r\n                          } else if (itemUrl.includes('srcsite')) {\r\n                              res.description = data('div#content_body_xxgk').html();\r\n                          } else if (itemUrl.includes('jyb_')) {\r\n                              res.description = data('div.moe-detail-box').html() || data('div#moe-detail-box').html();\r\n                          }\r\n\r\n                          return res;\r\n                      });\r\n\r\n                return {\r\n                    title: firstA.text(),\r\n                    description: infos.description,\r\n                    link: itemUrl,\r\n                    pubDate: parseDate(item.find('span').text(), 'MM-DD'),\r\n                };\r\n            })\r\n        ),\r\n    };\r\n}\r\n"],"mappings":"iYAOA,MAAM,EAAS,0BACT,EAAa,CACf,CAAE,KAAM,cAAe,GAAI,UAAW,KAAM,QAC5C,CAAE,KAAM,cAAe,GAAI,YAAa,KAAM,QAC9C,CAAE,KAAM,SAAU,GAAI,YAAa,KAAM,QACzC,CAAE,KAAM,oBAAqB,GAAI,YAAa,KAAM,SACpD,CAAE,KAAM,iBAAkB,GAAI,iCAAkC,KAAM,SAG7DA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,cACb,QAAS,uBACT,WAAY,CAAE,KAAM,OACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,YAAa,CAAC,cACd,UACA,YAAa;;gFAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACvB,EAAK,GACL,EAAO,GAEX,IAAK,IAAM,KAAQ,EACX,EAAK,OAAS,IACd,EAAK,EAAK,GACV,EAAO,EAAK,MAIpB,GAAI,IAAO,GAAI,CACX,EAAO,MAAM,6BACb,OAGJ,IAAM,EAAW,MAAMC,EAAI,GAErB,EAAI,EAAK,EAAS,MAClB,EAAU,EAAE,OAAS,EAAK,UAEhC,MAAO,CACH,MAAO,EACP,KAAM,EACN,KAAM,MAAM,QAAQ,IAChB,EAAQ,UAAU,IAAI,KAAO,IAAS,CAClC,EAAO,EAAE,GAET,IAAM,EAAS,EAAK,KAAK,KACnB,EAAU,IAAI,IAAI,EAAO,KAAK,QAAS,GAAQ,KAG/C,EAAQ,EAAQ,SAAS,UACzB,CACI,YAAa,EAAO,QAExB,MAAMC,EAAM,OAAO,EAAS,SAAY,CACpC,IAAM,EAAM,GACNC,EAAW,MAAMF,EAAI,CACvB,OAAQ,MACR,IAAK,EACL,QAAS,CACL,QAAS,KAGX,EAAO,EAAKE,EAAS,MAU3B,OARI,EAAQ,SAAS,cACjB,EAAI,YAAc,EAAK,iBAAiB,OACjC,EAAQ,SAAS,WACxB,EAAI,YAAc,EAAK,yBAAyB,OACzC,EAAQ,SAAS,UACxB,EAAI,YAAc,EAAK,sBAAsB,QAAU,EAAK,sBAAsB,QAG/E,IAGjB,MAAO,CACH,MAAO,EAAO,OACd,YAAa,EAAM,YACnB,KAAM,EACN,QAAS,EAAU,EAAK,KAAK,QAAQ,OAAQ"}