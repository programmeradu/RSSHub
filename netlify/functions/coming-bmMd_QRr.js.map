{"version":3,"file":"coming-bmMd_QRr.js","names":[],"sources":["../../lib/routes/douban/movie/coming.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/movie/coming',\r\n    categories: ['social-media'],\r\n    example: '/douban/movie/coming',\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '电影即将上映',\r\n    maintainers: ['reonokiy'],\r\n    radar: [\r\n        {\r\n            title: '豆瓣电影-即将上映',\r\n            source: ['movie.douban.com/coming'],\r\n            target: '/movie/coming',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\nconst renderDescription = (info: { title?: string; cover_url?: string; pubdate?: string[]; intro?: string; directors?: string[]; actors?: string[]; genres: string[]; wish_count?: number | string }) =>\r\n    art(path.join(__dirname, '../templates/movie_coming.art'), info);\r\n\r\nasync function handler(ctx) {\r\n    const response = await got({\r\n        method: 'get',\r\n        url: 'https://m.douban.com/rexxar/api/v2/movie/coming_soon',\r\n        headers: {\r\n            Referer: 'https://m.douban.com/movie/',\r\n        },\r\n    });\r\n\r\n    ctx.set('json', { response });\r\n\r\n    return {\r\n        title: '豆瓣电影-即将上映',\r\n        link: 'https://movie.douban.com/coming',\r\n        item: response.data?.subjects?.map((item) => ({\r\n            title: item?.title,\r\n            link: item?.url,\r\n            guid: item?.url,\r\n            description: renderDescription({\r\n                title: item?.title,\r\n                intro: item?.intro,\r\n                pubdate: item?.pubdate,\r\n                cover_url: item?.cover_url,\r\n                directors: item?.directors?.map((d) => d?.name),\r\n                actors: item?.actors?.map((a) => a?.name),\r\n                genres: item?.genres,\r\n                wish_count: item?.wish_count,\r\n            }),\r\n            category: item?.genres,\r\n            itunes_item_image: item?.cover_url,\r\n            upvotes: item?.wish_count,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"gVAKA,MAAa,EAAe,CACxB,KAAM,gBACN,WAAY,CAAC,gBACb,QAAS,uBACT,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,YACd,MAAO,CACH,CACI,MAAO,YACP,OAAQ,CAAC,2BACT,OAAQ,kBAGhB,WAEE,EAAqB,GACvB,EAAI,EAAA,KAAA,EAAA,uCAAuD,GAE/D,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,IAAK,uDACL,QAAS,CACL,QAAS,iCAMjB,OAFA,EAAI,IAAI,OAAQ,CAAE,aAEX,CACH,MAAO,YACP,KAAM,kCACN,KAAM,EAAS,MAAM,UAAU,IAAK,IAAU,CAC1C,MAAO,GAAM,MACb,KAAM,GAAM,IACZ,KAAM,GAAM,IACZ,YAAa,EAAkB,CAC3B,MAAO,GAAM,MACb,MAAO,GAAM,MACb,QAAS,GAAM,QACf,UAAW,GAAM,UACjB,UAAW,GAAM,WAAW,IAAK,GAAM,GAAG,MAC1C,OAAQ,GAAM,QAAQ,IAAK,GAAM,GAAG,MACpC,OAAQ,GAAM,OACd,WAAY,GAAM,aAEtB,SAAU,GAAM,OAChB,kBAAmB,GAAM,UACzB,QAAS,GAAM"}