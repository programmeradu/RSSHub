{"version":3,"file":"posts-C1VCtp7a.js","names":["route: Route","puppeteer"],"sources":["../../lib/routes/linkedin/posts.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport puppeteer from '@/utils/puppeteer';\r\nimport { load } from 'cheerio';\r\nimport { parseCompanyName, parseCompanyPosts, BASE_URL } from './utils';\r\nimport logger from '@/utils/logger';\r\n\r\nexport const route: Route = {\r\n    path: '/company/:company_id/posts',\r\n    categories: ['social-media'],\r\n    example: '/linkedin/company/google/posts',\r\n    parameters: { company_id: \"Company's LinkedIn profile ID\" },\r\n    description: \"Get company's LinkedIn posts by company ID\",\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Company Posts',\r\n    maintainers: ['saifazmi'],\r\n    handler: async (ctx) => {\r\n        const company_id = ctx.req.param('company_id');\r\n\r\n        // Puppeteer setup\r\n        const browser = await puppeteer();\r\n        const page = await browser.newPage();\r\n        await page.setRequestInterception(true);\r\n\r\n        page.on('request', (request) => {\r\n            request.resourceType() === 'document' ? request.continue() : request.abort();\r\n        });\r\n\r\n        const url = new URL(`${BASE_URL}/company/${company_id}`);\r\n\r\n        logger.http(`Requesting ${url.href}`);\r\n        await page.goto(url.href, {\r\n            waitUntil: 'domcontentloaded',\r\n        });\r\n\r\n        const response = await page.content();\r\n        await page.close();\r\n\r\n        const $ = load(response);\r\n        const companyName = parseCompanyName($);\r\n        const posts = parseCompanyPosts($);\r\n\r\n        await browser.close();\r\n\r\n        return {\r\n            title: `LinkedIn - ${companyName}'s Posts`,\r\n            link: url.href,\r\n            description: `This feed gets ${companyName}'s posts from LinkedIn`,\r\n            item: posts.map((post) => ({\r\n                title: post.text,\r\n                description: post.text,\r\n                link: post.link,\r\n                pubDate: post.date,\r\n                updated: post.date,\r\n            })),\r\n        };\r\n    },\r\n};\r\n"],"mappings":"sSAMA,MAAaA,EAAe,CACxB,KAAM,6BACN,WAAY,CAAC,gBACb,QAAS,iCACT,WAAY,CAAE,WAAY,iCAC1B,YAAa,6CACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,gBACN,YAAa,CAAC,YACd,QAAS,KAAO,IAAQ,CACpB,IAAM,EAAa,EAAI,IAAI,MAAM,cAG3B,EAAU,MAAMC,IAChB,EAAO,MAAM,EAAQ,UAC3B,MAAM,EAAK,uBAAuB,IAElC,EAAK,GAAG,UAAY,GAAY,CAC5B,EAAQ,iBAAmB,WAAa,EAAQ,WAAa,EAAQ,UAGzE,IAAM,EAAM,IAAI,IAAI,GAAG,EAAS,WAAW,KAE3C,EAAO,KAAK,cAAc,EAAI,QAC9B,MAAM,EAAK,KAAK,EAAI,KAAM,CACtB,UAAW,qBAGf,IAAM,EAAW,MAAM,EAAK,UAC5B,MAAM,EAAK,QAEX,IAAM,EAAI,EAAK,GACT,EAAc,EAAiB,GAC/B,EAAQ,EAAkB,GAIhC,OAFA,MAAM,EAAQ,QAEP,CACH,MAAO,cAAc,EAAY,UACjC,KAAM,EAAI,KACV,YAAa,kBAAkB,EAAY,wBAC3C,KAAM,EAAM,IAAK,IAAU,CACvB,MAAO,EAAK,KACZ,YAAa,EAAK,KAClB,KAAM,EAAK,KACX,QAAS,EAAK,KACd,QAAS,EAAK"}