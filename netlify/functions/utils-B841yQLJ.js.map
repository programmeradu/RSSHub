{"version":3,"file":"utils-B841yQLJ.js","names":["ofetch"],"sources":["../../lib/routes/dxy/utils.ts"],"sourcesContent":["import CryptoJS from 'crypto-js';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as cheerio from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { PostData } from './types';\r\n\r\nconst APP_SIGN_KEY = '4bTogwpz7RzNO2VTFtW7zcfRkAE97ox6ZSgcQi7FgYdqrHqKB7aGqEZ4o7yssa2aEXoV3bQwh12FFgVNlpyYk2Yjm9d2EZGeGu3';\r\nconst phoneBaseUrl = 'https://3g.dxy.cn';\r\nconst webBaseUrl = 'https://www.dxy.cn';\r\n\r\nconst generateNonce = (length = 8, type = 'alphabet') => {\r\n    const characters = {\r\n        alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\r\n        number: '0123456789',\r\n    };\r\n\r\n    let result = '';\r\n    const selectedCharacters = characters[type] || characters.alphabet;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        result += selectedCharacters.charAt(Math.floor(Math.random() * selectedCharacters.length));\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst sign = (params) => {\r\n    const searchParams = new URLSearchParams(params);\r\n    searchParams.append('appSignKey', APP_SIGN_KEY);\r\n    searchParams.sort();\r\n    return CryptoJS.SHA1(searchParams.toString()).toString();\r\n};\r\n\r\nconst getPost = (item, tryGet) =>\r\n    tryGet(item.link, async () => {\r\n        const postParams = {\r\n            postId: item.postId,\r\n            serverTimestamp: Date.now(),\r\n            timestamp: Date.now(),\r\n            noncestr: generateNonce(8, 'number'),\r\n        };\r\n\r\n        const post = await ofetch<PostData>('https://www.dxy.cn/bbs/newweb/post/detail', {\r\n            query: {\r\n                ...postParams,\r\n                sign: sign(postParams),\r\n            },\r\n        });\r\n        if (post.code !== 'success') {\r\n            throw new Error(post.message);\r\n        }\r\n\r\n        const $ = cheerio.load(post.data.body, null, false);\r\n\r\n        $('img').each((_, img) => {\r\n            img = $(img);\r\n            if (img.data('hsrc')) {\r\n                img.attr('src', img.data('hsrc'));\r\n                img.removeAttr('data-hsrc');\r\n            }\r\n            if (img.data('osrc')) {\r\n                img.attr('src', img.data('osrc'));\r\n                img.removeAttr('data-osrc');\r\n            }\r\n        });\r\n\r\n        item.description = $.html();\r\n        item.pubDate = parseDate(post.data.createTime, 'x');\r\n        item.updated = post.data.lastEditTime ? parseDate(post.data.lastEditTime, 'x') : item.pubDate;\r\n        item.category = [...new Set([...item.category, ...post.data.tagInfos.map((tag) => tag.tagName)])];\r\n\r\n        return item;\r\n    });\r\n\r\nexport { phoneBaseUrl, webBaseUrl, generateNonce, sign, getPost };\r\n"],"mappings":"8JAMA,MACM,EAAe,oBACf,EAAa,qBAEb,GAAiB,EAAS,EAAG,EAAO,aAAe,CACrD,IAAM,EAAa,CACf,SAAU,uDACV,OAAQ,cAGR,EAAS,GACP,EAAqB,EAAW,IAAS,EAAW,SAE1D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IACxB,GAAU,EAAmB,OAAO,KAAK,MAAM,KAAK,SAAW,EAAmB,SAGtF,OAAO,GAGL,EAAQ,GAAW,CACrB,IAAM,EAAe,IAAI,gBAAgB,GAGzC,OAFA,EAAa,OAAO,aAAc,uGAClC,EAAa,OACN,EAAS,KAAK,EAAa,YAAY,YAG5C,GAAW,EAAM,IACnB,EAAO,EAAK,KAAM,SAAY,CAC1B,IAAM,EAAa,CACf,OAAQ,EAAK,OACb,gBAAiB,KAAK,MACtB,UAAW,KAAK,MAChB,SAAU,EAAc,EAAG,WAGzB,EAAO,MAAMA,EAAiB,4CAA6C,CAC7E,MAAO,CACH,GAAG,EACH,KAAM,EAAK,MAGnB,GAAI,EAAK,OAAS,UACd,MAAU,MAAM,EAAK,SAGzB,IAAM,EAAI,EAAQ,KAAK,EAAK,KAAK,KAAM,KAAM,IAmB7C,OAjBA,EAAE,OAAO,MAAM,EAAG,IAAQ,CACtB,EAAM,EAAE,GACJ,EAAI,KAAK,UACT,EAAI,KAAK,MAAO,EAAI,KAAK,SACzB,EAAI,WAAW,cAEf,EAAI,KAAK,UACT,EAAI,KAAK,MAAO,EAAI,KAAK,SACzB,EAAI,WAAW,gBAIvB,EAAK,YAAc,EAAE,OACrB,EAAK,QAAU,EAAU,EAAK,KAAK,WAAY,KAC/C,EAAK,QAAU,EAAK,KAAK,aAAe,EAAU,EAAK,KAAK,aAAc,KAAO,EAAK,QACtF,EAAK,SAAW,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAK,SAAU,GAAG,EAAK,KAAK,SAAS,IAAK,GAAQ,EAAI,YAE/E"}