{"version":3,"file":"products-zOnSJ2bt.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/resonac/products.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n// import { parseDate } from '@/utils/parse-date';\r\n// import timezone from '@/utils/timezone';\r\n\r\nconst baseUrl = 'https://www.resonac.com';\r\nconst host = 'https://www.resonac.com/products?intcid=glnavi_products';\r\n\r\nexport const route: Route = {\r\n    path: '/products',\r\n    categories: ['other'],\r\n    example: '/resonac/products',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: true,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Products',\r\n    maintainers: ['valuex'],\r\n    handler,\r\n    description: '',\r\n};\r\n\r\nasync function handler() {\r\n    const response = await got(host);\r\n    const pageHtml = response.data;\r\n    const $ = load(pageHtml);\r\n    const groupLists = $('div.m-panel-card-link ul li')\r\n        .toArray()\r\n        .map((el) => ({\r\n            groupName: $('a', el).text().trim(),\r\n            groupURL: baseUrl + $('a', el).attr('href'),\r\n        }));\r\n\r\n    const lists = await Promise.all(\r\n        groupLists.map((productGroup) =>\r\n            cache.tryGet(productGroup.groupURL, async () => {\r\n                const strUrl = productGroup.groupURL;\r\n                const response = await got(strUrl);\r\n                const $ = load(response.data);\r\n                const item = $('dt.m-toggle__title div span a')\r\n                    .toArray()\r\n                    .map((el) => ({\r\n                        title: $('b', el).text().trim(),\r\n                        link: baseUrl + $(el).attr('href'),\r\n                        group: productGroup.groupName,\r\n                    }));\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const fullList = lists.flat(); // flatten array\r\n    // fullList = fullList.filter((item) => item.title !== 'Empty');\r\n\r\n    const items = await Promise.all(\r\n        fullList.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                try {\r\n                    const response = await got(item.link);\r\n                    const $ = load(response.data);\r\n                    const thisTitle = item.title + ' | ' + item.group;\r\n                    item.title = thisTitle;\r\n                    item.description = $('main div.str-section').html();\r\n                    return item;\r\n                } catch (error) {\r\n                    return (error as Error).message;\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Resonac_Products',\r\n        link: baseUrl,\r\n        description: 'Resonac_Products',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAOA,MAAM,EAAU,0BAGHA,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,SACb,QAAS,oBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,WACN,YAAa,CAAC,UACd,UACA,YAAa,IAGjB,eAAe,GAAU,CACrB,IAAM,EAAW,MAAMC,EAAI,2DACrB,EAAW,EAAS,KACpB,EAAI,EAAK,GACT,EAAa,EAAE,+BAChB,UACA,IAAK,IAAQ,CACV,UAAW,EAAE,IAAK,GAAI,OAAO,OAC7B,SAAU,EAAU,EAAE,IAAK,GAAI,KAAK,WAGtC,EAAQ,MAAM,QAAQ,IACxB,EAAW,IAAK,GACZC,EAAM,OAAO,EAAa,SAAU,SAAY,CAC5C,IAAM,EAAS,EAAa,SACtBC,EAAW,MAAMF,EAAI,GACrBG,EAAI,EAAKD,EAAS,MAClB,EAAOC,EAAE,iCACV,UACA,IAAK,IAAQ,CACV,MAAOA,EAAE,IAAK,GAAI,OAAO,OACzB,KAAM,EAAUA,EAAE,GAAI,KAAK,QAC3B,MAAO,EAAa,aAE5B,OAAO,MAKb,EAAW,EAAM,OAGjB,EAAQ,MAAM,QAAQ,IACxB,EAAS,IAAK,GACVF,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CACA,IAAMC,EAAW,MAAMF,EAAI,EAAK,MAC1BG,EAAI,EAAKD,EAAS,MAClB,EAAY,EAAK,MAAQ,MAAQ,EAAK,MAG5C,MAFA,GAAK,MAAQ,EACb,EAAK,YAAcC,EAAE,wBAAwB,OACtC,QACF,EAAO,CACZ,OAAQ,EAAgB,aAMxC,MAAO,CACH,MAAO,mBACP,KAAM,EACN,YAAa,mBACb,KAAM"}