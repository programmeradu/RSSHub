{"version":3,"file":"tag-Da-Erx6-.js","names":["route: Route","got","cache","getRssItem"],"sources":["../../lib/routes/lifeweek/tag.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport getRssItem from './utils';\r\nconst rootApiUrl = 'https://www.lifeweek.com.cn/api/userWebFollow/getFollowTagContentList?type=4&sort=2&tagId';\r\nconst rootUrl = 'https://www.lifeweek.com.cn/articleList';\r\nconst articleRootUrl = 'https://www.lifeweek.com.cn/article';\r\n\r\nexport const route: Route = {\r\n    path: '/tag/:id',\r\n    radar: [\r\n        {\r\n            source: ['lifeweek.com.cn/articleList/:tag'],\r\n            target: '/tag/:tag',\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const tag = ctx.req.param('id');\r\n    const url = `${rootApiUrl}=${tag}`;\r\n    const { data } = await got(url);\r\n    const result = data.model.articleResponseList;\r\n    const items = await Promise.all(\r\n        result.map((item) => {\r\n            const articleLink = `${articleRootUrl}/${item.id}`;\r\n            return cache.tryGet(articleLink, () => getRssItem(item, articleLink));\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: data.model.tagName,\r\n        link: `${rootUrl}/${tag}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wYAIA,MAIaA,EAAe,CACxB,KAAM,WACN,MAAO,CACH,CACI,OAAQ,CAAC,oCACT,OAAQ,cAGhB,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,EAAI,IAAI,MAAM,MACpB,EAAM,6FAAiB,IACvB,CAAE,QAAS,MAAMC,EAAI,GACrB,EAAS,EAAK,MAAM,oBACpB,EAAQ,MAAM,QAAQ,IACxB,EAAO,IAAK,GAAS,CACjB,IAAM,EAAc,uCAAqB,EAAK,KAC9C,OAAOC,EAAM,OAAO,MAAmBC,EAAW,EAAM,OAIhE,MAAO,CACH,MAAO,EAAK,MAAM,QAClB,KAAM,2CAAc,IACpB,KAAM"}