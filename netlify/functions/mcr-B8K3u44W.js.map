{"version":3,"file":"mcr-B8K3u44W.js","names":["route: Route","got"],"sources":["../../lib/routes/microsoft/mcr.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\n\r\nexport const route: Route = {\r\n    path: '/mcr/product/*',\r\n    categories: ['program-update'],\r\n    example: '/microsoft/mcr/product/dotnet/framework/runtime',\r\n    parameters: { product: 'repository path in mcr.microsoft.com' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['https://mcr.microsoft.com/en-us/product/:product/tags'],\r\n        },\r\n    ],\r\n    name: 'Product tags in mcr.microsoft.com',\r\n    maintainers: ['margani'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const product = ctx.req.path.replace('/microsoft/mcr/product/', '');\r\n    const { data: details } = await got({\r\n        method: 'get',\r\n        url: `https://mcr.microsoft.com/api/v1/catalog/${product}/details?reg=mar`,\r\n    });\r\n    const { data: tags } = await got({\r\n        method: 'get',\r\n        url: `https://mcr.microsoft.com/api/v1/catalog/${product}/tags?reg=mar`,\r\n    });\r\n\r\n    return {\r\n        title: `${details.name} - Microsoft Artifact Registry`,\r\n        description: String(details.shortDescription),\r\n        image: `https://mcr.microsoft.com${details.imagePath}`,\r\n        link: `https://mcr.microsoft.com/en-us/product/${product}`,\r\n        item: tags.map((tag: any) => {\r\n            const descriptionItems = [`Digest: \\`${tag.digest}\\``, `Last modified date: ${new Date(tag.lastModifiedDate).toDateString()}`];\r\n\r\n            if (tag.architecture) {\r\n                descriptionItems.push(`Architecture: ${tag.architecture}`);\r\n            }\r\n            if (tag.operatingSystem) {\r\n                descriptionItems.push(`Operating system: ${tag.operatingSystem}`);\r\n            }\r\n\r\n            return {\r\n                title: `${details.name} - ${tag.name}`,\r\n                author: details.publisher,\r\n                description: descriptionItems.join('<br />'),\r\n                pubDate: new Date(tag.lastModifiedDate),\r\n                guid: `mcr::${product}::${tag.name}::${tag.digest}`,\r\n                link: `https://mcr.microsoft.com/en-us/product/${product}/tags?name=${tag.name}&digest=${tag.digest}`,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"gOAGA,MAAaA,EAAe,CACxB,KAAM,iBACN,WAAY,CAAC,kBACb,QAAS,kDACT,WAAY,CAAE,QAAS,wCACvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2DAGjB,KAAM,oCACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,EAAI,IAAI,KAAK,QAAQ,0BAA2B,IAC1D,CAAE,KAAM,GAAY,MAAMC,EAAI,CAChC,OAAQ,MACR,IAAK,4CAA4C,EAAQ,oBAEvD,CAAE,KAAM,GAAS,MAAMA,EAAI,CAC7B,OAAQ,MACR,IAAK,4CAA4C,EAAQ,iBAG7D,MAAO,CACH,MAAO,GAAG,EAAQ,KAAK,gCACvB,YAAa,OAAO,EAAQ,kBAC5B,MAAO,4BAA4B,EAAQ,YAC3C,KAAM,2CAA2C,IACjD,KAAM,EAAK,IAAK,GAAa,CACzB,IAAM,EAAmB,CAAC,aAAa,EAAI,OAAO,IAAK,uBAAuB,IAAI,KAAK,EAAI,kBAAkB,kBAS7G,OAPI,EAAI,cACJ,EAAiB,KAAK,iBAAiB,EAAI,gBAE3C,EAAI,iBACJ,EAAiB,KAAK,qBAAqB,EAAI,mBAG5C,CACH,MAAO,GAAG,EAAQ,KAAK,KAAK,EAAI,OAChC,OAAQ,EAAQ,UAChB,YAAa,EAAiB,KAAK,UACnC,QAAS,IAAI,KAAK,EAAI,kBACtB,KAAM,QAAQ,EAAQ,IAAI,EAAI,KAAK,IAAI,EAAI,SAC3C,KAAM,2CAA2C,EAAQ,aAAa,EAAI,KAAK,UAAU,EAAI"}