{"version":3,"file":"utils-BVxur2jL.js","names":[],"sources":["../../lib/routes/bloomberg/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport path from 'node:path';\r\nimport { destr } from 'destr';\r\n\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport got from '@/utils/got';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { art } from '@/utils/render';\r\n\r\nconst rootUrl = 'https://www.bloomberg.com/feeds';\r\nconst idSel = 'script[id^=\"article-info\"][type=\"application/json\"], script[class^=\"article-info\"][type=\"application/json\"], script#dvz-config';\r\nconst idUrl = 'https://www.bloomberg.com/article/api/story/id/';\r\n\r\nconst headers = {\r\n    accept: 'application/json',\r\n    'cache-control': 'no-cache',\r\n    referer: 'https://www.bloomberg.com',\r\n};\r\n\r\nconst apiEndpoints = {\r\n    articles: {\r\n        url: 'https://www.bloomberg.com/article/api/story/slug/',\r\n    },\r\n    features: {\r\n        // https://www.bloomberg.com/news/features/2023-08-12/boston-university-data-science-hub-is-a-textbook-example-of-jenga-architecture\r\n        url: 'https://www.bloomberg.com/article/api/story/slug/',\r\n    },\r\n    audio: {\r\n        // https://www.bloomberg.com/news/audio/2023-07-26/daybreak-deutsche-traders-outperform-as-costs-rise-podcast\r\n        url: 'https://www.bloomberg.com/news/audio/',\r\n        sel: 'script#__NEXT_DATA__',\r\n    },\r\n    videos: {\r\n        url: 'https://www.bloomberg.com/news/videos/',\r\n        sel: 'script',\r\n    },\r\n    newsletters: {\r\n        // https://www.bloomberg.com/news/newsletters/2023-07-20/key-votes-the-bloomberg-open-europe-edition\r\n        url: 'https://www.bloomberg.com/article/api/story/slug/',\r\n    },\r\n    'photo-essays': {\r\n        url: 'https://www.bloomberg.com/javelin/api/photo-essay_transporter/',\r\n        sel: 'script[type = \"application/json\"][data-component-props]',\r\n    },\r\n    'features/': {\r\n        // https://www.bloomberg.com/features/2023-stradivarius-murders/\r\n        url: 'https://www.bloomberg.com/features/',\r\n        sel: idSel,\r\n        prop: 'id',\r\n    },\r\n};\r\n\r\nconst pageTypeRegex1 = /\\/(?<page>[\\w-]*?)\\/(?<link>\\d{4}-\\d{2}-\\d{2}\\/.*)/;\r\nconst pageTypeRegex2 = /(?<!news|politics)\\/(?<page>features\\/|graphics\\/)(?<link>.*)/;\r\nconst regex = [pageTypeRegex1, pageTypeRegex2];\r\n\r\nconst capRegex = /<p>|<\\/p>/g;\r\nconst emptyRegex = /<p\\b[^>]*>(&nbsp;|\\s)<\\/p>/g;\r\n\r\nconst redirectGot = (url) =>\r\n    ofetch.raw(url, {\r\n        headers,\r\n        parseResponse: (responseText) => ({\r\n            data: destr(responseText),\r\n            body: responseText,\r\n        }),\r\n    });\r\n\r\nconst parseNewsList = async (url, ctx) => {\r\n    const resp = await got(url);\r\n    const $ = load(resp.data, {\r\n        xml: {\r\n            xmlMode: true,\r\n        },\r\n    });\r\n    const urls = $('urlset url');\r\n    return urls\r\n        .toArray()\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 50)\r\n        .map((u) => {\r\n            u = $(u);\r\n            const item = {\r\n                title: u.find(String.raw`news\\:title`).text(),\r\n                link: u.find('loc').text(),\r\n                pubDate: parseDate(u.find(String.raw`news\\:publication_date`).text()),\r\n            };\r\n            return item;\r\n        });\r\n};\r\n\r\nconst parseArticle = (item) =>\r\n    cache.tryGet(item.link, async () => {\r\n        const group = regex\r\n            .map((r) => r.exec(item.link))\r\n            .filter((e) => e && e.groups)\r\n            .map((a) => a && a.groups)[0];\r\n        if (group) {\r\n            const { page, link } = group;\r\n            if (apiEndpoints[page]) {\r\n                const api = { ...apiEndpoints[page] };\r\n                let res;\r\n\r\n                try {\r\n                    const apiUrl = `${api.url}${link}`;\r\n                    res = await redirectGot(apiUrl);\r\n                } catch (error) {\r\n                    // fallback\r\n                    if (error.name && (error.name === 'HTTPError' || error.name === 'RequestError' || error.name === 'FetchError')) {\r\n                        try {\r\n                            res = await redirectGot(item.link);\r\n                        } catch {\r\n                            // return the default one\r\n                            return {\r\n                                title: item.title,\r\n                                link: item.link,\r\n                                pubDate: item.pubDate,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Blocked by PX3, or 404 by both api and direct link, return the default\r\n                if ((res.redirected && new URL(res.url).pathname === '/tosv2.html') || res.status === 404) {\r\n                    return {\r\n                        title: item.title,\r\n                        link: item.link,\r\n                        pubDate: item.pubDate,\r\n                    };\r\n                }\r\n\r\n                switch (page) {\r\n                    case 'audio':\r\n                        return parseAudioPage(res._data, api, item);\r\n                    case 'videos':\r\n                        return parseVideoPage(res._data, api, item);\r\n                    case 'photo-essays':\r\n                        return parsePhotoEssaysPage(res._data, api, item);\r\n                    case 'features/': // single features page\r\n                        return parseReactRendererPage(res._data, api, item);\r\n                    default: // use story api to get json\r\n                        return parseStoryJson(res._data.data, item);\r\n                }\r\n            }\r\n        }\r\n        return item;\r\n    });\r\n\r\nconst parseAudioPage = async (res, api, item) => {\r\n    const audio_json = JSON.parse(load(res.data)(api.sel).html()).props.pageProps;\r\n    const episode = audio_json.episode;\r\n    const rss_item = {\r\n        title: episode.title || item.title,\r\n        link: audio_json.pageInfo.canonicalUrl || item.link,\r\n        guid: `bloomberg:${episode.id}`,\r\n        description: (await processBody(episode.articleBody, audio_json)).replaceAll(emptyRegex, ''),\r\n        pubDate: parseDate(episode.publishedAt) || item.pubDate,\r\n        author: audio_json.hero.showTitle,\r\n        media: {\r\n            content: { url: episode.image },\r\n            thumbnails: { url: episode.image },\r\n        },\r\n        enclosure_type: 'audio/mpeg',\r\n        enclosure_url: episode.url,\r\n        itunes_item_image: episode.image || audio_json.pageInfo.image.url,\r\n    };\r\n    return rss_item;\r\n};\r\n\r\nconst parseVideoPage = async (res, api, item) => {\r\n    const $ = load(res.data);\r\n    const script = $(api.sel).filter((i, el) => $(el).text().includes('__PRELOADED_STATE__'));\r\n    const json = script\r\n        .text()\r\n        .trim()\r\n        .match(/window\\.__PRELOADED_STATE__ = (.*?);/)?.[1];\r\n    const article_json = JSON.parse(json || '{}');\r\n    const video_story = article_json.video?.videoStory ?? article_json.quicktakeVideo?.videoStory;\r\n    if (video_story) {\r\n        const desc = await processVideo(video_story.video.bmmrId, video_story.summary.html.replaceAll(emptyRegex, ''));\r\n        const rss_item = {\r\n            title: video_story.headline.text || item.title,\r\n            link: video_story.url || item.link,\r\n            guid: `bloomberg:${video_story.id}`,\r\n            description: art(path.join(__dirname, 'templates/video_media.art'), desc),\r\n            pubDate: parseDate(video_story.publishedAt) || item.pubDate,\r\n            media: {\r\n                content: { url: video_story.video?.thumbnail.url || '' },\r\n                thumbnails: { url: video_story.video?.thumbnail.url || '' },\r\n            },\r\n            category: desc.keywords ?? [],\r\n        };\r\n        return rss_item;\r\n    }\r\n    return item;\r\n};\r\n\r\nconst parsePhotoEssaysPage = async (res, api, item) => {\r\n    const $ = load(res.data.html);\r\n    const article_json = {};\r\n    for (const e of $(api.sel).toArray()) {\r\n        Object.assign(article_json, JSON.parse($(e).html()));\r\n    }\r\n    const rss_item = {\r\n        title: article_json.headline || item.title,\r\n        link: article_json.canonical || item.link,\r\n        guid: `bloomberg:${article_json.id}`,\r\n        description: (await processBody(article_json.body, article_json)).replaceAll(emptyRegex, ''),\r\n        pubDate: item.pubDate,\r\n        author: article_json.authors?.map((a) => a.name).join(', ') ?? [],\r\n    };\r\n    return rss_item;\r\n};\r\n\r\nconst parseReactRendererPage = async (res, api, item) => {\r\n    const json = load(res.data)(api.sel).text().trim();\r\n    const story_id = JSON.parse(json)[api.prop];\r\n    try {\r\n        const res = await redirectGot(`${idUrl}${story_id}`);\r\n        return await parseStoryJson(res._data, item);\r\n    } catch (error) {\r\n        // fallback\r\n        if (error.name && (error.name === 'HTTPError' || error.name === 'RequestError' || error.name === 'FetchError')) {\r\n            return {\r\n                title: item.title,\r\n                link: item.link,\r\n                pubDate: item.pubDate,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nconst parseStoryJson = async (story_json, item) => {\r\n    const media_img = story_json.ledeImageUrl || Object.values(story_json.imageAttachments ?? {})[0]?.url;\r\n    const rss_item = {\r\n        title: story_json.headline || item.title,\r\n        link: story_json.url || item.link,\r\n        guid: `bloomberg:${story_json.id}`,\r\n        description: processHeadline(story_json) + (await processLedeMedia(story_json)) + (await documentToHtmlString(story_json.body || '')),\r\n        pubDate: parseDate(story_json.publishedAt) || item.pubDate,\r\n        author: story_json.authors?.map((a) => a.name).join(', ') ?? [],\r\n        category: story_json.mostRelevantTags ?? [],\r\n        media: {\r\n            content: { url: media_img },\r\n            thumbnails: { url: media_img },\r\n        },\r\n    };\r\n    return rss_item;\r\n};\r\n\r\nconst processHeadline = (story_json) => {\r\n    const dek = story_json.dek || story_json.summary || story_json.headline || '';\r\n    const abs = story_json.abstract?.map((a) => `<li>${a}</li>`).join('');\r\n    return abs ? dek + `<ul>${abs}</ul>` : dek;\r\n};\r\n\r\nconst processLedeMedia = async (story_json) => {\r\n    if (story_json.ledeMediaKind) {\r\n        const kind = story_json.ledeMediaKind;\r\n\r\n        const media = {\r\n            kind: story_json.ledeMediaKind,\r\n            caption: story_json.ledeCaption?.replaceAll(capRegex, '') ?? '',\r\n            description: story_json.ledeDescription?.replaceAll(capRegex, '') ?? '',\r\n            credit: story_json.ledeCredit?.replaceAll(capRegex, '') ?? '',\r\n            src: story_json.ledeImageUrl,\r\n            video: kind === 'video' && (await processVideo(story_json.ledeAttachment.bmmrId)),\r\n        };\r\n        return art(path.join(__dirname, 'templates/lede_media.art'), { media });\r\n    } else if (story_json.lede) {\r\n        const lede = story_json.lede;\r\n        const image = {\r\n            src: lede.url,\r\n            alt: lede.alt || lede.title,\r\n            caption: lede.caption?.replaceAll(capRegex, '') ?? '',\r\n            credit: lede.credit?.replaceAll(capRegex, '') ?? '',\r\n        };\r\n        return art(path.join(__dirname, 'templates/image_figure.art'), image);\r\n    } else if (story_json.imageAttachments) {\r\n        const attachment = Object.values(story_json.imageAttachments)[0];\r\n        if (attachment) {\r\n            const image = {\r\n                src: attachment.baseUrl || attachment.url,\r\n                alt: attachment.alt || attachment.title,\r\n                caption: attachment.caption?.replaceAll(capRegex, '') ?? '',\r\n                credit: attachment.credit?.replaceAll(capRegex, '') ?? '',\r\n            };\r\n            return art(path.join(__dirname, 'templates/image_figure.art'), image);\r\n        }\r\n        return '';\r\n    } else if (story_json.type === 'Lede') {\r\n        const props = story_json.props;\r\n\r\n        const media = {\r\n            kind: props.media,\r\n            caption: props.caption?.replaceAll(capRegex, '') ?? '',\r\n            description: props.dek?.replaceAll(capRegex, '') ?? '',\r\n            credit: props.credit?.replaceAll(capRegex, '') ?? '',\r\n            src: props.url,\r\n        };\r\n        return art(path.join(__dirname, 'templates/lede_media.art'), { media });\r\n    }\r\n};\r\n\r\nconst processBody = async (body_html, story_json) => {\r\n    const removeSel = ['meta', 'script', '*[class$=\"-footnotes\"]', '*[class$=\"for-you\"]', '*[class$=\"-newsletter\"]', '*[class$=\"page-ad\"]', '*[class$=\"-recirc\"]', '*[data-ad-placeholder=\"Advertisement\"]'];\r\n\r\n    const $ = load(body_html);\r\n    for (const sel of removeSel) {\r\n        $(sel).remove();\r\n    }\r\n    $('.paywall').removeAttr('class');\r\n\r\n    // Asynchronous iteration intentionally\r\n    // https://github.com/eslint/eslint/blob/8a159686f9d497262d573dd601855ce28362199b/tests/lib/rules/no-await-in-loop.js#L50\r\n    for await (const e of $('figure')) {\r\n        const imageType = $(e).data('image-type');\r\n        const type = $(e).data('type');\r\n\r\n        let new_figure = '';\r\n        if (imageType === 'audio') {\r\n            let audio = {};\r\n            if (story_json.audios) {\r\n                const attachment = story_json.audios.find((a) => a.id.toString() === $(e).data('id').toString());\r\n                audio = {\r\n                    img: attachment.image?.url || $(e).find('img').attr('src'),\r\n                    src: attachment.url || $(e).find('audio source').attr('src'),\r\n                    caption: $(e).find('[class$=\"text\"]').html()?.trim() ?? '',\r\n                    credit: $(e).find('[class$=\"credit\"]').html()?.trim() ?? '',\r\n                };\r\n            }\r\n            if (story_json.episode) {\r\n                const episode = story_json.episode;\r\n                audio = {\r\n                    src: episode.url,\r\n                    img: episode.image || story_json.pageInfo.image.url,\r\n\r\n                    caption: episode.description || ($(e).find('[class$=\"text\"]').html()?.trim() ?? ''),\r\n                    credit: (episode.credits.map((c) => c.name).join(', ') ?? []) || ($(e).find('[class$=\"credit\"]').html()?.trim() ?? ''),\r\n                };\r\n            }\r\n            new_figure = art(path.join(__dirname, 'templates/audio_media.art'), audio);\r\n        } else if (imageType === 'video') {\r\n            if (story_json.videoAttachments) {\r\n                const attachment = story_json.videoAttachments[$(e).data('id')];\r\n                const video = await processVideo(attachment.bmmrId);\r\n                new_figure = art(path.join(__dirname, 'templates/video_media.art'), video);\r\n            }\r\n        } else if (imageType === 'photo' || imageType === 'image' || type === 'image') {\r\n            let src, alt;\r\n            if (story_json.imageAttachments) {\r\n                const attachment = story_json.imageAttachments[$(e).data('id')];\r\n                alt = attachment?.alt || $(e).find('img').attr('alt')?.trim();\r\n                src = attachment?.baseUrl;\r\n            } else {\r\n                alt = $(e).find('img').attr('alt').trim();\r\n                src = $(e).find('img').data('native-src');\r\n            }\r\n            const caption = $(e).find('[class$=\"text\"], .caption, .photo-essay__text').html()?.trim() ?? '';\r\n            const credit = $(e).find('[class$=\"credit\"], .credit, .photo-essay__source').html()?.trim() ?? '';\r\n            const image = { src, alt, caption, credit };\r\n            new_figure = art(path.join(__dirname, 'templates/image_figure.art'), image);\r\n        }\r\n        $(new_figure).insertAfter(e);\r\n        $(e).remove();\r\n    }\r\n\r\n    return $.html();\r\n};\r\n\r\nconst processVideo = async (bmmrId, summary) => {\r\n    const api = `https://www.bloomberg.com/multimedia/api/embed?id=${bmmrId}`;\r\n    const res = await redirectGot(api);\r\n\r\n    // Blocked by PX3, return the default\r\n    if ((res.redirected && new URL(res.url).pathname === '/tosv2.html') || res.status === 404) {\r\n        return {\r\n            stream: '',\r\n            mp4: '',\r\n            coverUrl: '',\r\n            caption: summary,\r\n        };\r\n    }\r\n\r\n    if (res._data.data) {\r\n        const video_json = res._data.data;\r\n        return {\r\n            stream: video_json.streams ? video_json.streams[0]?.url : '',\r\n            mp4: video_json.downloadURLs ? video_json.downloadURLs['600'] : '',\r\n            coverUrl: video_json.thumbnail?.baseUrl ?? '',\r\n            caption: video_json.description || video_json.title || summary,\r\n        };\r\n    }\r\n    return {\r\n        stream: '',\r\n        mp4: '',\r\n        coverUrl: '',\r\n        caption: summary,\r\n    };\r\n};\r\n\r\nconst nodeRenderers = {\r\n    paragraph: async (node, nextNode) => `<p>${await nextNode(node.content)}</p>`,\r\n    text: (node) => {\r\n        const { attributes: attr, value: val } = node;\r\n        if (attr?.emphasis && attr?.strong) {\r\n            return `<strong><em>${val}</em></strong>`;\r\n        } else if (attr?.emphasis) {\r\n            return `<em>${val}</em>`;\r\n        } else if (attr?.strong) {\r\n            return `<strong>${val}</strong>`;\r\n        } else {\r\n            return val;\r\n        }\r\n    },\r\n    'inline-newsletter': async (node, nextNode) => `<div>${await nextNode(node.content)}</div>`,\r\n    'inline-recirc': async (node, nextNode) => `<div>${await nextNode(node.content)}</div>`,\r\n    heading: async (node, nextNode) => {\r\n        const nodeData = node.data;\r\n        if (nodeData.level === 2 || nodeData.level === 3) {\r\n            return `<h3>${await nextNode(node.content)}</h3>`;\r\n        }\r\n    },\r\n    link: async (node, nextNode) => {\r\n        const dest = node.data.destination;\r\n        const web = dest.web;\r\n        const bbg = dest.bbg;\r\n        const title = node.data.title;\r\n        if (web) {\r\n            return `<a href=\"${web}\" title=\"${title}\" target=\"_blank\">${await nextNode(node.content)}</a>`;\r\n        }\r\n\r\n        if (bbg && bbg.startsWith('bbg://news/stories')) {\r\n            const o = bbg.split('bbg://news/stories/').pop();\r\n            const s = 'https://www.bloomberg.com/news/terminal/'.concat(o);\r\n            return `<a href=\"${s}\" title=\"${title}\" target=\"_blank\">${await nextNode(node.content)}</a>`;\r\n        }\r\n        return String(await nextNode(node.content));\r\n    },\r\n    entity: async (node, nextNode) => {\r\n        const t = node.subType;\r\n        const linkDest = node.data.link.destination;\r\n        const web = linkDest.web;\r\n        if (t === 'person') {\r\n            return nextNode(node.content);\r\n        }\r\n        if (t === 'story') {\r\n            if (web) {\r\n                return `<a href=\"${web}\" target=\"_blank\">${await nextNode(node.content)}</a>`;\r\n            }\r\n            const a = node.data.story.identifiers.suid;\r\n            const o = 'https://www.bloomberg.com/news/terminal/'.concat(a);\r\n            return `<a href=\"${o}\" target=\"_blank\">${await nextNode(node.content)}</a>`;\r\n        }\r\n        if (t === 'security') {\r\n            const s = node.data.security.identifiers.parsekey;\r\n            if (s) {\r\n                const c = s.split(' ');\r\n                const href = [...'https://www.bloomberg.com/quote/'.concat(c[0], ':'), c[1]];\r\n                return `<a href=\"${href}\" target=\"_blank\">${await nextNode(node.content)}</a>`;\r\n            }\r\n        }\r\n        return nextNode(node.content);\r\n    },\r\n    br: () => `<br/>`,\r\n    hr: () => `<br/>`,\r\n    ad: () => {},\r\n    blockquote: async (node, nextNode) => `<blockquote>${await nextNode(node.content)}</blockquote>`,\r\n    quote: async (node, nextNode) => `<blockquote>${await nextNode(node.content)}</blockquote>`,\r\n    aside: async (node, nextNode) => `<aside>${await nextNode(node.content)}</aside>`,\r\n    list: async (node, nextNode) => {\r\n        const t = node.subType;\r\n        if (t === 'unordered') {\r\n            return `<ul>${await nextNode(node.content)}</ul>`;\r\n        }\r\n        if (t === 'ordered') {\r\n            return `<ol>${await nextNode(node.content)}</ol>`;\r\n        }\r\n    },\r\n    listItem: async (node, nextNode) => `<li>${await nextNode(node.content)}</li>`,\r\n    media: async (node) => {\r\n        const t = node.subType;\r\n        if (t === 'chart' && node.data.attachment) {\r\n            if (node.data.attachment.creator === 'TOASTER') {\r\n                const c = node.data.chart;\r\n                const e = {\r\n                    src: (c && c.fallback) || '',\r\n                    chart: node.data.attachment,\r\n                    id: (c && c.id) || '',\r\n                    alt: (c && c.alt) || '',\r\n                };\r\n                const w = e.chart;\r\n\r\n                const chart = {\r\n                    source: w.source,\r\n                    footnote: w.footnote,\r\n                    url: w.url,\r\n                    title: w.title,\r\n                    subtitle: w.subtitle,\r\n                    chartId: 'toaster-chart-'.concat(e.id),\r\n                    chartAlt: e.alt,\r\n                    fallback: e.src,\r\n                };\r\n                return art(path.join(__dirname, 'templates/chart_media.art'), { chart });\r\n            }\r\n            const image = {\r\n                alt: node.data.attachment?.footnote || '',\r\n                caption: node.data.attachment?.title + node.data.attachment.subtitle || '',\r\n                credit: node.data.attachment?.source || '',\r\n                src: node.data.chart?.fallback || '',\r\n            };\r\n            return art(path.join(__dirname, 'templates/image_figure.art'), image);\r\n        }\r\n        if (t === 'photo') {\r\n            const h = node.data;\r\n            let img = '';\r\n            if (h.attachment) {\r\n                const image = { src: h.photo?.src, alt: h.photo?.alt, caption: h.photo?.caption, credit: h.photo?.credit };\r\n                img = art(path.join(__dirname, 'templates/image_figure.art'), image);\r\n            }\r\n            if (h.link && h.link.destination && h.link.destination.web) {\r\n                const href = h.link.destination.web;\r\n                return `<a href=\"${href}\" target=\"_blank\">${img}</a>`;\r\n            }\r\n            return img;\r\n        }\r\n        if (t === 'video') {\r\n            const h = node.data;\r\n            const id = h.attachment?.id;\r\n            if (id) {\r\n                const desc = await processVideo(id, h.attachment?.title);\r\n                return art(path.join(__dirname, 'templates/video_media.art'), desc);\r\n            }\r\n        }\r\n        if (t === 'audio' && node.data.attachment) {\r\n            const B = node.data.attachment;\r\n            const P = B.title;\r\n            const D = B.url;\r\n            const M = B.image;\r\n            if (P && D) {\r\n                const audio = {\r\n                    src: D,\r\n                    img: M.url,\r\n                    caption: P,\r\n                    credit: '',\r\n                };\r\n                return art(path.join(__dirname, 'templates/audio_media.art'), audio);\r\n            }\r\n        }\r\n        return '';\r\n    },\r\n    tabularData: async (node, nextNode) => `<table>${await nextNode(node.content)}</table>`,\r\n    columns: (node) => {\r\n        const cols = node.data.definitions\r\n            .map((e) => ({\r\n                title: e.title,\r\n                span: e.colSpan || 1,\r\n                type: e.dataType,\r\n            }))\r\n            .map((e) => `<th colspan=${e.span}>${e.title}</th>`);\r\n        return `<tr>${cols}</tr>`;\r\n    },\r\n    row: async (node, nextNode) => `<tr>${await nextNode(node.content)}</tr>`,\r\n    cell: async (node, nextNode) => {\r\n        const types = { 'news-rsf-table-number': 'number', 'news-rsf-table-string': 'text' };\r\n        const cellType = types[node.data.class] || 'text';\r\n        return `<td data-coltype=${cellType} colspan=${node.data.colspan}>${await nextNode(node.content)}</td>`;\r\n    },\r\n};\r\n\r\nconst nextNode = async (nodes) => {\r\n    const nodeStr = await nodeListToHtmlString(nodes);\r\n    return nodeStr;\r\n};\r\n\r\nconst nodeToHtmlString = async (node, obj) => {\r\n    if (!node.type || !nodeRenderers[node.type]) {\r\n        return `<node>${node.type}</node>`;\r\n    }\r\n    const str = await nodeRenderers[node.type](node, nextNode, obj);\r\n    return str;\r\n};\r\n\r\nconst nodeListToHtmlString = async (nodes) => {\r\n    const res = await Promise.all(\r\n        nodes.map(async (node, index) => {\r\n            const str = await nodeToHtmlString(node, {\r\n                index,\r\n                prev: nodes[index - 1]?.type,\r\n                next: nodes[index + 1]?.type,\r\n            });\r\n            return str;\r\n        })\r\n    );\r\n    return res.join('');\r\n};\r\n\r\nconst documentToHtmlString = async (document) => {\r\n    if (!document || !document.content) {\r\n        return '';\r\n    }\r\n    const str = await nodeListToHtmlString(document.content);\r\n    return str;\r\n};\r\n\r\nexport { rootUrl, parseNewsList, parseArticle };\r\n"],"mappings":"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"}