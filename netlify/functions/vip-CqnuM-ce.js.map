{"version":3,"file":"vip-CqnuM-ce.js","names":[],"sources":["../../lib/routes/163/open/vip.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/open/vip',\r\n    categories: ['study'],\r\n    example: '/163/open/vip',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['vip.open.163.com/'],\r\n        },\r\n    ],\r\n    name: '精品课程',\r\n    maintainers: ['hoilc'],\r\n    handler,\r\n    url: 'vip.open.163.com/',\r\n};\r\n\r\nasync function handler() {\r\n    const url = 'https://vip.open.163.com';\r\n\r\n    const list_response = await got(url);\r\n    const $ = load(list_response.data);\r\n    const initialState = JSON.parse(\r\n        $('script')\r\n            .text()\r\n            .match(/window\\.__INITIAL_STATE__=(.*);\\(function\\(\\){var/)[1]\r\n    );\r\n\r\n    const list = Object.values(initialState.courseindex.myModules).flatMap((mod) =>\r\n        mod.contents.map((item) => ({\r\n            title: `${item.title} - ${item.subtitle}`,\r\n            author: item.authorName,\r\n            pubDate: parseDate(item.publishTime, 'x'),\r\n            link: `${url}/courses/${item.courseUid}/`,\r\n            courseUid: item.courseUid,\r\n            category: mod.name,\r\n        }))\r\n    );\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const {\r\n                    data: { data },\r\n                } = await got.post(`${url}/open/trade/pc/course/getCourseInfo.do`, {\r\n                    form: {\r\n                        courseUid: item.courseUid,\r\n                        version: 1,\r\n                    },\r\n                });\r\n\r\n                const $ = load(data.courseInfo.description, null, false);\r\n                $('img').each((_, img) => {\r\n                    img.attribs.src = img.attribs.src.split('?')[0];\r\n                    delete img.attribs.width;\r\n                });\r\n\r\n                item.category = [item.category, data.courseInfo.firstClassifyName, data.courseInfo.secondClassifyName];\r\n                item.description = art(path.join(__dirname, '../templates/open.art'), {\r\n                    data,\r\n                    description: $.html(),\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '网易公开课 - 精品课程',\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wdASA,MAAa,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,SACb,QAAS,gBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAGjB,KAAM,OACN,YAAa,CAAC,SACd,UACA,IAAK,qBAGT,eAAe,GAAU,CACrB,IAAM,EAAM,2BAEN,EAAgB,MAAM,EAAI,GAC1B,EAAI,EAAK,EAAc,MACvB,EAAe,KAAK,MACtB,EAAE,UACG,OACA,MAAM,qDAAqD,IAG9D,EAAO,OAAO,OAAO,EAAa,YAAY,WAAW,QAAS,GACpE,EAAI,SAAS,IAAK,IAAU,CACxB,MAAO,GAAG,EAAK,MAAM,KAAK,EAAK,WAC/B,OAAQ,EAAK,WACb,QAAS,EAAU,EAAK,YAAa,KACrC,KAAM,GAAG,EAAI,WAAW,EAAK,UAAU,GACvC,UAAW,EAAK,UAChB,SAAU,EAAI,SAIhB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CACF,KAAM,CAAE,SACR,MAAM,EAAI,KAAK,GAAG,EAAI,wCAAyC,CAC/D,KAAM,CACF,UAAW,EAAK,UAChB,QAAS,KAIX,EAAI,EAAK,EAAK,WAAW,YAAa,KAAM,IAYlD,OAXA,EAAE,OAAO,MAAM,EAAG,IAAQ,CACtB,EAAI,QAAQ,IAAM,EAAI,QAAQ,IAAI,MAAM,KAAK,GAC7C,OAAO,EAAI,QAAQ,QAGvB,EAAK,SAAW,CAAC,EAAK,SAAU,EAAK,WAAW,kBAAmB,EAAK,WAAW,oBACnF,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,+BAA+C,CAClE,OACA,YAAa,EAAE,SAGZ,MAKnB,MAAO,CACH,MAAO,eACP,KAAM,EACN,KAAM"}