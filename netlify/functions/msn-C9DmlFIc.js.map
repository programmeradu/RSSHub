{"version":3,"file":"msn-C9DmlFIc.js","names":["route: Route","ofetch","cache"],"sources":["../../lib/routes/msn/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\n\r\nconst apiKey = '0QfOX3Vn51YCzitbLaRkTTBadtWpgTN8NZLW0C1SEM';\r\nconst fetchedArticleContentHtmlImgRegex = /<img data-reference=\"image\" data-document-id=\"cms\\/api\\/amp\\/image\\/([A-Za-z0-9]+)\">/;\r\n\r\nexport const route: Route = {\r\n    path: '/:market/:name/:id',\r\n    parameters: {\r\n        market: 'Market code. Find it in MSN url, e.g. zh-tw',\r\n        name: 'Name of the channel. Find it in MSN url, e.g. Bloomberg',\r\n        id: 'ID of the channel (always starts with sr-vid). Find it in MSN url, e.g. sr-vid-08gw7ky4u229xjsjvnf4n6n7v67gxm0pjmv9fr4y2x9jjmwcri4s',\r\n    },\r\n    categories: ['traditional-media'],\r\n    example: '/zh-tw/Bloomberg/sr-vid-08gw7ky4u229xjsjvnf4n6n7v67gxm0pjmv9fr4y2x9jjmwcri4s',\r\n    description: `MSN News`,\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.msn.com/:market/channel/source/:name/:id'],\r\n            target: '/:market/:name/:id',\r\n        },\r\n    ],\r\n    name: 'News',\r\n    maintainers: ['KTachibanaM'],\r\n    handler: async (ctx) => {\r\n        const { market, name, id } = ctx.req.param();\r\n        let truncatedId = id;\r\n        if (truncatedId.startsWith('sr-')) {\r\n            truncatedId = truncatedId.slice(3);\r\n        }\r\n\r\n        const pageData = await ofetch(`https://www.msn.com/${market}/channel/source/${name}/${id}`);\r\n        const $ = load(pageData);\r\n        const headElement = $('head');\r\n        const dataClientSettings = headElement.attr('data-client-settings') ?? '{}';\r\n        const parsedSettings = JSON.parse(dataClientSettings);\r\n        const requestMuid = parsedSettings.fd_muid;\r\n\r\n        const jsonData = await ofetch(`https://assets.msn.com/service/news/feed/pages/providerfullpage?market=${market}&query=newest&CommunityProfileId=${truncatedId}&apikey=${apiKey}&user=m-${requestMuid}`);\r\n        const items = await Promise.all(\r\n            jsonData.sections[0].cards.map(async (card) => {\r\n                let articleContentHtml = '';\r\n\r\n                const articleUrl = card.url;\r\n                const parsedArticleUrl = URL.parse(articleUrl);\r\n                let articleId = parsedArticleUrl?.pathname.split('/').pop();\r\n                if (articleId?.startsWith('ar-')) {\r\n                    articleId = articleId.slice(3);\r\n                    const fetchedArticleContentHtml = (await cache.tryGet(articleId, async () => {\r\n                        const articleData = await ofetch(`https://assets.msn.com/content/view/v2/Detail/${market}/${articleId}`);\r\n                        return articleData.body;\r\n                    })) as string;\r\n                    articleContentHtml = fetchedArticleContentHtml.replace(fetchedArticleContentHtmlImgRegex, '<img src=\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/$1.img\">');\r\n                }\r\n\r\n                return {\r\n                    title: card.title,\r\n                    link: articleUrl,\r\n                    description: card.abstract,\r\n                    content: {\r\n                        html: articleContentHtml,\r\n                    },\r\n                    pubDate: parseDate(card.publishedDateTime),\r\n                    category: [card.category],\r\n                };\r\n            })\r\n        );\r\n\r\n        const channelLink = `https://www.msn.com/${market}/channel/source/${name}/${id}`;\r\n        return {\r\n            title: name,\r\n            image: 'https://www.msn.com/favicon.ico',\r\n            link: channelLink,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"mTAMA,MACM,EAAoC,uFAE7BA,EAAe,CACxB,KAAM,qBACN,WAAY,CACR,OAAQ,8CACR,KAAM,0DACN,GAAI,uIAER,WAAY,CAAC,qBACb,QAAS,+EACT,YAAa,WACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,IAElB,MAAO,CACH,CACI,OAAQ,CAAC,gDACT,OAAQ,uBAGhB,KAAM,OACN,YAAa,CAAC,eACd,QAAS,KAAO,IAAQ,CACpB,GAAM,CAAE,SAAQ,OAAM,MAAO,EAAI,IAAI,QACjC,EAAc,EACd,EAAY,WAAW,SACvB,EAAc,EAAY,MAAM,IAGpC,IAAM,EAAW,MAAMC,EAAO,uBAAuB,EAAO,kBAAkB,EAAK,GAAG,KAChF,EAAI,EAAK,GACT,EAAc,EAAE,QAChB,EAAqB,EAAY,KAAK,yBAA2B,KACjE,EAAiB,KAAK,MAAM,GAC5B,EAAc,EAAe,QAE7B,EAAW,MAAMA,EAAO,0EAA0E,EAAO,mCAAmC,EAAY,4DAA2B,KACnL,EAAQ,MAAM,QAAQ,IACxB,EAAS,SAAS,GAAG,MAAM,IAAI,KAAO,IAAS,CAC3C,IAAI,EAAqB,GAEnB,EAAa,EAAK,IAClB,EAAmB,IAAI,MAAM,GAC/B,EAAY,GAAkB,SAAS,MAAM,KAAK,MACtD,GAAI,GAAW,WAAW,OAAQ,CAC9B,EAAY,EAAU,MAAM,GAC5B,IAAM,EAA6B,MAAMC,EAAM,OAAO,EAAW,SAAY,CACzE,IAAM,EAAc,MAAMD,EAAO,iDAAiD,EAAO,GAAG,KAC5F,OAAO,EAAY,OAEvB,EAAqB,EAA0B,QAAQ,EAAmC,8EAG9F,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EACN,YAAa,EAAK,SAClB,QAAS,CACL,KAAM,GAEV,QAAS,EAAU,EAAK,mBACxB,SAAU,CAAC,EAAK,cAKtB,EAAc,uBAAuB,EAAO,kBAAkB,EAAK,GAAG,IAC5E,MAAO,CACH,MAAO,EACP,MAAO,kCACP,KAAM,EACN,KAAM"}