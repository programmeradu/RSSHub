{"version":3,"file":"notifications-zUvywUBR.js","names":["route: Route","ConfigNotFoundError","ofetch"],"sources":["../../lib/routes/github/notifications.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst apiUrl = 'https://api.github.com';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/notifications',\r\n    categories: ['programming'],\r\n    example: '/github/notifications',\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'GITHUB_ACCESS_TOKEN',\r\n                description: '',\r\n            },\r\n        ],\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/notifications'],\r\n        },\r\n    ],\r\n    name: 'Notifications',\r\n    maintainers: ['zhzy0077'],\r\n    handler,\r\n    url: 'github.com/notifications',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    if (!config.github || !config.github.access_token) {\r\n        throw new ConfigNotFoundError('GitHub trending RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n    const headers = {\r\n        Accept: 'application/vnd.github.v3+json',\r\n        Authorization: `Bearer ${config.github.access_token}`,\r\n        'X-GitHub-Api-Version': '2022-11-28',\r\n    };\r\n\r\n    const response = await ofetch.raw(`${apiUrl}/notifications`, {\r\n        headers,\r\n    });\r\n    const notifications = response._data;\r\n\r\n    const items = notifications.map((item) => {\r\n        let originUrl = item.subject.url ? item.subject.url.replace('https://api.github.com/repos/', 'https://github.com/') : 'https://github.com/notifications';\r\n        if (originUrl.includes('/releases/')) {\r\n            originUrl = originUrl.replace(/\\/releases\\/\\d+$/, '/releases');\r\n        }\r\n        return {\r\n            title: item.subject.title,\r\n            description: item.subject.title,\r\n            pubDate: parseDate(item.updated_at), // item.updated_at follows ISO 8601.\r\n            guid: item.id,\r\n            link: originUrl,\r\n        };\r\n    });\r\n\r\n    ctx.set('json', {\r\n        title: 'Github Notifications',\r\n        item: notifications,\r\n        rateLimit: {\r\n            limit: Number.parseInt(response.headers['x-ratelimit-limit']),\r\n            remaining: Number.parseInt(response.headers['x-ratelimit-remaining']),\r\n            reset: parseDate(Number.parseInt(response.headers['x-ratelimit-reset']), 'X'),\r\n            resoure: response.headers['x-ratelimit-resource'],\r\n            used: Number.parseInt(response.headers['x-ratelimit-used']),\r\n        },\r\n    });\r\n\r\n    return {\r\n        title: 'Github Notifications',\r\n        link: 'https://github.com/notifications',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"2TAIA,MAIaA,EAAe,CACxB,KAAM,iBACN,WAAY,CAAC,eACb,QAAS,wBACT,SAAU,CACN,cAAe,CACX,CACI,KAAM,sBACN,YAAa,MAIzB,MAAO,CACH,CACI,OAAQ,CAAC,8BAGjB,KAAM,gBACN,YAAa,CAAC,YACd,UACA,IAAK,4BAGT,eAAe,EAAQ,EAAK,CACxB,GAAI,CAAC,EAAO,QAAU,CAAC,EAAO,OAAO,aACjC,MAAM,IAAIC,EAAoB,wJAElC,IAAM,EAAU,CACZ,OAAQ,iCACR,cAAe,UAAU,EAAO,OAAO,eACvC,uBAAwB,cAGtB,EAAW,MAAMC,EAAO,IAAI,uCAA2B,CACzD,YAEE,EAAgB,EAAS,MAEzB,EAAQ,EAAc,IAAK,GAAS,CACtC,IAAI,EAAY,EAAK,QAAQ,IAAM,EAAK,QAAQ,IAAI,QAAQ,gCAAiC,uBAAyB,mCAItH,OAHI,EAAU,SAAS,gBACnB,EAAY,EAAU,QAAQ,mBAAoB,cAE/C,CACH,MAAO,EAAK,QAAQ,MACpB,YAAa,EAAK,QAAQ,MAC1B,QAAS,EAAU,EAAK,YACxB,KAAM,EAAK,GACX,KAAM,KAgBd,OAZA,EAAI,IAAI,OAAQ,CACZ,MAAO,uBACP,KAAM,EACN,UAAW,CACP,MAAO,OAAO,SAAS,EAAS,QAAQ,sBACxC,UAAW,OAAO,SAAS,EAAS,QAAQ,0BAC5C,MAAO,EAAU,OAAO,SAAS,EAAS,QAAQ,sBAAuB,KACzE,QAAS,EAAS,QAAQ,wBAC1B,KAAM,OAAO,SAAS,EAAS,QAAQ,wBAIxC,CACH,MAAO,uBACP,KAAM,mCACN,KAAM"}