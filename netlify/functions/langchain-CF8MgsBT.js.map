{"version":3,"file":"langchain-CF8MgsBT.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/langchain/index.ts"],"sourcesContent":["import { Route, DataItem } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['blog'],\r\n    example: '/langchain/blog',\r\n    radar: [\r\n        {\r\n            source: ['blog.langchain.dev/'],\r\n        },\r\n    ],\r\n    url: 'blog.langchain.dev/',\r\n    name: 'Blog',\r\n    maintainers: ['liyaozhong'],\r\n    handler,\r\n    description: 'LangChain Blog Posts',\r\n};\r\n\r\nasync function handler() {\r\n    const rootUrl = 'https://blog.langchain.dev';\r\n    const currentUrl = rootUrl;\r\n\r\n    const response = await got(currentUrl);\r\n    const $ = load(response.data);\r\n\r\n    const items = await Promise.all(\r\n        $('.posts-feed .post-card')\r\n            .toArray()\r\n            .map((item) => {\r\n                const $item = $(item);\r\n                const $link = $item.find('.post-card__content-link').first();\r\n\r\n                const href = $link.attr('href');\r\n                const title = $item.find('.post-card__title').text().trim();\r\n                const excerpt = $item.find('.post-card__excerpt').text().trim();\r\n\r\n                if (!href || !title) {\r\n                    return null;\r\n                }\r\n\r\n                const link = new URL(href, rootUrl).href;\r\n\r\n                return {\r\n                    title,\r\n                    description: excerpt,\r\n                    link,\r\n                } as DataItem;\r\n            })\r\n            .filter((item): item is DataItem => item !== null)\r\n            .map((item) =>\r\n                cache.tryGet(item.link as string, async () => {\r\n                    try {\r\n                        const detailResponse = await got(item.link);\r\n                        const $detail = load(detailResponse.data);\r\n\r\n                        item.description = $detail('.article-content').html() || item.description;\r\n\r\n                        return item as DataItem;\r\n                    } catch {\r\n                        return item;\r\n                    }\r\n                })\r\n            )\r\n    );\r\n\r\n    return {\r\n        title: 'LangChain Blog',\r\n        link: rootUrl,\r\n        item: items.filter((item): item is DataItem => item !== null),\r\n    };\r\n}\r\n"],"mappings":"mTAKA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,kBACT,MAAO,CACH,CACI,OAAQ,CAAC,yBAGjB,IAAK,sBACL,KAAM,OACN,YAAa,CAAC,cACd,UACA,YAAa,wBAGjB,eAAe,GAAU,CACrB,IAAM,EAAU,6BAGV,EAAW,MAAMC,EAAI,8BACrB,EAAI,EAAK,EAAS,MAElB,EAAQ,MAAM,QAAQ,IACxB,EAAE,0BACG,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,4BAA4B,QAE/C,EAAO,EAAM,KAAK,QAClB,EAAQ,EAAM,KAAK,qBAAqB,OAAO,OAC/C,EAAU,EAAM,KAAK,uBAAuB,OAAO,OAEzD,GAAI,CAAC,GAAQ,CAAC,EACV,OAAO,KAGX,IAAM,EAAO,IAAI,IAAI,EAAM,GAAS,KAEpC,MAAO,CACH,QACA,YAAa,EACb,UAGP,OAAQ,GAA2B,IAAS,MAC5C,IAAK,GACFC,EAAM,OAAO,EAAK,KAAgB,SAAY,CAC1C,GAAI,CACA,IAAM,EAAiB,MAAMD,EAAI,EAAK,MAChC,EAAU,EAAK,EAAe,MAIpC,MAFA,GAAK,YAAc,EAAQ,oBAAoB,QAAU,EAAK,YAEvD,OACH,CACJ,OAAO,OAM3B,MAAO,CACH,MAAO,iBACP,KAAM,EACN,KAAM,EAAM,OAAQ,GAA2B,IAAS"}