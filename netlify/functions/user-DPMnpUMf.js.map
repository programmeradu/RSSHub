{"version":3,"file":"user-DPMnpUMf.js","names":[],"sources":["../../lib/routes/gettr/user.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst actionMap = {\r\n    pub_pst: 'Published a post: ',\r\n    shares_cm: 'Shared a comment: ',\r\n    shares_pst: 'Shared a post: ',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/user/:id',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/gettr/user/jasonmillerindc',\r\n    parameters: { id: 'User id' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gettr.com/user/:id'],\r\n        },\r\n    ],\r\n    name: 'User timeline',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://gettr.com';\r\n    const apiHost = 'https://api.gettr.com';\r\n    const mediaHost = 'https://media.gettr.com';\r\n    const id = ctx.req.param('id');\r\n\r\n    const { data: posts } = await got(`${apiHost}/u/user/${id}/posts`, {\r\n        // headers: {\r\n        //     version: '2.7.0',\r\n        //     'x-app-auth': '{\"user\": null, \"token\": null}',\r\n        // },\r\n        searchParams: {\r\n            offset: 0,\r\n            max: 20,\r\n            dir: 'fwd',\r\n            incl: 'posts|stats|userinfo|shared|liked|pvotes',\r\n            fp: 'f_uo',\r\n        },\r\n    });\r\n    const userInfo = posts.result.aux.uinf[id];\r\n\r\n    const items = posts.result.data.list.map((post) => {\r\n        const title = posts.result.aux.post[post.activity.pstid].txt;\r\n        const description = art(path.join(__dirname, 'templates/post.art'), {\r\n            post: posts.result.aux.post[post.activity.pstid],\r\n            mediaHost,\r\n        });\r\n        return {\r\n            title: `${actionMap[post.action]} ${title}`,\r\n            description,\r\n            pubDate: parseDate(post.cdate),\r\n            updated: parseDate(post.udate),\r\n            link: `${baseUrl}/post/${post.activity.pstid}`,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: `${userInfo.nickname} on Gettr`,\r\n        description: userInfo.dsc,\r\n        link: `${baseUrl}/user/${id}`,\r\n        image: `${mediaHost}/${userInfo.ico}`,\r\n        language: 'en',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"obAOA,MAAM,EAAY,CACd,QAAS,qBACT,UAAW,qBACX,WAAY,mBAGH,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,gBACb,KAAM,EAAS,YACf,QAAS,8BACT,WAAY,CAAE,GAAI,WAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBAGjB,KAAM,gBACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,oBAEV,EAAY,0BACZ,EAAK,EAAI,IAAI,MAAM,MAEnB,CAAE,KAAM,GAAU,MAAM,EAAI,gCAAqB,EAAG,QAAS,CAK/D,aAAc,CACV,OAAQ,EACR,IAAK,GACL,IAAK,MACL,KAAM,2CACN,GAAI,UAGN,EAAW,EAAM,OAAO,IAAI,KAAK,GAEjC,EAAQ,EAAM,OAAO,KAAK,KAAK,IAAK,GAAS,CAC/C,IAAM,EAAQ,EAAM,OAAO,IAAI,KAAK,EAAK,SAAS,OAAO,IACnD,EAAc,EAAI,EAAA,KAAA,EAAA,+BAA4C,CAChE,KAAM,EAAM,OAAO,IAAI,KAAK,EAAK,SAAS,OAC1C,cAEJ,MAAO,CACH,MAAO,GAAG,EAAU,EAAK,QAAQ,GAAG,IACpC,cACA,QAAS,EAAU,EAAK,OACxB,QAAS,EAAU,EAAK,OACxB,KAAM,GAAG,EAAQ,QAAQ,EAAK,SAAS,WAI/C,MAAO,CACH,MAAO,GAAG,EAAS,SAAS,WAC5B,YAAa,EAAS,IACtB,KAAM,GAAG,EAAQ,QAAQ,IACzB,MAAO,GAAG,EAAU,GAAG,EAAS,MAChC,SAAU,KACV,KAAM"}