{"version":3,"file":"cuilingmag-By6UGy7Z.js","names":[],"sources":["../../lib/routes/cuilingmag/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx) => {\r\n    const { category } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 12;\r\n\r\n    const rootUrl = 'https://www.cuilingmag.com';\r\n    const currentUrl = new URL(category ? `category/${category}` : '', rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    const language = $('html').prop('lang');\r\n\r\n    let items = $('div.new-list-div, div.item')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const title = item.find('h3.new-list-h3, h3.title-font').first().text().trim();\r\n\r\n            const src = item.find('img').first().prop('src');\r\n            const image = src ? new URL(src, rootUrl).href : undefined;\r\n\r\n            const description = art(path.join(__dirname, 'templates/description.art'), {\r\n                images: image\r\n                    ? [\r\n                          {\r\n                              src: image,\r\n                              alt: title,\r\n                          },\r\n                      ]\r\n                    : undefined,\r\n            });\r\n\r\n            return {\r\n                title,\r\n                description,\r\n                link: new URL(item.find('a').first().prop('href'), rootUrl).href,\r\n                author: item.find('a.new-list-p, div.author').text().trim(),\r\n                image,\r\n                banner: image,\r\n                language,\r\n                enclosure_url: image,\r\n                enclosure_type: image ? `image/${image.split(/\\./).pop()}` : undefined,\r\n                enclosure_title: title,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const $$ = load(detailResponse);\r\n\r\n                const title = `${$$('p.title-font').text().trim()} ${$$('p.subtitle-font').text().trim()}`;\r\n\r\n                const src = $$('div.banner img').first().prop('src');\r\n                const banner = src ? new URL(src, rootUrl).href : undefined;\r\n\r\n                const description =\r\n                    item.description +\r\n                    art(path.join(__dirname, 'templates/description.art'), {\r\n                        images: banner\r\n                            ? [\r\n                                  {\r\n                                      src: banner,\r\n                                      alt: title,\r\n                                  },\r\n                              ]\r\n                            : undefined,\r\n                        description: $$('div.article-content').html(),\r\n                    });\r\n\r\n                item.title = title;\r\n                item.description = description;\r\n                item.pubDate = parseDate($$('p.time').first().text());\r\n                item.category = [\r\n                    ...new Set([\r\n                        ...$$('p.sort a')\r\n                            .toArray()\r\n                            .map((c) => $$(c).text().trim()),\r\n                        ...$$('span.type')\r\n                            .toArray()\r\n                            .map((c) => $$(c).text().trim()),\r\n                    ]),\r\n                ].filter(Boolean);\r\n                item.author = $$('p.author a')\r\n                    .toArray()\r\n                    .map((a) => $$(a).contents().first().text().trim())\r\n                    .join('/');\r\n                item.content = {\r\n                    html: description,\r\n                    text: $$('div.article-content').text(),\r\n                };\r\n                item.banner = banner;\r\n                item.language = language;\r\n                item.enclosure_url = banner ?? item.enclosure_url;\r\n                item.enclosure_type = banner ? `image/${banner.split(/\\./).pop()}` : item.enclosure_type;\r\n                item.enclosure_title = title;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const title = $('title').text().trim();\r\n    const image = new URL($('div.nav-logo a img').prop('src'), rootUrl).href;\r\n\r\n    return {\r\n        title,\r\n        description: $('meta[property=\"og:description\"]').prop('content'),\r\n        link: currentUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image,\r\n        author: title.split(/-/).pop(),\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:category?',\r\n    name: '分类',\r\n    url: 'cuilingmag.com',\r\n    categories: ['new-media'],\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/cuilingmag',\r\n    parameters: { category: '分类，默认为空，即全部，可在对应分类页 URL 中找到' },\r\n    description: `::: tip\r\n  若订阅 [#哲学·文明](https://www.cuilingmag.com/category/philosophy_civilization)，网址为 \\`https://www.cuilingmag.com/category/philosophy_civilization\\`。截取 \\`https://www.cuilingmag.com/category\\` 到末尾的部分 \\`philosophy_civilization\\` 作为参数填入，此时路由为 [\\`/cuilingmag/philosophy_civilization\\`](https://rsshub.app/cuilingmag/philosophy_civilization)。\r\n:::\r\n\r\n| 分类                                                                       | ID                                                                                |\r\n| -------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |\r\n| [哲学 · 文明](https://www.cuilingmag.com/category/philosophy_civilization) | [philosophy_civilization](https://rsshub.app/cuilingmag/philosophy_civilization) |\r\n| [艺术 · 科技](https://www.cuilingmag.com/category/art_science)             | [art_science](https://rsshub.app/cuilingmag/art_science)                         |\r\n| [未来 · 生命](https://www.cuilingmag.com/category/future_life)             | [future_life](https://rsshub.app/cuilingmag/future_life)                         |\r\n| [行星智慧](https://www.cuilingmag.com/category/planetary_wisdom)           | [planetary_wisdom](https://rsshub.app/cuilingmag/planetary_wisdom)               |\r\n| [数字治理](https://www.cuilingmag.com/category/digital_governance)         | [digital_governance](https://rsshub.app/cuilingmag/digital_governance)           |\r\n| [Noema精选](https://www.cuilingmag.com/category/selected_noema)            | [selected_noema](https://rsshub.app/cuilingmag/selected_noema)                   |\r\n  `,\r\n\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['cuilingmag.com/category/:category'],\r\n            target: (params) => {\r\n                const category = params.category;\r\n\r\n                return `/cuilingmag${category ? `/${category}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '全部',\r\n            source: ['cuilingmag.com'],\r\n            target: '/',\r\n        },\r\n        {\r\n            title: '哲学 · 文明',\r\n            source: ['cuilingmag.com/category/philosophy_civilization'],\r\n            target: '/philosophy_civilization',\r\n        },\r\n        {\r\n            title: '艺术 · 科技',\r\n            source: ['cuilingmag.com/category/art_science'],\r\n            target: '/art_science',\r\n        },\r\n        {\r\n            title: '未来 · 生命',\r\n            source: ['cuilingmag.com/category/future_life'],\r\n            target: '/future_life',\r\n        },\r\n        {\r\n            title: '行星智慧',\r\n            source: ['cuilingmag.com/category/planetary_wisdom'],\r\n            target: '/planetary_wisdom',\r\n        },\r\n        {\r\n            title: '数字治理',\r\n            source: ['cuilingmag.com/category/digital_governance'],\r\n            target: '/digital_governance',\r\n        },\r\n        {\r\n            title: 'Noema精选',\r\n            source: ['cuilingmag.com/category/selected_noema'],\r\n            target: '/selected_noema',\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"wdASA,MAAa,EAAU,KAAO,IAAQ,CAClC,GAAM,CAAE,YAAa,EAAI,IAAI,QACvB,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,6BACV,EAAa,IAAI,IAAI,EAAW,YAAY,IAAa,GAAI,GAAS,KAEtE,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAI,EAAK,GAET,EAAW,EAAE,QAAQ,KAAK,QAE5B,EAAQ,EAAE,8BACT,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,iCAAiC,QAAQ,OAAO,OAElE,EAAM,EAAK,KAAK,OAAO,QAAQ,KAAK,OACpC,EAAQ,EAAM,IAAI,IAAI,EAAK,GAAS,KAAO,IAAA,GAE3C,EAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACvE,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,KAGV,MAAO,CACH,MAAA,EACA,cACA,KAAM,IAAI,IAAI,EAAK,KAAK,KAAK,QAAQ,KAAK,QAAS,GAAS,KAC5D,OAAQ,EAAK,KAAK,4BAA4B,OAAO,OACrD,MAAA,EACA,OAAQ,EACR,WACA,cAAe,EACf,eAAgB,EAAQ,SAAS,EAAM,MAAM,MAAM,QAAU,IAAA,GAC7D,gBAAiB,KAI7B,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAM,EAAI,EAAK,MAE1C,EAAK,EAAK,GAEV,EAAQ,GAAG,EAAG,gBAAgB,OAAO,OAAO,GAAG,EAAG,mBAAmB,OAAO,SAE5E,EAAM,EAAG,kBAAkB,QAAQ,KAAK,OACxC,EAAS,EAAM,IAAI,IAAI,EAAK,GAAS,KAAO,IAAA,GAE5C,EACF,EAAK,YACL,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACnD,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,GACN,YAAa,EAAG,uBAAuB,SA8B/C,MA3BA,GAAK,MAAQ,EACb,EAAK,YAAc,EACnB,EAAK,QAAU,EAAU,EAAG,UAAU,QAAQ,QAC9C,EAAK,SAAW,CACZ,GAAG,IAAI,IAAI,CACP,GAAG,EAAG,YACD,UACA,IAAK,GAAM,EAAG,GAAG,OAAO,QAC7B,GAAG,EAAG,aACD,UACA,IAAK,GAAM,EAAG,GAAG,OAAO,WAEnC,OAAO,SACT,EAAK,OAAS,EAAG,cACZ,UACA,IAAK,GAAM,EAAG,GAAG,WAAW,QAAQ,OAAO,QAC3C,KAAK,KACV,EAAK,QAAU,CACX,KAAM,EACN,KAAM,EAAG,uBAAuB,QAEpC,EAAK,OAAS,EACd,EAAK,SAAW,EAChB,EAAK,cAAgB,GAAU,EAAK,cACpC,EAAK,eAAiB,EAAS,SAAS,EAAO,MAAM,MAAM,QAAU,EAAK,eAC1E,EAAK,gBAAkB,EAEhB,MAKnB,IAAM,EAAQ,EAAE,SAAS,OAAO,OAC1B,EAAQ,IAAI,IAAI,EAAE,sBAAsB,KAAK,OAAQ,GAAS,KAEpE,MAAO,CACH,QACA,YAAa,EAAE,mCAAmC,KAAK,WACvD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,QACA,OAAQ,EAAM,MAAM,KAAK,MACzB,aAIK,EAAe,CACxB,KAAM,cACN,KAAM,KACN,IAAK,iBACL,WAAY,CAAC,aACb,YAAa,CAAC,WACd,UACA,QAAS,cACT,WAAY,CAAE,SAAU,+BACxB,YAAa;;;;;;;;;;;;IAcb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qCACT,OAAS,GAAW,CAChB,IAAM,EAAW,EAAO,SAExB,MAAO,cAAc,EAAW,IAAI,IAAa,OAGzD,CACI,MAAO,KACP,OAAQ,CAAC,kBACT,OAAQ,KAEZ,CACI,MAAO,UACP,OAAQ,CAAC,mDACT,OAAQ,4BAEZ,CACI,MAAO,UACP,OAAQ,CAAC,uCACT,OAAQ,gBAEZ,CACI,MAAO,UACP,OAAQ,CAAC,uCACT,OAAQ,gBAEZ,CACI,MAAO,OACP,OAAQ,CAAC,4CACT,OAAQ,qBAEZ,CACI,MAAO,OACP,OAAQ,CAAC,8CACT,OAAQ,uBAEZ,CACI,MAAO,UACP,OAAQ,CAAC,0CACT,OAAQ"}