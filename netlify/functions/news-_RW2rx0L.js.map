{"version":3,"file":"news-_RW2rx0L.js","names":["route: Route","cache","got","item"],"sources":["../../lib/routes/qbittorrent/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/news',\r\n    categories: ['program-update'],\r\n    example: '/qbittorrent/news',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['qbittorrent.org/news.php', 'qbittorrent.org/'],\r\n        },\r\n    ],\r\n    name: 'News',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'qbittorrent.org/news.php',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://www.qbittorrent.org';\r\n\r\n    const response = await cache.tryGet(\r\n        `${baseUrl}/news.php`,\r\n        async () =>\r\n            (\r\n                await got(`${baseUrl}/news.php`, {\r\n                    headers: {\r\n                        Referer: baseUrl,\r\n                    },\r\n                })\r\n            ).data,\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    const $ = load(response);\r\n\r\n    const item = $('.stretcher')\r\n        .find('h3')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const pubDate = item\r\n                .text()\r\n                .split(' - ')[0]\r\n                .replace(/\\w{3,6}day/, '');\r\n            const title = item.text().split(' - ')[1];\r\n            let description = '';\r\n            // nextUntil() does not work here\r\n            while (item.next().length && item.next().get(0).tagName !== 'h3') {\r\n                item = item.next();\r\n                description += item.html();\r\n            }\r\n            return {\r\n                title,\r\n                description,\r\n                pubDate: parseDate(pubDate, 'MMMM D YYYY'),\r\n            };\r\n        });\r\n\r\n    const ret = {\r\n        title: 'qBittorrent News',\r\n        link: `${baseUrl}/news.php`,\r\n        item,\r\n    };\r\n\r\n    ctx.set('json', ret);\r\n    return ret;\r\n}\r\n"],"mappings":"yXAOA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,kBACb,QAAS,oBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BAA4B,sBAG7C,KAAM,OACN,YAAa,CAAC,UACd,UACA,IAAK,4BAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,8BAEV,EAAW,MAAMC,EAAM,OACzB,GAAG,EAAQ,WACX,UAEQ,MAAMC,EAAI,GAAG,EAAQ,WAAY,CAC7B,QAAS,CACL,QAAS,MAGnB,KACN,EAAO,MAAM,YACb,IAGE,EAAI,EAAK,GAET,EAAO,EAAE,cACV,KAAK,MACL,UACA,IAAK,GAAS,CACX,EAAO,EAAEC,GACT,IAAM,EAAUA,EACX,OACA,MAAM,OAAO,GACb,QAAQ,aAAc,IACrB,EAAQA,EAAK,OAAO,MAAM,OAAO,GACnC,EAAc,GAElB,KAAOA,EAAK,OAAO,QAAUA,EAAK,OAAO,IAAI,GAAG,UAAY,MACxD,EAAOA,EAAK,OACZ,GAAeA,EAAK,OAExB,MAAO,CACH,QACA,cACA,QAAS,EAAU,EAAS,kBAIlC,EAAM,CACR,MAAO,mBACP,KAAM,GAAG,EAAQ,WACjB,QAIJ,OADA,EAAI,IAAI,OAAQ,GACT"}