{"version":3,"file":"user-Dgk0GMCu.js","names":["InvalidParameterError","route: Route"],"sources":["../../lib/routes/mixi2/user.ts"],"sourcesContent":["import { type Data, type Route, ViewType } from '@/types';\r\nimport type { Context } from 'hono';\r\nimport { CONFIG_OPTIONS, getClient, parsePost, postFilter } from './utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\nconst handler = async (ctx: Context) => {\r\n    const limit = Number.parseInt(ctx.req.query('limit') ?? '20', 10);\r\n    const name = ctx.req.param('name');\r\n    const mediaOnly = ctx.req.param('media') === 'media';\r\n\r\n    if (!name.startsWith('@')) {\r\n        throw new InvalidParameterError('ユーザー名は@で始まる必要があります');\r\n    }\r\n\r\n    const client = getClient();\r\n\r\n    const userInfo = await client.getPersonaByName({\r\n        name: name.slice(1),\r\n    });\r\n\r\n    const persona = userInfo.persona;\r\n\r\n    const data = await client.getPersonalTimeline({\r\n        personaId: persona?.personaId,\r\n        limit,\r\n        mediaOnly,\r\n    });\r\n\r\n    return {\r\n        title: `${persona?.name} - ${mediaOnly ? 'メディア' : 'ポスト'}`,\r\n        image: persona?.avatarUrl,\r\n        item:\r\n            data?.posts?.filter(postFilter).map((post) => ({\r\n                title: `@${persona?.name}`,\r\n                description: parsePost(post),\r\n                pubDate: parseDate(post.createdAt.seconds * 1e3),\r\n                guid: post.postId,\r\n                author: persona?.name,\r\n                link: `https://mixi.social/@${persona?.name}/posts/${post.postId}`,\r\n            })) ?? [],\r\n    } as Data;\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/user/:name/:media?',\r\n    name: 'ユーザー',\r\n    categories: ['social-media'],\r\n    example: '/mixi2/user/@deyo',\r\n    parameters: {\r\n        name: {\r\n            description: '@で始まるユーザー名',\r\n        },\r\n        media: {\r\n            description: '`media`を入力するとメディアを含むポストのみを取得、デフォルトは空で全てのポストを取得',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: CONFIG_OPTIONS,\r\n        supportRadar: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['mixi.social/:id'],\r\n            target: '/user/:id',\r\n            title: 'ユーザー - ポスト',\r\n        },\r\n        {\r\n            source: ['mixi.social/:id'],\r\n            target: '/user/:id/media',\r\n            title: 'ユーザー - メディア',\r\n        },\r\n    ],\r\n    view: ViewType.SocialMedia,\r\n    handler,\r\n    maintainers: ['KarasuShin'],\r\n};\r\n"],"mappings":"4cAMA,MAAM,EAAU,KAAO,IAAiB,CACpC,IAAM,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IACxD,EAAO,EAAI,IAAI,MAAM,QACrB,EAAY,EAAI,IAAI,MAAM,WAAa,QAE7C,GAAI,CAAC,EAAK,WAAW,KACjB,MAAM,IAAIA,EAAsB,sBAGpC,IAAM,EAAS,IAET,EAAW,MAAM,EAAO,iBAAiB,CAC3C,KAAM,EAAK,MAAM,KAGf,EAAU,EAAS,QAEnB,EAAO,MAAM,EAAO,oBAAoB,CAC1C,UAAW,GAAS,UACpB,QACA,cAGJ,MAAO,CACH,MAAO,GAAG,GAAS,KAAK,KAAK,EAAY,OAAS,QAClD,MAAO,GAAS,UAChB,KACI,GAAM,OAAO,OAAO,GAAY,IAAK,IAAU,CAC3C,MAAO,IAAI,GAAS,OACpB,YAAa,EAAU,GACvB,QAAS,EAAU,EAAK,UAAU,QAAU,KAC5C,KAAM,EAAK,OACX,OAAQ,GAAS,KACjB,KAAM,wBAAwB,GAAS,KAAK,SAAS,EAAK,aACvD,KAINC,EAAe,CACxB,KAAM,sBACN,KAAM,OACN,WAAY,CAAC,gBACb,QAAS,oBACT,WAAY,CACR,KAAM,CACF,YAAa,cAEjB,MAAO,CACH,YAAa,mDAGrB,SAAU,CACN,cAAe,EACf,aAAc,IAElB,MAAO,CACH,CACI,OAAQ,CAAC,mBACT,OAAQ,YACR,MAAO,cAEX,CACI,OAAQ,CAAC,mBACT,OAAQ,kBACR,MAAO,gBAGf,KAAM,EAAS,YACf,UACA,YAAa,CAAC"}