{"version":3,"file":"comments-D76m7MIW.js","names":["MarkdownIt","route: Route","ofetch"],"sources":["../../lib/routes/github/comments.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport MarkdownIt from 'markdown-it';\r\nconst md = MarkdownIt({\r\n    html: true,\r\n});\r\nconst rootUrl = 'https://github.com';\r\nconst apiUrl = 'https://api.github.com';\r\nimport { config } from '@/config';\r\nconst typeDict = {\r\n    issue: {\r\n        title: 'Issue',\r\n    },\r\n    issues: {\r\n        title: 'Issue',\r\n    },\r\n    pull: {\r\n        title: 'Pull request',\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/comments/:user/:repo/:number?',\r\n    categories: ['programming'],\r\n    example: '/github/comments/DIYgod/RSSHub/8116',\r\n    parameters: {\r\n        user: 'User / Org name',\r\n        repo: 'Repo name',\r\n        number: 'Issue or pull number (if omitted: all)',\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/:user/:repo/:type', 'github.com/:user/:repo/:type/:number'],\r\n            target: '/comments/:user/:repo/:number?',\r\n        },\r\n    ],\r\n    name: 'Issue / Pull Request comments',\r\n    maintainers: ['TonyRL', 'FliegendeWurst'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const user = ctx.req.param('user');\r\n    const repo = ctx.req.param('repo');\r\n    const number = ctx.req.param('number') && Number.isNaN(Number.parseInt(ctx.req.param('number'))) ? 1 : Number.parseInt(ctx.req.param('number'));\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 100;\r\n    const headers =\r\n        config.github && config.github.access_token\r\n            ? {\r\n                  Accept: 'application/vnd.github.v3+json',\r\n                  Authorization: `token ${config.github.access_token}`,\r\n              }\r\n            : {\r\n                  Accept: 'application/vnd.github.v3+json',\r\n              };\r\n\r\n    return await (Number.isNaN(number) ? allIssues(ctx, user, repo, limit, headers) : singleIssue(ctx, user, repo, number, limit, headers));\r\n}\r\n\r\nasync function allIssues(ctx, user, repo, limit, headers) {\r\n    const response = await ofetch.raw(`${apiUrl}/repos/${user}/${repo}/issues/comments`, {\r\n        headers,\r\n        query: {\r\n            sort: 'updated',\r\n            direction: 'desc',\r\n            per_page: limit,\r\n        },\r\n    });\r\n\r\n    const timeline = response._data;\r\n\r\n    const items = timeline.map((item) => {\r\n        const actor = item.actor?.login ?? item.user?.login ?? 'ghost';\r\n        const issueUrlParts = item.issue_url.split('/');\r\n        const issue = issueUrlParts.at(-1);\r\n        const urlParts = item.html_url.split('/');\r\n        const issueType = typeDict[urlParts.at(-2)].title;\r\n\r\n        return {\r\n            title: `${actor} commented on ${user}/${repo}: ${issueType} #${issue}`,\r\n            author: actor,\r\n            pubDate: parseDate(item.created_at),\r\n            link: item.html_url,\r\n            description: item.body ? md.render(item.body) : null,\r\n        };\r\n    });\r\n\r\n    const rateLimit = {\r\n        limit: Number.parseInt(response.headers.get('x-ratelimit-limit')),\r\n        remaining: Number.parseInt(response.headers.get('x-ratelimit-remaining')),\r\n        reset: parseDate(Number.parseInt(response.headers.get('x-ratelimit-reset')) * 1000),\r\n        resoure: response.headers.get('x-ratelimit-resource'),\r\n        used: Number.parseInt(response.headers.get('x-ratelimit-used')),\r\n    };\r\n\r\n    const ret = {\r\n        title: `${user}/${repo}: Issue & Pull request comments`,\r\n        link: `${rootUrl}/${user}/${repo}`,\r\n        item: items,\r\n    };\r\n\r\n    ctx.set('json', {\r\n        ...ret,\r\n        rateLimit,\r\n    });\r\n    return ret;\r\n}\r\n\r\nasync function singleIssue(ctx, user, repo, number, limit, headers) {\r\n    const response = await ofetch.raw(`${apiUrl}/repos/${user}/${repo}/issues/${number}`, {\r\n        headers,\r\n    });\r\n    const issue = response._data;\r\n    const type = issue.pull_request ? 'pull' : 'issue';\r\n\r\n    let timelineResponse = await ofetch.raw(issue.timeline_url, {\r\n        headers,\r\n        query: {\r\n            per_page: limit,\r\n        },\r\n    });\r\n    const items = [];\r\n    const lastUrl = timelineResponse.headers.get('link')?.match(/<(\\S+?)>; rel=\"last\"/)?.[1];\r\n    if (lastUrl) {\r\n        timelineResponse = await ofetch.raw(lastUrl, { headers });\r\n    } else {\r\n        items.push({\r\n            title: `${issue.user.login} created ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n            description: issue.body ? md.render(issue.body) : null,\r\n            author: issue.user.login,\r\n            pubDate: parseDate(issue.created_at),\r\n            link: `${issue.html_url}#issue-${issue.id}`,\r\n        });\r\n    }\r\n    const timeline = timelineResponse._data;\r\n\r\n    for (const item of timeline) {\r\n        const actor = item.actor?.login ?? item.user?.login ?? 'ghost';\r\n        switch (item.event) {\r\n            case 'closed':\r\n                items.push({\r\n                    title: `${actor} ${item.event} ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n                    author: actor,\r\n                    pubDate: parseDate(item.created_at),\r\n                    link: item.url,\r\n                });\r\n                break;\r\n            case 'commented':\r\n                items.push({\r\n                    title: `${actor} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n                    description: md.render(item.body),\r\n                    author: actor,\r\n                    pubDate: parseDate(item.created_at),\r\n                    link: item.html_url,\r\n                });\r\n                break;\r\n            case 'cross-referenced':\r\n                items.push({\r\n                    title: `${actor} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n                    description: `${actor} mentioned this issue in <a href='${item.source.issue.html_url}'><b>${item.source.issue.title}</b> #${item.source.issue.number}</a>`,\r\n                    author: actor,\r\n                    pubDate: parseDate(item.created_at),\r\n                    guid: `${actor} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number} on ${item.created_at}`,\r\n                    link: `${actor} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number} on ${item.created_at}`,\r\n                });\r\n                break;\r\n            case 'renamed':\r\n                items.push({\r\n                    title: `${actor} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n                    description: `${actor} changed the title <del>${item.rename.from}</del> ${item.rename.to}`,\r\n                    author: actor,\r\n                    pubDate: parseDate(item.created_at),\r\n                    link: item.url,\r\n                });\r\n                break;\r\n            case 'reviewed':\r\n                items.push({\r\n                    title: `${item.user.login} ${item.event} on ${user}/${repo}: ${typeDict[type].title} #${issue.number}`,\r\n                    description: item.body ? md.render(item.body) : item.state.replace('_', ' '),\r\n                    author: item.user.login,\r\n                    pubDate: parseDate(item.submitted_at),\r\n                    link: item.html_url,\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const ret = {\r\n        title: `${user}/${repo}: ${typeDict[type].title} #${number} - ${issue.title}`,\r\n        link: issue.html_url,\r\n        item: items,\r\n    };\r\n\r\n    ctx.set('json', {\r\n        ...ret,\r\n        rateLimit: {\r\n            limit: Number.parseInt(response.headers.get('x-ratelimit-limit')),\r\n            remaining: Number.parseInt(response.headers.get('x-ratelimit-remaining')),\r\n            reset: parseDate(Number.parseInt(response.headers.get('x-ratelimit-reset')) * 1000),\r\n            resoure: response.headers.get('x-ratelimit-resource'),\r\n            used: Number.parseInt(response.headers.get('x-ratelimit-used')),\r\n        },\r\n    });\r\n    return ret;\r\n}\r\n"],"mappings":"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"}