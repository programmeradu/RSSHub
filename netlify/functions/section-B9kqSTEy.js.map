{"version":3,"file":"section-B9kqSTEy.js","names":["ofetch","route: Route","result: { title: string; items: DataItem[] }","error: unknown"],"sources":["../../lib/routes/jandan/utils.ts","../../lib/routes/jandan/section.ts"],"sourcesContent":["import { DataItem } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36';\r\n\r\n/**\r\n * Extract page ID from script tags in HTML\r\n */\r\nexport const extractPageId = async (url: string, referer: string): Promise<string> => {\r\n    const response = await ofetch(url, {\r\n        headers: {\r\n            'User-Agent': USER_AGENT,\r\n            Referer: referer,\r\n            Accept: 'application/json, text/plain, */*',\r\n        },\r\n    });\r\n\r\n    const $ = load(response);\r\n    let pageId = '';\r\n\r\n    $('script').each((_, script) => {\r\n        const content = $(script).html() || '';\r\n        const match = content.match(/PAGE\\s*=\\s*{\\s*id\\s*:\\s*(\\d+)\\s*}/);\r\n        if (match) {\r\n            pageId = match[1];\r\n        }\r\n    });\r\n\r\n    return pageId;\r\n};\r\n\r\n/**\r\n * Handle the top section (热榜)\r\n */\r\nexport const handleTopSection = async (rootUrl: string, type: string): Promise<{ title: string; items: DataItem[] }> => {\r\n    const apiUrl = `${rootUrl}/api/top/${type}`;\r\n    const response = await ofetch(apiUrl, {\r\n        headers: {\r\n            'User-Agent': USER_AGENT,\r\n            Referer: rootUrl,\r\n            Accept: 'application/json, text/plain, */*',\r\n        },\r\n    });\r\n\r\n    let title = '热榜';\r\n    switch (type) {\r\n        case 'pic3days':\r\n            title += ' - 3天内无聊图';\r\n            break;\r\n        case 'pic7days':\r\n            title += ' - 7天内无聊图';\r\n            break;\r\n        default:\r\n            title += ' - 4小时热门';\r\n            break;\r\n    }\r\n\r\n    if (response.code === 0 && response.data && Array.isArray(response.data)) {\r\n        const items = response.data.map((item) => {\r\n            const content = item.content.replaceAll(/img src=\"(.*?)\"/g, (match, src) => match.replace(src, src.replace(/^https?:\\/\\/(\\w+)\\.moyu\\.im/, 'https://$1.sinaimg.cn')));\r\n\r\n            return {\r\n                author: item.author,\r\n                title: `${item.author}: ${content.replaceAll(/<[^>]+>/g, '')}`,\r\n                description: content,\r\n                pubDate: parseDate(item.date),\r\n                link: `${rootUrl}/t/${item.id}`,\r\n            } as DataItem;\r\n        });\r\n\r\n        return { title, items };\r\n    }\r\n\r\n    return {\r\n        title,\r\n        items: [\r\n            {\r\n                title: `获取失败: ${title}`,\r\n                description: '未能获取热榜数据',\r\n                link: `${rootUrl}/top`,\r\n                pubDate: new Date(),\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\n/**\r\n * Handle the forum/bbs section (鱼塘)\r\n */\r\nexport const handleForumSection = async (rootUrl: string): Promise<{ title: string; items: DataItem[] }> => {\r\n    const title = '煎蛋 - 鱼塘';\r\n    const currentUrl = `${rootUrl}/bbs`;\r\n\r\n    try {\r\n        const forumId = await extractPageId(currentUrl, rootUrl);\r\n\r\n        if (!forumId) {\r\n            return {\r\n                title,\r\n                items: [\r\n                    {\r\n                        title: `获取失败: ${title}`,\r\n                        description: '无法获取论坛ID',\r\n                        link: currentUrl,\r\n                        pubDate: new Date(),\r\n                    },\r\n                ],\r\n            };\r\n        }\r\n\r\n        const apiUrl = `${rootUrl}/api/forum/posts/${forumId}?page=1`;\r\n        const forumData = await ofetch(apiUrl, {\r\n            headers: {\r\n                'User-Agent': USER_AGENT,\r\n                Referer: currentUrl,\r\n                Accept: 'application/json, text/plain, */*',\r\n            },\r\n        });\r\n\r\n        if (forumData.code === 0 && forumData.data && forumData.data.list && Array.isArray(forumData.data.list)) {\r\n            const items = forumData.data.list.map((post) => {\r\n                const content = post.content.replaceAll(/img src=\"(.*?)\"/g, (match, src) => match.replace(src, src.replace(/^https?:\\/\\/(\\w+)\\.moyu\\.im/, 'https://$1.sinaimg.cn')));\r\n\r\n                return {\r\n                    author: post.author_name,\r\n                    title: post.title || `${post.author_name}发表了新主题`,\r\n                    description: content,\r\n                    pubDate: parseDate(post.update_time || post.create_time),\r\n                    link: `${rootUrl}/bbs#/topic/${post.post_id}`,\r\n                    category: post.reply_count > 0 ? [`${post.reply_count}条回复`] : undefined,\r\n                } as DataItem;\r\n            });\r\n\r\n            return { title, items };\r\n        }\r\n\r\n        return {\r\n            title,\r\n            items: [\r\n                {\r\n                    title: `获取失败: ${title}`,\r\n                    description: '未能获取鱼塘数据',\r\n                    link: currentUrl,\r\n                    pubDate: new Date(),\r\n                },\r\n            ],\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            title,\r\n            items: [\r\n                {\r\n                    title: `解析错误: 鱼塘`,\r\n                    description: `解析鱼塘页面时出错: ${error instanceof Error ? error.message : String(error)}`,\r\n                    link: currentUrl,\r\n                    pubDate: new Date(),\r\n                },\r\n            ],\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Handle other sections (问答, 树洞, 随手拍, 无聊图)\r\n */\r\nexport const handleCommentSection = async (rootUrl: string, category: string): Promise<{ title: string; items: DataItem[] }> => {\r\n    const currentUrl = `${rootUrl}/${category}`;\r\n\r\n    try {\r\n        const pageId = await extractPageId(currentUrl, rootUrl);\r\n\r\n        const response = await ofetch(currentUrl, {\r\n            headers: {\r\n                'User-Agent': USER_AGENT,\r\n                Referer: rootUrl,\r\n                Accept: 'application/json, text/plain, */*',\r\n            },\r\n        });\r\n\r\n        const $ = load(response);\r\n        const title = String($('title').text().trim()) || `煎蛋 - ${category}`;\r\n\r\n        if (!pageId) {\r\n            return {\r\n                title,\r\n                items: [\r\n                    {\r\n                        title: `无法解析: ${title}`,\r\n                        description: '无法从页面中获取到帖子ID，可能网站结构已变更',\r\n                        link: currentUrl,\r\n                        pubDate: new Date(),\r\n                    },\r\n                ],\r\n            };\r\n        }\r\n\r\n        const apiUrl = `${rootUrl}/api/comment/post/${pageId}?order=desc&page=1`;\r\n        const commentsData = await ofetch(apiUrl, {\r\n            headers: {\r\n                'User-Agent': USER_AGENT,\r\n                Referer: currentUrl,\r\n                Accept: 'application/json, text/plain, */*',\r\n            },\r\n        });\r\n\r\n        if (commentsData.code === 0 && commentsData.data && commentsData.data.list && Array.isArray(commentsData.data.list)) {\r\n            const items = commentsData.data.list.map((comment) => {\r\n                const content = comment.content.replaceAll(/img src=\"(.*?)\"/g, (match, src) => match.replace(src, src.replace(/^https?:\\/\\/(\\w+)\\.moyu\\.im/, 'https://$1.sinaimg.cn')));\r\n\r\n                return {\r\n                    author: comment.author,\r\n                    title: `${comment.author}: ${content.replaceAll(/<[^>]+>/g, '')}`,\r\n                    description: content,\r\n                    pubDate: parseDate(comment.date_gmt || comment.date),\r\n                    link: `${rootUrl}/t/${comment.id}`,\r\n                } as DataItem;\r\n            });\r\n\r\n            return { title, items };\r\n        }\r\n\r\n        return {\r\n            title,\r\n            items: [\r\n                {\r\n                    title: `暂无内容: ${title || category}`,\r\n                    description: '没有获取到内容，可能需要更新解析规则',\r\n                    link: currentUrl,\r\n                    pubDate: new Date(),\r\n                },\r\n            ],\r\n        };\r\n    } catch {\r\n        return {\r\n            title: `煎蛋 - ${category}`,\r\n            items: [\r\n                {\r\n                    title: `解析错误: ${category}`,\r\n                    description: '解析页面时出错',\r\n                    link: currentUrl,\r\n                    pubDate: new Date(),\r\n                },\r\n            ],\r\n        };\r\n    }\r\n};\r\n","import { Route, DataItem } from '@/types';\r\nimport { handleTopSection, handleForumSection, handleCommentSection } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/:category/:type?',\r\n    example: '/jandan/top',\r\n    name: 'Section',\r\n    maintainers: ['nczitzk', 'pseudoyu'],\r\n    parameters: {\r\n        category: {\r\n            description: '板块',\r\n            options: [\r\n                {\r\n                    label: '热榜',\r\n                    value: 'top',\r\n                },\r\n                {\r\n                    label: '问答',\r\n                    value: 'qa',\r\n                },\r\n                {\r\n                    label: '树洞',\r\n                    value: 'treehole',\r\n                },\r\n                {\r\n                    label: '随手拍',\r\n                    value: 'ooxx',\r\n                },\r\n                {\r\n                    label: '无聊图',\r\n                    value: 'pic',\r\n                },\r\n                {\r\n                    label: '鱼塘',\r\n                    value: 'bbs',\r\n                },\r\n            ],\r\n        },\r\n        type: {\r\n            description: '热榜类型，仅当 category 选择 `top` 时有效',\r\n            default: '4hr',\r\n            options: [\r\n                {\r\n                    label: '4小时热门',\r\n                    value: '4hr',\r\n                },\r\n                {\r\n                    label: '3天内无聊图',\r\n                    value: 'pic3days',\r\n                },\r\n                {\r\n                    label: '7天内无聊图',\r\n                    value: 'pic7days',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['i.jandan.net/:category'],\r\n            target: '/jandan/:category?',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx): Promise<{\r\n    title: string;\r\n    link: string;\r\n    item: DataItem[];\r\n}> {\r\n    let category = ctx.req.param('category') ?? 'top';\r\n    category = category.replace(/#.*$/, '');\r\n\r\n    const type = ctx.req.param('type') ?? '4hr';\r\n    const rootUrl = 'http://i.jandan.net';\r\n    const currentUrl = `${rootUrl}/${category}`;\r\n\r\n    let result: { title: string; items: DataItem[] };\r\n\r\n    try {\r\n        if (category === 'top') {\r\n            result = await handleTopSection(rootUrl, type);\r\n        } else if (category === 'bbs') {\r\n            result = await handleForumSection(rootUrl);\r\n        } else {\r\n            result = await handleCommentSection(rootUrl, category);\r\n        }\r\n    } catch (error: unknown) {\r\n        const errorMessage = error instanceof Error ? error.message : String(error);\r\n        result = {\r\n            title: `煎蛋 - ${category}`,\r\n            items: [\r\n                {\r\n                    title: `抓取出错: ${category}`,\r\n                    description: `抓取 ${category} 分区时出现错误: ${errorMessage}`,\r\n                    link: currentUrl,\r\n                    pubDate: new Date(),\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    return {\r\n        title: result.title,\r\n        link: currentUrl,\r\n        item: result.items,\r\n    };\r\n}\r\n"],"mappings":"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"}