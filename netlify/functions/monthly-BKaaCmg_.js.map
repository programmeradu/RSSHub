{"version":3,"file":"monthly-BKaaCmg_.js","names":[],"sources":["../../lib/routes/bestofjs/monthly.ts"],"sourcesContent":["import path from 'node:path';\r\nimport { load } from 'cheerio';\r\nimport { Route, ViewType } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { art } from '@/utils/render';\r\n\r\nconst BASEURL = 'https://bestofjs.org/rankings/monthly';\r\n\r\nexport const route: Route = {\r\n    path: '/rankings/monthly',\r\n    categories: ['programming'],\r\n    example: '/bestofjs/rankings/monthly',\r\n    view: ViewType.Notifications,\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['bestofjs.org/rankings/monthly/:year/:month'],\r\n            target: '/rankings/monthly',\r\n        },\r\n    ],\r\n    name: 'Monthly Rankings',\r\n    maintainers: ['ztkuaikuai'],\r\n    url: 'bestofjs.org/rankings/monthly',\r\n    handler: async () => {\r\n        const targetMonths = getLastSixMonths();\r\n        const allNeededMonthlyRankings = await Promise.all(\r\n            targetMonths.map((data) => {\r\n                const [year, month] = data.split('-');\r\n                return getMonthlyRankings(year, month);\r\n            })\r\n        );\r\n        const items = allNeededMonthlyRankings.flatMap((oneMonthlyRankings, i) => {\r\n            const [year, month] = targetMonths[i].split('-');\r\n            const description = art(path.join(__dirname, 'templates/description.art'), { items: oneMonthlyRankings });\r\n            return {\r\n                title: `Best of JS Monthly Rankings - ${year}/${month}`,\r\n                description,\r\n                link: `${BASEURL}/${year}/${month}`,\r\n                guid: `${BASEURL}/${year}/${month}`,\r\n                author: 'Best of JS',\r\n            };\r\n        });\r\n\r\n        return {\r\n            title: 'Best of JS Monthly Rankings',\r\n            link: BASEURL,\r\n            description: 'Monthly rankings of the most popular JavaScript projects on Best of JS',\r\n            item: items,\r\n            language: 'en',\r\n        };\r\n    },\r\n};\r\n\r\nconst getLastSixMonths = (): string[] => {\r\n    const now = new Date();\r\n    const currentYear = now.getFullYear();\r\n    const currentMonth = now.getMonth() + 1; // 0-based to 1-based\r\n    return Array.from({ length: 6 }, (_, i) => {\r\n        let month = currentMonth - (i + 1);\r\n        let year = currentYear;\r\n        if (month <= 0) {\r\n            month += 12;\r\n            year -= 1;\r\n        }\r\n        return `${year}-${month}`;\r\n    });\r\n};\r\n\r\ninterface RankingItem {\r\n    logo: string;\r\n    projectName: string;\r\n    githubLink: string;\r\n    homepageLink: string;\r\n    description: string;\r\n    tags: string[];\r\n    starCount: string;\r\n    additionalInfo: string;\r\n}\r\n\r\nconst getMonthlyRankings = (year: string, month: string): Promise<RankingItem[]> => {\r\n    const targetUrl = `${BASEURL}/${year}/${month}`;\r\n    return cache.tryGet(targetUrl, async () => {\r\n        const response = await ofetch(targetUrl);\r\n        const $ = load(response);\r\n        return $('table.w-full tbody tr[data-testid=\"project-card\"]')\r\n            .toArray()\r\n            .map((el) => {\r\n                const $tr = $(el);\r\n                // Project logo\r\n                const logo =\r\n                    $tr\r\n                        .find('td:first img')\r\n                        .attr('src')\r\n                        ?.replace(/.dark./, '.') || '';\r\n                // Project name and link\r\n                const projectLink = $tr.find('td:nth-child(2) a[href^=\"/projects/\"]').first();\r\n                const projectName = projectLink.text().trim();\r\n                // GitHub and homepage links\r\n                const githubLink = $tr.find('td:nth-child(2) a[href*=\"github.com\"]').attr('href') || '';\r\n                const homepageLink = $tr.find('td:nth-child(2) a[href*=\"http\"]:not([href*=\"github.com\"])').attr('href') || '';\r\n                // Description\r\n                const description = $tr.find('td:nth-child(2) .font-serif').text().trim();\r\n                // Tags\r\n                const tags = $tr\r\n                    .find('td:nth-child(2) [href*=\"/projects?tags=\"]')\r\n                    .toArray()\r\n                    .map((tag) => $(tag).text().trim());\r\n                // Star count\r\n                const starCount = $tr.find('td:nth-child(4) span:last').text().trim() || $tr.find('td:nth-child(2) .inline-flex span:last-child').text().trim();\r\n                // Additional info (contributors, created date)\r\n                const additionalInfo = $tr\r\n                    .find('td:nth-child(3) > div')\r\n                    .toArray()\r\n                    .slice(1)\r\n                    .map((el) => $(el).text().trim())\r\n                    .join('; ');\r\n                return {\r\n                    logo,\r\n                    projectName,\r\n                    githubLink,\r\n                    homepageLink,\r\n                    description,\r\n                    tags,\r\n                    starCount,\r\n                    additionalInfo,\r\n                };\r\n            });\r\n    });\r\n};\r\n"],"mappings":"6ZAOA,MAAM,EAAU,wCAEH,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,eACb,QAAS,6BACT,KAAM,EAAS,cACf,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,8CACT,OAAQ,sBAGhB,KAAM,mBACN,YAAa,CAAC,cACd,IAAK,gCACL,QAAS,SAAY,CACjB,IAAM,EAAe,IACf,EAA2B,MAAM,QAAQ,IAC3C,EAAa,IAAK,GAAS,CACvB,GAAM,CAAC,EAAM,GAAS,EAAK,MAAM,KACjC,OAAO,EAAmB,EAAM,MAGlC,EAAQ,EAAyB,SAAS,EAAoB,IAAM,CACtE,GAAM,CAAC,EAAM,GAAS,EAAa,GAAG,MAAM,KACtC,EAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAAE,MAAO,IACpF,MAAO,CACH,MAAO,iCAAiC,EAAK,GAAG,IAChD,cACA,KAAM,GAAG,EAAQ,GAAG,EAAK,GAAG,IAC5B,KAAM,GAAG,EAAQ,GAAG,EAAK,GAAG,IAC5B,OAAQ,gBAIhB,MAAO,CACH,MAAO,8BACP,KAAM,EACN,YAAa,yEACb,KAAM,EACN,SAAU,QAKhB,MAAmC,CACrC,IAAM,EAAM,IAAI,KACV,EAAc,EAAI,cAClB,EAAe,EAAI,WAAa,EACtC,OAAO,MAAM,KAAK,CAAE,OAAQ,IAAM,EAAG,IAAM,CACvC,IAAI,EAAQ,GAAgB,EAAI,GAC5B,EAAO,EAKX,OAJI,GAAS,IACT,GAAS,GACT,KAEG,GAAG,EAAK,GAAG,OAepB,GAAsB,EAAc,IAA0C,CAChF,IAAM,EAAY,GAAG,EAAQ,GAAG,EAAK,GAAG,IACxC,OAAO,EAAM,OAAO,EAAW,SAAY,CACvC,IAAM,EAAW,MAAM,EAAO,GACxB,EAAI,EAAK,GACf,OAAO,EAAE,qDACJ,UACA,IAAK,GAAO,CACT,IAAM,EAAM,EAAE,GAER,EACF,EACK,KAAK,gBACL,KAAK,QACJ,QAAQ,SAAU,MAAQ,GAE9B,EAAc,EAAI,KAAK,yCAAyC,QAChE,EAAc,EAAY,OAAO,OAEjC,EAAa,EAAI,KAAK,yCAAyC,KAAK,SAAW,GAC/E,EAAe,EAAI,KAAK,6DAA6D,KAAK,SAAW,GAErG,EAAc,EAAI,KAAK,+BAA+B,OAAO,OAE7D,EAAO,EACR,KAAK,6CACL,UACA,IAAK,GAAQ,EAAE,GAAK,OAAO,QAE1B,EAAY,EAAI,KAAK,6BAA6B,OAAO,QAAU,EAAI,KAAK,gDAAgD,OAAO,OAEnI,EAAiB,EAClB,KAAK,yBACL,UACA,MAAM,GACN,IAAK,GAAO,EAAE,GAAI,OAAO,QACzB,KAAK,MACV,MAAO,CACH,OACA,cACA,aACA,eACA,cACA,OACA,YACA"}