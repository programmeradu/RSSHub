{"version":3,"file":"jobs-BgOzDdFY.js","names":[],"sources":["../../lib/routes/hiring.cafe/jobs.ts"],"sourcesContent":["import ofetch from '@/utils/ofetch';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { Context } from 'hono';\r\nimport { Route } from '@/types';\r\n\r\nconst CONFIG = {\r\n    DEFAULT_PAGE_SIZE: 20,\r\n    MAX_PAGE_SIZE: 100,\r\n} as const;\r\n\r\nconst API = {\r\n    BASE_URL: 'https://hiring.cafe/api/search-jobs',\r\n    HEADERS: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n} as const;\r\n\r\ninterface GeoLocation {\r\n    readonly lat: number;\r\n    readonly lon: number;\r\n}\r\n\r\ninterface JobInformation {\r\n    readonly title: string;\r\n    readonly description: string;\r\n}\r\n\r\ninterface ProcessedJobData {\r\n    readonly company_name: string;\r\n    readonly is_compensation_transparent: boolean;\r\n    readonly yearly_min_compensation?: number;\r\n    readonly yearly_max_compensation?: number;\r\n    readonly workplace_type?: string;\r\n    readonly requirements_summary?: string;\r\n    readonly job_category: string;\r\n    readonly role_activities: readonly string[];\r\n    readonly formatted_workplace_location?: string;\r\n    readonly estimated_publish_date_millis: string;\r\n}\r\n\r\ninterface JobResult {\r\n    readonly id: string;\r\n    readonly apply_url: string;\r\n    readonly job_information: JobInformation;\r\n    readonly v5_processed_job_data: ProcessedJobData;\r\n    readonly _geoloc: readonly GeoLocation[];\r\n}\r\n\r\ninterface ApiResponse {\r\n    readonly results: readonly JobResult[];\r\n    readonly total: number;\r\n}\r\n\r\ninterface SearchParams {\r\n    readonly keywords: string;\r\n    readonly page?: number;\r\n    readonly size?: number;\r\n    readonly sortBy?: 'date' | 'default' | 'compensation_desc' | 'experience_asc';\r\n}\r\n\r\nconst validateSearchParams = ({ keywords, page = 0, size = CONFIG.DEFAULT_PAGE_SIZE }: SearchParams): SearchParams => ({\r\n    keywords: keywords.trim(),\r\n    page: Math.max(0, Math.floor(Number(page))),\r\n    size: Math.min(Math.max(1, Math.floor(Number(size))), CONFIG.MAX_PAGE_SIZE),\r\n});\r\n\r\nconst fetchJobs = async (searchParams: SearchParams): Promise<ApiResponse> => {\r\n    const payload = {\r\n        size: searchParams.size || 20,\r\n        page: searchParams.page || 0,\r\n        searchState: {\r\n            searchQuery: searchParams.keywords,\r\n            sortBy: searchParams.sortBy || 'date',\r\n        },\r\n    };\r\n\r\n    return await ofetch<ApiResponse>(API.BASE_URL, {\r\n        method: 'POST',\r\n        body: payload,\r\n        headers: API.HEADERS,\r\n    });\r\n};\r\n\r\nconst renderJobDescription = (jobInfo: JobInformation, processedData: ProcessedJobData): string =>\r\n    art(path.join(__dirname, 'templates/jobs.art'), {\r\n        company_name: processedData.company_name,\r\n        location: processedData.formatted_workplace_location ?? 'Remote/Unspecified',\r\n        is_compensation_transparent: Boolean(processedData.is_compensation_transparent && processedData.yearly_min_compensation && processedData.yearly_max_compensation),\r\n        yearly_min_compensation_formatted: processedData.yearly_min_compensation?.toLocaleString() ?? '',\r\n        yearly_max_compensation_formatted: processedData.yearly_max_compensation?.toLocaleString() ?? '',\r\n        workplace_type: processedData.workplace_type ?? 'Not specified',\r\n        requirements_summary: processedData.requirements_summary ?? 'No requirements specified',\r\n        job_description: jobInfo.description ?? '',\r\n    });\r\n\r\nconst transformJobItem = (item: JobResult) => {\r\n    const { job_information: jobInfo, v5_processed_job_data: processedData, apply_url, id } = item;\r\n\r\n    return {\r\n        title: `${jobInfo.title} - ${processedData.company_name}`,\r\n        description: renderJobDescription(jobInfo, processedData),\r\n        link: apply_url,\r\n        pubDate: new Date(processedData.estimated_publish_date_millis).toUTCString(),\r\n        category: [processedData.job_category, ...processedData.role_activities, processedData.workplace_type].filter((x): x is string => !!x),\r\n        author: processedData.company_name,\r\n        guid: id,\r\n    };\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const searchParams = validateSearchParams({\r\n        keywords: ctx.req.param('keywords'),\r\n    });\r\n\r\n    const response = await fetchJobs(searchParams);\r\n    const items = response.results.map((item) => transformJobItem(item));\r\n\r\n    return {\r\n        title: `HiringCafe Jobs: ${searchParams.keywords}`,\r\n        description: `Job search results for \"${searchParams.keywords}\" on HiringCafe`,\r\n        link: `https://hiring.cafe/jobs?q=${encodeURIComponent(searchParams.keywords)}`,\r\n        item: items,\r\n        total: response.total,\r\n    };\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/jobs/:keywords',\r\n    categories: ['other'],\r\n    example: '/hiring.cafe/jobs/sustainability',\r\n    parameters: { keywords: 'Keywords to search for' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['hiring.cafe'],\r\n        },\r\n    ],\r\n    name: 'Jobs',\r\n    maintainers: ['mintyfrankie'],\r\n    handler,\r\n};\r\n"],"mappings":"2RAMA,MAAM,EAAS,CACX,kBAAmB,GACnB,cAAe,KAGb,EAAM,CACR,SAAU,sCACV,QAAS,CACL,eAAgB,qBA+ClB,GAAwB,CAAE,WAAU,OAAO,EAAG,OAAO,EAAO,sBAAqD,CACnH,SAAU,EAAS,OACnB,KAAM,KAAK,IAAI,EAAG,KAAK,MAAM,OAAO,KACpC,KAAM,KAAK,IAAI,KAAK,IAAI,EAAG,KAAK,MAAM,OAAO,KAAS,EAAO,iBAG3D,EAAY,KAAO,IAAqD,CAC1E,IAAM,EAAU,CACZ,KAAM,EAAa,MAAQ,GAC3B,KAAM,EAAa,MAAQ,EAC3B,YAAa,CACT,YAAa,EAAa,SAC1B,OAAQ,EAAa,QAAU,SAIvC,OAAO,MAAM,EAAoB,EAAI,SAAU,CAC3C,OAAQ,OACR,KAAM,EACN,QAAS,EAAI,WAIf,GAAwB,EAAyB,IACnD,EAAI,EAAA,KAAA,EAAA,+BAA4C,CAC5C,aAAc,EAAc,aAC5B,SAAU,EAAc,8BAAgC,qBACxD,4BAA6B,GAAQ,EAAc,6BAA+B,EAAc,yBAA2B,EAAc,yBACzI,kCAAmC,EAAc,yBAAyB,kBAAoB,GAC9F,kCAAmC,EAAc,yBAAyB,kBAAoB,GAC9F,eAAgB,EAAc,gBAAkB,gBAChD,qBAAsB,EAAc,sBAAwB,4BAC5D,gBAAiB,EAAQ,aAAe,KAG1C,EAAoB,GAAoB,CAC1C,GAAM,CAAE,gBAAiB,EAAS,sBAAuB,EAAe,YAAW,MAAO,EAE1F,MAAO,CACH,MAAO,GAAG,EAAQ,MAAM,KAAK,EAAc,eAC3C,YAAa,EAAqB,EAAS,GAC3C,KAAM,EACN,QAAS,IAAI,KAAK,EAAc,+BAA+B,cAC/D,SAAU,CAAC,EAAc,aAAc,GAAG,EAAc,gBAAiB,EAAc,gBAAgB,OAAQ,GAAmB,CAAC,CAAC,GACpI,OAAQ,EAAc,aACtB,KAAM,IAId,eAAe,EAAQ,EAAc,CACjC,IAAM,EAAe,EAAqB,CACtC,SAAU,EAAI,IAAI,MAAM,cAGtB,EAAW,MAAM,EAAU,GAC3B,EAAQ,EAAS,QAAQ,IAAK,GAAS,EAAiB,IAE9D,MAAO,CACH,MAAO,oBAAoB,EAAa,WACxC,YAAa,2BAA2B,EAAa,SAAS,iBAC9D,KAAM,8BAA8B,mBAAmB,EAAa,YACpE,KAAM,EACN,MAAO,EAAS,OAIxB,MAAa,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,SACb,QAAS,mCACT,WAAY,CAAE,SAAU,0BACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iBAGjB,KAAM,OACN,YAAa,CAAC,gBACd"}