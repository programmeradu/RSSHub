{"version":3,"file":"mox-BEFukNLZ.js","names":["route: Route","got","items: DataItem[]","cache"],"sources":["../../lib/routes/mox/index.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/:category?',\r\n    categories: ['anime'],\r\n    example: '/mox',\r\n    parameters: { category: '分类，可在对应分类页 URL 中找到' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'MOX_COOKIE',\r\n                optional: true,\r\n                description: `注册用户登录后的 Cookie, 可以从浏览器开发者工具Network面板中的mox页面请求获取，Cookie内容形如VOLSKEY=xxxxxx; VLIBSID=xxxxxx; VOLSESS=xxxxxx`,\r\n            },\r\n        ],\r\n        antiCrawler: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['mox.moe/l/:category', 'mox.moe/'],\r\n        },\r\n    ],\r\n    name: '首頁',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `::: tip\r\n  在首页将分类参数选择确定后跳转到的分类页面 URL 中，\\`/l/\\` 后的字段即为分类参数。\r\n\r\n  如 [科幻 + 日語 + 日本 + 長篇 + 完結 + 最近更新](https://mox.moe/l/CAT%2A科幻,日本,完結,lastupdate,jpn,l,BL) 的 URL 为 [https://mox.moe/l/CAT%2A 科幻，日本，完結，lastupdate,jpn,l,BL](https://mox.moe/l/CAT%2A科幻,日本,完結,lastupdate,jpn,l,BL)，此时 \\`/l/\\` 后的字段为 \\`CAT%2A科幻,日本,完結,lastupdate,jpn,l,BL\\`。最终获得路由为 [\\`/mox/CAT%2A科幻,日本,完結,lastupdate,jpn,l,BL\\`](https://rsshub.app/mox/CAT%2A科幻,日本,完結,lastupdate,jpn,l,BL)\r\n:::\r\n\r\n::: warning\r\n  由于 mox.moe 对非登录用户屏蔽了部分漫画详情内容的获取，且极易触发反爬机制，导致访问ip被重定向至google.com，因此在未配置\\`MOX_COOKIE\\`参数的情况下路由只会返回漫画标题和封面，不会对详情内容进行抓取。\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category') ?? '';\r\n\r\n    const rootUrl = 'https://mox.moe';\r\n    const currentUrl = `${rootUrl}${category ? `/l/${category}` : ''}`;\r\n\r\n    const cookie = config.mox.cookie;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n        headers: {\r\n            cookie,\r\n        },\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items: DataItem[] = $('.listbg td')\r\n        .toArray()\r\n        .map((item) => {\r\n            const lastItem = $(item).find('a').last();\r\n\r\n            const guid = lastItem.attr('href')?.split('/').pop();\r\n\r\n            const cover = $(item)\r\n                .find('a div div')\r\n                .attr('style')\r\n                ?.match(/background:url\\((.*?)\\)/)?.[1];\r\n\r\n            return {\r\n                title: lastItem.text(),\r\n                description: cover ? `<img src=\"${cover}\">` : undefined,\r\n                link: lastItem.attr('href'),\r\n                guid,\r\n            };\r\n        })\r\n        .filter((i) => i.guid);\r\n\r\n    if (cookie) {\r\n        items = await Promise.all(\r\n            items.map(\r\n                (item) =>\r\n                    cache.tryGet(item.guid!, async () => {\r\n                        const detailResponse = await got({\r\n                            method: 'get',\r\n                            url: item.link,\r\n                            headers: {\r\n                                cookie,\r\n                            },\r\n                        });\r\n\r\n                        const content = load(detailResponse.data);\r\n\r\n                        item.author = content('.author .text_bglight font a')\r\n                            .toArray()\r\n                            .map((i) => $(i).text())\r\n                            .filter(Boolean)\r\n                            .join('、');\r\n\r\n                        const infoBlock = content('.author .text_bglight').toArray();\r\n\r\n                        const desc = detailResponse.data?.match(/document\\.getElementById\\(\"div_desc_content\"\\)\\.innerHTML = \"(.*?)\";/s)?.[1] ?? '';\r\n                        item.description = `<img src=\"${content('.img_book').attr('src')}\"><br>${infoBlock.map((i) => $(i).html()).join('<br>')}<br>${desc}`;\r\n\r\n                        return item;\r\n                    }) as unknown as DataItem\r\n            )\r\n        );\r\n    }\r\n\r\n    return {\r\n        title: 'Mox.moe',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oUAMA,MAAaA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,SACb,QAAS,OACT,WAAY,CAAE,SAAU,sBACxB,SAAU,CACN,cAAe,CACX,CACI,KAAM,aACN,SAAU,GACV,YAAa,8GAGrB,YAAa,IAEjB,MAAO,CACH,CACI,OAAQ,CAAC,sBAAuB,cAGxC,KAAM,KACN,YAAa,CAAC,WACd,UACA,YAAa,ikBAWjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,GAGxC,EAAa,kBAAa,EAAW,MAAM,IAAa,KAExD,EAAS,EAAO,IAAI,OAEpB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,EACL,QAAS,CACL,YAIF,EAAI,EAAK,EAAS,MAEpBC,EAAoB,EAAE,cACrB,UACA,IAAK,GAAS,CACX,IAAM,EAAW,EAAE,GAAM,KAAK,KAAK,OAE7B,EAAO,EAAS,KAAK,SAAS,MAAM,KAAK,MAEzC,EAAQ,EAAE,GACX,KAAK,aACL,KAAK,UACJ,MAAM,6BAA6B,GAEzC,MAAO,CACH,MAAO,EAAS,OAChB,YAAa,EAAQ,aAAa,EAAM,IAAM,IAAA,GAC9C,KAAM,EAAS,KAAK,QACpB,UAGP,OAAQ,GAAM,EAAE,MAkCrB,OAhCI,IACA,EAAQ,MAAM,QAAQ,IAClB,EAAM,IACD,GACGC,EAAM,OAAO,EAAK,KAAO,SAAY,CACjC,IAAM,EAAiB,MAAMF,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,KACV,QAAS,CACL,YAIF,EAAU,EAAK,EAAe,MAEpC,EAAK,OAAS,EAAQ,gCACjB,UACA,IAAK,GAAM,EAAE,GAAG,QAChB,OAAO,SACP,KAAK,KAEV,IAAM,EAAY,EAAQ,yBAAyB,UAE7C,EAAO,EAAe,MAAM,MAAM,2EAA2E,IAAM,GAGzH,MAFA,GAAK,YAAc,aAAa,EAAQ,aAAa,KAAK,OAAO,QAAQ,EAAU,IAAK,GAAM,EAAE,GAAG,QAAQ,KAAK,QAAQ,MAAM,IAEvH,OAMpB,CACH,MAAO,UACP,KAAM,EACN,KAAM"}