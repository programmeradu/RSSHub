{"version":3,"file":"orcid-BzE5s79C.js","names":[],"sources":["../../lib/routes/orcid/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/:id',\r\n    categories: ['study'],\r\n    example: '/orcid/0000-0002-4731-9700',\r\n    parameters: { id: 'Open Researcher and Contributor ID' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Works List',\r\n    maintainers: ['OrangeEd1t'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const rootUrl = 'https://orcid.org/';\r\n    const currentUrl = `${rootUrl}${id}/worksPage.json?offset=0&sort=date&sortAsc=false&pageSize=20`;\r\n    const response = await got(currentUrl);\r\n\r\n    const items = response.data.groups;\r\n    const works = [];\r\n    const out = [];\r\n\r\n    for (const item of items) {\r\n        for (let j = 0; j < item.works.length; j++) {\r\n            works.push(item.works[j]);\r\n        }\r\n    }\r\n\r\n    works.map((work) => {\r\n        let Str = '';\r\n\r\n        for (let l = 0; l < work.workExternalIdentifiers.length; l++) {\r\n            Str += work.workExternalIdentifiers[l].url\r\n                ? '<a href=\"' + work.workExternalIdentifiers[l].url.value + '\">' + work.workExternalIdentifiers[l].externalIdentifierType.value + ': ' + work.workExternalIdentifiers[l].externalIdentifierId.value + '</a><br>'\r\n                : work.workExternalIdentifiers[l].externalIdentifierType.value + ': ' + work.workExternalIdentifiers[l].externalIdentifierId.value + '<br>';\r\n        }\r\n\r\n        const info = {\r\n            title: work.title.value,\r\n            link: work.url,\r\n            description: art(path.join(__dirname, 'templates/description.art'), {\r\n                title: work.title.value,\r\n                journalTitle: work.journalTitle?.value,\r\n                publicationDate: work.publicationDate,\r\n                workType: work.workType.value,\r\n                Str,\r\n                sourceName: work.sourceName,\r\n            }),\r\n            guid: work.putCode.value,\r\n        };\r\n        out.push(info);\r\n        return info;\r\n    });\r\n\r\n    return {\r\n        title: 'ORCID Works List' + id,\r\n        link: currentUrl,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"gVAMA,MAAa,EAAe,CACxB,KAAM,OACN,WAAY,CAAC,SACb,QAAS,6BACT,WAAY,CAAE,GAAI,sCAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,aACN,YAAa,CAAC,cACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAa,qBAAa,EAAG,8DAC7B,EAAW,MAAM,EAAI,GAErB,EAAQ,EAAS,KAAK,OACtB,EAAQ,GACR,EAAM,GAEZ,IAAK,IAAM,KAAQ,EACf,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IACnC,EAAM,KAAK,EAAK,MAAM,IA8B9B,OA1BA,EAAM,IAAK,GAAS,CAChB,IAAI,EAAM,GAEV,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,wBAAwB,OAAQ,IACrD,GAAO,EAAK,wBAAwB,GAAG,IACjC,YAAc,EAAK,wBAAwB,GAAG,IAAI,MAAQ,KAAO,EAAK,wBAAwB,GAAG,uBAAuB,MAAQ,KAAO,EAAK,wBAAwB,GAAG,qBAAqB,MAAQ,WACpM,EAAK,wBAAwB,GAAG,uBAAuB,MAAQ,KAAO,EAAK,wBAAwB,GAAG,qBAAqB,MAAQ,OAG7I,IAAM,EAAO,CACT,MAAO,EAAK,MAAM,MAClB,KAAM,EAAK,IACX,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,MAAO,EAAK,MAAM,MAClB,aAAc,EAAK,cAAc,MACjC,gBAAiB,EAAK,gBACtB,SAAU,EAAK,SAAS,MACxB,MACA,WAAY,EAAK,aAErB,KAAM,EAAK,QAAQ,OAGvB,OADA,EAAI,KAAK,GACF,IAGJ,CACH,MAAO,mBAAqB,EAC5B,KAAM,EACN,KAAM"}