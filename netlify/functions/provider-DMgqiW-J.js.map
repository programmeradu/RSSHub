{"version":3,"file":"provider-DMgqiW-J.js","names":["route: Route","InvalidParameterError","cache"],"sources":["../../lib/routes/yahoo/news/provider.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { getArchive, getProviderList, parseList, parseItem } from './utils';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\nexport const route: Route = {\r\n    path: '/news/provider/:region/:providerId',\r\n    categories: ['new-media'],\r\n    example: '/yahoo/news/provider/tw/yahoo_tech_tw_942',\r\n    parameters: { region: '地區, hk 或 tw, 分别表示香港雅虎和台湾雅虎', providerId: '新聞來源 ID, 可透過路由\"新聞來源列表\"獲得' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['hk.news.yahoo.com/'],\r\n        },\r\n        {\r\n            source: ['tw.news.yahoo.com/'],\r\n        },\r\n    ],\r\n    name: '新聞來源',\r\n    maintainers: ['TonyRL', 'williamgateszhao'],\r\n    handler,\r\n    description: `\r\n\\`Region\\`\r\n\r\n| 香港 | 台灣 |\r\n| ---- | ---- |\r\n| hk   | tw   |\r\n\r\n\\`ProviderId\\`\r\n\r\n除了可以通过路由\"新聞來源列表\"获得外, 也可通过 hk.news.yahoo.com/archive 和 tw.news.yahoo.com/archive 选择\"新闻来源\"后通过页面 Url 来获得。\r\n\r\n例如 hk.news.yahoo.com/yahoo_movies_hk_660--所有分類/archive, \\`yahoo_movies_hk_660\\` 就是 ProviderId 。\r\n`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { region, providerId } = ctx.req.param();\r\n    if (!['hk', 'tw'].includes(region)) {\r\n        throw new InvalidParameterError(`Unknown region: ${region}`);\r\n    }\r\n\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 20;\r\n    const providerList = await getProviderList(region, cache.tryGet);\r\n    const provider = providerList.find((p) => p.key === providerId);\r\n\r\n    const response = await getArchive(region, limit, null, providerId);\r\n    const list = parseList(region, response);\r\n\r\n    const items = await Promise.all(list.map((item) => parseItem(item, cache.tryGet)));\r\n\r\n    return {\r\n        title: `Yahoo 新聞 - ${provider?.title ?? ''}`,\r\n        link: provider?.link ?? `https://${region}.news.yahoo.com`,\r\n        image: 'https://s.yimg.com/cv/apiv2/social/images/yahoo_default_logo-1200x1200.png',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"4eAKA,MAAaA,EAAe,CACxB,KAAM,qCACN,WAAY,CAAC,aACb,QAAS,4CACT,WAAY,CAAE,OAAQ,6BAA8B,WAAY,4BAChE,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAEb,CACI,OAAQ,CAAC,wBAGjB,KAAM,OACN,YAAa,CAAC,SAAU,oBACxB,UACA,YAAa;;;;;;;;;;;;GAejB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,SAAQ,cAAe,EAAI,IAAI,QACvC,GAAI,CAAC,CAAC,KAAM,MAAM,SAAS,GACvB,MAAM,IAAIC,EAAsB,mBAAmB,KAGvD,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAC/E,EAAe,MAAM,EAAgB,EAAQC,EAAM,QACnD,EAAW,EAAa,KAAM,GAAM,EAAE,MAAQ,GAE9C,EAAW,MAAM,EAAW,EAAQ,EAAO,KAAM,GACjD,EAAO,EAAU,EAAQ,GAEzB,EAAQ,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAS,EAAU,EAAMA,EAAM,UAEzE,MAAO,CACH,MAAO,cAAc,GAAU,OAAS,KACxC,KAAM,GAAU,MAAQ,WAAW,EAAO,iBAC1C,MAAO,6EACP,KAAM"}