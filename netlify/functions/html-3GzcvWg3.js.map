{"version":3,"file":"html-3GzcvWg3.js","names":["route: Route","ConfigNotFoundError","got","items: DataItem[]","item","cache","response","$"],"sources":["../../lib/routes/rsshub/transform/html.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\nimport sanitizeHtml from 'sanitize-html';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/transform/html/:url/:routeParams',\r\n    categories: ['other'],\r\n    example: '/rsshub/transform/html/https%3A%2F%2Fwechat2rss.xlab.app%2Fposts%2Flist%2F/item=div%5Bclass%3D%27post%2Dcontent%27%5D%20p%20a',\r\n    parameters: { url: '`encodeURIComponent`ed URL address', routeParams: 'Transformation rules, requires URL encode' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN',\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Transformation - HTML',\r\n    maintainers: ['ttttmr', 'hyoban'],\r\n    description: `Pass URL and transformation rules to convert HTML/JSON into RSS.\r\n\r\nSpecify options (in the format of query string) in parameter \\`routeParams\\` parameter to extract data from HTML.\r\n\r\n| Key                 | Meaning                                                                                                       | Accepted Values | Default                  |\r\n| ------------------- | ------------------------------------------------------------------------------------------------------------- | --------------- | ------------------------ |\r\n| \\`title\\`           | The title of the RSS                                                                                          | \\`string\\`      | Extract from \\`<title>\\` |\r\n| \\`item\\`            | The HTML elements as \\`item\\` using CSS selector                                                              | \\`string\\`      | html                     |\r\n| \\`itemTitle\\`       | The HTML elements as \\`title\\` in \\`item\\` using CSS selector                                                 | \\`string\\`      | \\`item\\` element         |\r\n| \\`itemTitleAttr\\`   | The attributes of \\`title\\` element as title                                                                  | \\`string\\`      | Element text             |\r\n| \\`itemLink\\`        | The HTML elements as \\`link\\` in \\`item\\` using CSS selector                                                  | \\`string\\`      | \\`item\\` element         |\r\n| \\`itemLinkAttr\\`    | The attributes of \\`link\\` element as link                                                                    | \\`string\\`      | \\`href\\`                 |\r\n| \\`itemDesc\\`        | The HTML elements as \\`descrption\\` in \\`item\\` using CSS selector                                            | \\`string\\`      | \\`item\\` element         |\r\n| \\`itemDescAttr\\`    | The attributes of \\`descrption\\` element as description                                                       | \\`string\\`      | Element html             |\r\n| \\`itemPubDate\\`     | The HTML elements as \\`pubDate\\` in \\`item\\` using CSS selector                                               | \\`string\\`      | \\`item\\` element         |\r\n| \\`itemPubDateAttr\\` | The attributes of \\`pubDate\\` element as pubDate                                                              | \\`string\\`      | Element html             |\r\n| \\`itemContent\\`     | The HTML elements as \\`description\\` in \\`item\\` using CSS selector ( in \\`itemLink\\` page for full content ) | \\`string\\`      |                          |\r\n| \\`encoding\\`        | The encoding of the HTML content                                                                              | \\`string\\`      | utf-8                    |\r\n\r\n  Parameters parsing in the above example:\r\n\r\n| Parameter     | Value                                     |\r\n| ------------- | ----------------------------------------- |\r\n| \\`url\\`         | \\`https://wechat2rss.xlab.app/posts/list/\\` |\r\n| \\`routeParams\\` | \\`item=div[class='post-content'] p a\\`      |\r\n\r\n  Parsing of \\`routeParams\\` parameter:\r\n\r\n| Parameter | Value                           |\r\n| --------- | ------------------------------- |\r\n| \\`item\\`    | \\`div[class='post-content'] p a\\` |`,\r\n    handler: async (ctx) => {\r\n        if (!config.feature.allow_user_supply_unsafe_domain) {\r\n            throw new ConfigNotFoundError(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\r\n        }\r\n        const url = ctx.req.param('url');\r\n        const response = await got({\r\n            method: 'get',\r\n            url,\r\n            responseType: 'arrayBuffer',\r\n        });\r\n\r\n        const routeParams = new URLSearchParams(ctx.req.param('routeParams'));\r\n        const encoding = routeParams.get('encoding') || 'utf-8';\r\n        const decoder = new TextDecoder(encoding);\r\n\r\n        const $ = load(decoder.decode(response.data));\r\n        const rssTitle = routeParams.get('title') || $('title').text();\r\n        const item = routeParams.get('item') || 'html';\r\n        let items: DataItem[] = $(item)\r\n            .toArray()\r\n            .slice(0, 20)\r\n            .map((item) => {\r\n                try {\r\n                    item = $(item);\r\n\r\n                    const titleEle = routeParams.get('itemTitle') ? item.find(routeParams.get('itemTitle')) : item;\r\n                    const title = routeParams.get('itemTitleAttr') ? titleEle.attr(routeParams.get('itemTitleAttr')) : titleEle.text();\r\n\r\n                    let link;\r\n                    const linkEle = routeParams.get('itemLink') ? item.find(routeParams.get('itemLink')) : item;\r\n                    if (routeParams.get('itemLinkAttr')) {\r\n                        link = linkEle.attr(routeParams.get('itemLinkAttr'));\r\n                    } else {\r\n                        link = linkEle.is('a') ? linkEle.attr('href') : linkEle.find('a').attr('href');\r\n                    }\r\n                    // 补全绝对链接或相对链接\r\n                    link = link.trim();\r\n                    if (link && !link.startsWith('http')) {\r\n                        link = new URL(link, url).href;\r\n                    }\r\n\r\n                    const descEle = routeParams.get('itemDesc') ? item.find(routeParams.get('itemDesc')) : item;\r\n                    const desc = routeParams.get('itemDescAttr') ? descEle.attr(routeParams.get('itemDescAttr')) : descEle.html();\r\n\r\n                    const pubDateEle = routeParams.get('itemPubDate') ? item.find(routeParams.get('itemPubDate')) : item;\r\n                    const pubDate = routeParams.get('itemPubDateAttr') ? pubDateEle.attr(routeParams.get('itemPubDateAttr')) : pubDateEle.html();\r\n\r\n                    return {\r\n                        title,\r\n                        link,\r\n                        description: desc,\r\n                        pubDate,\r\n                    };\r\n                } catch {\r\n                    return null;\r\n                }\r\n            })\r\n            .filter((i) => !!i);\r\n\r\n        const itemContentSelector = routeParams.get('itemContent');\r\n        if (itemContentSelector) {\r\n            items = await Promise.all(\r\n                items.map((item) => {\r\n                    if (!item.link) {\r\n                        return item;\r\n                    }\r\n\r\n                    return cache.tryGet(`transform:${item.link}:${itemContentSelector}`, async () => {\r\n                        const response = await got({\r\n                            method: 'get',\r\n                            url: item.link,\r\n                            responseType: 'arrayBuffer',\r\n                        });\r\n                        if (!response || typeof response === 'string') {\r\n                            return item;\r\n                        }\r\n\r\n                        const $ = load(decoder.decode(response.data));\r\n                        const content = $(itemContentSelector).html();\r\n                        if (!content) {\r\n                            return item;\r\n                        }\r\n\r\n                        item.description = sanitizeHtml(content, { allowedTags: [...sanitizeHtml.defaults.allowedTags, 'img'] });\r\n\r\n                        return item;\r\n                    });\r\n                })\r\n            );\r\n        }\r\n\r\n        return {\r\n            title: rssTitle,\r\n            link: url,\r\n            description: `Proxy ${url}`,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"2aAQA,MAAaA,EAAe,CACxB,KAAM,oCACN,WAAY,CAAC,SACb,QAAS,gIACT,WAAY,CAAE,IAAK,qCAAsC,YAAa,6CACtE,SAAU,CACN,cAAe,CACX,CACI,KAAM,kCACN,YAAa,KAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,wBACN,YAAa,CAAC,SAAU,UACxB,YAAa,0jGA+Bb,QAAS,KAAO,IAAQ,CACpB,GAAI,CAAC,EAAO,QAAQ,gCAChB,MAAM,IAAIC,EAAoB,mFAElC,IAAM,EAAM,EAAI,IAAI,MAAM,OACpB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,MACA,aAAc,gBAGZ,EAAc,IAAI,gBAAgB,EAAI,IAAI,MAAM,gBAChD,EAAW,EAAY,IAAI,aAAe,QAC1C,EAAU,IAAI,YAAY,GAE1B,EAAI,EAAK,EAAQ,OAAO,EAAS,OACjC,EAAW,EAAY,IAAI,UAAY,EAAE,SAAS,OAClD,EAAO,EAAY,IAAI,SAAW,OACpCC,EAAoB,EAAE,GACrB,UACA,MAAM,EAAG,IACT,IAAK,GAAS,CACX,GAAI,CACA,EAAO,EAAEC,GAET,IAAM,EAAW,EAAY,IAAI,aAAeA,EAAK,KAAK,EAAY,IAAI,cAAgBA,EACpF,EAAQ,EAAY,IAAI,iBAAmB,EAAS,KAAK,EAAY,IAAI,kBAAoB,EAAS,OAExG,EACE,EAAU,EAAY,IAAI,YAAcA,EAAK,KAAK,EAAY,IAAI,aAAeA,EACvF,AAGI,EAHA,EAAY,IAAI,gBACT,EAAQ,KAAK,EAAY,IAAI,iBAE7B,EAAQ,GAAG,KAAO,EAAQ,KAAK,QAAU,EAAQ,KAAK,KAAK,KAAK,QAG3E,EAAO,EAAK,OACR,GAAQ,CAAC,EAAK,WAAW,UACzB,EAAO,IAAI,IAAI,EAAM,GAAK,MAG9B,IAAM,EAAU,EAAY,IAAI,YAAcA,EAAK,KAAK,EAAY,IAAI,aAAeA,EACjF,EAAO,EAAY,IAAI,gBAAkB,EAAQ,KAAK,EAAY,IAAI,iBAAmB,EAAQ,OAEjG,EAAa,EAAY,IAAI,eAAiBA,EAAK,KAAK,EAAY,IAAI,gBAAkBA,EAC1F,EAAU,EAAY,IAAI,mBAAqB,EAAW,KAAK,EAAY,IAAI,oBAAsB,EAAW,OAEtH,MAAO,CACH,QACA,OACA,YAAa,EACb,gBAEA,CACJ,OAAO,QAGd,OAAQ,GAAM,CAAC,CAAC,GAEf,EAAsB,EAAY,IAAI,eAgC5C,OA/BI,IACA,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACFA,EAAK,KAIHC,EAAM,OAAO,aAAaD,EAAK,KAAK,GAAG,IAAuB,SAAY,CAC7E,IAAME,EAAW,MAAMJ,EAAI,CACvB,OAAQ,MACR,IAAKE,EAAK,KACV,aAAc,gBAElB,GAAI,CAACE,GAAY,OAAOA,GAAa,SACjC,OAAOF,EAGX,IAAMG,EAAI,EAAK,EAAQ,OAAOD,EAAS,OACjC,EAAUC,EAAE,GAAqB,OAOvC,OANK,IAIL,EAAK,YAAc,EAAa,EAAS,CAAE,YAAa,CAAC,GAAG,EAAa,SAAS,YAAa,UAHpFH,IAhBJA,KA2BhB,CACH,MAAO,EACP,KAAM,EACN,YAAa,SAAS,IACtB,KAAM"}