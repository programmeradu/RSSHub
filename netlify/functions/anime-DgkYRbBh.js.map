{"version":3,"file":"anime-DgkYRbBh.js","names":["route: Route","ofetch","title"],"sources":["../../lib/routes/anime1/anime.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: 'anime/:category/:name',\r\n    name: 'Anime',\r\n    url: 'anime1.me',\r\n    maintainers: ['cxheng315'],\r\n    example: '/anime1/anime/2024年夏季/神之塔-第二季',\r\n    categories: ['anime'],\r\n    parameters: {\r\n        category: 'Anime1 Category',\r\n        name: 'Anime1 Name',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['anime1.me/category/:category/:name'],\r\n            target: '/anime/:category/:name',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { category, name } = ctx.req.param();\r\n\r\n    const response = await ofetch(`https://anime1.me/category/${category}/${name}`);\r\n\r\n    const $ = load(response);\r\n\r\n    const title = $('.page-title').text().trim();\r\n\r\n    const items = $('article')\r\n        .toArray()\r\n        .map((el) => {\r\n            const $el = $(el);\r\n            const title = $el.find('.entry-title a').text().trim();\r\n            return {\r\n                title,\r\n                link: $el.find('.entry-title a').attr('href'),\r\n                description: title,\r\n                pubDate: parseDate($el.find('time').attr('datetime') || ''),\r\n                itunes_item_image: $el.find('video').attr('poster'),\r\n            };\r\n        });\r\n\r\n    return {\r\n        title,\r\n        link: `https://anime1.me/category/${category}/${name}`,\r\n        description: title,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"+PAKA,MAAaA,EAAe,CACxB,KAAM,wBACN,KAAM,QACN,IAAK,YACL,YAAa,CAAC,aACd,QAAS,gCACT,WAAY,CAAC,SACb,WAAY,CACR,SAAU,kBACV,KAAM,eAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sCACT,OAAQ,2BAGhB,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAU,QAAS,EAAI,IAAI,QAE7B,EAAW,MAAMC,EAAO,8BAA8B,EAAS,GAAG,KAElE,EAAI,EAAK,GAET,EAAQ,EAAE,eAAe,OAAO,OAEhC,EAAQ,EAAE,WACX,UACA,IAAK,GAAO,CACT,IAAM,EAAM,EAAE,GACRC,EAAQ,EAAI,KAAK,kBAAkB,OAAO,OAChD,MAAO,CACH,MAAA,EACA,KAAM,EAAI,KAAK,kBAAkB,KAAK,QACtC,YAAaA,EACb,QAAS,EAAU,EAAI,KAAK,QAAQ,KAAK,aAAe,IACxD,kBAAmB,EAAI,KAAK,SAAS,KAAK,aAItD,MAAO,CACH,QACA,KAAM,8BAA8B,EAAS,GAAG,IAChD,YAAa,EACb,KAAM"}