{"version":3,"file":"jx-BPmgktqQ.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/cctv/jx.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/photo/jx',\r\n    categories: ['traditional-media'],\r\n    example: '/cctv/photo/jx',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['photo.cctv.com/jx', 'photo.cctv.com/'],\r\n        },\r\n    ],\r\n    name: '央视网图片《镜象》',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'photo.cctv.com/jx',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const rootUrl = 'https://photo.cctv.com';\r\n    const currentUrl = `${rootUrl}/jx/`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    const list = $('.textr a')\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 10)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            return {\r\n                title: item.text(),\r\n                link: item.attr('href'),\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n                const content = load(detailResponse.data);\r\n                const date = content('head')\r\n                    .html()\r\n                    .match(/publishDate =\"(.*) \";/)[1];\r\n                item.pubDate = date ? parseDate(date, 'YYYYMMDDHHmmss') : null;\r\n\r\n                item.description = content('.tujitop').html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '央视网图片《镜象》',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,qBACb,QAAS,iBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oBAAqB,qBAGtC,KAAM,YACN,YAAa,CAAC,WACd,UACA,IAAK,qBAGT,eAAe,EAAQ,EAAK,CACxB,IACM,EAAa,6BACb,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,YACV,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,IAC5E,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,OACZ,KAAM,EAAK,KAAK,WAItB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAER,EAAU,EAAK,EAAe,MAC9B,EAAO,EAAQ,QAChB,OACA,MAAM,yBAAyB,GAKpC,MAJA,GAAK,QAAU,EAAO,EAAU,EAAM,kBAAoB,KAE1D,EAAK,YAAc,EAAQ,YAAY,OAEhC,MAKnB,MAAO,CACH,MAAO,YACP,KAAM,EACN,KAAM"}