{"version":3,"file":"group-DR0W2ub7.js","names":["route: Route","got","cache","$"],"sources":["../../lib/routes/douban/other/group.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/group/:groupid/:type?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/douban/group/648102',\r\n    parameters: {\r\n        groupid: '豆瓣小组的 id',\r\n        type: {\r\n            description: '类型',\r\n            default: 'latest',\r\n            options: [\r\n                {\r\n                    label: '最新',\r\n                    value: 'latest',\r\n                },\r\n                {\r\n                    label: '最热',\r\n                    value: 'essence',\r\n                },\r\n                {\r\n                    label: '精华',\r\n                    value: 'elite',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.douban.com/group/:groupid'],\r\n            target: '/group/:groupid',\r\n        },\r\n    ],\r\n    name: '豆瓣小组',\r\n    maintainers: ['DIYgod'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const groupid = ctx.req.param('groupid');\r\n    const type = ctx.req.param('type');\r\n\r\n    const url = `https://www.douban.com/group/${groupid}/${type && type !== 'latest' ? `?type=${type}` : ''}`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const list = $('.olt tr:not(.th)').slice(0, 30).toArray();\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) => {\r\n            const $1 = $(item);\r\n            const result = {\r\n                title: $1.find('.title a').attr('title'),\r\n                author: $1.find('a').eq(1).text(),\r\n                link: $1.find('.title a').attr('href'),\r\n            };\r\n            return cache.tryGet(result.link, async () => {\r\n                try {\r\n                    const detailResponse = await got({\r\n                        method: 'get',\r\n                        url: result.link,\r\n                    });\r\n                    const $ = load(detailResponse.data);\r\n\r\n                    result.pubDate = $('.create-time').text();\r\n                    result.description = $('.rich-content').html();\r\n                    return result;\r\n                } catch {\r\n                    return result;\r\n                }\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `豆瓣小组-${$('h1').text().trim()}`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"kWAKA,MAAaA,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,gBACb,KAAM,EAAS,YACf,QAAS,uBACT,WAAY,CACR,QAAS,WACT,KAAM,CACF,YAAa,KACb,QAAS,SACT,QAAS,CACL,CACI,MAAO,KACP,MAAO,UAEX,CACI,MAAO,KACP,MAAO,WAEX,CACI,MAAO,KACP,MAAO,YAKvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iCACT,OAAQ,oBAGhB,KAAM,OACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,EAAI,IAAI,MAAM,WACxB,EAAO,EAAI,IAAI,MAAM,QAErB,EAAM,gCAAgC,EAAQ,GAAG,GAAQ,IAAS,SAAW,SAAS,IAAS,KAC/F,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,QAGE,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,oBAAoB,MAAM,EAAG,IAAI,UAE1C,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GAAS,CACf,IAAM,EAAK,EAAE,GACP,EAAS,CACX,MAAO,EAAG,KAAK,YAAY,KAAK,SAChC,OAAQ,EAAG,KAAK,KAAK,GAAG,GAAG,OAC3B,KAAM,EAAG,KAAK,YAAY,KAAK,SAEnC,OAAOC,EAAM,OAAO,EAAO,KAAM,SAAY,CACzC,GAAI,CACA,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAO,OAEVE,EAAI,EAAK,EAAe,MAI9B,MAFA,GAAO,QAAUA,EAAE,gBAAgB,OACnC,EAAO,YAAcA,EAAE,iBAAiB,OACjC,OACH,CACJ,OAAO,QAMvB,MAAO,CACH,MAAO,QAAQ,EAAE,MAAM,OAAO,SAC9B,KAAM,EACN,KAAM"}