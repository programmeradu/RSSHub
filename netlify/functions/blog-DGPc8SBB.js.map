{"version":3,"file":"blog-DGPc8SBB.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/nodejs/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:language?',\r\n    categories: ['programming'],\r\n    example: '/nodejs/blog',\r\n    parameters: { language: 'Language, see below, en by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['nodejs.org/:language/blog', 'nodejs.org/'],\r\n        },\r\n    ],\r\n    name: 'News',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `Official RSS Source: https://nodejs.org/en/feed/blog.xml\r\n\r\n| العربية | Catalan | Deutsch | Español | زبان فارسی |\r\n| ------- | ------- | ------- | ------- | ---------- |\r\n| ar      | ca      | de      | es      | fa         |\r\n\r\n| Français | Galego | Italiano | 日本語 | 한국어 |\r\n| -------- | ------ | -------- | ------ | ------ |\r\n| fr       | gl     | it       | ja     | ko     |\r\n\r\n| Português do Brasil | limba română | Русский | Türkçe | Українська |\r\n| ------------------- | ------------ | ------- | ------ | ---------- |\r\n| pt-br               | ro           | ru      | tr     | uk         |\r\n\r\n| 简体中文 | 繁體中文 |\r\n| -------- | -------- |\r\n| zh-cn    | zh-tw    |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const language = ctx.req.param('language') ?? 'en';\r\n\r\n    const rootUrl = 'https://nodejs.org';\r\n    const currentUrl = `${rootUrl}/${language}/blog`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    let items = $('article')\r\n        .toArray()\r\n        .map((article) => {\r\n            const $article = load(article);\r\n\r\n            const author = $article('footer p').text();\r\n            const pubDate = parseDate($article('footer time').attr('datetime'));\r\n\r\n            const title = $article('a[aria-label]').prop('aria-label');\r\n            const href = $article('a[aria-label]').attr('href');\r\n\r\n            return {\r\n                title,\r\n                link: `${rootUrl}${href}`,\r\n                author,\r\n                pubDate,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const $content = load(detailResponse.data);\r\n\r\n                item.description = $content('main').html();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'News - Node.js',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,eACb,QAAS,eACT,WAAY,CAAE,SAAU,sCACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,4BAA6B,iBAG9C,KAAM,OACN,YAAa,CAAC,WACd,UACA,YAAa;;;;;;;;;;;;;;;;0BAmBjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,KAExC,EAAU,qBACV,EAAa,GAAG,EAAQ,GAAG,EAAS,OAEpC,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,WACT,UACA,IAAK,GAAY,CACd,IAAM,EAAW,EAAK,GAEhB,EAAS,EAAS,YAAY,OAC9B,EAAU,EAAU,EAAS,eAAe,KAAK,aAEjD,EAAQ,EAAS,iBAAiB,KAAK,cACvC,EAAO,EAAS,iBAAiB,KAAK,QAE5C,MAAO,CACH,QACA,KAAM,GAAG,IAAU,IACnB,SACA,aAoBZ,MAhBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAW,EAAK,EAAe,MAGrC,MADA,GAAK,YAAc,EAAS,QAAQ,OAC7B,MAKZ,CACH,MAAO,iBACP,KAAM,EACN,KAAM"}