{"version":3,"file":"utils-BX6tXMI8.js","names":["ofetch"],"sources":["../../lib/routes/skebetter/utils.ts"],"sourcesContent":["import { DataItem } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport interface MediaUrl {\r\n    h: number;\r\n    w: number;\r\n    sh: number;\r\n    sw: number;\r\n    type: string;\r\n    media_id: string | null;\r\n    media_uri: string;\r\n    media_index: number;\r\n}\r\n\r\nexport interface Tweet {\r\n    id: string;\r\n    screen_name: string;\r\n    series_id?: number;\r\n    text: string;\r\n    date: string;\r\n    img: string;\r\n    user_name: string;\r\n    fav: string;\r\n    retweet: string;\r\n    user_id: string;\r\n    media_url: string;\r\n    media_count: number;\r\n    hashtags?: Record<string, unknown>;\r\n    media_urls: MediaUrl[];\r\n    score: string;\r\n    rank: number;\r\n}\r\n\r\nexport const processItems = (data: Tweet[], type: 'index' | 'illust' | 'manga'): DataItem[] =>\r\n    data.map((item) => {\r\n        const baseAuthorUrl = `https://skebetter.com/author/${item.user_id}`;\r\n        const description = `\r\n            <p>‚ù§${item.fav}    üîÅ${item.retweet}</p>\r\n            ${item.media_urls.map((media) => `<img src=\"${media.media_uri}\" />`).join('')}\r\n        `;\r\n\r\n        if (type === 'manga') {\r\n            return {\r\n                title: item.text,\r\n                description,\r\n                author: item.user_name,\r\n                link: `https://skebetter.com/series/${item.series_id}`,\r\n            };\r\n        }\r\n\r\n        if (type === 'illust') {\r\n            return {\r\n                title: item.text,\r\n                description,\r\n                author: item.user_name,\r\n                link: `${baseAuthorUrl}/illust/${item.id}`,\r\n            };\r\n        }\r\n\r\n        // type === 'index'\r\n        return {\r\n            title: item.text,\r\n            description,\r\n            author: item.user_name,\r\n            link: item.series_id ? `https://skebetter.com/series/${item.series_id}` : `${baseAuthorUrl}/manga/${item.id}`,\r\n        };\r\n    });\r\n\r\nexport const fetchData = async (url: string, isManga: boolean = false) => {\r\n    const response = await ofetch(url);\r\n    return isManga ? (response as Tweet[]) : (response.tweet as Tweet[]);\r\n};\r\n"],"mappings":"sDAiCA,MAAa,GAAgB,EAAe,IACxC,EAAK,IAAK,GAAS,CACf,IAAM,EAAgB,gCAAgC,EAAK,UACrD,EAAc;kBACV,EAAK,IAAI,QAAQ,EAAK,QAAQ;cAClC,EAAK,WAAW,IAAK,GAAU,aAAa,EAAM,UAAU,OAAO,KAAK,IAAI;UAsBlF,OAnBI,IAAS,QACF,CACH,MAAO,EAAK,KACZ,cACA,OAAQ,EAAK,UACb,KAAM,gCAAgC,EAAK,aAI/C,IAAS,SACF,CACH,MAAO,EAAK,KACZ,cACA,OAAQ,EAAK,UACb,KAAM,GAAG,EAAc,UAAU,EAAK,MAKvC,CACH,MAAO,EAAK,KACZ,cACA,OAAQ,EAAK,UACb,KAAM,EAAK,UAAY,gCAAgC,EAAK,YAAc,GAAG,EAAc,SAAS,EAAK,QAIxG,EAAY,MAAO,EAAa,EAAmB,KAAU,CACtE,IAAM,EAAW,MAAMA,EAAO,GAC9B,OAAO,EAAW,EAAwB,EAAS"}