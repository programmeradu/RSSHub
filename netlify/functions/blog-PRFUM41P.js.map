{"version":3,"file":"blog-PRFUM41P.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/uber/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst rootURL = 'https://www.uber.com';\r\nconst apiURL = 'https://blogapi.uber.com';\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:maxPage?',\r\n    categories: ['blog'],\r\n    example: '/uber/blog',\r\n    parameters: { maxPage: 'max number of pages to retrieve, default to 1 page at most' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.uber.com/:language/blog/engineering', 'www.uber.com/:language/blog'],\r\n            target: '/blog',\r\n        },\r\n    ],\r\n    name: 'Engineering',\r\n    maintainers: ['hulb'],\r\n    handler,\r\n    url: 'www.uber.com/blog/pittsburgh/engineering',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    let maxPage = Number(ctx.req.param('maxPage'));\r\n    if (Number.isNaN(maxPage)) {\r\n        maxPage = 1;\r\n    }\r\n\r\n    let pages = await Promise.all(\r\n        [...Array.from({ length: maxPage }).keys()].map((pageIdx) =>\r\n            got(`${apiURL}/wp-json/blog/v1/data`, {\r\n                searchParams: {\r\n                    page: pageIdx + 1,\r\n                    parent: 'pittsburgh',\r\n                    slug: 'engineering',\r\n                },\r\n            })\r\n        )\r\n    );\r\n    pages = pages.map((page) => page.data);\r\n\r\n    const result = await Promise.all(\r\n        pages.map((page) =>\r\n            Promise.all(\r\n                page.posts.map((post) =>\r\n                    cache.tryGet(`${rootURL}${post.link}`, async () => {\r\n                        let { data: article } = await got(`${apiURL}/wp-json/blog/v1/data`, {\r\n                            searchParams: {\r\n                                slug: post.link.replaceAll('/', '').replace('blog', ''),\r\n                            },\r\n                        });\r\n                        article = article.article;\r\n\r\n                        return {\r\n                            link: article.link,\r\n                            title: article.title,\r\n                            description: article.content,\r\n                            pubDate: parseDate(article.created),\r\n                            author: article.author,\r\n                            category: article.categories.map((category) => category.category_name),\r\n                        };\r\n                    })\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `Uber Engineering Blog`,\r\n        link: rootURL + '/blog/engineering',\r\n        description: 'The technology behind Uber Engineering',\r\n        item: result.flat(),\r\n    };\r\n}\r\n"],"mappings":"yUAKA,MAAM,EAAU,uBACV,EAAS,2BAEFA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,QACb,QAAS,aACT,WAAY,CAAE,QAAS,8DACvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0CAA2C,+BACpD,OAAQ,UAGhB,KAAM,cACN,YAAa,CAAC,QACd,UACA,IAAK,4CAGT,eAAe,EAAQ,EAAK,CACxB,IAAI,EAAU,OAAO,EAAI,IAAI,MAAM,YAC/B,OAAO,MAAM,KACb,EAAU,GAGd,IAAI,EAAQ,MAAM,QAAQ,IACtB,CAAC,GAAG,MAAM,KAAK,CAAE,OAAQ,IAAW,QAAQ,IAAK,GAC7CC,EAAI,GAAG,EAAO,uBAAwB,CAClC,aAAc,CACV,KAAM,EAAU,EAChB,OAAQ,aACR,KAAM,mBAKtB,EAAQ,EAAM,IAAK,GAAS,EAAK,MAEjC,IAAM,EAAS,MAAM,QAAQ,IACzB,EAAM,IAAK,GACP,QAAQ,IACJ,EAAK,MAAM,IAAK,GACZC,EAAM,OAAO,GAAG,IAAU,EAAK,OAAQ,SAAY,CAC/C,GAAI,CAAE,KAAM,GAAY,MAAMD,EAAI,GAAG,EAAO,uBAAwB,CAChE,aAAc,CACV,KAAM,EAAK,KAAK,WAAW,IAAK,IAAI,QAAQ,OAAQ,OAK5D,MAFA,GAAU,EAAQ,QAEX,CACH,KAAM,EAAQ,KACd,MAAO,EAAQ,MACf,YAAa,EAAQ,QACrB,QAAS,EAAU,EAAQ,SAC3B,OAAQ,EAAQ,OAChB,SAAU,EAAQ,WAAW,IAAK,GAAa,EAAS,sBAQhF,MAAO,CACH,MAAO,wBACP,KAAM,EAAU,oBAChB,YAAa,yCACb,KAAM,EAAO"}