{"version":3,"file":"the-CSbo1dkQ.js","names":["filterKeys: Record<string, string>","filterApiKeys: Record<string, string | undefined>","filterPairs","key","filters","response","got"],"sources":["../../lib/routes/the/util.ts","../../lib/routes/the/index.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nconst apiSlug = 'wp-json/wp/v2';\r\n\r\ninterface Filter {\r\n    id: string;\r\n    name: string;\r\n    slug: string;\r\n}\r\n\r\nconst filterKeys: Record<string, string> = {\r\n    search: 's',\r\n};\r\n\r\nconst filterApiKeys: Record<string, string | undefined> = {\r\n    category: 'categories',\r\n    tag: 'tags',\r\n    search: undefined,\r\n};\r\n\r\nconst filterApiKeysWithNoId = new Set(['search']);\r\n\r\n/**\r\n * Bake filter search parameters.\r\n *\r\n * @param filterPairs - The filter pairs object.\r\n *                      e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n * @param pairKey - The filter pair key.\r\n *                  e.g. `{ id: ..., name: ..., slug: ... }`.\r\n * @param isApi - Indicates if the search parameters are for API.\r\n * @returns The baked filter search parameters.\r\n */\r\nconst bakeFilterSearchParams = (filterPairs: Record<string, Filter[] | string[]>, pairKey: string, isApi: boolean = false): URLSearchParams => {\r\n    /**\r\n     * Bake filters recursively.\r\n     *\r\n     * @param filterPairs - The filter pairs object.\r\n     *                      e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n     * @param filterSearchParams - The filter search parameters.\r\n     *                             e.g. `category=a,b&tag=c`.\r\n     * @returns The baked filter search parameters.\r\n     *          e.g. `category=a,b&tag=c`.\r\n     */\r\n    const bakeFilters = (filterPairs: Record<string, Filter[] | string[]>, filterSearchParams: URLSearchParams): URLSearchParams => {\r\n        const keys = Object.keys(filterPairs).filter((key) => filterPairs[key]?.length > 0 && (isApi ? Object.hasOwn(filterApiKeys, key) : Object.hasOwn(filterKeys, key)));\r\n\r\n        if (keys.length === 0) {\r\n            return filterSearchParams;\r\n        }\r\n\r\n        const key = keys[0];\r\n        const pairs = filterPairs[key];\r\n\r\n        const originalFilters = { ...filterPairs };\r\n        delete originalFilters[key];\r\n\r\n        const filterKey = getFilterKeyForSearchParams(key, isApi);\r\n        const pairValues = pairs.map((pair) => (Object.hasOwn(pair, pairKey) ? pair[pairKey] : pair));\r\n\r\n        if (filterKey) {\r\n            filterSearchParams.append(filterKey, pairValues.join(','));\r\n        }\r\n\r\n        return bakeFilters(originalFilters, filterSearchParams);\r\n    };\r\n\r\n    return bakeFilters(filterPairs, new URLSearchParams());\r\n};\r\n\r\n/**\r\n * Bake filters with pair.\r\n *\r\n * @param filters - The filters object.\r\n *                  e.g. `{ category: [ a, b ], tag: [ c ] }`.\r\n * @returns The baked filters.\r\n *          e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n */\r\nconst bakeFiltersWithPair = async (filters: Record<string, string[]>, rootUrl: string) => {\r\n    /**\r\n     * Bake keywords recursively.\r\n     *\r\n     * @param key - The key.\r\n     *              e.g. `category` or `tag`.\r\n     * @param keywords - The keywords.\r\n     *                   e.g. `[ a, b ]`.\r\n     * @returns The baked keywords.\r\n     *          e.g. `[ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ]`.\r\n     */\r\n    const bakeKeywords = async (key: string, keywords: string[]) => {\r\n        if (keywords.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        const [keyword, ...rest] = keywords;\r\n\r\n        const filter = await getFilterByKeyAndKeyword(key, keyword, rootUrl);\r\n\r\n        return [\r\n            ...(filter?.id && filter?.slug\r\n                ? [\r\n                      {\r\n                          id: filter.id,\r\n                          name: filter.name,\r\n                          slug: filter.slug,\r\n                      },\r\n                  ]\r\n                : []),\r\n            ...(await bakeKeywords(key, rest)),\r\n        ];\r\n    };\r\n\r\n    /**\r\n     * Bake filters recursively.\r\n     *\r\n     * @param filters - The filters object.\r\n     *                  e.g. `{ category: [ a, b ], tag: [ c ] }`.\r\n     * @param filtersWithPair - The filters with pairs.\r\n     *                          e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n     * @returns The baked filters.\r\n     *          e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n     */\r\n    const bakeFilters = async (filters: Record<string, string[]>, filtersWithPair: Record<string, Filter[]>) => {\r\n        const keys = Object.keys(filters);\r\n\r\n        if (keys.length === 0) {\r\n            return filtersWithPair;\r\n        }\r\n\r\n        const key = keys[0];\r\n        const keywords = filters[key];\r\n\r\n        const originalFilters = { ...filters };\r\n        delete originalFilters[key];\r\n\r\n        return bakeFilters(originalFilters, {\r\n            ...filtersWithPair,\r\n            [key]: filterApiKeysWithNoId.has(key) ? keywords : await bakeKeywords(key, keywords),\r\n        });\r\n    };\r\n\r\n    return await bakeFilters(filters, {});\r\n};\r\n\r\n/**\r\n * Bake URL with search parameters.\r\n *\r\n * @param url - The URL.\r\n * @param rootUrl - The root URL.\r\n * @param searchParams - The search parameters.\r\n * @returns The baked URL.\r\n */\r\nconst bakeUrl = (url: string, rootUrl: string, searchParams: URLSearchParams = new URLSearchParams()): string => {\r\n    const searchParamsStr = searchParams.toString();\r\n    const searchParamsSuffix = searchParamsStr ? `?${searchParamsStr}` : '';\r\n\r\n    return `${rootUrl}/${url}${searchParamsSuffix}`;\r\n};\r\n\r\n/**\r\n * Fetch data from the specified URL.\r\n *\r\n * @param url - The URL to fetch data from.\r\n * @param rootUrl - The root URL.\r\n * @returns A promise that resolves to an object containing the fetched data to be added into `ctx.state.data`.\r\n */\r\nconst fetchData = async (url: string, rootUrl: string): Promise<object> => {\r\n    /**\r\n     * Request URLs recursively.\r\n     *\r\n     * @param urls - The URLs to request.\r\n     * @returns A promise that resolves to the response data or undefined if no response is available.\r\n     */\r\n    const requestUrls = async (urls: string[]): Promise<string | undefined> => {\r\n        if (urls.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const [currentUrl, ...remainingUrls] = urls;\r\n        try {\r\n            const { data: response } = await got.get(currentUrl);\r\n            return response;\r\n        } catch {\r\n            return requestUrls(remainingUrls);\r\n        }\r\n    };\r\n\r\n    const response = await requestUrls([url, rootUrl]);\r\n\r\n    if (!response) {\r\n        return {};\r\n    }\r\n\r\n    const $ = load(response);\r\n\r\n    const title = $('title').first().text();\r\n    const image = new URL('wp-content/uploads/site_logo.png', rootUrl).href;\r\n\r\n    return {\r\n        title,\r\n        description: $('meta[property=\"og:description\"]').attr('content') || $('meta[name=\"description\"]').attr('content'),\r\n        link: url,\r\n        allowEmpty: true,\r\n        image,\r\n        author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        language: $('html').attr('lang'),\r\n    };\r\n};\r\n\r\n/**\r\n * Get filter by key and keyword.\r\n *\r\n * @param key - The key.\r\n *              e.g. `category` or `tag`.\r\n * @param keyword - The keywords.\r\n *                  e.g. `keyword1`.\r\n * @returns A promise that resolves to the filter object if found, or undefined if not found.\r\n */\r\nconst getFilterByKeyAndKeyword = async (key: string, keyword: string, rootUrl: string): Promise<Filter | undefined> => {\r\n    const apiFilterUrl = `${rootUrl}/${apiSlug}/${getFilterKeyForSearchParams(key, true)}`;\r\n\r\n    const { data: response } = await got(apiFilterUrl, {\r\n        searchParams: {\r\n            search: keyword,\r\n        },\r\n    });\r\n\r\n    return response.length > 0 ? response[0] : undefined;\r\n};\r\n\r\n/**\r\n * Get filter key for search parameters.\r\n *\r\n * @param key - The key. e.g. `category` or `tag`.\r\n * @param isApi - Indicates whether the key is for the API.\r\n * @returns The filter key for search parameters, or undefined if not found.\r\n *          e.g. `categories` or `tags`.\r\n */\r\nconst getFilterKeyForSearchParams = (key: string, isApi: boolean = false): string | undefined => {\r\n    const keys = isApi ? filterApiKeys : filterKeys;\r\n\r\n    return Object.hasOwn(keys, key) ? (keys[key] ?? key) : undefined;\r\n};\r\n\r\n/**\r\n * Get filter parameters for URL.\r\n *\r\n * @param filterPairs - The filter pairs object.\r\n *                      e.g. `{ category: [ { id: ..., name: ..., slug: ... }, { id: ..., name: ..., slug: ... } ], tag: [ { id: ..., name: ..., slug: ... } ] }`.\r\n * @returns The filter parameters for the URL, or undefined if no filters are available.\r\n */\r\nconst getFilterParamsForUrl = (filterPairs: Record<string, Filter[]>): string | undefined => {\r\n    const keys = Object.keys(filterPairs).filter((key) => filterPairs[key].length > 0 && !Object.hasOwn(filterKeys, key));\r\n\r\n    if (keys.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const key = keys[0];\r\n\r\n    return filterPairs[key].map((pair) => pair.slug).join('/');\r\n};\r\n\r\n/**\r\n * Parses a filter string into a filters object.\r\n *\r\n * @param filterStr - The filter string to parse.\r\n *                    e.g. `category/a,b/tag/c`.\r\n * @returns The parsed filters object.\r\n *          e.g. `{ category: [ 'a', 'b' ], tag: [ 'c' ] }`.\r\n */\r\nconst parseFilterStr = (filterStr: string | undefined): Record<string, string[]> => {\r\n    /**\r\n     * Recursively parses a filter string.\r\n     *\r\n     * @param remainingStr - The remaining filter string to parse.\r\n     *                       e.g. `category/a,b/tag/c`.\r\n     * @param filters - The accumulated filters object.\r\n     *                  e.g. `{ category: [ a, b ], tag: [ c ] }`.\r\n     * @param currentKey - The current filter key.\r\n     *                     e.g. `category` or `tag`.\r\n     * @returns The parsed filters object.\r\n     */\r\n    const parseStr = (remainingStr: string | undefined, filters: Record<string, string[]> = {}, currentKey?: string): Record<string, string[]> => {\r\n        if (!remainingStr) {\r\n            return filters;\r\n        }\r\n\r\n        const [word, ...rest] = remainingStr.split(/\\/|,/);\r\n\r\n        const isKey = Object.hasOwn(filterApiKeys, word);\r\n        const key = isKey ? word : currentKey;\r\n\r\n        const newFilters = key\r\n            ? {\r\n                  ...filters,\r\n                  [key]: [...(filters[key] || []), ...(isKey ? [] : [word])],\r\n              }\r\n            : filters;\r\n\r\n        return parseStr(rest.join('/'), newFilters, key);\r\n    };\r\n\r\n    return parseStr(filterStr, {});\r\n};\r\n\r\nexport { apiSlug, bakeFilterSearchParams, bakeFiltersWithPair, bakeUrl, fetchData, getFilterParamsForUrl, parseFilterStr };\r\n","import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nimport { apiSlug, bakeFilterSearchParams, bakeFiltersWithPair, bakeUrl, fetchData, getFilterParamsForUrl, parseFilterStr } from './util';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const handler = async (ctx) => {\r\n    const { filter } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 40;\r\n\r\n    const rootUrl = 'https://the.bi/s';\r\n    const filters = parseFilterStr(filter);\r\n    const filtersWithPair = await bakeFiltersWithPair(filters, rootUrl);\r\n\r\n    const searchParams = bakeFilterSearchParams(filters, 'name', false);\r\n    const apiSearchParams = bakeFilterSearchParams(filtersWithPair, 'id', true);\r\n\r\n    apiSearchParams.append('_embed', 'true');\r\n    apiSearchParams.append('per_page', String(limit));\r\n    apiSearchParams.append('page', '1');\r\n\r\n    const apiUrl = bakeUrl(`${apiSlug}/posts`, rootUrl, apiSearchParams);\r\n    const currentUrl = bakeUrl(getFilterParamsForUrl(filtersWithPair) ?? '', rootUrl, searchParams);\r\n\r\n    const { data: response } = await got(apiUrl);\r\n\r\n    const items = response.slice(0, limit).map((item) => {\r\n        const terminologies = item._embedded['wp:term'];\r\n        const guid = item.guid?.rendered ?? item.guid;\r\n\r\n        const $$ = load(item.content?.rendered ?? item.content);\r\n\r\n        const publication = $$(\"a[id='publication']\").text(); // Must be obtained before being removed\r\n\r\n        const image = $$('img#poster').prop('data-srcset');\r\n\r\n        $$('figure.graf').each((_, el) => {\r\n            el = $$(el);\r\n\r\n            const imgEl = el.find('img');\r\n\r\n            el.replaceWith(\r\n                art(path.join(__dirname, 'templates/description.art'), {\r\n                    images: imgEl\r\n                        ? [\r\n                              {\r\n                                  src: imgEl.prop('src'),\r\n                                  width: imgEl.prop('width'),\r\n                                  height: imgEl.prop('height'),\r\n                              },\r\n                          ]\r\n                        : undefined,\r\n                })\r\n            );\r\n        });\r\n\r\n        const title = $$('h1').text();\r\n        const intro = $$('h2').text();\r\n\r\n        $$('h1').parent().remove();\r\n\r\n        const description = art(path.join(__dirname, 'templates/description.art'), {\r\n            images: image\r\n                ? [\r\n                      {\r\n                          src: image,\r\n                      },\r\n                  ]\r\n                : undefined,\r\n            intro,\r\n            description: $$.html(),\r\n        });\r\n\r\n        return {\r\n            title: item.title?.rendered ?? item.title ?? title,\r\n            description,\r\n            pubDate: timezone(parseDate(item.date_gmt), 0),\r\n            updated: timezone(parseDate(item.modified_gmt), 0),\r\n            link: item.link,\r\n            category: [...new Set(terminologies.flat().map((c) => c.name))],\r\n            author: [...item._embedded.author, { name: publication }],\r\n            guid,\r\n            id: guid,\r\n            content: {\r\n                html: description,\r\n                text: $$.text(),\r\n            },\r\n        };\r\n    });\r\n\r\n    const data = await fetchData(currentUrl, rootUrl);\r\n\r\n    return {\r\n        ...data,\r\n        item: items,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:filter{.+}?',\r\n    name: '分类',\r\n    url: 'the.bi',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/the',\r\n    parameters: { filter: '过滤器，见下方描述' },\r\n    description: `::: tip\r\n  如果你想订阅特定类别或标签，可以在路由中填写 filter 参数。\\`/category/rawmw7dsta2jew\\` 可以实现订阅 [剩余价值](https://the.bi/s/rawmw7dsta2jew) 类别。此时，路由是 [\\`/the/category/rawmw7dsta2jew/\\`](https://rsshub.app/the/category/rawmw7dsta2jew).\r\n\r\n  你还可以订阅多个类别。\\`/category/rawmw7dsta2jew,rawbcvxkktdkq8/\\` 可以实现同时订阅 [剩余价值](https://the.bi/s/rawmw7dsta2jew) 和 [打江山](https://the.bi/s/rawbcvxkktdkq8) 两个类别。此时，路由是 [\\`/the/category/rawmw7dsta2jew,rawbcvxkktdkq8\\`](https://rsshub.app/the/category/rawmw7dsta2jew,rawbcvxkktdkq8).\r\n\r\n  类别和标签也可以合并订阅。\\`/category/rawmw7dsta2jew/tag/raweekl3na8trq\\` 订阅 [剩余价值](https://the.bi/s/rawmw7dsta2jew) 类别和 [动物](https://the.bi/s/raweekl3na8trq) 标签。此时，路由是 [\\`/the/category/rawmw7dsta2jew/tag/raweekl3na8trq\\`](https://rsshub.app/the/category/rawmw7dsta2jew/tag/raweekl3na8trq).\r\n\r\n  你还可以搜索关键字。\\`/search/中国\\` 搜索关键字 [中国](https://the.bi/s/?s=中国)。在这种情况下，路径是 [\\`/the/search/中国\\`](https://rsshub.app/the/search/中国).\r\n:::\r\n\r\n| 分类                                           | ID                                                               |\r\n| ---------------------------------------------- | ---------------------------------------------------------------- |\r\n| [时局图](https://the.bi/s/rawj7o4ypewv94)      | [rawj7o4ypewv94](https://rsshub.app/the/category/rawj7o4ypewv94) |\r\n| [剩余价值](https://the.bi/s/rawmw7dsta2jew)    | [rawmw7dsta2jew](https://rsshub.app/the/category/rawmw7dsta2jew) |\r\n| [打江山](https://the.bi/s/rawbcvxkktdkq8)      | [rawbcvxkktdkq8](https://rsshub.app/the/category/rawbcvxkktdkq8) |\r\n| [中国经济](https://the.bi/s/raw4krvx85dh27)    | [raw4krvx85dh27](https://rsshub.app/the/category/raw4krvx85dh27) |\r\n| [水深火热](https://the.bi/s/rawtn8jpsc6uvv)    | [rawtn8jpsc6uvv](https://rsshub.app/the/category/rawtn8jpsc6uvv) |\r\n| [东升西降](https://the.bi/s/rawai5kd4z15il)    | [rawai5kd4z15il](https://rsshub.app/the/category/rawai5kd4z15il) |\r\n| [大局 & 大棋](https://the.bi/s/raw2efkzejrsx8) | [raw2efkzejrsx8](https://rsshub.app/the/category/raw2efkzejrsx8) |\r\n| [境外势力](https://the.bi/s/rawmpalhnlphuc)    | [rawmpalhnlphuc](https://rsshub.app/the/category/rawmpalhnlphuc) |\r\n| [副刊](https://the.bi/s/rawxght2jr2u5z)        | [rawxght2jr2u5z](https://rsshub.app/the/category/rawxght2jr2u5z) |\r\n| [天高地厚](https://the.bi/s/rawrsnh9zakqdx)    | [rawrsnh9zakqdx](https://rsshub.app/the/category/rawrsnh9zakqdx) |\r\n| [Oyster](https://the.bi/s/rawdhl9hugdfn9)      | [rawdhl9hugdfn9](https://rsshub.app/the/category/rawdhl9hugdfn9) |\r\n  `,\r\n    categories: ['new-media'],\r\n\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['the.bi/s/:category?'],\r\n            target: (params) => {\r\n                const category = params.category;\r\n\r\n                return `/the${category ? `/category/${category}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '时局图',\r\n            source: ['the.bi/s/rawj7o4ypewv94'],\r\n            target: '/category/rawj7o4ypewv94',\r\n        },\r\n        {\r\n            title: '剩余价值',\r\n            source: ['the.bi/s/rawmw7dsta2jew'],\r\n            target: '/category/rawmw7dsta2jew',\r\n        },\r\n        {\r\n            title: '打江山',\r\n            source: ['the.bi/s/rawbcvxkktdkq8'],\r\n            target: '/category/rawbcvxkktdkq8',\r\n        },\r\n        {\r\n            title: '中国经济',\r\n            source: ['the.bi/s/raw4krvx85dh27'],\r\n            target: '/category/raw4krvx85dh27',\r\n        },\r\n        {\r\n            title: '水深火热',\r\n            source: ['the.bi/s/rawtn8jpsc6uvv'],\r\n            target: '/category/rawtn8jpsc6uvv',\r\n        },\r\n        {\r\n            title: '东升西降',\r\n            source: ['the.bi/s/rawai5kd4z15il'],\r\n            target: '/category/rawai5kd4z15il',\r\n        },\r\n        {\r\n            title: '大局 & 大棋',\r\n            source: ['the.bi/s/raw2efkzejrsx8'],\r\n            target: '/category/raw2efkzejrsx8',\r\n        },\r\n        {\r\n            title: '境外势力',\r\n            source: ['the.bi/s/rawmpalhnlphuc'],\r\n            target: '/category/rawmpalhnlphuc',\r\n        },\r\n        {\r\n            title: '副刊',\r\n            source: ['the.bi/s/rawxght2jr2u5z'],\r\n            target: '/category/rawxght2jr2u5z',\r\n        },\r\n        {\r\n            title: '天高地厚',\r\n            source: ['the.bi/s/rawrsnh9zakqdx'],\r\n            target: '/category/rawrsnh9zakqdx',\r\n        },\r\n        {\r\n            title: 'Oyster',\r\n            source: ['the.bi/s/rawdhl9hugdfn9'],\r\n            target: '/category/rawdhl9hugdfn9',\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"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"}