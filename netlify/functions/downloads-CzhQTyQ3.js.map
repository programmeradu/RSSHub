{"version":3,"file":"downloads-CzhQTyQ3.js","names":["route: Route","got","data","url"],"sources":["../../lib/routes/sony/downloads.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nconst host = 'https://www.sony.com';\r\nexport const route: Route = {\r\n    path: '/downloads/:productType/:productId',\r\n    categories: ['program-update'],\r\n    example: '/sony/downloads/product/nw-wm1am2',\r\n    parameters: { productType: 'product type', productId: 'product id' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['sony.com/electronics/support/:productType/:productId/downloads'],\r\n        },\r\n    ],\r\n    name: 'Software Downloads',\r\n    maintainers: ['EthanWng97'],\r\n    handler,\r\n    description: `::: tip\r\n  Open \\`https://www.sony.com/electronics/support\\` and search for the corresponding product, such as \\`Sony A7M4\\`, the website corresponding to which is \\`https://www.sony.com/electronics/support/e-mount-body-ilce-7-series/ilce-7m4/downloads\\`, where \\`productType\\` is \\`e-mount-body-ilce-7-series\\` and \\`productId\\` is \\`ilce-7m4\\`.\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { productType, productId } = ctx.req.param();\r\n    const url = `${host}/electronics/support/${productType}/${productId}/downloads`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n    });\r\n    const data = response.data;\r\n\r\n    const $ = load(data);\r\n    const contents = $('script:contains(\"window.__PRELOADED_STATE__.downloads\")').text();\r\n\r\n    const regex = /window\\.__PRELOADED_STATE__\\.downloads\\s*=\\s*({.*?});\\s*window\\.__PRELOADED_STATE__/s;\r\n\r\n    const match = contents.match(regex);\r\n    let results = {};\r\n    if (match) {\r\n        results = JSON.parse(match[1]).searchResults.results;\r\n    }\r\n    const list = results.map((item) => {\r\n        const data = {};\r\n        data.title = item.title;\r\n        data.pubDate = item.publicationDate;\r\n        const url = item.url;\r\n        if (url.startsWith('http')) {\r\n            data.url = url;\r\n        } else if (url.startsWith('//')) {\r\n            data.url = 'https:' + url;\r\n        } else {\r\n            data.url = host + url;\r\n        }\r\n        return data;\r\n    });\r\n    return {\r\n        title: `Sony - ${productId.toUpperCase()}`,\r\n        link: url,\r\n        description: `Sony - ${productId.toUpperCase()}`,\r\n        item: list.map((item) => ({\r\n            title: item.title,\r\n            guid: item.title + ' - ' + item.url,\r\n            link: item.url,\r\n            pubDate: item.pubDate,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"+PAGA,MAAM,EAAO,uBACAA,EAAe,CACxB,KAAM,qCACN,WAAY,CAAC,kBACb,QAAS,oCACT,WAAY,CAAE,YAAa,eAAgB,UAAW,cACtD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oEAGjB,KAAM,qBACN,YAAa,CAAC,cACd,UACA,YAAa,qVAKjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,cAAa,aAAc,EAAI,IAAI,QACrC,EAAM,GAAG,EAAK,uBAAuB,EAAY,GAAG,EAAU,YAC9D,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,QAEE,EAAO,EAAS,KAEhB,EAAI,EAAK,GACT,EAAW,EAAE,2DAA2D,OAExE,EAAQ,uFAER,EAAQ,EAAS,MAAM,GACzB,EAAU,GACV,IACA,EAAU,KAAK,MAAM,EAAM,IAAI,cAAc,SAEjD,IAAM,EAAO,EAAQ,IAAK,GAAS,CAC/B,IAAMC,EAAO,GACb,EAAK,MAAQ,EAAK,MAClB,EAAK,QAAU,EAAK,gBACpB,IAAMC,EAAM,EAAK,IAQjB,OAPIA,EAAI,WAAW,QACf,EAAK,IAAMA,EACJA,EAAI,WAAW,MACtB,EAAK,IAAM,SAAWA,EAEtB,EAAK,IAAM,EAAOA,EAEfD,IAEX,MAAO,CACH,MAAO,UAAU,EAAU,gBAC3B,KAAM,EACN,YAAa,UAAU,EAAU,gBACjC,KAAM,EAAK,IAAK,IAAU,CACtB,MAAO,EAAK,MACZ,KAAM,EAAK,MAAQ,MAAQ,EAAK,IAChC,KAAM,EAAK,IACX,QAAS,EAAK"}