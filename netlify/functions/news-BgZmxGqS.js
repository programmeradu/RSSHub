import"./esm-shims-Dqvxr0BZ.js";import"./config-Dl8a1sIg.js";import"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import{cache_default as e}from"./cache-kimkMTWJ.js";import"./parse-date-Bgabdhlb.js";import"./ofetch-Bzt0BXUH.js";import{got_default as t}from"./got-CdvI2yKX.js";import{baseUrl as n,fetchFriends as r,getPlurk as i}from"./utils-MqbSdmob.js";const a={path:`/news/:lang?`,categories:[`social-media`],example:`/plurk/news/:lang?`,parameters:{lang:"Language, see the table above, `en` by default"},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},radar:[{source:[`plurk.com/news`],target:`/news`}],name:`Plurk News`,maintainers:[`TonyRL`],handler:o,url:`plurk.com/news`};async function o(a){let{lang:o=`en`}=a.req.param(),{data:s}=await t(`${n}/PlurkTop/fetchOfficialPlurks`,{searchParams:{lang:o}}),c=s.map(e=>e.user_id),l=await r(c),u=await Promise.all(s.map(t=>i(`plurk:${t.plurk_id}`,t,l[t.user_id].display_name,e.tryGet)));return{title:`Plurk News - Plurk`,image:`https://s.plurk.com/2c1574c02566f3b06e91.png`,link:`${n}/news`,item:u}}export{a as route};
//# sourceMappingURL=news-BgZmxGqS.js.map