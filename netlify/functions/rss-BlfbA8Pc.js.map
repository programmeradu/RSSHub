{"version":3,"file":"rss-BlfbA8Pc.js","names":[],"sources":["../../lib/routes/uptimerobot/rss.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport Parser from 'rss-parser';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport dayjs from 'dayjs';\r\nimport { fallback, queryToBoolean } from '@/utils/readable-social';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\nconst titleRegex = /(.+)\\s+is\\s+([A-Z]+)\\s+\\((.+)\\)/;\r\n\r\nconst formatTime = (s) => {\r\n    const duration = dayjs.duration(s - 0, 'seconds');\r\n    const days = duration.days();\r\n    const hours = duration.hours();\r\n    const minutes = duration.minutes();\r\n    const seconds = duration.seconds();\r\n\r\n    if (days > 0) {\r\n        return `${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n    } else if (hours > 0) {\r\n        return `${hours}h ${minutes}m ${seconds}s`;\r\n    } else if (minutes > 0) {\r\n        return `${minutes}m ${seconds}s`;\r\n    } else {\r\n        return `${seconds}s`;\r\n    }\r\n};\r\n\r\nclass Monitor {\r\n    constructor(name, uptime = 0, downtime = 0) {\r\n        this.name = name;\r\n        this.uptime = uptime;\r\n        this.downtime = downtime;\r\n    }\r\n\r\n    uptimeRatio() {\r\n        return this.uptime / (this.uptime + this.downtime);\r\n    }\r\n\r\n    downtimeRatio() {\r\n        return this.downtime / (this.uptime + this.downtime);\r\n    }\r\n\r\n    up(time) {\r\n        this.uptime += time - 0;\r\n    }\r\n\r\n    down(time) {\r\n        this.downtime += time - 0;\r\n    }\r\n}\r\n\r\nconst rootURL = 'https://rss.uptimerobot.com';\r\n\r\nexport const route: Route = {\r\n    path: '/rss/:id/:routeParams?',\r\n    categories: ['forecast'],\r\n    example: '/uptimerobot/rss/u358785-e4323652448755805d668f1a66506f2f',\r\n    parameters: {\r\n        id: 'the last part of your RSS URL (e.g. `u358785-e4323652448755805d668f1a66506f2f` for `https://rss.uptimerobot.com/u358785-e4323652448755805d668f1a66506f2f`)',\r\n        routeParams: 'extra parameters, see the table below',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['rss.uptimerobot.com/:id'],\r\n            target: '/rss/:id',\r\n        },\r\n    ],\r\n    name: 'RSS',\r\n    maintainers: ['Rongronggg9'],\r\n    handler,\r\n    description: `| Key    | Description                                                              | Accepts        | Defaults to |\r\n| ------ | ------------------------------------------------------------------------ | -------------- | ----------- |\r\n| showID | Show monitor ID (disabling it will also disable link for each RSS entry) | 0/1/true/false | true        |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const routeParams = Object.fromEntries(new URLSearchParams(ctx.req.param('routeParams')));\r\n    const showID = fallback(undefined, queryToBoolean(routeParams.showID), true);\r\n\r\n    const rssUrl = `${rootURL}/${id}`;\r\n    const rss = await new Parser({\r\n        customFields: {\r\n            item: ['details:duration'],\r\n        },\r\n    }).parseURL(rssUrl);\r\n\r\n    const monitors = {};\r\n\r\n    const items = rss.items.toReversed().map((item) => {\r\n        const titleMatch = item.title.match(titleRegex);\r\n        if (!titleMatch) {\r\n            throw new InvalidParameterError('Unexpected title, please open an issue.');\r\n        }\r\n        const [monitorName, status, id] = titleMatch.slice(1);\r\n\r\n        if (id !== item.link) {\r\n            throw new InvalidParameterError('Monitor ID mismatch, please open an issue.');\r\n        }\r\n\r\n        // id could be a URL, a domain, an IP address, or a hex string. fix it\r\n        let link;\r\n        try {\r\n            link = !id.startsWith('http') && id.includes('.') ? new URL(`http://${id}`).href : new URL(id).href;\r\n        } catch {\r\n            // ignore\r\n        }\r\n\r\n        const duration = item['details:duration'];\r\n        const monitor = (monitors[monitorName] = monitors[monitorName] || new Monitor(monitorName));\r\n\r\n        if (status === 'UP') {\r\n            monitor.up(duration);\r\n        } else if (status === 'DOWN') {\r\n            monitor.down(duration);\r\n        } else {\r\n            throw new InvalidParameterError('Unexpected status, please open an issue.');\r\n        }\r\n\r\n        const desc = art(path.join(__dirname, 'templates/rss.art'), {\r\n            status,\r\n            link,\r\n            id: showID ? id : null,\r\n            duration: formatTime(duration),\r\n            uptime: formatTime(monitor.uptime),\r\n            downtime: formatTime(monitor.downtime),\r\n            uptime_ratio: Number(monitor.uptimeRatio()).toLocaleString(undefined, {\r\n                style: 'percent',\r\n                minimumFractionDigits: 2,\r\n            }),\r\n            details: item.content,\r\n        });\r\n\r\n        return {\r\n            ...item,\r\n            title: `[${status}] ${monitorName}`,\r\n            description: desc,\r\n            link: showID ? link : null,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: 'Uptime Robot - RSS (enhanced)',\r\n        description: rss.description,\r\n        link: rssUrl,\r\n        item: items,\r\n        image: 'https://uptimerobot.com/favicon.ico',\r\n    };\r\n}\r\n"],"mappings":"wVASA,MAAM,EAAa,kCAEb,EAAc,GAAM,CACtB,IAAM,EAAW,EAAM,SAAS,EAAI,EAAG,WACjC,EAAO,EAAS,OAChB,EAAQ,EAAS,QACjB,EAAU,EAAS,UACnB,EAAU,EAAS,UASrB,OAPA,EAAO,EACA,GAAG,EAAK,IAAI,EAAM,IAAI,EAAQ,IAAI,EAAQ,GAC1C,EAAQ,EACR,GAAG,EAAM,IAAI,EAAQ,IAAI,EAAQ,GACjC,EAAU,EACV,GAAG,EAAQ,IAAI,EAAQ,GAEvB,GAAG,EAAQ,IAI1B,IAAM,EAAN,KAAc,CACV,YAAY,EAAM,EAAS,EAAG,EAAW,EAAG,CACxC,KAAK,KAAO,EACZ,KAAK,OAAS,EACd,KAAK,SAAW,EAGpB,aAAc,CACV,OAAO,KAAK,QAAU,KAAK,OAAS,KAAK,UAG7C,eAAgB,CACZ,OAAO,KAAK,UAAY,KAAK,OAAS,KAAK,UAG/C,GAAG,EAAM,CACL,KAAK,QAAU,EAAO,EAG1B,KAAK,EAAM,CACP,KAAK,UAAY,EAAO,IAIhC,MAEa,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,YACb,QAAS,4DACT,WAAY,CACR,GAAI,6JACJ,YAAa,yCAEjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BACT,OAAQ,aAGhB,KAAM,MACN,YAAa,CAAC,eACd,UACA,YAAa;;uHAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAc,OAAO,YAAY,IAAI,gBAAgB,EAAI,IAAI,MAAM,iBACnE,EAAS,EAAS,IAAA,GAAW,EAAe,EAAY,QAAS,IAEjE,EAAS,+BAAc,IACvB,EAAM,MAAM,IAAI,EAAO,CACzB,aAAc,CACV,KAAM,CAAC,uBAEZ,SAAS,GAEN,EAAW,GAEX,EAAQ,EAAI,MAAM,aAAa,IAAK,GAAS,CAC/C,IAAM,EAAa,EAAK,MAAM,MAAM,GACpC,GAAI,CAAC,EACD,MAAM,IAAI,EAAsB,2CAEpC,GAAM,CAAC,EAAa,EAAQ,GAAM,EAAW,MAAM,GAEnD,GAAI,IAAO,EAAK,KACZ,MAAM,IAAI,EAAsB,8CAIpC,IAAI,EACJ,GAAI,CACA,EAAO,CAAC,EAAG,WAAW,SAAW,EAAG,SAAS,KAAO,IAAI,IAAI,UAAU,KAAM,KAAO,IAAI,IAAI,GAAI,UAC3F,EAIR,IAAM,EAAW,EAAK,oBAChB,EAAW,EAAS,GAAe,EAAS,IAAgB,IAAI,EAAQ,GAE9E,GAAI,IAAW,KACX,EAAQ,GAAG,WACJ,IAAW,OAClB,EAAQ,KAAK,QAEb,MAAM,IAAI,EAAsB,4CAGpC,IAAM,EAAO,EAAI,EAAA,KAAA,EAAA,8BAA2C,CACxD,SACA,OACA,GAAI,EAAS,EAAK,KAClB,SAAU,EAAW,GACrB,OAAQ,EAAW,EAAQ,QAC3B,SAAU,EAAW,EAAQ,UAC7B,aAAc,OAAO,EAAQ,eAAe,eAAe,IAAA,GAAW,CAClE,MAAO,UACP,sBAAuB,IAE3B,QAAS,EAAK,UAGlB,MAAO,CACH,GAAG,EACH,MAAO,IAAI,EAAO,IAAI,IACtB,YAAa,EACb,KAAM,EAAS,EAAO,QAI9B,MAAO,CACH,MAAO,gCACP,YAAa,EAAI,YACjB,KAAM,EACN,KAAM,EACN,MAAO"}