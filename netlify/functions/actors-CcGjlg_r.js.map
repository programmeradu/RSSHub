{"version":3,"file":"actors-CcGjlg_r.js","names":["route: Route","ofetch","link"],"sources":["../../lib/routes/eventernote/actors.ts"],"sourcesContent":["import { type DataItem, type Route, ViewType } from '@/types';\r\nimport type { Context } from 'hono';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\n\r\nconst dateStringRegex = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;\r\nconst timeStringRegexes = [\r\n    /開場 (?<openHr>\\d{2}):(?<openMin>\\d{2}) 開演 (?<startHr>\\d{2}):(?<startMin>\\d{2}) 終演 (?<closeHr>\\d{2}):(?<closeMin>\\d{2})/,\r\n    /開場 - 開演 (?<openHr>\\d{2}):(?<openMin>\\d{2}) 終演 (?<closeHr>\\d{2}):(?<closeMin>\\d{2})/,\r\n    /開場 (?<openHr>\\d{2}):(?<openMin>\\d{2}) 開演 - 終演 (?<closeHr>\\d{2}):(?<closeMin>\\d{2})/,\r\n];\r\n\r\nconst maxPages = 3;\r\nconst pageCount = 20;\r\n\r\nexport const route: Route = {\r\n    path: '/actors/:name/:id',\r\n    categories: ['anime'],\r\n    view: ViewType.Videos,\r\n    example: '/eventernote/actors/三森すずこ/2634',\r\n    parameters: { name: '声优姓名', id: '声优 ID' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.eventernote.com/actors/:name/:id', 'www.eventernote.com/actors/:name/:id/events'],\r\n        },\r\n    ],\r\n    name: '声优活动及演唱会',\r\n    maintainers: ['KTachibanaM'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const { name, id } = ctx.req.param();\r\n\r\n    const title = `${name}のイベント・ライブ情報一覧`;\r\n    const link = `https://www.eventernote.com/actors/${name}/${id}/events`;\r\n\r\n    const pageLinks = Array.from({ length: maxPages }, (_, i) => link + `?limit=${pageCount}&page=${i + 1}`);\r\n    const responses = await Promise.all(pageLinks.map((pageUrl) => ofetch(pageUrl)));\r\n\r\n    const events = responses.flatMap((response) => {\r\n        const $ = load(response);\r\n        const list = $('li.clearfix');\r\n\r\n        if (list.length === 0) {\r\n            return [] as DataItem[];\r\n        }\r\n\r\n        const pageItems = list\r\n            .toArray()\r\n            .map((event) => {\r\n                // extract event name\r\n                const eventName = $('div.event > h4 > a', event).text();\r\n\r\n                // extract event location\r\n                const eventLocation = $('div.event > div.place > a', event).text();\r\n\r\n                // extract event date\r\n                const dateMatches = $('div.date > p', event).text().match(dateStringRegex);\r\n                const eventYear = dateMatches?.groups?.year;\r\n                const eventMonth = dateMatches?.groups?.month;\r\n                const eventDay = dateMatches?.groups?.day;\r\n\r\n                // extract event time\r\n                const timeString = $('div.event > div.place > span.s', event).text();\r\n                let eventTimeObj = {\r\n                    openHr: null,\r\n                    openMin: null,\r\n                    startHr: null,\r\n                    startMin: null,\r\n                    closeHr: null,\r\n                    closeMin: null,\r\n                };\r\n                for (const r of timeStringRegexes) {\r\n                    const m = timeString.match(r);\r\n                    if (m === null) {\r\n                        continue;\r\n                    }\r\n                    eventTimeObj = {\r\n                        ...eventTimeObj,\r\n                        ...m.groups,\r\n                    };\r\n                }\r\n\r\n                // extract event link\r\n                const link = $('div.event > h4 > a', event).attr('href');\r\n\r\n                // compute event description\r\n                const eventDescription = `イベント ${eventName}\r\n開催場所 ${eventLocation}\r\n開場 ${eventYear}-${eventMonth}-${eventDay} ${eventTimeObj.openHr}:${eventTimeObj.openMin}\r\n開演 ${eventYear}-${eventMonth}-${eventDay} ${eventTimeObj.startHr}:${eventTimeObj.startMin}\r\n終演 ${eventYear}-${eventMonth}-${eventDay} ${eventTimeObj.closeHr}:${eventTimeObj.closeMin}\r\n`;\r\n\r\n                return {\r\n                    title: eventName,\r\n                    description: eventDescription,\r\n                    link,\r\n                } as DataItem;\r\n            })\r\n            .filter(Boolean) as DataItem[];\r\n\r\n        return pageItems;\r\n    });\r\n\r\n    return {\r\n        title,\r\n        link,\r\n        description: title,\r\n        language: 'ja' as const,\r\n        allowEmpty: true,\r\n        item: events,\r\n    };\r\n}\r\n"],"mappings":"yPAKA,MAAM,EAAkB,+CAClB,EAAoB,CACtB,wHACA,qFACA,sFAMSA,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,SACb,KAAM,EAAS,OACf,QAAS,iCACT,WAAY,CAAE,KAAM,OAAQ,GAAI,SAChC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uCAAwC,iDAGzD,KAAM,WACN,YAAa,CAAC,eACd,WAGJ,eAAe,EAAQ,EAAc,CACjC,GAAM,CAAE,OAAM,MAAO,EAAI,IAAI,QAEvB,EAAQ,GAAG,EAAK,eAChB,EAAO,sCAAsC,EAAK,GAAG,EAAG,SAExD,EAAY,MAAM,KAAK,CAAE,OAAQ,IAAa,EAAG,IAAM,EAAO,kBAA4B,EAAI,KAC9F,EAAY,MAAM,QAAQ,IAAI,EAAU,IAAK,GAAYC,EAAO,KAEhE,EAAS,EAAU,QAAS,GAAa,CAC3C,IAAM,EAAI,EAAK,GACT,EAAO,EAAE,eAEf,GAAI,EAAK,SAAW,EAChB,MAAO,GAGX,IAAM,EAAY,EACb,UACA,IAAK,GAAU,CAEZ,IAAM,EAAY,EAAE,qBAAsB,GAAO,OAG3C,EAAgB,EAAE,4BAA6B,GAAO,OAGtD,EAAc,EAAE,eAAgB,GAAO,OAAO,MAAM,GACpD,EAAY,GAAa,QAAQ,KACjC,EAAa,GAAa,QAAQ,MAClC,EAAW,GAAa,QAAQ,IAGhC,EAAa,EAAE,iCAAkC,GAAO,OAC1D,EAAe,CACf,OAAQ,KACR,QAAS,KACT,QAAS,KACT,SAAU,KACV,QAAS,KACT,SAAU,MAEd,IAAK,IAAM,KAAK,EAAmB,CAC/B,IAAM,EAAI,EAAW,MAAM,GAC3B,GAAI,IAAM,KACN,SAEJ,EAAe,CACX,GAAG,EACH,GAAG,EAAE,QAKb,IAAMC,EAAO,EAAE,qBAAsB,GAAO,KAAK,QAG3C,EAAmB,QAAQ,EAAU;OACpD,EAAc;KAChB,EAAU,GAAG,EAAW,GAAG,EAAS,GAAG,EAAa,OAAO,GAAG,EAAa,QAAQ;KACnF,EAAU,GAAG,EAAW,GAAG,EAAS,GAAG,EAAa,QAAQ,GAAG,EAAa,SAAS;KACrF,EAAU,GAAG,EAAW,GAAG,EAAS,GAAG,EAAa,QAAQ,GAAG,EAAa,SAAS;EAG1E,MAAO,CACH,MAAO,EACP,YAAa,EACb,KAAA,KAGP,OAAO,SAEZ,OAAO,IAGX,MAAO,CACH,QACA,OACA,YAAa,EACb,SAAU,KACV,WAAY,GACZ,KAAM"}