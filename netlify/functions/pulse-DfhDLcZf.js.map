{"version":3,"file":"pulse-DfhDLcZf.js","names":[],"sources":["../../lib/routes/github/pulse.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport { load } from 'cheerio';\r\nimport path from 'node:path';\r\nimport got from '@/utils/got';\r\nimport md5 from '@/utils/md5';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\n\r\nexport const route: Route = {\r\n    path: '/pulse/:user/:repo/:period?',\r\n    categories: ['programming'],\r\n    example: '/github/pulse/DIYgod/RSSHub',\r\n    parameters: {\r\n        user: 'User name',\r\n        repo: 'Repo name',\r\n        period: \"Time frame, selected from a repository's Pulse/Insights page. Possible values are: `daily`, `halfweekly`, `weekly`, or `monthly`. Default: `weekly`. If your RSS client supports it, consider aligning the polling frequency of the feed to the period.\",\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/:user/:repo/pulse', 'github.com/:user/:repo/pulse/:period'],\r\n        },\r\n    ],\r\n    name: 'Repo Pulse',\r\n    maintainers: ['jameschensmith'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { user, repo, period } = ctx.req.param();\r\n\r\n    const periods = ['daily', 'halfweekly', 'weekly', 'monthly'];\r\n    const pulsePeriod = periods.includes(period) ? period : periods[2];\r\n\r\n    const link = `https://github.com/${user}/${repo}/pulse/${pulsePeriod}`;\r\n    const { data: pulsePage } = await got(link);\r\n    const $ = load(pulsePage);\r\n\r\n    const $mainSections = $('main .Layout-main').children();\r\n\r\n    const $subheading = $mainSections.eq(0);\r\n    const [periodFrom, periodTo] = $subheading.find('h2').text().split('â€“');\r\n\r\n    const $overview = $mainSections.eq(1);\r\n    const overviewItems = $overview\r\n        .find('ul ul li')\r\n        .toArray()\r\n        .map((el) => $(el).text());\r\n\r\n    const $commitActivity = $mainSections.eq(2);\r\n    let commitActivity;\r\n    const $contributionData = $commitActivity.find('.js-pulse-contribution-data');\r\n    if ($contributionData.length) {\r\n        const summaryUrl = $contributionData.attr('data-pulse-diffstat-summary-url');\r\n        commitActivity = (await got(`https://github.com${summaryUrl}`)).data;\r\n    } else {\r\n        commitActivity = $commitActivity.text();\r\n    }\r\n\r\n    const $githubActivity = $mainSections.eq(3);\r\n    let githubActivity;\r\n    const $sections = $githubActivity.find('h3');\r\n    if ($sections.length) {\r\n        githubActivity = $sections.toArray().map((section) => {\r\n            const $section = $(section);\r\n            const $sectionSiblings = $section.nextUntil('h3');\r\n            const $paragraph = $section.nextUntil('ul');\r\n            const $list = $sectionSiblings.last();\r\n            return {\r\n                heading: $section.text(),\r\n                paragraph: $paragraph.length > 0 ? $paragraph.text() : undefined,\r\n                items: $list\r\n                    .children()\r\n                    .toArray()\r\n                    .map((item) => {\r\n                        const $item = $(item);\r\n                        const $link = $item.find('a');\r\n                        const $details = $item.find('p');\r\n                        const $relativeTime = $details.find('relative-time');\r\n                        $relativeTime.replaceWith($relativeTime.attr('datetime'));\r\n                        return {\r\n                            link: { text: $link.text(), url: $link.attr('href') },\r\n                            details: $details.text(),\r\n                        };\r\n                    }),\r\n            };\r\n        });\r\n    }\r\n\r\n    return {\r\n        title: `${user}/${repo} ${pulsePeriod} Pulse`,\r\n        link,\r\n        item: [\r\n            {\r\n                guid: md5(`${user}${repo}${period}${periodFrom}${periodTo}`),\r\n                title: `${periodFrom} - ${periodTo}`,\r\n                description: art(path.join(__dirname, 'templates/pulse-description.art'), {\r\n                    overviewItems,\r\n                    commitActivity,\r\n                    githubActivity,\r\n                }),\r\n                pubDate: parseDate(periodTo),\r\n            },\r\n        ],\r\n    };\r\n}\r\n"],"mappings":"4cASA,MAAa,EAAe,CACxB,KAAM,8BACN,WAAY,CAAC,eACb,QAAS,8BACT,WAAY,CACR,KAAM,YACN,KAAM,YACN,OAAQ,2PAEZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,+BAAgC,0CAGjD,KAAM,aACN,YAAa,CAAC,kBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,OAAM,OAAM,UAAW,EAAI,IAAI,QAEjC,EAAU,CAAC,QAAS,aAAc,SAAU,WAC5C,EAAc,EAAQ,SAAS,GAAU,EAAS,EAAQ,GAE1D,EAAO,sBAAsB,EAAK,GAAG,EAAK,SAAS,IACnD,CAAE,KAAM,GAAc,MAAM,EAAI,GAChC,EAAI,EAAK,GAET,EAAgB,EAAE,qBAAqB,WAEvC,EAAc,EAAc,GAAG,GAC/B,CAAC,EAAY,GAAY,EAAY,KAAK,MAAM,OAAO,MAAM,KAE7D,EAAY,EAAc,GAAG,GAC7B,EAAgB,EACjB,KAAK,YACL,UACA,IAAK,GAAO,EAAE,GAAI,QAEjB,EAAkB,EAAc,GAAG,GACrC,EACE,EAAoB,EAAgB,KAAK,+BAC/C,GAAI,EAAkB,OAAQ,CAC1B,IAAM,EAAa,EAAkB,KAAK,mCAC1C,GAAkB,MAAM,EAAI,qBAAqB,MAAe,UAEhE,EAAiB,EAAgB,OAGrC,IAAM,EAAkB,EAAc,GAAG,GACrC,EACE,EAAY,EAAgB,KAAK,MA4BvC,OA3BI,EAAU,SACV,EAAiB,EAAU,UAAU,IAAK,GAAY,CAClD,IAAM,EAAW,EAAE,GACb,EAAmB,EAAS,UAAU,MACtC,EAAa,EAAS,UAAU,MAChC,EAAQ,EAAiB,OAC/B,MAAO,CACH,QAAS,EAAS,OAClB,UAAW,EAAW,OAAS,EAAI,EAAW,OAAS,IAAA,GACvD,MAAO,EACF,WACA,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,KACnB,EAAW,EAAM,KAAK,KACtB,EAAgB,EAAS,KAAK,iBAEpC,OADA,EAAc,YAAY,EAAc,KAAK,aACtC,CACH,KAAM,CAAE,KAAM,EAAM,OAAQ,IAAK,EAAM,KAAK,SAC5C,QAAS,EAAS,cAOnC,CACH,MAAO,GAAG,EAAK,GAAG,EAAK,GAAG,EAAY,QACtC,OACA,KAAM,CACF,CACI,KAAM,EAAI,GAAG,IAAO,IAAO,IAAS,IAAa,KACjD,MAAO,GAAG,EAAW,KAAK,IAC1B,YAAa,EAAI,EAAA,KAAA,EAAA,4CAAyD,CACtE,gBACA,iBACA,mBAEJ,QAAS,EAAU"}