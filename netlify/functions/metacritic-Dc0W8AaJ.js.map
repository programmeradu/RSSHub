{"version":3,"file":"metacritic-Dc0W8AaJ.js","names":[],"sources":["../../lib/routes/metacritic/util.ts","../../lib/routes/metacritic/index.ts"],"sourcesContent":["const sorts = {\r\n    metascore: {\r\n        id: 'metaScore',\r\n        name: 'Metascore',\r\n    },\r\n    userscore: {\r\n        id: 'userScore',\r\n        name: 'User Score',\r\n    },\r\n    popular: {\r\n        id: 'popularityCount',\r\n        name: 'Most Popular',\r\n    },\r\n    new: {\r\n        id: 'releaseDate',\r\n        name: 'Releases',\r\n    },\r\n};\r\n\r\nconst types = {\r\n    game: {\r\n        id: 'games',\r\n        name: 'Games',\r\n    },\r\n    movie: {\r\n        id: 'movies',\r\n        name: 'Movies',\r\n    },\r\n    tv: {\r\n        id: 'tv',\r\n        name: 'TV Shows',\r\n    },\r\n    albums: {\r\n        id: 'albums',\r\n        name: 'Music',\r\n    },\r\n};\r\n\r\nexport { sorts, types };\r\n","import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nimport { sorts, types } from './util';\r\n\r\nexport const route: Route = {\r\n    path: '/:type?/:sort?/:filter?',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { type = 'game', sort = 'new', filter } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 50;\r\n\r\n    const rootUrl = 'https://www.metacritic.com';\r\n    const rootApiUrl = 'https://backend.metacritic.com';\r\n    const apiUrl = new URL('finder/metacritic/web', rootApiUrl).href;\r\n\r\n    const currentUrlObject = new URL(`/browse/${type}/all/all/all-time/${sort}/${filter ? `?${filter}` : ''}`, rootUrl);\r\n    const currentUrlParams = currentUrlObject.searchParams;\r\n    const currentUrl = currentUrlObject.href;\r\n\r\n    const { data: currentResponse } = await got(currentUrl);\r\n\r\n    const apiKey = currentResponse.match(/apiKey=(.*?)&/)[1];\r\n\r\n    const searchParams = {\r\n        sortBy: `-${sorts[sort].id}`,\r\n        productType: types[type].id,\r\n        limit,\r\n        apiKey,\r\n    };\r\n\r\n    const genres = currentUrlParams.getAll('genre').join(',').toLowerCase();\r\n    const releaseTypes = currentUrlParams.getAll('releaseType').join(',');\r\n    const releaseYearMin = currentUrlParams.get('releaseYearMin');\r\n    const releaseYearMax = currentUrlParams.get('releaseYearMax');\r\n\r\n    if (genres) {\r\n        searchParams.genres = genres;\r\n    }\r\n\r\n    if (releaseTypes) {\r\n        searchParams.releaseType = releaseTypes;\r\n    }\r\n\r\n    if (releaseYearMin) {\r\n        searchParams.releaseYearMin = releaseYearMin;\r\n    }\r\n\r\n    if (releaseYearMax) {\r\n        searchParams.releaseYearMax = releaseYearMax;\r\n    }\r\n\r\n    const platforms = currentUrlParams.getAll('platform');\r\n    const networks = currentUrlParams.getAll('network');\r\n\r\n    if (platforms.length || networks.length) {\r\n        const labels = {};\r\n        const labelPattern = String.raw`{label:\"([^\"]+)\",value:(\\d+),href:a,meta:{mcDisplayWeight`;\r\n\r\n        for (const m of currentResponse.match(new RegExp(labelPattern, 'g'))) {\r\n            const matches = m.match(new RegExp(labelPattern));\r\n\r\n            labels[\r\n                matches[1]\r\n                    .toLowerCase()\r\n                    .split(/(\\s\\(|\\\\u002f(?!\\s))/)[0]\r\n                    .replaceAll('-', '---')\r\n                    .replaceAll(/\\s\\/\\s/g, '-or-')\r\n                    .replaceAll('+', '-plus')\r\n                    .replaceAll(/\\s/g, '-')\r\n            ] = matches[2];\r\n        }\r\n\r\n        if (platforms.length) {\r\n            searchParams.gamePlatformIds = platforms\r\n                .map((p) => (Object.hasOwn(labels, p) ? labels[p] : undefined))\r\n                .filter(Boolean)\r\n                .join(',');\r\n        }\r\n\r\n        if (networks.length) {\r\n            searchParams.streamingNetworkIds = networks\r\n                .map((p) => (Object.hasOwn(labels, p) ? labels[p] : undefined))\r\n                .filter(Boolean)\r\n                .join(',');\r\n        }\r\n    }\r\n\r\n    const { data: response } = await got(apiUrl, {\r\n        searchParams,\r\n    });\r\n\r\n    const items = response.data.items.slice(0, limit).map((item) => ({\r\n        title: item.title,\r\n        link: new URL(`${type}/${item.slug}`, rootUrl).href,\r\n        description: art(path.join(__dirname, 'templates/description.art'), {\r\n            image: item.image\r\n                ? {\r\n                      src: new URL(`a/img/catalog${item.image.bucketPath}`, rootUrl).href,\r\n                      alt: item.image.alt,\r\n                  }\r\n                : undefined,\r\n            description: item.description,\r\n            score: item.criticScoreSummary?.score ?? undefined,\r\n        }),\r\n        category: item.genres?.map((c) => c.name),\r\n        guid: `metacritic-${item.id}`,\r\n        pubDate: parseDate(item.releaseDate),\r\n        upvotes: item.criticScoreSummary?.positiveCount ? Number.parseInt(item.criticScoreSummary?.positiveCount, 10) : 0,\r\n        downvotes: item.criticScoreSummary?.negativeCount ? Number.parseInt(item.criticScoreSummary?.negativeCount, 10) : 0,\r\n        comments: item.criticScoreSummary?.reviewCount ? Number.parseInt(item.criticScoreSummary?.reviewCount, 10) : 0,\r\n    }));\r\n\r\n    const $ = load(currentResponse);\r\n\r\n    const icon = new URL($('meta[data-hid=\"msapplication-task-metacritic\"]').prop('content').split('icon-uri=').pop(), rootUrl).href;\r\n\r\n    return {\r\n        item: items,\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        image: $('link[rel=\"icon\"]').prop('content'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('meta[name=\"msapplication-tooltip\"]').prop('content'),\r\n        author: $('meta[name=\"twitter:site\"]').prop('content'),\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"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"}