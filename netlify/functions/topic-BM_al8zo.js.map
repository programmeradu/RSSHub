{"version":3,"file":"topic-BM_al8zo.js","names":["route: Route","ofetch","cache","response"],"sources":["../../lib/routes/modb/topic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\nimport logger from '@/utils/logger';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/topic/:id',\r\n    categories: ['programming'],\r\n    example: '/modb/topic/44158',\r\n    parameters: { id: '合辑序号' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '合辑',\r\n    maintainers: ['yueneiqi'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://www.modb.pro';\r\n    const topicId = ctx.req.param('id');\r\n    const response = await ofetch(`${baseUrl}/api/columns/getKnowledge`, {\r\n        query: {\r\n            pageNum: 1,\r\n            pageSize: 20,\r\n            columnId: topicId,\r\n        },\r\n    });\r\n    const list = response.list.map((item) => {\r\n        let doc = {};\r\n        let baseLink = {};\r\n        switch (item.type) {\r\n            case 0:\r\n                doc = item.knowledge;\r\n                baseLink = `${baseUrl}/db`;\r\n                break;\r\n            case 1:\r\n                doc = item.dbDoc;\r\n                baseLink = `${baseUrl}/doc`;\r\n                break;\r\n            default:\r\n                logger.error(`unknown type ${item.type}`);\r\n        }\r\n\r\n        return {\r\n            title: doc.title,\r\n            link: `${baseLink}/${item.rid}`,\r\n            pubDate: timezone(parseDate(item.createdTime), +8),\r\n            author: doc.createdByName,\r\n            category: doc.tags,\r\n        };\r\n    });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(item.link);\r\n                const $ = load(response);\r\n                item.description = $('div.editor-content-styl.article-style').first().html();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '墨天轮合辑',\r\n        link: `${baseUrl}/topic/${topicId}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"8XAQA,MAAaA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,eACb,QAAS,oBACT,WAAY,CAAE,GAAI,QAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,YAAa,CAAC,YACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,uBACV,EAAU,EAAI,IAAI,MAAM,MACxB,EAAW,MAAMC,EAAO,GAAG,EAAQ,2BAA4B,CACjE,MAAO,CACH,QAAS,EACT,SAAU,GACV,SAAU,KAGZ,EAAO,EAAS,KAAK,IAAK,GAAS,CACrC,IAAI,EAAM,GACN,EAAW,GACf,OAAQ,EAAK,KAAb,CACI,IAAK,GACD,EAAM,EAAK,UACX,EAAW,GAAG,EAAQ,KACtB,MACJ,IAAK,GACD,EAAM,EAAK,MACX,EAAW,GAAG,EAAQ,MACtB,MACJ,QACI,EAAO,MAAM,gBAAgB,EAAK,QAG1C,MAAO,CACH,MAAO,EAAI,MACX,KAAM,GAAG,EAAS,GAAG,EAAK,MAC1B,QAAS,EAAS,EAAU,EAAK,aAAc,GAC/C,OAAQ,EAAI,cACZ,SAAU,EAAI,QAIhB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAO,EAAK,MAC7B,EAAI,EAAKE,GAEf,MADA,GAAK,YAAc,EAAE,yCAAyC,QAAQ,OAC/D,MAKnB,MAAO,CACH,MAAO,QACP,KAAM,GAAG,EAAQ,SAAS,IAC1B,KAAM"}