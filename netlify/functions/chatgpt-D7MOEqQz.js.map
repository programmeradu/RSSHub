{"version":3,"file":"chatgpt-D7MOEqQz.js","names":["route: Route","cache","got"],"sources":["../../lib/routes/openai/chatgpt.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport dayjs from 'dayjs';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\n\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js';\r\ndayjs.extend(isSameOrBefore);\r\n\r\nexport const route: Route = {\r\n    path: '/chatgpt/release-notes',\r\n    categories: ['program-update'],\r\n    example: '/openai/chatgpt/release-notes',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'ChatGPT - Release Notes',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler() {\r\n    const articleUrl = 'https://help.openai.com/en/articles/6825453-chatgpt-release-notes';\r\n\r\n    const cacheIn = await cache.tryGet(\r\n        articleUrl,\r\n        async () => {\r\n            const returns = [];\r\n\r\n            const pageResponse = await got({\r\n                method: 'get',\r\n                url: articleUrl,\r\n            });\r\n\r\n            const $ = load(pageResponse.data);\r\n            const page = JSON.parse($('script#__NEXT_DATA__').text()); // 页面貌似是用 Next 渲染的，有现成的 JSON 数据可以直接 parse，而避免用 cheerio 去解析主体内容的 HTML\r\n\r\n            const feedTitle = page.props.pageProps.articleContent.title;\r\n            const feedDesc = page.props.pageProps.articleContent.description;\r\n            const $author = page.props.pageProps.articleContent.author;\r\n            const authorName = $author.name;\r\n\r\n            const $blocks = page.props.pageProps.articleContent.blocks;\r\n\r\n            const anchorDay = dayjs();\r\n            let heading = null,\r\n                articleObj = {};\r\n            let year = anchorDay.year();\r\n            let prevMonth = -1;\r\n\r\n            for (const block of $blocks) {\r\n                const text = (block.text || '').trim();\r\n                if (!text) {\r\n                    continue;\r\n                }\r\n                if (block.type === 'subheading') {\r\n                    if (heading !== null) {\r\n                        articleObj.description = articleObj.description.trim().replaceAll('\\n', '<br/>');\r\n                        returns.push(articleObj);\r\n                        articleObj = {};\r\n                    }\r\n\r\n                    heading = text;\r\n\r\n                    articleObj.title = heading;\r\n                    articleObj.author = authorName;\r\n                    articleObj.category = 'ChatGPT';\r\n                    articleObj.link = articleUrl + '#' + block.idAttribute;\r\n                    articleObj.guid = articleUrl + '#' + block.idAttribute;\r\n                    articleObj.description = '';\r\n\r\n                    // 目前 ChatGPT Release Notes 页面并没有写入年份，所以只能靠猜\r\n                    // 当前的正则表达式只支持 (月份英文+空格+日期数字) 的格式\r\n                    const matchesPubDate = heading.match(/\\((\\w+\\s+\\d{1,2})\\)$/);\r\n                    // 实现：当年度交替时，年份减去 1\r\n                    if (matchesPubDate !== null) {\r\n                        const curMonth = 1 + 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(',').indexOf(matchesPubDate[1].slice(0, 3));\r\n                        if (prevMonth !== -1 && prevMonth < curMonth) {\r\n                            year--; // 年度交替：上一个月份数小于当前月份数；但排除 prevMonth==-1 的初始化情况\r\n                        }\r\n\r\n                        prevMonth = curMonth;\r\n                        const pubDay = dayjs(`${matchesPubDate[1]}, ${year}`, ['MMMM D, YYYY', 'MMM D, YYYY'], 'en', true);\r\n                        // 从 ISO（GMT）时间的字符串（使用字符串替换的方式）替换成 US/Pacific PST 时区的表达\r\n                        articleObj.pubDate = dayjs(pubDay.toISOString().replace(/\\.\\d{3}Z$/, '-08:00'));\r\n\r\n                        const linkAnchor = pubDay.format('YYYY_MM_DD');\r\n                        articleObj.guid = articleUrl + '#' + linkAnchor;\r\n                    }\r\n                } else {\r\n                    articleObj.description += block.text.trim() + '\\n\\n';\r\n                }\r\n            }\r\n\r\n            if (heading !== null) {\r\n                articleObj.description = articleObj.description.trim().replaceAll('\\n', '<br/>');\r\n                returns.push(articleObj);\r\n            }\r\n\r\n            return { feedTitle, feedDesc, items: returns };\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    return {\r\n        title: cacheIn.feedTitle,\r\n        description: cacheIn.feedDesc,\r\n        link: articleUrl,\r\n        item: cacheIn.items,\r\n    };\r\n}\r\n"],"mappings":"uYAQA,EAAM,OAAO,GAEb,MAAaA,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,kBACb,QAAS,gCACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,0BACN,YAAa,GACb,WAGJ,eAAe,GAAU,CACrB,IAAM,EAAa,oEAEb,EAAU,MAAMC,EAAM,OACxB,EACA,SAAY,CACR,IAAM,EAAU,GAEV,EAAe,MAAMC,EAAI,CAC3B,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAa,MACtB,EAAO,KAAK,MAAM,EAAE,wBAAwB,QAE5C,EAAY,EAAK,MAAM,UAAU,eAAe,MAChD,EAAW,EAAK,MAAM,UAAU,eAAe,YAC/C,EAAU,EAAK,MAAM,UAAU,eAAe,OAC9C,EAAa,EAAQ,KAErB,EAAU,EAAK,MAAM,UAAU,eAAe,OAE9C,EAAY,IACd,EAAU,KACV,EAAa,GACb,EAAO,EAAU,OACjB,EAAY,GAEhB,IAAK,IAAM,KAAS,EAAS,CACzB,IAAM,GAAQ,EAAM,MAAQ,IAAI,OAChC,GAAI,CAAC,EACD,SAEJ,GAAI,EAAM,OAAS,aAAc,CACzB,IAAY,OACZ,EAAW,YAAc,EAAW,YAAY,OAAO,WAAW;EAAM,SACxE,EAAQ,KAAK,GACb,EAAa,IAGjB,EAAU,EAEV,EAAW,MAAQ,EACnB,EAAW,OAAS,EACpB,EAAW,SAAW,UACtB,EAAW,KAAO,EAAa,IAAM,EAAM,YAC3C,EAAW,KAAO,EAAa,IAAM,EAAM,YAC3C,EAAW,YAAc,GAIzB,IAAM,EAAiB,EAAQ,MAAM,wBAErC,GAAI,IAAmB,KAAM,CACzB,IAAM,EAAW,EAAI,kDAAkD,MAAM,KAAK,QAAQ,EAAe,GAAG,MAAM,EAAG,IACjH,IAAc,IAAM,EAAY,GAChC,IAGJ,EAAY,EACZ,IAAM,EAAS,EAAM,GAAG,EAAe,GAAG,IAAI,IAAQ,CAAC,eAAgB,eAAgB,KAAM,IAE7F,EAAW,QAAU,EAAM,EAAO,cAAc,QAAQ,YAAa,WAErE,IAAM,EAAa,EAAO,OAAO,cACjC,EAAW,KAAO,EAAa,IAAM,QAGzC,EAAW,aAAe,EAAM,KAAK,OAAS;;EAStD,OALI,IAAY,OACZ,EAAW,YAAc,EAAW,YAAY,OAAO,WAAW;EAAM,SACxE,EAAQ,KAAK,IAGV,CAAE,YAAW,WAAU,MAAO,IAEzC,EAAO,MAAM,YACb,IAGJ,MAAO,CACH,MAAO,EAAQ,UACf,YAAa,EAAQ,SACrB,KAAM,EACN,KAAM,EAAQ"}