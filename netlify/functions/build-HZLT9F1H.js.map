{"version":3,"file":"build-HZLT9F1H.js","names":["route: Route","got"],"sources":["../../lib/routes/dockerhub/build.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { hash } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/build/:owner/:image/:tag?',\r\n    categories: ['program-update'],\r\n    view: ViewType.Notifications,\r\n    example: '/dockerhub/build/diygod/rsshub/latest',\r\n    parameters: {\r\n        owner: 'Image owner, the owner of the official image fills in the library, for example: /dockerhub/build/library/mysql',\r\n        image: 'Image name',\r\n        tag: {\r\n            description: 'Image tag',\r\n            default: 'latest',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Image New Build',\r\n    maintainers: ['HenryQW'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { owner, image, tag = 'latest' } = ctx.req.param();\r\n\r\n    const namespace = `${owner}/${image}`;\r\n\r\n    const link = `https://hub.docker.com/r/${namespace}`;\r\n\r\n    const data = await got.get(`https://hub.docker.com/v2/repositories/${namespace}/tags/${tag}`);\r\n    const metadata = await got.get(`https://hub.docker.com/v2/repositories/${namespace}/`);\r\n\r\n    const item = data.data;\r\n\r\n    return {\r\n        title: `${namespace}:${tag} build history`,\r\n        description: metadata.data.description,\r\n        link,\r\n        item: [\r\n            {\r\n                title: `${namespace}:${tag} was built. ${(item.images[0].size / 1_000_000).toFixed(2)} MB`,\r\n                link: `https://hub.docker.com/layers/docker/${namespace}/${tag}/images/${item.images[0].digest.replace(':', '-')}`,\r\n                author: owner,\r\n                pubDate: new Date(item.last_updated).toUTCString(),\r\n                // only check for different images hashes (considering varients of all arches), since the tag name is already fixed\r\n                guid: hash(item.images),\r\n            },\r\n        ],\r\n    };\r\n}\r\n"],"mappings":"oVAIA,MAAaA,EAAe,CACxB,KAAM,6BACN,WAAY,CAAC,kBACb,KAAM,EAAS,cACf,QAAS,wCACT,WAAY,CACR,MAAO,iHACP,MAAO,aACP,IAAK,CACD,YAAa,YACb,QAAS,WAGjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,kBACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAO,QAAO,MAAM,UAAa,EAAI,IAAI,QAE3C,EAAY,GAAG,EAAM,GAAG,IAExB,EAAO,4BAA4B,IAEnC,EAAO,MAAMC,EAAI,IAAI,0CAA0C,EAAU,QAAQ,KACjF,EAAW,MAAMA,EAAI,IAAI,0CAA0C,EAAU,IAE7E,EAAO,EAAK,KAElB,MAAO,CACH,MAAO,GAAG,EAAU,GAAG,EAAI,gBAC3B,YAAa,EAAS,KAAK,YAC3B,OACA,KAAM,CACF,CACI,MAAO,GAAG,EAAU,GAAG,EAAI,eAAe,EAAK,OAAO,GAAG,KAAO,KAAW,QAAQ,GAAG,KACtF,KAAM,wCAAwC,EAAU,GAAG,EAAI,UAAU,EAAK,OAAO,GAAG,OAAO,QAAQ,IAAK,OAC5G,OAAQ,EACR,QAAS,IAAI,KAAK,EAAK,cAAc,cAErC,KAAM,EAAK,EAAK"}