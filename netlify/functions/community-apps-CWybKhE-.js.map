{"version":3,"file":"community-apps-CWybKhE-.js","names":["route: Route","got"],"sources":["../../lib/routes/unraid/community-apps.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst appFeedUrl = 'https://raw.githubusercontent.com/Squidly271/AppFeed/master/applicationFeed.json';\r\nconst defaultLimit = 20;\r\n\r\nexport const route: Route = {\r\n    path: '/community-apps',\r\n    categories: ['program-update'],\r\n    example: '/unraid/community-apps',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['unraid.net/community/apps'],\r\n        },\r\n    ],\r\n    name: 'Community Apps',\r\n    maintainers: ['KTachibanaM'],\r\n    handler,\r\n    url: 'unraid.net/community/apps',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { data } = await got(appFeedUrl);\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : defaultLimit;\r\n\r\n    let appList = data.applist;\r\n    appList = appList.map((app) => {\r\n        const _pubDate = app.LastUpdate ?? app.FirstSeen ?? 0;\r\n        return {\r\n            ...app,\r\n            _pubDate,\r\n        };\r\n    });\r\n    appList.sort((a, b) => b._pubDate - a._pubDate);\r\n    const returnedAppList = appList.slice(0, limit);\r\n\r\n    return {\r\n        title: 'Unraid Community Apps',\r\n        link: 'https://unraid.net/community/apps',\r\n        image: 'https://craftassets.unraid.net/static/favicon/favicon.ico?v=1.0',\r\n        item: returnedAppList.map((app) => ({\r\n            title: `${app.Name} (${app.Repository ?? 'Unknown repository'})`,\r\n            link: app.Registry ?? `https://unraid.net/community/apps?q=${app.Name}`,\r\n            description: app.Overview.replaceAll('\\r\\n', '<br>').replaceAll('\\n', '<br>').replaceAll('[br]', '<br>'),\r\n            pubDate: parseDate(app._pubDate * 1000),\r\n            category: app.CategoryList,\r\n            upvotes: app.stars,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"qRAIA,MAGaA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,kBACb,QAAS,yBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,+BAGjB,KAAM,iBACN,YAAa,CAAC,eACd,UACA,IAAK,6BAGT,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAS,MAAMC,EAAI,oFACrB,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAE7E,EAAU,EAAK,QACnB,EAAU,EAAQ,IAAK,GAAQ,CAC3B,IAAM,EAAW,EAAI,YAAc,EAAI,WAAa,EACpD,MAAO,CACH,GAAG,EACH,cAGR,EAAQ,MAAM,EAAG,IAAM,EAAE,SAAW,EAAE,UACtC,IAAM,EAAkB,EAAQ,MAAM,EAAG,GAEzC,MAAO,CACH,MAAO,wBACP,KAAM,oCACN,MAAO,kEACP,KAAM,EAAgB,IAAK,IAAS,CAChC,MAAO,GAAG,EAAI,KAAK,IAAI,EAAI,YAAc,qBAAqB,GAC9D,KAAM,EAAI,UAAY,uCAAuC,EAAI,OACjE,YAAa,EAAI,SAAS,WAAW;EAAQ,QAAQ,WAAW;EAAM,QAAQ,WAAW,OAAQ,QACjG,QAAS,EAAU,EAAI,SAAW,KAClC,SAAU,EAAI,aACd,QAAS,EAAI"}