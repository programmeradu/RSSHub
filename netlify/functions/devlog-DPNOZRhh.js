import{__dirname as e,init_esm_shims as t}from"./esm-shims-Dqvxr0BZ.js";import"./config-Dl8a1sIg.js";import"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import{cache_default as n}from"./cache-kimkMTWJ.js";import{art as r}from"./render-CxhTJIsl.js";import{parseDate as i}from"./parse-date-Bgabdhlb.js";import"./ofetch-Bzt0BXUH.js";import{got_default as a}from"./got-CdvI2yKX.js";import{timezone as o}from"./timezone-BrNu6iXe.js";import{invalid_parameter_default as s}from"./invalid-parameter-CUJdROXf.js";import{isValidHost as c}from"./valid-host-DEPw8oAS.js";import l from"node:path";import{load as u}from"cheerio";t();const d={path:`/devlog/:user/:id`,categories:[`game`],example:`/itch/devlog/teamterrible/the-baby-in-yellow`,parameters:{user:`User id, can be found in URL`,id:`Item id, can be found in URL`},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Developer Logs`,maintainers:[`nczitzk`],handler:f,description:"`User id` is the field before `.itch.io` in the URL of the corresponding page, e.g. the URL of [The Baby In Yellow Devlog](https://teamterrible.itch.io/the-baby-in-yellow/devlog) is `https://teamterrible.itch.io/the-baby-in-yellow/devlog`, where the field before `.itch.io` is `teamterrible`.\n\n  `Item id` is the field between `itch.io` and `/devlog` in the URL of the corresponding page, e.g. the URL for [The Baby In Yellow Devlog](https://teamterrible.itch.io/the-baby-in-yellow/devlog) is `https://teamterrible.itch.io/the-baby-in-yellow/devlog`, where the field between `itch.io` and `/devlog` is `the-baby-in-yellow`.\n\n  So the route is [`/itch/devlogs/teamterrible/the-baby-in-yellow`](https://rsshub.app/itch/devlogs/teamterrible/the-baby-in-yellow)."};async function f(t){let d=t.req.param(`user`)??``,f=t.req.param(`id`)??``;if(!c(d))throw new s(`Invalid user`);let p=`https://${d}.itch.io/${f}/devlog`,m=await a({method:`get`,url:p}),h=u(m.data),g=h(`.title`).toArray().map(e=>(e=h(e),{title:e.text(),link:e.attr(`href`),pubDate:o(i(e.text()),8)}));return g=await Promise.all(g.map(t=>n.tryGet(t.link,async()=>{let n=await a({method:`get`,url:t.link}),o=u(n.data);return t.author=n.data.match(/"author":{".*?","name":"(.*?)"/)[1],t.pubDate=i(n.data.match(/"datePublished":"(.*?)"/)[1]),t.description=r(l.join(e,`templates/description-a9dbae00.art`),{images:o(`.post_image`).toArray().map(e=>o(e).attr(`src`)),description:o(`.post_body`).html()}),t}))),{title:h(`title`).text(),link:p,item:g}}export{d as route};
//# sourceMappingURL=devlog-DPNOZRhh.js.map