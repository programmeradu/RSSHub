{"version":3,"file":"events-VL5VlZaJ.js","names":["route: Route","parsedFilter: { category?: string; status_filter?: string; community_filter?: string; reward_filter?: string; chain_filter?: string; search?: string; count?: string; page?: string }","ofetch"],"sources":["../../lib/routes/questn/util.ts","../../lib/routes/questn/events.ts"],"sourcesContent":["const parseFilterStr = (filterStr) => {\r\n    const filters = {};\r\n    if (!filterStr) {\r\n        return filters;\r\n    }\r\n    const filterPairs = filterStr.split('&'); // Split by '&'\r\n\r\n    for (const pair of filterPairs) {\r\n        const [key, value] = pair.split('='); // Split by '='\r\n        filters[key] = value;\r\n    }\r\n\r\n    return filters;\r\n};\r\n\r\nexport { parseFilterStr };\r\n","import { Route } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nimport { parseFilterStr } from './util';\r\n\r\nexport const route: Route = {\r\n    path: '/events/:filter?',\r\n    name: 'Events',\r\n    url: 'app.questn.com',\r\n    maintainers: ['cxheng315'],\r\n    example: '/questn/events',\r\n    parameters: {\r\n        filter: 'Filter string',\r\n    },\r\n    description: `\r\n::: tip\r\n\r\nFilter parameters:\r\n- category: 100: trending, 200: newest, 300: top\r\n- status_filter: 0: all, 100: available, 400: missed\r\n- community_filter: 0: all community, 100: verified, 200: followed\r\n- rewards_filter: 0: all rewards, 100: nft, 200: token, 400: whitelist\r\n- chain_filter: 0: all chains, 1: ethereum, 56: bsc, 137: polygon, 42161: arb, 10: op, 324: zksync, 43114: avax\r\n- search: 'Search keyword',\r\n- count: 'Number of events to fetch',\r\n- page: 'Page number',\r\n:::`,\r\n    categories: ['other'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['app.questn.com/explore'],\r\n            target: '/events/:category?/:status_filter?/:community_filter?/:reward_filter?/:chain_filter?/:search?/:count?/:page?',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const url = 'https://api.questn.com/consumer/explore/list/';\r\n\r\n    const parsedFilter: { category?: string; status_filter?: string; community_filter?: string; reward_filter?: string; chain_filter?: string; search?: string; count?: string; page?: string } = parseFilterStr(\r\n        ctx.req.param('filter')\r\n    );\r\n\r\n    const params = {\r\n        category: parsedFilter.category || '200',\r\n        status_filter: parsedFilter.status_filter || '100',\r\n        community_filter: parsedFilter.community_filter || '0',\r\n        rewards_filter: parsedFilter.reward_filter || '0',\r\n        chain_filter: parsedFilter.chain_filter || '0',\r\n        search: parsedFilter.search || '',\r\n        count: parsedFilter.count || ctx.req.query('limit') || '20',\r\n        page: parsedFilter.page || '1',\r\n    };\r\n\r\n    const response = await ofetch(`${url}?${new URLSearchParams(params)}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    const data = await response.result.data;\r\n\r\n    const items = data.map((item) => ({\r\n        title: item.title,\r\n        link: `https://app.questn.com/quest/${item.id}`,\r\n        author: item.community_info ? item.community_info.name : '',\r\n        guid: item.id,\r\n        pubDate: parseDate(item.start_time * 1000),\r\n        itunes_duration: item.end_time > 0 ? item.end_time - item.start_time : 0,\r\n    }));\r\n\r\n    return {\r\n        title: 'QuestN Events',\r\n        link: 'https://app.questn.com/explore',\r\n        description: 'A Quest Protocol Dedicated to DePIN and AI Training',\r\n        image: 'https://app.questn.com/static/svgs/logo-white.svg',\r\n        logo: 'https://app.questn.com/static/svgs/logo-white.svg',\r\n        author: 'QuestN',\r\n        item:\r\n            items && items.length > 0\r\n                ? items\r\n                : [\r\n                      {\r\n                          title: 'No events found',\r\n                          description: 'No events found',\r\n                          link: 'https://app.questn.com/explore',\r\n                      },\r\n                  ],\r\n    };\r\n}\r\n"],"mappings":"gOAAA,MAAM,EAAkB,GAAc,CAClC,IAAM,EAAU,GAChB,GAAI,CAAC,EACD,OAAO,EAEX,IAAM,EAAc,EAAU,MAAM,KAEpC,IAAK,IAAM,KAAQ,EAAa,CAC5B,GAAM,CAAC,EAAK,GAAS,EAAK,MAAM,KAChC,EAAQ,GAAO,EAGnB,OAAO,GCNEA,EAAe,CACxB,KAAM,mBACN,KAAM,SACN,IAAK,iBACL,YAAa,CAAC,aACd,QAAS,iBACT,WAAY,CACR,OAAQ,iBAEZ,YAAa;;;;;;;;;;;;KAab,WAAY,CAAC,SACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BACT,OAAQ,iHAGhB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAEMC,EAAwL,EAC1L,EAAI,IAAI,MAAM,WAGZ,EAAS,CACX,SAAU,EAAa,UAAY,MACnC,cAAe,EAAa,eAAiB,MAC7C,iBAAkB,EAAa,kBAAoB,IACnD,eAAgB,EAAa,eAAiB,IAC9C,aAAc,EAAa,cAAgB,IAC3C,OAAQ,EAAa,QAAU,GAC/B,MAAO,EAAa,OAAS,EAAI,IAAI,MAAM,UAAY,KACvD,KAAM,EAAa,MAAQ,KAGzB,EAAW,MAAMC,EAAO,iDAAU,IAAI,gBAAgB,KAAW,CACnE,OAAQ,MACR,QAAS,CACL,eAAgB,sBAIlB,EAAO,MAAM,EAAS,OAAO,KAE7B,EAAQ,EAAK,IAAK,IAAU,CAC9B,MAAO,EAAK,MACZ,KAAM,gCAAgC,EAAK,KAC3C,OAAQ,EAAK,eAAiB,EAAK,eAAe,KAAO,GACzD,KAAM,EAAK,GACX,QAAS,EAAU,EAAK,WAAa,KACrC,gBAAiB,EAAK,SAAW,EAAI,EAAK,SAAW,EAAK,WAAa,KAG3E,MAAO,CACH,MAAO,gBACP,KAAM,iCACN,YAAa,sDACb,MAAO,oDACP,KAAM,oDACN,OAAQ,SACR,KACI,GAAS,EAAM,OAAS,EAClB,EACA,CACI,CACI,MAAO,kBACP,YAAa,kBACb,KAAM"}