{"version":3,"file":"security-releases-GvMlrqRi.js","names":[],"sources":["../../lib/routes/apple/security-releases.ts"],"sourcesContent":["import { type Data, type DataItem, type Route, ViewType } from '@/types';\r\n\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { type CheerioAPI, type Cheerio, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { type Context } from 'hono';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { language = 'en-us' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n\r\n    const baseUrl: string = 'https://support.apple.com';\r\n    const targetUrl: string = new URL(`${language}/100100`, baseUrl).href;\r\n\r\n    const response = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(response);\r\n\r\n    const $trEls: Cheerio<Element> = $('table.gb-table tbody tr');\r\n    const headers: string[] = $trEls\r\n        .find('th')\r\n        .toArray()\r\n        .map((el) => $(el).text());\r\n\r\n    let items: DataItem[] = [];\r\n\r\n    items = $trEls\r\n        .slice(1, limit)\r\n        .toArray()\r\n        .map((el): Element => {\r\n            const $el: Cheerio<Element> = $(el);\r\n\r\n            const titleEl: Cheerio<Element> = $el.find('td').first();\r\n            const title: string = titleEl.contents().first().text();\r\n            const description: string | undefined = art(path.join(__dirname, 'templates/security-releases.art'), {\r\n                headers,\r\n                infos: $el\r\n                    .find('td')\r\n                    .toArray()\r\n                    .map((el) => $(el).html() ?? ''),\r\n            });\r\n            const pubDateStr: string | undefined = $el.find('td').last().text();\r\n            const linkUrl: string | undefined = titleEl.find('a.gb-anchor').attr('href');\r\n            const authors: DataItem['author'] = $el.find('meta[property=\"og:site_name\"]').attr('content');\r\n            const upDatedStr: string | undefined = pubDateStr;\r\n\r\n            const processedItem: DataItem = {\r\n                title,\r\n                description,\r\n                pubDate: pubDateStr ? parseDate(pubDateStr, ['DD MMM YYYY', 'YYYY 年 MM 月 DD 日']) : undefined,\r\n                link: linkUrl ? new URL(linkUrl, baseUrl).href : undefined,\r\n                author: authors,\r\n                content: {\r\n                    html: description,\r\n                    text: description,\r\n                },\r\n                updated: upDatedStr ? parseDate(upDatedStr, ['DD MMM YYYY', 'YYYY 年 MM 月 DD 日']) : undefined,\r\n                language,\r\n            };\r\n\r\n            return processedItem;\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) => {\r\n            if (!item.link) {\r\n                return item;\r\n            }\r\n\r\n            return cache.tryGet(item.link, async (): Promise<DataItem> => {\r\n                const detailResponse = await ofetch(item.link);\r\n                const $$: CheerioAPI = load(detailResponse);\r\n\r\n                const title: string = item.title ?? $$('h1.gb-header').text();\r\n\r\n                $$('h1.gb-header').remove();\r\n\r\n                const description: string | undefined =\r\n                    item.description +\r\n                    art(path.join(__dirname, 'templates/security-releases.art'), {\r\n                        description: $$('div#sections').html(),\r\n                    });\r\n                const pubDateStr: string | undefined = detailResponse.match(/publish_date:\\s\"(\\d{8})\",/, '')?.[1];\r\n                const authors: DataItem['author'] = $$('meta[property=\"og:site_name\"]').attr('content');\r\n                const upDatedStr: string | undefined = $$('.time').text() || pubDateStr;\r\n\r\n                const processedItem: DataItem = {\r\n                    title,\r\n                    description,\r\n                    pubDate: pubDateStr ? parseDate(pubDateStr, 'MMDDYYYY') : item.pubDate,\r\n                    author: authors,\r\n                    content: {\r\n                        html: description,\r\n                        text: description,\r\n                    },\r\n                    updated: upDatedStr ? parseDate(upDatedStr, 'MMDDYYYY') : item.updated,\r\n                    language,\r\n                };\r\n\r\n                return {\r\n                    ...item,\r\n                    ...processedItem,\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $('meta[property=\"og:description\"]').attr('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        author: $('meta[property=\"og:site_name\"]').attr('content'),\r\n        language,\r\n        id: targetUrl,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/security-releases/:language?',\r\n    name: 'Security releases',\r\n    url: 'support.apple.com',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/apple/security-releases',\r\n    parameters: {\r\n        language: {\r\n            description: 'Language, `en-us` by default',\r\n        },\r\n    },\r\n    description: `:::tip\r\nTo subscribe to [Apple security releases](https://support.apple.com/en-us/100100), where the source URL is \\`https://support.apple.com/en-us/100100\\`, extract the certain parts from this URL to be used as parameters, resulting in the route as [\\`/apple/security-releases/en-us\\`](https://rsshub.app/apple/security-releases/en-us).\r\n:::\r\n`,\r\n    categories: ['program-update'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['support.apple.com/:language/100100'],\r\n            target: (params) => {\r\n                const language: string = params.language;\r\n\r\n                return `/apple/security-releases${language ? `/${language}` : ''}`;\r\n            },\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n\r\n    zh: {\r\n        path: '/security-releases/:language?',\r\n        name: '安全性发布',\r\n        url: 'support.apple.com',\r\n        maintainers: ['nczitzk'],\r\n        handler,\r\n        example: '/apple/security-releases',\r\n        parameters: {\r\n            language: {\r\n                description: '语言，默认为 `en-us`，可在对应页 URL 中找到',\r\n            },\r\n        },\r\n        description: `:::tip\r\n若订阅 [Apple 安全性发布](https://support.apple.com/zh-cn/100100)，网址为 \\`https://support.apple.com/zh-cn/100100\\`，请截取 \\`https://support.apple.com/\\` 到末尾 \\`/100100\\` 的部分 \\`zh-cn\\` 作为 \\`language\\` 参数填入，此时目标路由为 [\\`/apple/security-releases/zh-cn\\`](https://rsshub.app/apple/security-releases/zh-cn)。\r\n:::\r\n`,\r\n    },\r\n};\r\n"],"mappings":"kdAYA,MAAa,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,WAAW,SAAY,EAAI,IAAI,QACjC,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhE,EAAkB,4BAClB,EAAoB,IAAI,IAAI,GAAG,EAAS,SAAU,GAAS,KAE3D,EAAW,MAAM,EAAO,GACxB,EAAgB,EAAK,GAErB,EAA2B,EAAE,2BAC7B,EAAoB,EACrB,KAAK,MACL,UACA,IAAK,GAAO,EAAE,GAAI,QAEnB,EAAoB,GAmFxB,MAjFA,GAAQ,EACH,MAAM,EAAG,GACT,UACA,IAAK,GAAgB,CAClB,IAAM,EAAwB,EAAE,GAE1B,EAA4B,EAAI,KAAK,MAAM,QAC3C,EAAgB,EAAQ,WAAW,QAAQ,OAC3C,EAAkC,EAAI,EAAA,KAAA,EAAA,4CAAyD,CACjG,UACA,MAAO,EACF,KAAK,MACL,UACA,IAAK,GAAO,EAAE,GAAI,QAAU,MAE/B,EAAiC,EAAI,KAAK,MAAM,OAAO,OACvD,EAA8B,EAAQ,KAAK,eAAe,KAAK,QAC/D,EAA8B,EAAI,KAAK,iCAAiC,KAAK,WAC7E,EAAiC,EAEjC,EAA0B,CAC5B,QACA,cACA,QAAS,EAAa,EAAU,EAAY,CAAC,cAAe,qBAAuB,IAAA,GACnF,KAAM,EAAU,IAAI,IAAI,EAAS,GAAS,KAAO,IAAA,GACjD,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QAAS,EAAa,EAAU,EAAY,CAAC,cAAe,qBAAuB,IAAA,GACnF,YAGJ,OAAO,IAGf,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACF,EAAK,KAIH,EAAM,OAAO,EAAK,KAAM,SAA+B,CAC1D,IAAM,EAAiB,MAAM,EAAO,EAAK,MACnC,EAAiB,EAAK,GAEtB,EAAgB,EAAK,OAAS,EAAG,gBAAgB,OAEvD,EAAG,gBAAgB,SAEnB,IAAM,EACF,EAAK,YACL,EAAI,EAAA,KAAA,EAAA,4CAAyD,CACzD,YAAa,EAAG,gBAAgB,SAElC,EAAiC,EAAe,MAAM,4BAA6B,MAAM,GACzF,EAA8B,EAAG,iCAAiC,KAAK,WACvE,EAAiC,EAAG,SAAS,QAAU,EAEvD,EAA0B,CAC5B,QACA,cACA,QAAS,EAAa,EAAU,EAAY,YAAc,EAAK,QAC/D,OAAQ,EACR,QAAS,CACL,KAAM,EACN,KAAM,GAEV,QAAS,EAAa,EAAU,EAAY,YAAc,EAAK,QAC/D,YAGJ,MAAO,CACH,GAAG,EACH,GAAG,KAnCA,IAyCZ,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,mCAAmC,KAAK,WACvD,KAAM,EACN,KAAM,EACN,WAAY,GACZ,OAAQ,EAAE,iCAAiC,KAAK,WAChD,WACA,GAAI,IAIC,EAAe,CACxB,KAAM,gCACN,KAAM,oBACN,IAAK,oBACL,YAAa,CAAC,WACd,UACA,QAAS,2BACT,WAAY,CACR,SAAU,CACN,YAAa,iCAGrB,YAAa,wVAIb,WAAY,CAAC,kBACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sCACT,OAAS,GAAW,CAChB,IAAM,EAAmB,EAAO,SAEhC,MAAO,2BAA2B,EAAW,IAAI,IAAa,QAI1E,KAAM,EAAS,SAEf,GAAI,CACA,KAAM,gCACN,KAAM,QACN,IAAK,oBACL,YAAa,CAAC,WACd,UACA,QAAS,2BACT,WAAY,CACR,SAAU,CACN,YAAa,iCAGrB,YAAa"}