{"version":3,"file":"user-4piPTaXe.js","names":["route: Route","cache","got","$","utils"],"sources":["../../lib/routes/pingwest/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport utils from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:uid/:type?/:option?',\r\n    categories: ['new-media'],\r\n    example: '/pingwest/user/7781550877/article',\r\n    parameters: { uid: '用户id, 可从用户主页中得到', type: '内容类型, 默认为`article`', option: '参数' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['pingwest.com/user/:uid/:type', 'pingwest.com/'],\r\n            target: '/user/:uid/:type',\r\n        },\r\n    ],\r\n    name: '用户',\r\n    maintainers: ['sanmmm'],\r\n    handler,\r\n    description: `内容类型\r\n\r\n| 文章    | 动态  |\r\n| ------- | ----- |\r\n| article | state |\r\n\r\n  参数\r\n\r\n  -   \\`fulltext\\`，全文输出，例如：\\`/pingwest/user/7781550877/article/fulltext\\``,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { uid, type = 'article', option } = ctx.req.param();\r\n    const baseUrl = 'https://www.pingwest.com';\r\n    const aimUrl = `${baseUrl}/user/${uid}/${type}`;\r\n    const { userName, realUid, userSign, userAvatar } = await cache.tryGet(`pingwest:user:info:${uid}`, async () => {\r\n        const res = await got(aimUrl, {\r\n            headers: {\r\n                Referer: baseUrl,\r\n            },\r\n        });\r\n        const $ = load(res.data);\r\n        const userInfoNode = $('#J_userId');\r\n        return {\r\n            userName: userInfoNode.text(),\r\n            realUid: userInfoNode.attr('data-user-id'),\r\n            userSign: $('#J_userSign').text(),\r\n            userAvatar: $('#J_userAvatar').attr('src'),\r\n        };\r\n    });\r\n    const url = `${baseUrl}/api/user_data`;\r\n    const response = await got(url, {\r\n        searchParams: {\r\n            page: 1,\r\n            user_id: realUid,\r\n            tab: type,\r\n        },\r\n        headers: {\r\n            Referer: baseUrl,\r\n        },\r\n    });\r\n    const $ = load(response.data.data.list);\r\n\r\n    let item = [];\r\n    const needFullText = option === 'fulltext';\r\n    switch (type) {\r\n        case 'article':\r\n            item = await utils.articleListParser($, needFullText, cache);\r\n            break;\r\n        case 'state':\r\n            item = utils.statusListParser($);\r\n            break;\r\n    }\r\n\r\n    const typeToLabel = {\r\n        article: '文章',\r\n        state: '动态',\r\n    };\r\n    return {\r\n        title: `品玩 - ${userName} - ${typeToLabel[type]}`,\r\n        description: userSign,\r\n        image: userAvatar,\r\n        link: aimUrl,\r\n        item,\r\n    };\r\n}\r\n"],"mappings":"uaAMA,MAAaA,EAAe,CACxB,KAAM,6BACN,WAAY,CAAC,aACb,QAAS,oCACT,WAAY,CAAE,IAAK,kBAAmB,KAAM,qBAAsB,OAAQ,MAC1E,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,+BAAgC,iBACzC,OAAQ,qBAGhB,KAAM,KACN,YAAa,CAAC,UACd,UACA,YAAa;;;;;;;;4EAWjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,MAAK,OAAO,UAAW,UAAW,EAAI,IAAI,QAC5C,EAAU,2BACV,EAAS,GAAG,EAAQ,QAAQ,EAAI,GAAG,IACnC,CAAE,WAAU,UAAS,WAAU,cAAe,MAAMC,EAAM,OAAO,sBAAsB,IAAO,SAAY,CAC5G,IAAM,EAAM,MAAMC,EAAI,EAAQ,CAC1B,QAAS,CACL,QAAS,KAGXC,EAAI,EAAK,EAAI,MACb,EAAeA,EAAE,aACvB,MAAO,CACH,SAAU,EAAa,OACvB,QAAS,EAAa,KAAK,gBAC3B,SAAUA,EAAE,eAAe,OAC3B,WAAYA,EAAE,iBAAiB,KAAK,UAGtC,EAAM,GAAG,EAAQ,gBACjB,EAAW,MAAMD,EAAI,EAAK,CAC5B,aAAc,CACV,KAAM,EACN,QAAS,EACT,IAAK,GAET,QAAS,CACL,QAAS,KAGX,EAAI,EAAK,EAAS,KAAK,KAAK,MAE9B,EAAO,GACL,EAAe,IAAW,WAChC,OAAQ,EAAR,CACI,IAAK,UACD,EAAO,MAAME,EAAM,kBAAkB,EAAG,EAAcH,GACtD,MACJ,IAAK,QACD,EAAOG,EAAM,iBAAiB,GAC9B,MAGR,IAAM,EAAc,CAChB,QAAS,KACT,MAAO,MAEX,MAAO,CACH,MAAO,QAAQ,EAAS,KAAK,EAAY,KACzC,YAAa,EACb,MAAO,EACP,KAAM,EACN"}