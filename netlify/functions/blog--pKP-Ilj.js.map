{"version":3,"file":"blog--pKP-Ilj.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/stanford/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nexport const route: Route = {\r\n    path: ['/hazyresearch/blog'],\r\n    categories: ['blog'],\r\n    example: '/stanford/hazyresearch/blog',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['hazyresearch.stanford.edu/blog'],\r\n        },\r\n    ],\r\n    name: 'Hazy Research Blog',\r\n    maintainers: ['dvorak0'],\r\n    handler,\r\n    url: 'hazyresearch.stanford.edu/blog',\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = 'https://hazyresearch.stanford.edu';\r\n    const currentUrl = `${baseUrl}/blog`;\r\n    const { data: response } = await got(currentUrl);\r\n    const $ = load(response);\r\n\r\n    // Parse __NEXT_DATA__ for posts\r\n    const nextDataRaw = $('script#__NEXT_DATA__').text();\r\n    const nextData = JSON.parse(nextDataRaw);\r\n\r\n    const posts = nextData.props.pageProps.posts || [];\r\n    const buildId = nextData.buildId;\r\n\r\n    const list = posts.map((post) => ({\r\n        title: post.title,\r\n        link: `${baseUrl}/blog/${post.slug}`,\r\n        api: `${baseUrl}/_next/data/${buildId}/blog/${post.slug}.json`,\r\n        author: post.author,\r\n        pubDate: timezone(parseDate(post.dateString, 'MMM D, YYYY'), -7),\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                // âœ… For full content, request real HTML page\r\n                const { data: html } = await got(item.link);\r\n                const $post = load(html);\r\n\r\n                // Adjust the selector to match your page structure!\r\n                const content = $post('main [class^=\"Post_content\"]').html();\r\n\r\n                item.description = content || '';\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Hazy Research Blog',\r\n        link: currentUrl,\r\n        description: 'Research updates from Stanford Hazy Research',\r\n        language: 'en',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"0ZAOA,MAAaA,EAAe,CACxB,KAAM,CAAC,sBACP,WAAY,CAAC,QACb,QAAS,8BACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oCAGjB,KAAM,qBACN,YAAa,CAAC,WACd,UACA,IAAK,kCAGT,eAAe,GAAU,CACrB,IAAM,EAAU,oCACV,EAAa,GAAG,EAAQ,OACxB,CAAE,KAAM,GAAa,MAAMC,EAAI,GAC/B,EAAI,EAAK,GAGT,EAAc,EAAE,wBAAwB,OACxC,EAAW,KAAK,MAAM,GAEtB,EAAQ,EAAS,MAAM,UAAU,OAAS,GAC1C,EAAU,EAAS,QAEnB,EAAO,EAAM,IAAK,IAAU,CAC9B,MAAO,EAAK,MACZ,KAAM,GAAG,EAAQ,QAAQ,EAAK,OAC9B,IAAK,GAAG,EAAQ,cAAc,EAAQ,QAAQ,EAAK,KAAK,OACxD,OAAQ,EAAK,OACb,QAAS,EAAS,EAAU,EAAK,WAAY,eAAgB,OAG3D,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAEhC,GAAM,CAAE,KAAM,GAAS,MAAMD,EAAI,EAAK,MAChC,EAAQ,EAAK,GAGb,EAAU,EAAM,gCAAgC,OAItD,MAFA,GAAK,YAAc,GAAW,GAEvB,MAKnB,MAAO,CACH,MAAO,qBACP,KAAM,EACN,YAAa,+CACb,SAAU,KACV,KAAM"}