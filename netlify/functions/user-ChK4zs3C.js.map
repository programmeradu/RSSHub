{"version":3,"file":"user-ChK4zs3C.js","names":["route: Route","getDataByUsernameGoogle","getDataByUsernameYoutubei"],"sources":["../../lib/routes/youtube/user.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport { getDataByUsername as getDataByUsernameYoutubei } from './api/youtubei';\r\nimport { getDataByUsername as getDataByUsernameGoogle } from './api/google';\r\nimport { callApi } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:username/:routeParams?',\r\n    categories: ['social-media'],\r\n    view: ViewType.Videos,\r\n    example: '/youtube/user/@JFlaMusic',\r\n    parameters: {\r\n        username: 'YouTuber handle with @',\r\n        routeParams: 'Extra parameters, see the table below',\r\n    },\r\n    description: `:::tip Parameter\r\n| Name       | Description                                                                         | Default |\r\n| ---------- | ----------------------------------------------------------------------------------- | ------- |\r\n| embed      | Whether to embed the video, fill in any value to disable embedding                  | embed   |\r\n| filterShorts | Whether to filter out shorts from the feed, fill in any falsy value to show shorts | true    |\r\n:::`,\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'YOUTUBE_KEY',\r\n                description: ' YouTube API Key, support multiple keys, split them with `,`, [API Key application](https://console.developers.google.com/)',\r\n                optional: true,\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.youtube.com/user/:username', 'www.youtube.com/:username', 'www.youtube.com/:username/videos'],\r\n            target: '/user/:username',\r\n        },\r\n    ],\r\n    name: 'Channel with user handle',\r\n    maintainers: ['DIYgod', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const username = ctx.req.param('username');\r\n\r\n    // Parse route parameters\r\n    const routeParams = ctx.req.param('routeParams');\r\n    const params = new URLSearchParams(routeParams);\r\n\r\n    // Get embed parameter\r\n    const embed = !params.get('embed');\r\n\r\n    // Get filterShorts parameter (default to true if not specified)\r\n    const filterShortsStr = params.get('filterShorts');\r\n    const filterShorts = filterShortsStr === null || filterShortsStr === '' || filterShortsStr === 'true';\r\n\r\n    const data = await callApi({\r\n        googleApi: getDataByUsernameGoogle,\r\n        youtubeiApi: getDataByUsernameYoutubei,\r\n        params: { username, embed, filterShorts },\r\n    });\r\n\r\n    return data;\r\n}\r\n"],"mappings":"2bAKA,MAAaA,EAAe,CACxB,KAAM,gCACN,WAAY,CAAC,gBACb,KAAM,EAAS,OACf,QAAS,2BACT,WAAY,CACR,SAAU,yBACV,YAAa,yCAEjB,YAAa;;;;;KAMb,SAAU,CACN,cAAe,CACX,CACI,KAAM,cACN,YAAa,8HACb,SAAU,KAGlB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iCAAkC,4BAA6B,oCACxE,OAAQ,oBAGhB,KAAM,2BACN,YAAa,CAAC,SAAU,YACxB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YAGzB,EAAc,EAAI,IAAI,MAAM,eAC5B,EAAS,IAAI,gBAAgB,GAG7B,EAAQ,CAAC,EAAO,IAAI,SAGpB,EAAkB,EAAO,IAAI,gBAC7B,EAAe,IAAoB,MAAQ,IAAoB,IAAM,IAAoB,OAEzF,EAAO,MAAM,EAAQ,CACvB,UAAWC,EACX,YAAaC,EACb,OAAQ,CAAE,WAAU,QAAO,kBAG/B,OAAO"}