{"version":3,"file":"bast-B6vZ7U1V.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/bast/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { getSubPath } from '@/utils/common-utils';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '*',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const colPath = getSubPath(ctx).replace(/^\\//, '') || '32942';\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 50;\r\n\r\n    const rootUrl = 'https://www.bast.net.cn';\r\n    const currentUrl = `${rootUrl}/${Number.isNaN(colPath) ? colPath : `col/col${colPath}`}/`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    let $ = load(response.data);\r\n\r\n    $('.list-title-bif').remove();\r\n\r\n    const title = $('title').text();\r\n    let selection = $('a[title]');\r\n\r\n    if (selection.length === 0) {\r\n        $ = load($('ul.cont-list div script').first().text());\r\n\r\n        $('.list-title-bif').remove();\r\n\r\n        selection = $('a[title]');\r\n    }\r\n\r\n    let items = selection\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.text().trim(),\r\n                link: item.attr('href'),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                if (/bast\\.net\\.cn/.test(item.link)) {\r\n                    const detailResponse = await got({\r\n                        method: 'get',\r\n                        url: item.link,\r\n                    });\r\n\r\n                    const content = load(detailResponse.data);\r\n\r\n                    item.title = content('meta[name=\"ArticleTitle\"]').attr('content');\r\n                    item.author = content('meta[name=\"contentSource\"]').attr('content');\r\n                    item.pubDate = timezone(parseDate(content('meta[name=\"pubdate\"]').attr('content')), +8);\r\n                    item.category = [content('meta[name=\"ColumnName\"]').attr('content')];\r\n\r\n                    item.description = content('.arccont').html();\r\n                }\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"kdAQA,MAAaA,EAAe,CACxB,KAAM,IACN,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,EAAW,GAAK,QAAQ,MAAO,KAAO,QAChD,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAG3E,EAAa,2BAAc,OAAO,MAAM,GAAW,EAAU,UAAU,IAAU,GAEjF,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGL,EAAI,EAAK,EAAS,MAEtB,EAAE,mBAAmB,SAErB,IAAM,EAAQ,EAAE,SAAS,OACrB,EAAY,EAAE,YAEd,EAAU,SAAW,IACrB,EAAI,EAAK,EAAE,2BAA2B,QAAQ,QAE9C,EAAE,mBAAmB,SAErB,EAAY,EAAE,aAGlB,IAAI,EAAQ,EACP,MAAM,EAAG,GACT,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OAAO,OACnB,KAAM,EAAK,KAAK,WA4B5B,MAxBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,gBAAgB,KAAK,EAAK,MAAO,CACjC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAEpC,EAAK,MAAQ,EAAQ,6BAA6B,KAAK,WACvD,EAAK,OAAS,EAAQ,8BAA8B,KAAK,WACzD,EAAK,QAAU,EAAS,EAAU,EAAQ,wBAAwB,KAAK,YAAa,GACpF,EAAK,SAAW,CAAC,EAAQ,2BAA2B,KAAK,YAEzD,EAAK,YAAc,EAAQ,YAAY,OAG3C,OAAO,MAKZ,CACH,QACA,KAAM,EACN,KAAM"}