{"version":3,"file":"news-BJ9DVFva.js","names":[],"sources":["../../lib/routes/google/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst baseUrl = 'https://news.google.com';\r\n\r\nexport const route: Route = {\r\n    path: '/news/:category/:locale',\r\n    categories: ['new-media'],\r\n    example: '/google/news/Top stories/hl=en-US&gl=US&ceid=US:en',\r\n    parameters: { category: 'Category Title', locale: 'locales, could be found behind `?`, including `hl`, `gl`, and `ceid` as parameters' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'News',\r\n    maintainers: ['zoenglinghou', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category');\r\n    const locale = ctx.req.param('locale');\r\n\r\n    const categoryUrls = await cache.tryGet(`google:news:${locale}`, async () => {\r\n        const front_data = await ofetch(`${baseUrl}/?${locale}`);\r\n\r\n        const $ = load(front_data);\r\n        return [\r\n            ...$('a.brSCsc')\r\n                .toArray()\r\n                .slice(3) // skip Home, For you and Following\r\n                .map((item) => {\r\n                    item = $(item);\r\n                    return {\r\n                        category: item.text(),\r\n                        url: new URL(item.attr('href'), baseUrl).href,\r\n                    };\r\n                }),\r\n            ...$('a.aqvwYd') // Home\r\n                .toArray()\r\n                .map((item) => {\r\n                    item = $(item);\r\n                    return {\r\n                        category: item.text(),\r\n                        url: new URL(item.attr('href'), baseUrl).href,\r\n                    };\r\n                }),\r\n        ];\r\n    });\r\n    const categoryUrl = categoryUrls.find((item) => item.category === category).url;\r\n\r\n    const data = await ofetch(categoryUrl);\r\n    const $ = load(data);\r\n\r\n    const list = [...$('.UwIKyb'), ...$('.IBr9hb'), ...$('.IFHyqb')]; // 3 rows of news, 3-rows-wide news, single row news\r\n\r\n    const items = list.map((item) => {\r\n        item = $(item);\r\n\r\n        const title = item.find('.gPFEn').text();\r\n\r\n        const authorText = item.find('.bInasb span').text();\r\n        const authors = authorText\r\n            ? authorText\r\n                  .replace(/^By\\s+/i, '') // Handle 'By' case-insensitively\r\n                  .replaceAll(/\\s+\\([^)]*\\)/g, '') // Remove parenthetical info like (She/Her)\r\n                  .split(/,|\\s+&\\s+|\\s+and\\s+/) // Split on comma, &, and 'and'\r\n                  .map((author) => author.trim())\r\n                  .filter((author) => {\r\n                      // Filter out empty strings and common suffixes\r\n                      if (!author) {\r\n                          return false;\r\n                      }\r\n                      const suffixes = ['et al', 'et al.'];\r\n                      return !suffixes.some((suffix) => author.toLowerCase().endsWith(suffix));\r\n                  })\r\n                  .map((author) => ({ name: author }))\r\n            : [];\r\n\r\n        return {\r\n            title,\r\n            description: art(path.join(__dirname, 'templates/news.art'), {\r\n                img: item.find('img.Quavad').attr('src'),\r\n                brief: title,\r\n            }),\r\n            pubDate: parseDate(item.find('time').attr('datetime')),\r\n            author: authors,\r\n            link: new URL(item.find('a.WwrzSb').first().attr('href'), baseUrl).href,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        link: categoryUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"maASA,MAAM,EAAU,0BAEH,EAAe,CACxB,KAAM,0BACN,WAAY,CAAC,aACb,QAAS,qDACT,WAAY,CAAE,SAAU,iBAAkB,OAAQ,sFAClD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,eAAgB,YAC9B,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YACzB,EAAS,EAAI,IAAI,MAAM,UAEvB,EAAe,MAAM,EAAM,OAAO,eAAe,IAAU,SAAY,CACzE,IAAM,EAAa,MAAM,EAAO,GAAG,EAAQ,IAAI,KAEzC,EAAI,EAAK,GACf,MAAO,CACH,GAAG,EAAE,YACA,UACA,MAAM,GACN,IAAK,IACF,EAAO,EAAE,GACF,CACH,SAAU,EAAK,OACf,IAAK,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,QAGrD,GAAG,EAAE,YACA,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,SAAU,EAAK,OACf,IAAK,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,WAKvD,EAAc,EAAa,KAAM,GAAS,EAAK,WAAa,GAAU,IAEtE,EAAO,MAAM,EAAO,GACpB,EAAI,EAAK,GAET,EAAO,CAAC,GAAG,EAAE,WAAY,GAAG,EAAE,WAAY,GAAG,EAAE,YAE/C,EAAQ,EAAK,IAAK,GAAS,CAC7B,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,UAAU,OAE5B,EAAa,EAAK,KAAK,gBAAgB,OACvC,EAAU,EACV,EACK,QAAQ,UAAW,IACnB,WAAW,gBAAiB,IAC5B,MAAM,uBACN,IAAK,GAAW,EAAO,QACvB,OAAQ,GAAW,CAEhB,GAAI,CAAC,EACD,MAAO,GAEX,IAAM,EAAW,CAAC,QAAS,UAC3B,MAAO,CAAC,EAAS,KAAM,GAAW,EAAO,cAAc,SAAS,MAEnE,IAAK,IAAY,CAAE,KAAM,KAC9B,GAEN,MAAO,CACH,QACA,YAAa,EAAI,EAAA,KAAA,EAAA,+BAA4C,CACzD,IAAK,EAAK,KAAK,cAAc,KAAK,OAClC,MAAO,IAEX,QAAS,EAAU,EAAK,KAAK,QAAQ,KAAK,aAC1C,OAAQ,EACR,KAAM,IAAI,IAAI,EAAK,KAAK,YAAY,QAAQ,KAAK,QAAS,GAAS,QAI3E,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,KAAM"}