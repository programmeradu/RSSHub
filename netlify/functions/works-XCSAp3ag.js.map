{"version":3,"file":"works-XCSAp3ag.js","names":["route: Route","ofetch","cache","$"],"sources":["../../lib/routes/kakuyomu/works.ts"],"sourcesContent":["import type { Data, DataItem, Route } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport type { Context } from 'hono';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport type { NextDataEpisode } from './types';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    name: '投稿',\r\n    categories: ['reading'],\r\n    path: '/works/:id',\r\n    example: '/kakuyomu/works/1177354054894027232',\r\n    parameters: {\r\n        id: '投稿 ID',\r\n    },\r\n    maintainers: ['KarasuShin'],\r\n    handler,\r\n    features: {\r\n        supportRadar: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['kakuyomu.jp/works/:id'],\r\n            target: '/works/:id',\r\n        },\r\n    ],\r\n};\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const id = ctx.req.param('id');\r\n    const url = `https://kakuyomu.jp/works/${id}`;\r\n    const limit = Number.parseInt(ctx.req.query('limit') || '10');\r\n    const $ = load(await ofetch(url));\r\n\r\n    const nextData = JSON.parse($('#__NEXT_DATA__').text());\r\n\r\n    const {\r\n        props: {\r\n            pageProps: { __APOLLO_STATE__ },\r\n        },\r\n    } = nextData;\r\n\r\n    const {\r\n        [`Work:${id}`]: { title, catchphrase },\r\n    } = __APOLLO_STATE__;\r\n\r\n    const values = Object.values(__APOLLO_STATE__);\r\n    const episodes = values.filter((value) => value.__typename === 'Episode') as NextDataEpisode[];\r\n    const items = (await Promise.all(\r\n        episodes\r\n            .sort((a, b) => b.publishedAt.localeCompare(a.publishedAt))\r\n            .slice(0, limit)\r\n            .map((item) => {\r\n                const episodeUrl = `https://kakuyomu.jp/works/${id}/episodes/${item.id}`;\r\n                return cache.tryGet(episodeUrl, async () => {\r\n                    const $ = load(await ofetch(episodeUrl));\r\n                    const description = $('.widget-episodeBody').html();\r\n                    return {\r\n                        title: item.title,\r\n                        link: episodeUrl,\r\n                        description,\r\n                        pubDate: parseDate(item.publishedAt),\r\n                        guid: item.id,\r\n                    };\r\n                });\r\n            })\r\n    )) as DataItem[];\r\n\r\n    return {\r\n        title,\r\n        link: url,\r\n        description: catchphrase,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAQA,MAAaA,EAAe,CACxB,KAAM,KACN,WAAY,CAAC,WACb,KAAM,aACN,QAAS,sCACT,WAAY,CACR,GAAI,SAER,YAAa,CAAC,cACd,UACA,SAAU,CACN,aAAc,IAElB,MAAO,CACH,CACI,OAAQ,CAAC,yBACT,OAAQ,gBAKpB,eAAe,EAAQ,EAA6B,CAChD,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAM,6BAA6B,IACnC,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,MAClD,EAAI,EAAK,MAAMC,EAAO,IAEtB,EAAW,KAAK,MAAM,EAAE,kBAAkB,QAE1C,CACF,MAAO,CACH,UAAW,CAAE,sBAEjB,EAEE,EACD,QAAQ,KAAO,CAAE,QAAO,gBACzB,EAEE,EAAS,OAAO,OAAO,GACvB,EAAW,EAAO,OAAQ,GAAU,EAAM,aAAe,WACzD,EAAS,MAAM,QAAQ,IACzB,EACK,MAAM,EAAG,IAAM,EAAE,YAAY,cAAc,EAAE,cAC7C,MAAM,EAAG,GACT,IAAK,GAAS,CACX,IAAM,EAAa,6BAA6B,EAAG,YAAY,EAAK,KACpE,OAAOC,EAAM,OAAO,EAAY,SAAY,CACxC,IAAMC,EAAI,EAAK,MAAMF,EAAO,IACtB,EAAcE,EAAE,uBAAuB,OAC7C,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EACN,cACA,QAAS,EAAU,EAAK,aACxB,KAAM,EAAK,SAM/B,MAAO,CACH,QACA,KAAM,EACN,YAAa,EACb,KAAM"}