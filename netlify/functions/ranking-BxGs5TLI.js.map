{"version":3,"file":"ranking-BxGs5TLI.js","names":["got","route: Route","ConfigNotFoundError","cache","pixivUtils"],"sources":["../../lib/routes/pixiv/api/get-ranking.ts","../../lib/routes/pixiv/ranking.ts"],"sourcesContent":["import got from '../pixiv-got';\r\nimport { maskHeader } from '../constants';\r\nimport assert from 'node:assert';\r\nimport queryString from 'query-string';\r\n\r\nconst allowMode = new Set(['day', 'week', 'month', 'day_male', 'day_female', 'day_ai', 'week_original', 'week_rookie', 'day_r18', 'day_r18_ai', 'day_male_r18', 'day_female_r18', 'week_r18', 'week_r18g']);\r\n\r\n/**\r\n * 获取某天的排行榜\r\n * @param {string} mode 模式\r\n * @param {Date} date 日期\r\n * @param {string} token pixiv oauth token\r\n * @returns {Promise<got.AxiosResponse<{illusts: illust[]}>>}\r\n */\r\nexport default function getRanking(mode, date, token) {\r\n    assert.ok(allowMode.has(mode), 'Mode not allow.');\r\n    return got('https://app-api.pixiv.net/v1/illust/ranking', {\r\n        headers: {\r\n            ...maskHeader,\r\n            Authorization: 'Bearer ' + token,\r\n        },\r\n        searchParams: queryString.stringify({\r\n            mode,\r\n            filter: 'for_ios',\r\n            ...(date && {\r\n                date: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`,\r\n            }),\r\n        }),\r\n    });\r\n}\r\n","import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { getToken } from './token';\r\nimport getRanking from './api/get-ranking';\r\nimport { config } from '@/config';\r\nimport pixivUtils from './utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nconst titles = {\r\n    day: 'pixiv 日排行',\r\n    week: 'pixiv 周排行',\r\n    month: 'pixiv 月排行',\r\n    day_male: 'pixiv 受男性欢迎排行',\r\n    day_female: 'pixiv 受女性欢迎排行',\r\n    week_original: 'pixiv 原创作品排行',\r\n    week_rookie: 'pixiv 新人排行',\r\n    day_r18: 'pixiv R-18 日排行',\r\n    day_r18_ai: 'pixiv R-18 AI生成作品排行',\r\n    day_male_r18: 'pixiv R-18 受男性欢迎排行',\r\n    day_female_r18: 'pixiv R-18 受女性欢迎排行',\r\n    week_r18: 'pixiv R-18 周排行',\r\n    week_r18g: 'pixiv R-18G 排行',\r\n    day_ai: 'AI 生成作品排行榜',\r\n};\r\n\r\nconst links = {\r\n    day: 'https://www.pixiv.net/ranking.php?mode=daily',\r\n    week: 'https://www.pixiv.net/ranking.php?mode=weekly',\r\n    month: 'https://www.pixiv.net/ranking.php?mode=monthly',\r\n    day_male: 'https://www.pixiv.net/ranking.php?mode=male',\r\n    day_female: 'https://www.pixiv.net/ranking.php?mode=female',\r\n    day_ai: 'https://www.pixiv.net/ranking.php?mode=daily_ai',\r\n    week_original: 'https://www.pixiv.net/ranking.php?mode=original',\r\n    week_rookie: 'https://www.pixiv.net/ranking.php?mode=rookie',\r\n    day_r18: 'https://www.pixiv.net/ranking.php?mode=daily_r18',\r\n    day_r18_ai: 'https://www.pixiv.net/ranking.php?mode=daily_r18_ai',\r\n    day_male_r18: 'https://www.pixiv.net/ranking.php?mode=male_r18',\r\n    day_female_r18: 'https://www.pixiv.net/ranking.php?mode=female_r18',\r\n    week_r18: 'https://www.pixiv.net/ranking.php?mode=weekly_r18',\r\n    week_r18g: 'https://www.pixiv.net/ranking.php?mode=r18g',\r\n};\r\n\r\nconst alias = {\r\n    daily: 'day',\r\n    weekly: 'week',\r\n    monthly: 'month',\r\n    male: 'day_male',\r\n    female: 'day_female',\r\n    daily_ai: 'day_ai',\r\n    original: 'week_original',\r\n    rookie: 'week_rookie',\r\n    daily_r18: 'day_r18',\r\n    daily_r18_ai: 'day_r18_ai',\r\n    male_r18: 'day_male_r18',\r\n    female_r18: 'day_female_r18',\r\n    weekly_r18: 'week_r18',\r\n    r18g: 'week_r18g',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/ranking/:mode/:date?',\r\n    categories: ['social-media'],\r\n    view: ViewType.Pictures,\r\n    example: '/pixiv/ranking/week',\r\n    parameters: {\r\n        mode: {\r\n            description: 'rank type',\r\n            options: [\r\n                {\r\n                    value: 'day',\r\n                    label: 'daily rank',\r\n                },\r\n                {\r\n                    value: 'week',\r\n                    label: 'weekly rank',\r\n                },\r\n                {\r\n                    value: 'month',\r\n                    label: 'monthly rank',\r\n                },\r\n                {\r\n                    value: 'day_male',\r\n                    label: 'male rank',\r\n                },\r\n                {\r\n                    value: 'day_felame',\r\n                    label: 'female rank',\r\n                },\r\n                {\r\n                    value: 'day_ai',\r\n                    label: 'AI-generated work Rankings',\r\n                },\r\n                {\r\n                    value: 'week_original',\r\n                    label: 'original rank',\r\n                },\r\n                {\r\n                    value: 'week_rookie',\r\n                    label: 'rookie user rank',\r\n                },\r\n                {\r\n                    value: 'day_r18',\r\n                    label: 'R-18 daily rank',\r\n                },\r\n                {\r\n                    value: 'day_r18_ai',\r\n                    label: 'R-18 AI-generated work',\r\n                },\r\n                {\r\n                    value: 'day_male_r18',\r\n                    label: 'R-18 male rank',\r\n                },\r\n                {\r\n                    value: 'day_female_r18',\r\n                    label: 'R-18 female rank',\r\n                },\r\n                {\r\n                    value: 'week_r18',\r\n                    label: 'R-18 weekly rank',\r\n                },\r\n                {\r\n                    value: 'week_r18g',\r\n                    label: 'R-18G rank',\r\n                },\r\n            ],\r\n            default: 'day',\r\n        },\r\n        date: 'format: `2018-4-25`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Rankings',\r\n    maintainers: ['EYHN'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    if (!config.pixiv || !config.pixiv.refreshToken) {\r\n        throw new ConfigNotFoundError('pixiv RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n\r\n    const mode = alias[ctx.req.param('mode')] ?? ctx.req.param('mode');\r\n    const date = ctx.req.param('date') ? new Date(ctx.req.param('date')) : new Date();\r\n\r\n    const token = await getToken(cache.tryGet);\r\n    if (!token) {\r\n        throw new ConfigNotFoundError('pixiv not login');\r\n    }\r\n\r\n    const response = await getRanking(mode, ctx.req.param('date') && date, token);\r\n\r\n    const illusts = response.data.illusts;\r\n\r\n    const dateStr = `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日 `;\r\n\r\n    return {\r\n        title: (ctx.req.param('date') ? dateStr : '') + titles[mode],\r\n        link: links[mode],\r\n        description: dateStr + titles[mode],\r\n        item: illusts.map((illust, index) => {\r\n            const images = pixivUtils.getImgs(illust);\r\n            return {\r\n                title: `#${index + 1} ${illust.title}`,\r\n                pubDate: parseDate(illust.create_date),\r\n                description: `${illust.caption}<br><p>画师：${illust.user.name} - 阅览数：${illust.total_view} - 收藏数：${illust.total_bookmarks}</p><br>${images.join('')}`,\r\n                link: `https://www.pixiv.net/artworks/${illust.id}`,\r\n                author: [\r\n                    {\r\n                        name: illust.user.name,\r\n                        url: `https://www.pixiv.net/users/${illust.user.id}`,\r\n                        avatar: illust.user.profile_image_urls.medium,\r\n                    },\r\n                ],\r\n                category: illust.tags.map((tag) => tag.name),\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"6lBAKA,MAAM,EAAY,IAAI,IAAI,CAAC,MAAO,OAAQ,QAAS,WAAY,aAAc,SAAU,gBAAiB,cAAe,UAAW,aAAc,eAAgB,iBAAkB,WAAY,cAS9L,SAAwB,EAAW,EAAM,EAAM,EAAO,CAElD,OADA,EAAO,GAAG,EAAU,IAAI,GAAO,mBACxBA,EAAI,8CAA+C,CACtD,QAAS,CACL,GAAG,EACH,cAAe,UAAY,GAE/B,aAAc,EAAY,UAAU,CAChC,OACA,OAAQ,UACR,GAAI,GAAQ,CACR,KAAM,GAAG,EAAK,cAAc,GAAG,EAAK,WAAa,EAAE,GAAG,EAAK,iBChB3E,MAAM,EAAS,CACX,IAAK,YACL,KAAM,YACN,MAAO,YACP,SAAU,gBACV,WAAY,gBACZ,cAAe,eACf,YAAa,aACb,QAAS,iBACT,WAAY,sBACZ,aAAc,qBACd,eAAgB,qBAChB,SAAU,iBACV,UAAW,iBACX,OAAQ,cAGN,EAAQ,CACV,IAAK,+CACL,KAAM,gDACN,MAAO,iDACP,SAAU,8CACV,WAAY,gDACZ,OAAQ,kDACR,cAAe,kDACf,YAAa,gDACb,QAAS,mDACT,WAAY,sDACZ,aAAc,kDACd,eAAgB,oDAChB,SAAU,oDACV,UAAW,+CAGT,EAAQ,CACV,MAAO,MACP,OAAQ,OACR,QAAS,QACT,KAAM,WACN,OAAQ,aACR,SAAU,SACV,SAAU,gBACV,OAAQ,cACR,UAAW,UACX,aAAc,aACd,SAAU,eACV,WAAY,iBACZ,WAAY,WACZ,KAAM,aAGGC,EAAe,CACxB,KAAM,wBACN,WAAY,CAAC,gBACb,KAAM,EAAS,SACf,QAAS,sBACT,WAAY,CACR,KAAM,CACF,YAAa,YACb,QAAS,CACL,CACI,MAAO,MACP,MAAO,cAEX,CACI,MAAO,OACP,MAAO,eAEX,CACI,MAAO,QACP,MAAO,gBAEX,CACI,MAAO,WACP,MAAO,aAEX,CACI,MAAO,aACP,MAAO,eAEX,CACI,MAAO,SACP,MAAO,8BAEX,CACI,MAAO,gBACP,MAAO,iBAEX,CACI,MAAO,cACP,MAAO,oBAEX,CACI,MAAO,UACP,MAAO,mBAEX,CACI,MAAO,aACP,MAAO,0BAEX,CACI,MAAO,eACP,MAAO,kBAEX,CACI,MAAO,iBACP,MAAO,oBAEX,CACI,MAAO,WACP,MAAO,oBAEX,CACI,MAAO,YACP,MAAO,eAGf,QAAS,OAEb,KAAM,uBAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,WACN,YAAa,CAAC,QACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAI,CAAC,EAAO,OAAS,CAAC,EAAO,MAAM,aAC/B,MAAM,IAAIC,EAAoB,8IAGlC,IAAM,EAAO,EAAM,EAAI,IAAI,MAAM,UAAY,EAAI,IAAI,MAAM,QACrD,EAAO,EAAI,IAAI,MAAM,QAAU,IAAI,KAAK,EAAI,IAAI,MAAM,SAAW,IAAI,KAErE,EAAQ,MAAM,EAASC,EAAM,QACnC,GAAI,CAAC,EACD,MAAM,IAAID,EAAoB,mBAGlC,IAAM,EAAW,MAAM,EAAW,EAAM,EAAI,IAAI,MAAM,SAAW,EAAM,GAEjE,EAAU,EAAS,KAAK,QAExB,EAAU,GAAG,EAAK,cAAc,GAAG,EAAK,WAAa,EAAE,GAAG,EAAK,UAAU,IAE/E,MAAO,CACH,OAAQ,EAAI,IAAI,MAAM,QAAU,EAAU,IAAM,EAAO,GACvD,KAAM,EAAM,GACZ,YAAa,EAAU,EAAO,GAC9B,KAAM,EAAQ,KAAK,EAAQ,IAAU,CACjC,IAAM,EAASE,EAAW,QAAQ,GAClC,MAAO,CACH,MAAO,IAAI,EAAQ,EAAE,GAAG,EAAO,QAC/B,QAAS,EAAU,EAAO,aAC1B,YAAa,GAAG,EAAO,QAAQ,YAAY,EAAO,KAAK,KAAK,SAAS,EAAO,WAAW,SAAS,EAAO,gBAAgB,UAAU,EAAO,KAAK,MAC7I,KAAM,kCAAkC,EAAO,KAC/C,OAAQ,CACJ,CACI,KAAM,EAAO,KAAK,KAClB,IAAK,+BAA+B,EAAO,KAAK,KAChD,OAAQ,EAAO,KAAK,mBAAmB,SAG/C,SAAU,EAAO,KAAK,IAAK,GAAQ,EAAI"}