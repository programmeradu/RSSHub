{"version":3,"file":"publisher-wzDZuLYB.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/line/publisher.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { baseUrl, parseList, parseItems } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/today/:edition/publisher/:id',\r\n    categories: ['new-media'],\r\n    example: '/line/today/th/publisher/101048',\r\n    parameters: { edition: 'Edition, see table above', id: 'Channel ID, can be found in URL' },\r\n    radar: [\r\n        {\r\n            source: ['today.line.me/:edition/v2/publisher/:id'],\r\n        },\r\n    ],\r\n    name: 'TODAY - Channel',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { edition, id } = ctx.req.param();\r\n\r\n    const publisherInfo = await ofetch(`${baseUrl}/webapi/portal/page/setting`, {\r\n        query: {\r\n            entityId: id,\r\n            country: edition,\r\n            pageType: 'CP',\r\n        },\r\n    });\r\n\r\n    let thaiData;\r\n    if (edition === 'th') {\r\n        thaiData = await ofetch(`${baseUrl}/webapi/portal/embedded/page/cplatest`, {\r\n            query: {\r\n                entityId: id,\r\n                pageType: 'CP',\r\n                country: edition,\r\n            },\r\n        });\r\n    }\r\n\r\n    const modules = edition === 'th' ? thaiData.modules : publisherInfo.modules;\r\n    const mod = modules.find((item) => item.source === 'CP_LATEST');\r\n    const listing = mod.listings[0];\r\n\r\n    const listResponse = await ofetch(`${baseUrl}/webapi/trending/cp/latest/listings/${mod.id}`, {\r\n        query: {\r\n            offset: listing.offset,\r\n            length: listing.length,\r\n            country: edition,\r\n            targetContent: listing.params?.targetContent,\r\n            cps: listing.params?.cps,\r\n            publishedWithin: listing.params?.publishedWithin,\r\n        },\r\n    });\r\n\r\n    const list = parseList(listResponse.items);\r\n\r\n    const items = await parseItems(list);\r\n\r\n    return {\r\n        title: `${publisherInfo.data.name} - Line Today`,\r\n        description: publisherInfo.data.introduction,\r\n        image: publisherInfo.data.icon ? `https://obs.line-scdn.net/${publisherInfo.data.icon.hash}` : undefined,\r\n        link: `${baseUrl}/${edition}/v2/publisher/${id}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"6WAIA,MAAaA,EAAe,CACxB,KAAM,gCACN,WAAY,CAAC,aACb,QAAS,kCACT,WAAY,CAAE,QAAS,2BAA4B,GAAI,mCACvD,MAAO,CACH,CACI,OAAQ,CAAC,6CAGjB,KAAM,kBACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,UAAS,MAAO,EAAI,IAAI,QAE1B,EAAgB,MAAMC,EAAO,GAAG,EAAQ,6BAA8B,CACxE,MAAO,CACH,SAAU,EACV,QAAS,EACT,SAAU,QAId,EACA,IAAY,OACZ,EAAW,MAAMA,EAAO,GAAG,EAAQ,uCAAwC,CACvE,MAAO,CACH,SAAU,EACV,SAAU,KACV,QAAS,MAKrB,IAAM,EAAU,IAAY,KAAO,EAAS,QAAU,EAAc,QAC9D,EAAM,EAAQ,KAAM,GAAS,EAAK,SAAW,aAC7C,EAAU,EAAI,SAAS,GAEvB,EAAe,MAAMA,EAAO,GAAG,EAAQ,sCAAsC,EAAI,KAAM,CACzF,MAAO,CACH,OAAQ,EAAQ,OAChB,OAAQ,EAAQ,OAChB,QAAS,EACT,cAAe,EAAQ,QAAQ,cAC/B,IAAK,EAAQ,QAAQ,IACrB,gBAAiB,EAAQ,QAAQ,mBAInC,EAAO,EAAU,EAAa,OAE9B,EAAQ,MAAM,EAAW,GAE/B,MAAO,CACH,MAAO,GAAG,EAAc,KAAK,KAAK,eAClC,YAAa,EAAc,KAAK,aAChC,MAAO,EAAc,KAAK,KAAO,6BAA6B,EAAc,KAAK,KAAK,OAAS,IAAA,GAC/F,KAAM,GAAG,EAAQ,GAAG,EAAQ,gBAAgB,IAC5C,KAAM"}