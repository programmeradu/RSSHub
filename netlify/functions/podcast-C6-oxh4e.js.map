{"version":3,"file":"podcast-C6-oxh4e.js","names":["cache","ofetch","route: Route"],"sources":["../../lib/routes/soundon/podcast.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport { config } from '@/config';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { Podcast, PodcastInfo } from './types';\r\n\r\nconst handler = async (ctx) => {\r\n    const { id } = ctx.req.param();\r\n\r\n    const apiEndpoint = 'https://api.soundon.fm/v2/client';\r\n    const apiToken = 'KilpEMLQeNzxmNBL55u5';\r\n\r\n    const podcastInfo = (await cache.tryGet(`soundon:${id}`, async () => {\r\n        const response = await ofetch(`${apiEndpoint}/podcasts/${id}`, {\r\n            headers: {\r\n                'api-token': apiToken,\r\n            },\r\n        });\r\n        return response.data.data;\r\n    })) as PodcastInfo;\r\n\r\n    const episodes = (await cache.tryGet(\r\n        `soundon:${id}:episodes`,\r\n        async () => {\r\n            const response = await ofetch(`${apiEndpoint}/podcasts/${id}/episodes`, {\r\n                headers: {\r\n                    'api-token': apiToken,\r\n                },\r\n            });\r\n            return response.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    )) as Podcast[];\r\n\r\n    const items = episodes.map(({ data: item }) => ({\r\n        title: item.title,\r\n        description: item.contentEncoded,\r\n        link: item.url,\r\n        author: item.artistName,\r\n        pubDate: parseDate(item.publishDate),\r\n        itunes_item_image: item.cover,\r\n        enclosure_url: item.audioUrl,\r\n        enclosure_type: item.audioType,\r\n        itunes_duration: item.duration,\r\n        category: item.itunesKeywords,\r\n    }));\r\n\r\n    return {\r\n        title: podcastInfo.title,\r\n        description: podcastInfo.description,\r\n        itunes_author: podcastInfo.artistName,\r\n        itunes_category: podcastInfo.itunesCategories.join(', '),\r\n        itunes_explicit: podcastInfo.explicit,\r\n        image: podcastInfo.cover,\r\n        language: podcastInfo.language,\r\n        link: podcastInfo.url,\r\n        item: items,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/p/:id',\r\n    categories: ['multimedia'],\r\n    example: '/soundon/p/33a68cdc-18ad-4192-84cc-22bd7fdc6a31',\r\n    parameters: { id: 'Podcast ID' },\r\n    features: {\r\n        supportPodcast: true,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['player.soundon.fm/p/:id'],\r\n        },\r\n    ],\r\n    name: 'Podcast',\r\n    maintainers: ['TonyRL'],\r\n    view: ViewType.Audios,\r\n    handler,\r\n};\r\n"],"mappings":"oVAOA,MAAM,EAAU,KAAO,IAAQ,CAC3B,GAAM,CAAE,MAAO,EAAI,IAAI,QAEjB,EAAc,mCACd,EAAW,uBAEX,EAAe,MAAMA,EAAM,OAAO,WAAW,IAAM,SAAY,CACjE,IAAM,EAAW,MAAMC,EAAO,GAAG,EAAY,YAAY,IAAM,CAC3D,QAAS,CACL,YAAa,KAGrB,OAAO,EAAS,KAAK,OAGnB,EAAY,MAAMD,EAAM,OAC1B,WAAW,EAAG,WACd,SAAY,CACR,IAAM,EAAW,MAAMC,EAAO,GAAG,EAAY,YAAY,EAAG,WAAY,CACpE,QAAS,CACL,YAAa,KAGrB,OAAO,EAAS,MAEpB,EAAO,MAAM,YACb,IAGE,EAAQ,EAAS,KAAK,CAAE,KAAM,MAAY,CAC5C,MAAO,EAAK,MACZ,YAAa,EAAK,eAClB,KAAM,EAAK,IACX,OAAQ,EAAK,WACb,QAAS,EAAU,EAAK,aACxB,kBAAmB,EAAK,MACxB,cAAe,EAAK,SACpB,eAAgB,EAAK,UACrB,gBAAiB,EAAK,SACtB,SAAU,EAAK,kBAGnB,MAAO,CACH,MAAO,EAAY,MACnB,YAAa,EAAY,YACzB,cAAe,EAAY,WAC3B,gBAAiB,EAAY,iBAAiB,KAAK,MACnD,gBAAiB,EAAY,SAC7B,MAAO,EAAY,MACnB,SAAU,EAAY,SACtB,KAAM,EAAY,IAClB,KAAM,IAIDC,EAAe,CACxB,KAAM,SACN,WAAY,CAAC,cACb,QAAS,kDACT,WAAY,CAAE,GAAI,cAClB,SAAU,CACN,eAAgB,IAEpB,MAAO,CACH,CACI,OAAQ,CAAC,6BAGjB,KAAM,UACN,YAAa,CAAC,UACd,KAAM,EAAS,OACf"}