{"version":3,"file":"news-D8z3SWjH.js","names":[],"sources":["../../lib/routes/dn/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/:language/news/:category?',\r\n    categories: ['new-media'],\r\n    example: '/dn/en-us/news',\r\n    parameters: { language: 'Language, see below', category: 'Category, see below, The Latest by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'News',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `#### Language\r\n\r\n| English | 中文  |\r\n| ------- | ----- |\r\n| en-us   | zh-cn |\r\n\r\n#### Category\r\n\r\n| English Category     | 中文分类 | Category id |\r\n| -------------------- | -------- | ----------- |\r\n| The Latest           | 最新     |             |\r\n| Industry Information | 行业资讯 | category-1  |\r\n| Knowledge            | 域名知识 | category-2  |\r\n| Investment           | 域名投资 | category-3  |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { language, category = '' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 10;\r\n\r\n    const rootUrl = 'https://dn.com';\r\n    const currentUrl = new URL(`/${language}/news/${category}`, rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    let items = $('a.list-item')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const image = item.find('div.img img');\r\n\r\n            return {\r\n                title: item.find('h2.ellipse2').text(),\r\n                link: new URL(item.prop('href'), rootUrl).href,\r\n                description: art(path.join(__dirname, 'templates/description.art'), {\r\n                    image: image\r\n                        ? {\r\n                              src: image.prop('src'),\r\n                              alt: image.prop('alt'),\r\n                          }\r\n                        : undefined,\r\n                    abstracts: item.find('p.abstract').html(),\r\n                }),\r\n                category: item\r\n                    .find('span.cat')\r\n                    .toArray()\r\n                    .map((c) => $(c).text()),\r\n                pubDate: timezone(parseDate(item.find('span.time').text()), +8),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const content = load(detailResponse);\r\n\r\n                item.title = content('h1.tit').text();\r\n                item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                    abstracts: content('div.abstract').html(),\r\n                    description: content('div.detail').html(),\r\n                });\r\n                item.author = content('span.author')\r\n                    .text()\r\n                    .replace(/(By|作者)\\s/, '');\r\n                item.category = [\r\n                    ...item.category,\r\n                    ...content('div.tags p a')\r\n                        .toArray()\r\n                        .map((c) => content(c).text()),\r\n                ];\r\n                item.pubDate = timezone(parseDate(content('span.date').text()), +8);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const title = $('a.logo img').prop('alt');\r\n    const icon = $('link[rel=\"icon\"]').prop('href');\r\n\r\n    return {\r\n        item: items,\r\n        title: `${title} - ${$('div.group a.active').text()}`,\r\n        link: currentUrl,\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        image: new URL($('a.logo img').prop('src'), rootUrl).href,\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('title').text(),\r\n        author: title,\r\n    };\r\n}\r\n"],"mappings":"0gBAUA,MAAa,EAAe,CACxB,KAAM,6BACN,WAAY,CAAC,aACb,QAAS,iBACT,WAAY,CAAE,SAAU,sBAAuB,SAAU,8CACzD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,WACd,UACA,YAAa;;;;;;;;;;;;;gDAgBjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAU,WAAW,IAAO,EAAI,IAAI,QACtC,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,iBACV,EAAa,IAAI,IAAI,IAAI,EAAS,QAAQ,IAAY,GAAS,KAE/D,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAI,EAAK,GAEX,EAAQ,EAAE,eACT,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,eAExB,MAAO,CACH,MAAO,EAAK,KAAK,eAAe,OAChC,KAAM,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,KAC1C,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,MAAO,EACD,CACI,IAAK,EAAM,KAAK,OAChB,IAAK,EAAM,KAAK,QAEpB,IAAA,GACN,UAAW,EAAK,KAAK,cAAc,SAEvC,SAAU,EACL,KAAK,YACL,UACA,IAAK,GAAM,EAAE,GAAG,QACrB,QAAS,EAAS,EAAU,EAAK,KAAK,aAAa,QAAS,MAIxE,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAM,EAAI,EAAK,MAE1C,EAAU,EAAK,GAkBrB,MAhBA,GAAK,MAAQ,EAAQ,UAAU,OAC/B,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,UAAW,EAAQ,gBAAgB,OACnC,YAAa,EAAQ,cAAc,SAEvC,EAAK,OAAS,EAAQ,eACjB,OACA,QAAQ,YAAa,IAC1B,EAAK,SAAW,CACZ,GAAG,EAAK,SACR,GAAG,EAAQ,gBACN,UACA,IAAK,GAAM,EAAQ,GAAG,SAE/B,EAAK,QAAU,EAAS,EAAU,EAAQ,aAAa,QAAS,GAEzD,MAKnB,IAAM,EAAQ,EAAE,cAAc,KAAK,OAC7B,EAAO,EAAE,oBAAoB,KAAK,QAExC,MAAO,CACH,KAAM,EACN,MAAO,GAAG,EAAM,KAAK,EAAE,sBAAsB,SAC7C,KAAM,EACN,YAAa,EAAE,4BAA4B,KAAK,WAChD,SAAU,EAAE,QAAQ,KAAK,QACzB,MAAO,IAAI,IAAI,EAAE,cAAc,KAAK,OAAQ,GAAS,KACrD,OACA,KAAM,EACN,SAAU,EAAE,SAAS,OACrB,OAAQ"}