{"version":3,"file":"utils-C2n-5NTQ.js","names":["cache","got","data"],"sources":["../../lib/routes/jike/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\n\r\nconst videoAPI = 'https://api.ruguoapp.com/1.0/mediaMeta/play?type=ORIGINAL_POST';\r\nconst topicDataHanding = (data, ctx) =>\r\n    data.posts.map((item) => {\r\n        let audioName, videoName, linkName;\r\n\r\n        // 获取纯文字内容 和 即刻原文链接\r\n        let content, link;\r\n        switch (item.type) {\r\n            case 'ORIGINAL_POST':\r\n                content = item.content;\r\n                link = `https://m.okjike.com/originalPosts/${item.id}`;\r\n                break;\r\n\r\n            /* case 'QUESTION':\r\n            content = item.title;\r\n            link = `https://m.okjike.com/questions/${item.id}`;\r\n            break;\r\n        case 'OFFICIAL_MESSAGE':\r\n            content = item.content;\r\n            link = `https://web.okjike.com/message-detail/${item.id}/officialMessage`;\r\n            break;*/\r\n            default:\r\n                content = '未知类型，请前往GitHub提交issue';\r\n                link = 'https://github.com/DIYgod/RSSHub/issues';\r\n        }\r\n\r\n        // rss内容\r\n        let description = '';\r\n        // 作者昵称\r\n        let author = '';\r\n\r\n        // 添加内容作者信息\r\n        if (item.user) {\r\n            author = item.user.screenName;\r\n            if (ctx.req.param('showUid')) {\r\n                description += `<span>用户昵称：${author} <br> Username：${item.user.username}</span><br>`;\r\n            }\r\n        }\r\n\r\n        if (item.linkInfo) {\r\n            const linkUrl = item.linkInfo.originalLinkUrl || item.linkInfo.linkUrl;\r\n\r\n            // 对于即刻抓取的微信公众号文章 特殊处理\r\n            // 此时 Rss原文链接 变为 微信公众号链接\r\n            if (new URL(linkUrl).host === 'mp.weixin.qq.com') {\r\n                link = linkUrl;\r\n            }\r\n\r\n            // 1. 音频\r\n            const audioObject = item.linkInfo.audio || item.audio;\r\n            if (audioObject) {\r\n                const audioImage = audioObject.image.picUrl || audioObject.image.thumbnailUrl;\r\n                const audioLink = linkUrl;\r\n                const audioTitle = audioObject.title;\r\n                const audioAuthor = audioObject.author;\r\n                audioName = `${audioTitle} - ${audioAuthor}`;\r\n                description += `\r\n            <img src=\"${audioImage}\">\r\n            <a href=\"${audioLink}\">${audioName}</a>\r\n        `;\r\n            }\r\n\r\n            // 2. 视频\r\n            const videoObject = item.linkInfo.video || item.video;\r\n            if (videoObject) {\r\n                const videoImage = videoObject.image.picUrl || videoObject.image.thumbnailUrl;\r\n                const videoLink = linkUrl;\r\n                const videoDuration = Math.floor(videoObject.duration / 60000);\r\n                videoName = item.linkInfo.title;\r\n                description += `\r\n            <img src=\"${videoImage}\">\r\n            <a href=\"${videoLink}\">${videoName || '观看视频'} - 约${videoDuration}分钟</a>\r\n        `;\r\n            }\r\n\r\n            // 3. 链接\r\n            if (!audioObject && !videoObject && linkUrl) {\r\n                // 部分链接有标题\r\n                linkName = item.linkInfo.title;\r\n                const linkTitle = linkName || '访问原文';\r\n                // 部分链接有缩略图\r\n                const linkImage = item.linkInfo.pictureUrl;\r\n                const imageTag = `<img src=\"${linkImage}\">`;\r\n                description += `\r\n            ${linkImage ? imageTag : ''}\r\n            <a href=\"${linkUrl}\">${linkTitle}</a>\r\n        `;\r\n            }\r\n        }\r\n\r\n        // 4. 文字内容\r\n        description += description ? `<br>${content}` : content;\r\n\r\n        // 5. 图片\r\n        if (item.pictures) {\r\n            for (const pic of item.pictures) {\r\n                if (pic.format === 'gif') {\r\n                    description += `<img src=\"${pic.picUrl.split('?imageMogr2/')[0]}\">`;\r\n                } else {\r\n                    // jpeg, bmp, png, gif, webp\r\n                    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\r\n                    // let type = 'jpeg';\r\n                    // switch (pic.format) {\r\n                    //     case 'bmp':\r\n                    //         type = 'bmp';\r\n                    //         break;\r\n                    //     case 'png':\r\n                    //         type = 'png';\r\n                    //         break;\r\n                    //     default:\r\n                    //         break;\r\n                    // }\r\n                    const imgUrl = /\\.[\\da-z]+?\\?imageMogr2/.test(pic.picUrl) ? pic.picUrl.split('?imageMogr2/')[0] : pic.picUrl.replace(/thumbnail\\/.+/, '');\r\n                    description += `<br><img src=\"${imgUrl}\">`;\r\n                    // description += `<br><picture><source srcset=\"${\r\n                    //     pic.picUrl.split('/thumbnail/')[0]\r\n                    // }/strip/format/webp\" type=\"image/webp\"><source srcset=\"${imgUrl}\" type=\"image/${type}\"><img src=\"${imgUrl}\"></picture>`;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 6. 视频\r\n        if (item.video) {\r\n            description += `<br><video src=\"${item.video.url}\" controls></video>`;\r\n        }\r\n\r\n        // rss标题\r\n        // 优先将音频和视频名作为标题\r\n        // 其次将正文内容作为标题\r\n        // 若都没有 则是推送型消息，将连接标题作为主题\r\n        // “无题” fallback\r\n        const title = audioName || videoName || content || linkName || '无题';\r\n\r\n        return {\r\n            title,\r\n            description: description.trim().replaceAll('\\n', '<br>'),\r\n            pubDate: parseDate(item.createdAt),\r\n            author,\r\n            link,\r\n        };\r\n    });\r\nconst constructTopicEntry = async (ctx, url) => {\r\n    const data = await cache.tryGet(\r\n        url,\r\n        async () => {\r\n            const resp = await got(url);\r\n            const html = resp.data;\r\n            const $ = load(html);\r\n            const raw = $('[type = \"application/json\"]').html();\r\n            const data = JSON.parse(raw).props.pageProps;\r\n            data.posts = await Promise.all(\r\n                data.posts.map(async (item) => {\r\n                    if (!item.video) {\r\n                        return item;\r\n                    }\r\n\r\n                    const videoUrl = `${videoAPI}&id=${item.id}`;\r\n                    const videoRes = await got(videoUrl);\r\n                    item.video = videoRes.data;\r\n\r\n                    return item;\r\n                })\r\n            );\r\n\r\n            return data;\r\n        },\r\n        false,\r\n        config.cache.routeExpire\r\n    );\r\n\r\n    if (data.length === 0) {\r\n        return {\r\n            title: '主题 ID 不存在，或该主题暂无内容',\r\n        };\r\n    }\r\n\r\n    const topic = data.topic;\r\n\r\n    data.result = {\r\n        title: `${topic.content} - 即刻圈子`,\r\n        link: url,\r\n        description: topic.briefIntro,\r\n        image: topic.squarePicture.picUrl || topic.squarePicture.middlePicUrl || topic.squarePicture.thumbnailUrl,\r\n        // item: topicDataHanding(data),\r\n    };\r\n\r\n    return data;\r\n};\r\n\r\nexport { topicDataHanding, constructTopicEntry };\r\n"],"mappings":"sOAMA,MACM,GAAoB,EAAM,IAC5B,EAAK,MAAM,IAAK,GAAS,CACrB,IAAI,EAAW,EAAW,EAGtB,EAAS,EACb,OAAQ,EAAK,KAAb,CACI,IAAK,gBACD,EAAU,EAAK,QACf,EAAO,sCAAsC,EAAK,KAClD,MAUJ,QACI,EAAU,wBACV,EAAO,0CAIf,IAAI,EAAc,GAEd,EAAS,GAUb,GAPI,EAAK,OACL,EAAS,EAAK,KAAK,WACf,EAAI,IAAI,MAAM,aACd,GAAe,cAAc,EAAO,iBAAiB,EAAK,KAAK,SAAS,eAI5E,EAAK,SAAU,CACf,IAAM,EAAU,EAAK,SAAS,iBAAmB,EAAK,SAAS,QAI3D,IAAI,IAAI,GAAS,OAAS,qBAC1B,EAAO,GAIX,IAAM,EAAc,EAAK,SAAS,OAAS,EAAK,MAChD,GAAI,EAAa,CACb,IAAM,EAAa,EAAY,MAAM,QAAU,EAAY,MAAM,aAC3D,EAAY,EACZ,EAAa,EAAY,MACzB,EAAc,EAAY,OAChC,EAAY,GAAG,EAAW,KAAK,IAC/B,GAAe;wBACP,EAAW;uBACZ,EAAU,IAAI,EAAU;UAKnC,IAAM,EAAc,EAAK,SAAS,OAAS,EAAK,MAChD,GAAI,EAAa,CACb,IAAM,EAAa,EAAY,MAAM,QAAU,EAAY,MAAM,aAC3D,EAAY,EACZ,EAAgB,KAAK,MAAM,EAAY,SAAW,KACxD,EAAY,EAAK,SAAS,MAC1B,GAAe;wBACP,EAAW;uBACZ,EAAU,IAAI,GAAa,OAAO,MAAM,EAAc;UAKjE,GAAI,CAAC,GAAe,CAAC,GAAe,EAAS,CAEzC,EAAW,EAAK,SAAS,MACzB,IAAM,EAAY,GAAY,OAExB,EAAY,EAAK,SAAS,WAC1B,EAAW,aAAa,EAAU,IACxC,GAAe;cACjB,EAAY,EAAW,GAAG;uBACjB,EAAQ,IAAI,EAAU;WASrC,GAHA,GAAe,EAAc,OAAO,IAAY,EAG5C,EAAK,SACL,IAAK,IAAM,KAAO,EAAK,SACnB,GAAI,EAAI,SAAW,MACf,GAAe,aAAa,EAAI,OAAO,MAAM,gBAAgB,GAAG,QAC7D,CAcH,IAAM,EAAS,0BAA0B,KAAK,EAAI,QAAU,EAAI,OAAO,MAAM,gBAAgB,GAAK,EAAI,OAAO,QAAQ,gBAAiB,IACtI,GAAe,iBAAiB,EAAO,IAS/C,EAAK,QACL,GAAe,mBAAmB,EAAK,MAAM,IAAI,sBAQrD,IAAM,EAAQ,GAAa,GAAa,GAAW,GAAY,KAE/D,MAAO,CACH,QACA,YAAa,EAAY,OAAO,WAAW;EAAM,QACjD,QAAS,EAAU,EAAK,WACxB,SACA,UAGN,EAAsB,MAAO,EAAK,IAAQ,CAC5C,IAAM,EAAO,MAAMA,EAAM,OACrB,EACA,SAAY,CACR,IAAM,EAAO,MAAMC,EAAI,GACjB,EAAO,EAAK,KACZ,EAAI,EAAK,GACT,EAAM,EAAE,+BAA+B,OACvCC,EAAO,KAAK,MAAM,GAAK,MAAM,UAenC,MAdA,GAAK,MAAQ,MAAM,QAAQ,IACvBA,EAAK,MAAM,IAAI,KAAO,IAAS,CAC3B,GAAI,CAAC,EAAK,MACN,OAAO,EAGX,IAAM,EAAW,qEAAkB,EAAK,KAClC,EAAW,MAAMD,EAAI,GAG3B,MAFA,GAAK,MAAQ,EAAS,KAEf,KAIRC,GAEX,GACA,EAAO,MAAM,aAGjB,GAAI,EAAK,SAAW,EAChB,MAAO,CACH,MAAO,sBAIf,IAAM,EAAQ,EAAK,MAUnB,MARA,GAAK,OAAS,CACV,MAAO,GAAG,EAAM,QAAQ,SACxB,KAAM,EACN,YAAa,EAAM,WACnB,MAAO,EAAM,cAAc,QAAU,EAAM,cAAc,cAAgB,EAAM,cAAc,cAI1F"}