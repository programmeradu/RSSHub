{"version":3,"file":"iwara-LQbsFVfV.js","names":["route: Route","cache","got"],"sources":["../../lib/routes/iwara/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\n\r\nconst rootUrl = 'https://www.iwara.tv';\r\nconst apiRootUrl = 'https://api.iwara.tv';\r\nconst imageRootUrl = 'https://i.iwara.tv';\r\n\r\nconst typeMap = {\r\n    video: 'Videos',\r\n    image: 'Images',\r\n};\r\n\r\nconst apiUrlMap = {\r\n    video: `${apiRootUrl}/videos`,\r\n    image: `${apiRootUrl}/images`,\r\n};\r\n\r\nconst parseThumbnail = (type, item) => {\r\n    if (type === 'image') {\r\n        return `<img src=\"${imageRootUrl}/image/original/${item.thumbnail.id}/${item.thumbnail.name}\">`;\r\n    }\r\n\r\n    if (item.embedUrl === null) {\r\n        return `<img src=\"${imageRootUrl}/image/original/${item.file.id}/thumbnail-${String(item.thumbnail).padStart(2, '0')}.jpg\">`;\r\n    }\r\n\r\n    // regex borrowed from https://stackoverflow.com/a/3726073\r\n    const match = /https?:\\/\\/(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w-]*)(&(amp;)?[\\w=?]*)?/.exec(item.embedUrl);\r\n    if (match) {\r\n        return `<img src=\"${imageRootUrl}/image/embed/original/youtube/${match[1]}\">`;\r\n    }\r\n\r\n    return '';\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/users/:username?/:type?',\r\n    name: 'Unknown',\r\n    maintainers: ['Fatpandac'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const username = ctx.req.param('username');\r\n    const id = await cache.tryGet(`${apiRootUrl}/profile/${username}`, async () => (await got(`${apiRootUrl}/profile/${username}`)).data.user.id);\r\n    const type = ctx.req.param('type') ?? 'video';\r\n    const items = (await cache.tryGet(`${apiUrlMap[type]}?user=${id}`, async () => (await got(`${apiUrlMap[type]}?user=${id}`)).data.results, config.cache.routeExpire, false)).map((item) => ({\r\n        title: item.title,\r\n        author: username,\r\n        link: `${rootUrl}/${type}/${item.id}/${item.slug}`,\r\n        category: item.tags.map((i) => i.id),\r\n        description: parseThumbnail(type, item),\r\n        pubDate: parseDate(item.createdAt),\r\n    }));\r\n\r\n    return {\r\n        title: `${username}'s iwara - ${typeMap[type]}`,\r\n        link: `${rootUrl}/users/${username}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"0VAMA,MAAM,EAAU,uBACV,EAAa,uBACb,EAAe,qBAEf,EAAU,CACZ,MAAO,SACP,MAAO,UAGL,EAAY,CACd,MAAO,GAAG,EAAW,SACrB,MAAO,GAAG,EAAW,UAGnB,GAAkB,EAAM,IAAS,CACnC,GAAI,IAAS,QACT,MAAO,aAAa,EAAa,kBAAkB,EAAK,UAAU,GAAG,GAAG,EAAK,UAAU,KAAK,IAGhG,GAAI,EAAK,WAAa,KAClB,MAAO,aAAa,EAAa,kBAAkB,EAAK,KAAK,GAAG,aAAa,OAAO,EAAK,WAAW,SAAS,EAAG,KAAK,QAIzH,IAAM,EAAQ,oFAAoF,KAAK,EAAK,UAK5G,OAJI,EACO,aAAa,EAAa,gCAAgC,EAAM,GAAG,IAGvE,IAGEA,EAAe,CACxB,KAAM,2BACN,KAAM,UACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YACzB,EAAK,MAAMC,EAAM,OAAO,GAAG,EAAW,WAAW,IAAY,UAAa,MAAMC,EAAI,GAAG,EAAW,WAAW,MAAa,KAAK,KAAK,IACpI,EAAO,EAAI,IAAI,MAAM,SAAW,QAChC,GAAS,MAAMD,EAAM,OAAO,GAAG,EAAU,GAAM,QAAQ,IAAM,UAAa,MAAMC,EAAI,GAAG,EAAU,GAAM,QAAQ,MAAO,KAAK,QAAS,EAAO,MAAM,YAAa,KAAQ,IAAK,IAAU,CACvL,MAAO,EAAK,MACZ,OAAQ,EACR,KAAM,GAAG,EAAQ,GAAG,EAAK,GAAG,EAAK,GAAG,GAAG,EAAK,OAC5C,SAAU,EAAK,KAAK,IAAK,GAAM,EAAE,IACjC,YAAa,EAAe,EAAM,GAClC,QAAS,EAAU,EAAK,cAG5B,MAAO,CACH,MAAO,GAAG,EAAS,aAAa,EAAQ,KACxC,KAAM,GAAG,EAAQ,SAAS,IAC1B,KAAM"}