{"version":3,"file":"guild-DWK-v93k.js","names":["patterns: FeedPattern[]","texts: string[]","images: { [id: string]: FeedImage }","route: Route","InvalidParameterError","ofetch","cache","feedContent: Feed"],"sources":["../../lib/routes/qq/pd/utils.ts","../../lib/routes/qq/pd/guild.ts"],"sourcesContent":["// Description: QQ PD utils\r\n\r\nimport { Feed, FeedImage, FeedPattern, FeedFontProps, FeedPatternData } from './types';\r\n\r\nconst patternTypeMap = {\r\n    1: 'text',\r\n    2: 'emoji',\r\n    5: 'link',\r\n    6: 'image',\r\n    9: 'newline',\r\n};\r\n\r\nconst textAlignmentMap = {\r\n    0: 'left',\r\n    1: 'center',\r\n    2: 'right',\r\n};\r\n\r\nfunction parseText(text: string, props: FeedFontProps | undefined): string {\r\n    if (props === undefined) {\r\n        return text;\r\n    }\r\n    let style = '';\r\n    if (props.fontWeight === 700) {\r\n        style += 'font-weight: bold;';\r\n    }\r\n    if (props.italic) {\r\n        style += 'font-style: italic;';\r\n    }\r\n    if (props.underline) {\r\n        style += 'text-decoration: underline;';\r\n    }\r\n    if (style === '') {\r\n        return text;\r\n    }\r\n    return `<span style=\"${style}\">${text}</span>`;\r\n}\r\n\r\nfunction parseDataItem(item: FeedPatternData, texts: string[], images: { [id: string]: FeedImage }): string {\r\n    let imageId = '';\r\n    switch (patternTypeMap[item.type] || undefined) {\r\n        case 'text':\r\n            return parseText(texts.shift() ?? '', item.props);\r\n        case 'newline':\r\n            texts.shift();\r\n            return '<br />';\r\n        case 'link':\r\n            return `<a href=\"${item.href ?? '#'}\" target=\"_blank\">${item.desc ?? ''}</a>`;\r\n        case 'image':\r\n            imageId = item.fileId || item.taskId || '';\r\n            return `<img src=\"${images[imageId].picUrl}\" style=\"max-width: 100%; width: ${images[imageId].width}px;\"><br />`;\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nfunction parseArticle(feed: Feed, texts: string[], images: { [id: string]: FeedImage }): string {\r\n    let result = '';\r\n    if (feed.patternInfo === undefined || feed.patternInfo === null || feed.patternInfo === '') {\r\n        feed.patternInfo = '[]';\r\n    }\r\n    const patterns: FeedPattern[] = JSON.parse(feed.patternInfo);\r\n    for (const pattern of patterns) {\r\n        if (pattern.props === undefined) {\r\n            continue;\r\n        }\r\n        const textAlign = pattern.props.textAlignment || 0;\r\n        result += '<p style=\"text-align: ' + textAlignmentMap[textAlign] + ';\">';\r\n        for (const item of pattern.data) {\r\n            result += parseDataItem(item, texts, images);\r\n        }\r\n        result += '</p>';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction parsePost(feed: Feed, texts: string[], images: { [id: string]: FeedImage }): string {\r\n    for (const content of feed.contents.contents) {\r\n        if (content.text_content) {\r\n            texts.push(content.text_content.text);\r\n        }\r\n    }\r\n    let result = '';\r\n    for (const text of texts) {\r\n        result += text;\r\n    }\r\n    for (const image of Object.values(images)) {\r\n        result += '<p style=\"text-align: center\">';\r\n        result += `<img src=\"${image.picUrl}\" style=\"max-width: 100%; width: ${image.width}px;\">`;\r\n        result += '</p>';\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function parseFeed(feed: Feed): string {\r\n    const texts: string[] = [];\r\n    const images: { [id: string]: FeedImage } = {};\r\n    for (const content of feed.contents.contents) {\r\n        if (content.text_content) {\r\n            texts.push(content.text_content.text);\r\n        }\r\n    }\r\n    for (const image of feed.images) {\r\n        images[image.picId] = {\r\n            picId: image.picId,\r\n            picUrl: image.picUrl,\r\n            width: image.width,\r\n            height: image.height,\r\n        };\r\n    }\r\n    if (feed.feed_type === 1) {\r\n        // post: text and attachments\r\n        return parsePost(feed, texts, images);\r\n    } else if (feed.feed_type === 2) {\r\n        // article: pattern info\r\n        return parseArticle(feed, texts, images);\r\n    }\r\n    return '';\r\n}\r\n","import { Data, DataItem, Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport type { Context } from 'hono';\r\n\r\nimport { Feed } from './types';\r\nimport { parseFeed } from './utils';\r\nimport cache from '@/utils/cache';\r\n\r\nconst baseUrl = 'https://pd.qq.com/g/';\r\nconst baseApiUrl = 'https://pd.qq.com/qunng/guild/gotrpc/noauth/trpc.qchannel.commreader.ComReader/';\r\nconst getGuildFeedsUrl = baseApiUrl + 'GetGuildFeeds';\r\nconst getChannelTimelineFeedsUrl = baseApiUrl + 'GetChannelTimelineFeeds';\r\nconst getFeedDetailUrl = baseApiUrl + 'GetFeedDetail';\r\n\r\nconst sortMap = {\r\n    hot: 0,\r\n    created: 1,\r\n    replied: 2,\r\n};\r\n\r\nexport const route: Route = {\r\n    path: ['/pd/guild/:id/:sub?/:sort?'],\r\n    categories: ['bbs'],\r\n    example: '/qq/pd/guild/qrp4pkq01d/650967831/created',\r\n    parameters: {\r\n        id: '频道号',\r\n        sub: '子频道 ID，网页端 URL `subc` 参数的值，默认为 `hot`（全部）',\r\n        sort: '排序方式，`hot`（热门），`created`（最新发布），`replied`（最新回复），默认为 `created`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['pd.qq.com/'],\r\n        },\r\n    ],\r\n    name: '腾讯频道',\r\n    maintainers: ['mobyw'],\r\n    handler,\r\n    url: 'pd.qq.com/',\r\n};\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const { id, sub = 'hot', sort = 'created' } = ctx.req.param();\r\n\r\n    if (sort in sortMap === false) {\r\n        throw new InvalidParameterError('invalid sort parameter, should be `hot`, `created`, or `replied`');\r\n    }\r\n    const sortType = sortMap[sort];\r\n\r\n    let url = '';\r\n    let body = {};\r\n    let headers = {};\r\n\r\n    if (sub === 'hot') {\r\n        url = getGuildFeedsUrl;\r\n        // notice: do not change the order of the keys in the body\r\n        body = { count: 20, from: 7, guild_number: id, get_type: 1, feedAttchInfo: '', sortOption: sortType, need_channel_list: false, need_top_info: false };\r\n        headers = {\r\n            cookie: 'p_uin=o09000002',\r\n            'x-oidb': '{\"uint32_service_type\":12}',\r\n            'x-qq-client-appid': '537246381',\r\n        };\r\n    } else {\r\n        url = getChannelTimelineFeedsUrl;\r\n        // notice: do not change the order of the keys in the body\r\n        body = { count: 20, from: 7, guild_number: id, channelSign: { channel_id: sub }, feedAttchInfo: '', sortOption: sortType, need_top_info: false };\r\n        headers = {\r\n            cookie: 'p_uin=o09000002',\r\n            'x-oidb': '{\"uint32_service_type\":11}',\r\n            'x-qq-client-appid': '537246381',\r\n        };\r\n    }\r\n\r\n    const data = await ofetch(url, { method: 'POST', body, headers });\r\n    const feeds = data.data?.vecFeed || [];\r\n\r\n    const items = feeds.map(async (feed: Feed) => {\r\n        let subId = sub;\r\n        if (sub === 'hot') {\r\n            // get real subId for hot feeds\r\n            subId = feed.channelInfo?.sign?.channel_id || '';\r\n        }\r\n        const feedLink = baseUrl + id + '/post/' + feed.id;\r\n        const feedDetail = await cache.tryGet(feedLink, async () => {\r\n            // notice: do not change the order of the keys in the body\r\n            body = {\r\n                feedId: feed.id,\r\n                userId: feed.poster?.id,\r\n                createTime: feed.createTime,\r\n                from: 2,\r\n                detail_type: 1,\r\n                channelSign: { guild_number: id, channel_id: subId },\r\n                extInfo: {\r\n                    mapInfo: [\r\n                        { key: 'qc-tabid', value: 'ark' },\r\n                        { key: 'qc-pageid', value: 'pc' },\r\n                    ],\r\n                },\r\n            };\r\n            headers = {\r\n                cookie: 'p_uin=o09000002',\r\n                referer: feedLink,\r\n                'x-oidb': '{\"uint32_service_type\":5}',\r\n                'x-qq-client-appid': '537246381',\r\n            };\r\n            const feedResponse = await ofetch(getFeedDetailUrl, { method: 'POST', body, headers });\r\n            const feedContent: Feed = feedResponse.data?.feed || {};\r\n            return {\r\n                title: feed.title?.contents[0]?.text_content?.text || feed.channelInfo?.guild_name || '',\r\n                link: feedLink,\r\n                description: parseFeed(feedContent),\r\n                pubDate: new Date(Number(feed.createTime) * 1000),\r\n                author: feed.poster?.nick,\r\n            };\r\n        });\r\n\r\n        return feedDetail;\r\n    });\r\n\r\n    const feedItems = await Promise.all(items);\r\n\r\n    let guildName = '';\r\n\r\n    if (feeds.length > 0 && feeds[0].channelInfo?.guild_name) {\r\n        guildName = feeds[0].channelInfo?.guild_name;\r\n        if (sub !== 'hot' && feeds[0].channelInfo?.name) {\r\n            guildName += ' (' + feeds[0].channelInfo?.name + ')';\r\n        }\r\n        guildName += ' - 腾讯频道';\r\n    }\r\n\r\n    return {\r\n        title: guildName,\r\n        link: baseUrl + id,\r\n        description: guildName,\r\n        item: feedItems as DataItem[],\r\n    };\r\n}\r\n"],"mappings":"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"}