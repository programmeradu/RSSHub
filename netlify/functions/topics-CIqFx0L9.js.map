{"version":3,"file":"topics-CIqFx0L9.js","names":[],"sources":["../../lib/routes/lovelive-anime/topics.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\nconst renderDescription = (desc) => art(path.join(__dirname, 'templates/description.art'), desc);\r\n\r\nexport const route: Route = {\r\n    path: '/topics/:abbr/:category?/:option?',\r\n    categories: ['anime'],\r\n    example: '/lovelive-anime/topics/otonokizaka',\r\n    parameters: {\r\n        abbr: 'The path to the Love Live series of sub-projects on the official website is detailed in the table below',\r\n        category: 'The official website lists the Topics category, `category` is `detail` when crawling the full text, other categories see the following table for details',\r\n        option: 'Crawl full text when `option` is `detail`.',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Categories Topics',\r\n    maintainers: ['axojhf'],\r\n    handler,\r\n    description: `| Sub-project Name (not full name) | Lovelive!   | Lovelive! Sunshine!! | Lovelive! Nijigasaki High School Idol Club | Lovelive! Superstar!! | 幻日のヨハネ | ラブライブ！スクールアイドルミュージカル |\r\n| -------------------------------- | ----------- | -------------------- | ------------------------------------------ | --------------------- | ------------ | ---------------------------------------- |\r\n| \\`abbr\\`parameter                  | otonokizaka | uranohoshi           | nijigasaki                                 | yuigaoka              | yohane       | musical                                  |\r\n\r\n| Category Name       | 全てのニュース        | 音楽商品 | アニメ映像商品 | キャスト映像商品 | 劇場    | アニメ放送 / 配信 | キャスト配信 / ラジオ | ライブ / イベント | ブック | グッズ | ゲーム | メディア | ご当地情報 | その他 | キャンペーン |\r\n| ------------------- | --------------------- | -------- | -------------- | ---------------- | ------- | ----------------- | --------------------- | ----------------- | ------ | ------ | ------ | -------- | ---------- | ------ | ------------ |\r\n| \\`category\\`parameter | <u>*No parameter*</u> | music    | anime\\_movie   | cast\\_movie      | theater | onair             | radio                 | event             | books  | goods  | game   | media    | local      | other  | campaign     |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { abbr, category = '', option } = ctx.req.param();\r\n    let rootUrl: string;\r\n    switch (abbr) {\r\n        case 'musical':\r\n            rootUrl = 'https://www.lovelive-anime.jp/special/musical';\r\n            break;\r\n        default:\r\n            rootUrl = `https://www.lovelive-anime.jp/${abbr}`;\r\n            break;\r\n    }\r\n    const topicsTable = {\r\n        otonokizaka: 'topics.php',\r\n        uranohoshi: 'topics.php',\r\n        nijigasaki: 'topics.php',\r\n        yuigaoka: 'topics/',\r\n        hasunosora: 'news/',\r\n        musical: 'topics.php',\r\n    };\r\n    const baseUrl = `${rootUrl}/${topicsTable[abbr]}`;\r\n    const abbrDetail = {\r\n        otonokizaka: 'ラブライブ！',\r\n        uranohoshi: 'サンシャイン!!',\r\n        nijigasaki: '虹ヶ咲学園',\r\n        yuigaoka: 'スーパースター!!',\r\n    };\r\n\r\n    const url = category !== '' && category !== 'detail' ? `${baseUrl}?cat=${category}` : baseUrl;\r\n\r\n    const response = await ofetch(url);\r\n\r\n    const $ = load(response);\r\n\r\n    const categoryName = 'uranohoshi' === abbr ? $('div.llbox > p').text() : $('div.category_title > h2').text();\r\n\r\n    const newsList = 'hasunosora' === abbr ? $('.list__content > ul > li').toArray() : $('ul.listbox > li').toArray();\r\n    let items;\r\n\r\n    switch (abbr) {\r\n        case 'hasunosora':\r\n            items = newsList.map((item) => {\r\n                item = $(item);\r\n                const link = `${rootUrl}/news/${item.find('a').attr('href')}`;\r\n                const pubDate = timezone(parseDate(item.find('.list--date').text(), 'YYYY.MM.DD'), +9);\r\n                const title = item.find('.list--text').text();\r\n                const category = item.find('.list--category').text();\r\n\r\n                return {\r\n                    link,\r\n                    pubDate,\r\n                    title,\r\n                    category,\r\n                    description: title,\r\n                };\r\n            });\r\n            break;\r\n        default:\r\n            items = newsList.map((item) => {\r\n                item = $(item);\r\n                let link: string;\r\n                switch (abbr) {\r\n                    case 'yuigaoka':\r\n                        link = `${baseUrl}${item.find('div > a').attr('href')}`;\r\n                        break;\r\n                    default:\r\n                        link = `${rootUrl}/${item.find('div > a').attr('href')}`;\r\n                        break;\r\n                }\r\n                const pubDate = timezone(parseDate(item.find('a > p.date').text(), 'YYYY/MM/DD'), +9);\r\n                const title = item.find('a > p.title').text();\r\n                const category = item.find('a > p.category').text();\r\n                const relativeImgLink = item\r\n                    .find('a > img')\r\n                    .attr('style')\r\n                    .match(/background-image:url\\((.*)\\)/)[1];\r\n                const imglink = new URL(relativeImgLink, baseUrl).href;\r\n\r\n                return {\r\n                    link,\r\n                    pubDate,\r\n                    title,\r\n                    category,\r\n                    description: renderDescription({\r\n                        imglink,\r\n                    }),\r\n                };\r\n            });\r\n            break;\r\n    }\r\n\r\n    if (option === 'detail' || category === 'detail') {\r\n        items = await Promise.all(\r\n            items.map((item) =>\r\n                cache.tryGet(item.link, async () => {\r\n                    const detailResp = await ofetch(item.link);\r\n                    const $ = load(detailResp);\r\n                    let content;\r\n                    switch (abbr) {\r\n                        case 'hasunosora':\r\n                            content = $('div.detail__content');\r\n                            break;\r\n                        default:\r\n                            content = $('div.p-page__detail.p-article');\r\n                            break;\r\n                    }\r\n                    for (const v of content.find('img')) {\r\n                        v.attribs.src = `${baseUrl}${v.attribs.src}`;\r\n                    }\r\n                    item.description = content.html();\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n    }\r\n\r\n    return {\r\n        title: `${categoryName} - ${abbrDetail[abbr]} - Love Live Official Website Topics`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"qdASA,MAAM,EAAqB,GAAS,EAAI,EAAA,KAAA,EAAA,sCAAmD,GAE9E,EAAe,CACxB,KAAM,oCACN,WAAY,CAAC,SACb,QAAS,qCACT,WAAY,CACR,KAAM,0GACN,SAAU,2JACV,OAAQ,8CAEZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,oBACN,YAAa,CAAC,UACd,UACA,YAAa;;;;;;sPASjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,OAAM,WAAW,GAAI,UAAW,EAAI,IAAI,QAC5C,EACJ,OAAQ,EAAR,CACI,IAAK,UACD,EAAU,gDACV,MACJ,QACI,EAAU,iCAAiC,IAC3C,MAER,IAAM,EAAc,CAChB,YAAa,aACb,WAAY,aACZ,WAAY,aACZ,SAAU,UACV,WAAY,QACZ,QAAS,cAEP,EAAU,GAAG,EAAQ,GAAG,EAAY,KACpC,EAAa,CACf,YAAa,SACb,WAAY,WACZ,WAAY,QACZ,SAAU,aAGR,EAAM,IAAa,IAAM,IAAa,SAAW,GAAG,EAAQ,OAAO,IAAa,EAEhF,EAAW,MAAM,EAAO,GAExB,EAAI,EAAK,GAET,EAAgC,IAAjB,aAAwB,EAAE,iBAAiB,OAAS,EAAE,2BAA2B,OAEhG,EAA4B,IAAjB,aAAwB,EAAE,4BAA4B,UAAY,EAAE,mBAAmB,UACpG,EAEJ,OAAQ,EAAR,CACI,IAAK,aACD,EAAQ,EAAS,IAAK,GAAS,CAC3B,EAAO,EAAE,GACT,IAAM,EAAO,GAAG,EAAQ,QAAQ,EAAK,KAAK,KAAK,KAAK,UAC9C,EAAU,EAAS,EAAU,EAAK,KAAK,eAAe,OAAQ,cAAe,GAC7E,EAAQ,EAAK,KAAK,eAAe,OACjC,EAAW,EAAK,KAAK,mBAAmB,OAE9C,MAAO,CACH,OACA,UACA,QACA,SAAA,EACA,YAAa,KAGrB,MACJ,QACI,EAAQ,EAAS,IAAK,GAAS,CAC3B,EAAO,EAAE,GACT,IAAI,EACJ,OAAQ,EAAR,CACI,IAAK,WACD,EAAO,GAAG,IAAU,EAAK,KAAK,WAAW,KAAK,UAC9C,MACJ,QACI,EAAO,GAAG,EAAQ,GAAG,EAAK,KAAK,WAAW,KAAK,UAC/C,MAER,IAAM,EAAU,EAAS,EAAU,EAAK,KAAK,cAAc,OAAQ,cAAe,GAC5E,EAAQ,EAAK,KAAK,eAAe,OACjC,EAAW,EAAK,KAAK,kBAAkB,OACvC,EAAkB,EACnB,KAAK,WACL,KAAK,SACL,MAAM,gCAAgC,GACrC,EAAU,IAAI,IAAI,EAAiB,GAAS,KAElD,MAAO,CACH,OACA,UACA,QACA,SAAA,EACA,YAAa,EAAkB,CAC3B,eAIZ,MA4BR,OAzBI,IAAW,UAAY,IAAa,YACpC,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAa,MAAM,EAAO,EAAK,MAC/B,EAAI,EAAK,GACX,EACJ,OAAQ,EAAR,CACI,IAAK,aACD,EAAU,EAAE,uBACZ,MACJ,QACI,EAAU,EAAE,gCACZ,MAER,IAAK,IAAM,KAAK,EAAQ,KAAK,OACzB,EAAE,QAAQ,IAAM,GAAG,IAAU,EAAE,QAAQ,MAG3C,MADA,GAAK,YAAc,EAAQ,OACpB,OAMhB,CACH,MAAO,GAAG,EAAa,KAAK,EAAW,GAAM,sCAC7C,KAAM,EACN,KAAM"}