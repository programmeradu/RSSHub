{"version":3,"file":"jwc-EqvpMebJ.js","names":["got","route: Route","got","util","cache"],"sources":["../../lib/routes/bjfu/jwc/utils.ts","../../lib/routes/bjfu/jwc/index.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\n// 完整文章页\r\nasync function loadContent(link) {\r\n    const response = await got.get(link);\r\n\r\n    const data = response.data; // 不用转码\r\n\r\n    // 加载文章内容\r\n    const $ = load(data);\r\n\r\n    // 提取内容\r\n    const description = ($('#con_c').length ? $('#con_c').html() : '') + ($('#con_fujian').length ? $('#con_fujian').html() : '');\r\n\r\n    // 返回解析的结果\r\n    return { description };\r\n}\r\n\r\nconst ProcessFeed = (base, list, caches) =>\r\n    Promise.all(\r\n        // 遍历每一篇文章\r\n        list.map((item) => {\r\n            const $ = load(item);\r\n\r\n            const $title = $('a');\r\n            // 还原相对链接为绝对链接\r\n            const itemUrl = new URL($title.attr('href'), base).href; // 感谢@hoilc指导\r\n\r\n            // 解析日期\r\n            const pubDate = timezone(\r\n                parseDate(\r\n                    $('.datetime')\r\n                        .text()\r\n                        .match(/\\d{4}-\\d{2}-\\d{2}/)\r\n                ),\r\n                +8\r\n            );\r\n\r\n            // 使用tryGet方法从缓存获取内容。\r\n            // 当缓存中无法获取到链接内容的时候，则使用load方法加载文章内容。\r\n            return caches.tryGet(itemUrl, async () => {\r\n                const { description } = await loadContent(itemUrl);\r\n\r\n                // 列表上提取到的信息\r\n                return {\r\n                    title: $title.text(),\r\n                    link: itemUrl,\r\n                    author: '北林教务处',\r\n                    description,\r\n                    pubDate,\r\n                };\r\n            });\r\n        })\r\n    );\r\nexport default { ProcessFeed };\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport util from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/jwc/:type',\r\n    categories: ['university'],\r\n    example: '/bjfu/jwc/jwkx',\r\n    parameters: { type: '通知类别' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['jwc.bjfu.edu.cn/:type/index.html'],\r\n        },\r\n    ],\r\n    name: '教务处通知公告',\r\n    maintainers: ['markmingjie'],\r\n    handler,\r\n    description: `| 教务快讯 | 考试信息 | 课程信息 | 教改动态 | 图片新闻 |\r\n| -------- | -------- | -------- | -------- | -------- |\r\n| jwkx     | ksxx     | kcxx     | jgdt     | tpxw     |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type');\r\n    let title, path;\r\n    switch (type) {\r\n        case 'jgdt':\r\n            title = '教改动态';\r\n            path = 'jgdt/';\r\n            break;\r\n        case 'ksxx':\r\n            title = '考试信息';\r\n            path = 'ksxx/';\r\n            break;\r\n        case 'kcxx':\r\n            title = '课程信息';\r\n            path = 'tkxx/';\r\n            break;\r\n        case 'tpxw':\r\n            title = '图片新闻';\r\n            path = 'tpxw/';\r\n            break;\r\n        case 'jwkx':\r\n        default:\r\n            title = '教务快讯';\r\n            path = 'jwkx/';\r\n    }\r\n    const base = 'http://jwc.bjfu.edu.cn/' + path;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: base,\r\n    });\r\n\r\n    const data = response.data; // 不用转码\r\n    const $ = load(data);\r\n\r\n    const list = $('.list_c li').slice(0, 15).toArray();\r\n\r\n    const result = await util.ProcessFeed(base, list, cache); // 感谢@hoilc指导\r\n\r\n    return {\r\n        title: '北林教务处 - ' + title,\r\n        link: 'http://jwc.bjfu.edu.cn/' + path,\r\n        description: '北京林业大学教务处 - ' + title,\r\n        item: result,\r\n    };\r\n}\r\n"],"mappings":"0ZAMA,eAAe,EAAY,EAAM,CAC7B,IAAM,EAAW,MAAME,EAAI,IAAI,GAEzB,EAAO,EAAS,KAGhB,EAAI,EAAK,GAGT,GAAe,EAAE,UAAU,OAAS,EAAE,UAAU,OAAS,KAAO,EAAE,eAAe,OAAS,EAAE,eAAe,OAAS,IAG1H,MAAO,CAAE,eAGb,MAAM,GAAe,EAAM,EAAM,IAC7B,QAAQ,IAEJ,EAAK,IAAK,GAAS,CACf,IAAM,EAAI,EAAK,GAET,EAAS,EAAE,KAEX,EAAU,IAAI,IAAI,EAAO,KAAK,QAAS,GAAM,KAG7C,EAAU,EACZ,EACI,EAAE,aACG,OACA,MAAM,sBAEf,GAKJ,OAAO,EAAO,OAAO,EAAS,SAAY,CACtC,GAAM,CAAE,eAAgB,MAAM,EAAY,GAG1C,MAAO,CACH,MAAO,EAAO,OACd,KAAM,EACN,OAAQ,QACR,cACA,gBAKpB,IAAA,EAAe,CAAE,eCnDjB,MAAaD,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,cACb,QAAS,iBACT,WAAY,CAAE,KAAM,QACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sCAGjB,KAAM,UACN,YAAa,CAAC,eACd,UACA,YAAa;;2DAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACvB,EAAO,EACX,OAAQ,EAAR,CACI,IAAK,OACD,EAAQ,OACR,EAAO,QACP,MACJ,IAAK,OACD,EAAQ,OACR,EAAO,QACP,MACJ,IAAK,OACD,EAAQ,OACR,EAAO,QACP,MACJ,IAAK,OACD,EAAQ,OACR,EAAO,QACP,MACJ,IAAK,OACL,QACI,EAAQ,OACR,EAAO,QAEf,IAAM,EAAO,0BAA4B,EAEnC,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAO,EAAS,KAChB,EAAI,EAAK,GAET,EAAO,EAAE,cAAc,MAAM,EAAG,IAAI,UAEpC,EAAS,MAAMC,EAAK,YAAY,EAAM,EAAMC,GAElD,MAAO,CACH,MAAO,WAAa,EACpB,KAAM,0BAA4B,EAClC,YAAa,eAAiB,EAC9B,KAAM"}