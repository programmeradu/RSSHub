{"version":3,"file":"genetics-DgItXn2Y.js","names":["route: Route","got"],"sources":["../../lib/routes/cas/genetics/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst baseUrl = 'https://genetics.cas.cn';\r\n\r\nexport const route: Route = {\r\n    path: '/genetics/:path{.+}',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const path = ctx.req.param('path');\r\n\r\n    const currentUrl = `${baseUrl}/${path}/`;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n    const $ = load(response);\r\n\r\n    let items;\r\n\r\n    if (path.slice(0, 3) === 'edu') {\r\n        items = $('li.box-s.h16')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                const a = item.find('a').first();\r\n                const date = item.find('.box-date').first();\r\n                return {\r\n                    title: a.text(),\r\n                    link: new URL(a.attr('href'), currentUrl).href,\r\n                    pubDate: parseDate(date.text(), 'YYYY-MM-DD'),\r\n                };\r\n            });\r\n    } else if (path.slice(0, 4) === 'dqyd') {\r\n        items = $('div.list-tab ul li')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                const a = item.find('a').first();\r\n                const date = item.find('.right').first();\r\n                return {\r\n                    title: a.text(),\r\n                    link: new URL(a.attr('href'), currentUrl).href,\r\n                    pubDate: parseDate(date.text(), 'YYYY-MM-DD'),\r\n                };\r\n            });\r\n    } else {\r\n        items = $('li.row.no-gutters.py-1')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                const a = item.find('a').first();\r\n                const date = item.find('.col-news-date').first();\r\n                return {\r\n                    title: a.text(),\r\n                    link: new URL(a.attr('href'), currentUrl).href,\r\n                    pubDate: parseDate(date.text(), 'YYYY.MM.DD'),\r\n                };\r\n            });\r\n    }\r\n\r\n    return {\r\n        title: $('head title').text(),\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oTAKA,MAEaA,EAAe,CACxB,KAAM,sBACN,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QAErB,EAAa,2BAAc,EAAK,GAEhC,CAAE,KAAM,GAAa,MAAMC,EAAI,GAC/B,EAAI,EAAK,GAEX,EA2CJ,MAzCA,CA2BI,EA3BA,EAAK,MAAM,EAAG,KAAO,MACb,EAAE,gBACL,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KAAK,QACnB,EAAO,EAAK,KAAK,aAAa,QACpC,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAY,KAC1C,QAAS,EAAU,EAAK,OAAQ,iBAGrC,EAAK,MAAM,EAAG,KAAO,OACpB,EAAE,sBACL,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KAAK,QACnB,EAAO,EAAK,KAAK,UAAU,QACjC,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAY,KAC1C,QAAS,EAAU,EAAK,OAAQ,iBAIpC,EAAE,0BACL,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KAAK,QACnB,EAAO,EAAK,KAAK,kBAAkB,QACzC,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAY,KAC1C,QAAS,EAAU,EAAK,OAAQ,iBAKzC,CACH,MAAO,EAAE,cAAc,OACvB,KAAM,EACN,KAAM"}