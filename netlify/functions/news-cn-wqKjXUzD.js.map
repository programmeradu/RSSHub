{"version":3,"file":"news-cn-wqKjXUzD.js","names":["route: Route","cache","ofetch"],"sources":["../../lib/routes/blizzard/news-cn.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/news-cn/:category?',\r\n    categories: ['game'],\r\n    example: '/blizzard/news-cn/ow',\r\n    parameters: { category: '游戏类别, 默认为 ow' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['ow.blizzard.cn', 'wow.blizzard.cn', 'hs.blizzard.cn'],\r\n            target: '/news-cn/',\r\n        },\r\n    ],\r\n    name: '暴雪游戏国服新闻',\r\n    maintainers: ['zhangpeng2k'],\r\n    description: `\r\n| 守望先锋 | 炉石传说 | 魔兽世界 |\r\n|----------|----------|---------|\r\n| ow       | hs       | wow     |\r\n`,\r\n    handler,\r\n};\r\n\r\nconst categoryNames = {\r\n    ow: '守望先锋',\r\n    hs: '炉石传说',\r\n    wow: '魔兽世界',\r\n};\r\n\r\n/* 列表解析逻辑 */\r\nconst parsers = {\r\n    ow: ($) =>\r\n        $('.list-data-container .list-item-container')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                return {\r\n                    title: item.find('.content-title').text(),\r\n                    link: item.find('.fill-link').attr('href'),\r\n                    description: item.find('.content-intro').text(),\r\n                    pubDate: parseDate(item.find('.content-date').text()),\r\n                    image: item.find('.item-pic').attr('src'),\r\n                };\r\n            }),\r\n    hs: ($) =>\r\n        $('.article-container>a')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                return {\r\n                    title: item.find('.title').text(),\r\n                    link: item.attr('href'),\r\n                    description: item.find('.desc').text(),\r\n                    pubDate: parseDate(item.find('.date').attr('data-time')),\r\n                    image: item.find('.article-img img').attr('src'),\r\n                };\r\n            }),\r\n    wow: ($) =>\r\n        $('.Pane-list>a')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                return {\r\n                    title: item.find('.list-title').text(),\r\n                    link: item.attr('href'),\r\n                    description: item.find('.list-desc').text(),\r\n                    pubDate: parseDate(item.find('.list-time').attr('data-time')),\r\n                    image: item.find('.img-box img').attr('src'),\r\n                };\r\n            }),\r\n};\r\n\r\n// 详情页解析逻辑\r\nconst detailParsers = {\r\n    ow: ($) => $('.deatil-content').first().html(),\r\n    hs: ($) => $('.article').first().html(),\r\n    wow: ($) => $('.detail').first().html(),\r\n};\r\n\r\nfunction getList(category, $) {\r\n    return parsers[category] ? parsers[category]($) : [];\r\n}\r\n\r\nasync function fetchDetail(item, category) {\r\n    return await cache.tryGet(item.link, async () => {\r\n        const response = await ofetch(item.link);\r\n        const $ = load(response);\r\n\r\n        const parseDetail = detailParsers[category];\r\n        item.description = parseDetail($);\r\n        return item;\r\n    });\r\n}\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category') || 'ow';\r\n    if (!categoryNames[category]) {\r\n        throw new Error('Invalid category');\r\n    }\r\n\r\n    const rootUrl = `https://${category}.blizzard.cn/news`;\r\n\r\n    const response = await ofetch(rootUrl);\r\n    const $ = load(response);\r\n\r\n    const list = getList(category, $);\r\n    if (!list.length) {\r\n        throw new Error('No news found');\r\n    }\r\n\r\n    const items = await Promise.all(list.map((item) => fetchDetail(item, category)));\r\n\r\n    return {\r\n        title: `${categoryNames[category]}新闻`,\r\n        link: rootUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,QACb,QAAS,uBACT,WAAY,CAAE,SAAU,gBACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iBAAkB,kBAAmB,kBAC9C,OAAQ,cAGhB,KAAM,WACN,YAAa,CAAC,eACd,YAAa;;;;EAKb,WAGE,EAAgB,CAClB,GAAI,OACJ,GAAI,OACJ,IAAK,QAIH,EAAU,CACZ,GAAK,GACD,EAAE,6CACG,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,KAAK,kBAAkB,OACnC,KAAM,EAAK,KAAK,cAAc,KAAK,QACnC,YAAa,EAAK,KAAK,kBAAkB,OACzC,QAAS,EAAU,EAAK,KAAK,iBAAiB,QAC9C,MAAO,EAAK,KAAK,aAAa,KAAK,UAGnD,GAAK,GACD,EAAE,wBACG,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,KAAK,UAAU,OAC3B,KAAM,EAAK,KAAK,QAChB,YAAa,EAAK,KAAK,SAAS,OAChC,QAAS,EAAU,EAAK,KAAK,SAAS,KAAK,cAC3C,MAAO,EAAK,KAAK,oBAAoB,KAAK,UAG1D,IAAM,GACF,EAAE,gBACG,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,KAAK,eAAe,OAChC,KAAM,EAAK,KAAK,QAChB,YAAa,EAAK,KAAK,cAAc,OACrC,QAAS,EAAU,EAAK,KAAK,cAAc,KAAK,cAChD,MAAO,EAAK,KAAK,gBAAgB,KAAK,WAMpD,EAAgB,CAClB,GAAK,GAAM,EAAE,mBAAmB,QAAQ,OACxC,GAAK,GAAM,EAAE,YAAY,QAAQ,OACjC,IAAM,GAAM,EAAE,WAAW,QAAQ,QAGrC,SAAS,EAAQ,EAAU,EAAG,CAC1B,OAAO,EAAQ,GAAY,EAAQ,GAAU,GAAK,GAGtD,eAAe,EAAY,EAAM,EAAU,CACvC,OAAO,MAAMC,EAAM,OAAO,EAAK,KAAM,SAAY,CAC7C,IAAM,EAAW,MAAMC,EAAO,EAAK,MAC7B,EAAI,EAAK,GAET,EAAc,EAAc,GAElC,MADA,GAAK,YAAc,EAAY,GACxB,IAIf,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,KAC9C,GAAI,CAAC,EAAc,GACf,MAAU,MAAM,oBAGpB,IAAM,EAAU,WAAW,EAAS,mBAE9B,EAAW,MAAMA,EAAO,GACxB,EAAI,EAAK,GAET,EAAO,EAAQ,EAAU,GAC/B,GAAI,CAAC,EAAK,OACN,MAAU,MAAM,iBAGpB,IAAM,EAAQ,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAS,EAAY,EAAM,KAErE,MAAO,CACH,MAAO,GAAG,EAAc,GAAU,IAClC,KAAM,EACN,KAAM"}