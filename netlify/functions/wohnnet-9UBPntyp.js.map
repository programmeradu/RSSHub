{"version":3,"file":"wohnnet-9UBPntyp.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/wohnnet/index.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\nimport type { Data, DataItem, Route } from '@/types';\r\n\r\nconst FEED_TITLE = 'wohnnet.at' as const;\r\nconst FEED_LOGO = 'https://www.wohnnet.at/media/images/wohnnet/icon_192_192.png' as const;\r\nconst FEED_LANGUAGE = 'de' as const;\r\nconst ROUTE_PATH_PREFIX = '/wohnnet/' as const;\r\nconst BASE_URL = 'https://www.wohnnet.at/immobilien/' as const;\r\n\r\nexport const route: Route = {\r\n    name: 'Immobiliensuche',\r\n    path: '/:category/:region/*',\r\n    maintainers: ['sk22'],\r\n    categories: ['other'],\r\n    description: `\r\nOnly returns the first page of search results, allowing you to keep track of\r\nnewly added apartments. If you're looking for an apartment, make sure to also\r\nlook through the other pages on the website.\r\n\r\n:::tip\r\nNote that the parameter \\`&sortierung=neueste-zuerst\\` for chronological order\r\nis automatically appended.\r\n:::\r\n\r\n:::tip\r\nTo get your query URL, go to https://www.wohnnet.at/immobilien/suche, apply\r\nall desired filters (but at least a category and a region!) and click the\r\n\"… Treffer anzeigen\" link. From the resulting URL, cut off the\r\n\\`https://www.wohnnet.at/immobilien/\\` part at the beginning and replace only\r\nthe \\`?\\` (the \\`&\\`s stay as is!) after the region name with a \\`/\\`.\r\n\r\nExamples:\r\n\r\n* \\`${BASE_URL}mietwohnungen/wien\\`\r\n    - → \\`${ROUTE_PATH_PREFIX}mietwohnungen/wien\\`\r\n* \\`${BASE_URL}mietwohnungen/wien?unterregionen=g90101\\`\r\n    - → \\`${ROUTE_PATH_PREFIX}mietwohnungen/wien/unterregionen=g90101\\`\r\n* \\`${BASE_URL}mietwohnungen/wien?unterregionen=g90101&merkmale=balkon\\`\r\n    - → \\`${ROUTE_PATH_PREFIX}mietwohnungen/wien/unterregionen=g90101&merkmale=balkon\\`\r\n:::\r\n`,\r\n    example: ROUTE_PATH_PREFIX + 'mietwohnungen/wien/unterregionen=g90101--g90201--g90301--g90401--g90501&flaeche=40&preis=-1000',\r\n    parameters: {\r\n        category: 'Category (`mietwohnungen`, `eigentumswohnungen`, `grundstuecke`, …)',\r\n        region: 'Region (`wien`, `oesterreich`, …)',\r\n        unterregionen: 'Unterregionen (e.g. `g90101--g90201--g90301`)',\r\n        intention: 'Intention (`kauf` | `miete`)',\r\n        zimmer: 'Zimmer (at least number, e.g. `2`)',\r\n        flaeche: 'Fläche (m², `40-` = at least 40 m², `40-60` = between 40 m² and 60 m²)',\r\n        preis: 'Preis (€, `-1000` = at most 1,000 €, `500-1000` = between 500 € and 1,000 €)',\r\n        merkmale: 'Merkmale (multiple, delimited by `--`, e.g. `balkon--garten--kurzzeitmiete--moebliert--parkplatz--provisionsfrei--sofort-beziehbar`)',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    async handler(ctx) {\r\n        const category = ctx.req.param('category');\r\n        const region = ctx.req.param('region');\r\n\r\n        // /wohnnet/mietwohnungen/wien/&preis=… -> preis=…&sortierung=neueste-zuerst\r\n        let path =\r\n            ctx.req.path.slice(`${ROUTE_PATH_PREFIX}${category}/${region}/`.length) +\r\n            // provide chronological fallback sort (wohnnet.at will use the first one)\r\n            '&sortierung=neueste-zuerst';\r\n        if (path.startsWith('&')) {\r\n            path = path.slice(1);\r\n        }\r\n\r\n        const link = `${BASE_URL}${category}/${region}/?${path}`;\r\n        const response = await ofetch(link);\r\n        const $ = load(response);\r\n\r\n        const items = $('a:has(> .realty)')\r\n            .toArray()\r\n            .map((el) => {\r\n                const $el = $(el);\r\n                const href = $el.attr('href');\r\n                const [title, address] = $el\r\n                    .find('.realty-detail-title-address')\r\n                    .text()\r\n                    .split('\\n')\r\n                    .map((p) => p.trim())\r\n                    .filter((p) => p.length);\r\n                const price = $el.find('.realty-detail-area-rooms .text-right').text().trim();\r\n                const details = $el\r\n                    .find('.realty-detail-area-rooms')\r\n                    .text()\r\n                    .split('\\n')\r\n                    .map((p) => p.trim())\r\n                    .filter((p) => p.length);\r\n                const badges = $el\r\n                    .find('.realty-detail-badges .badge')\r\n                    .toArray()\r\n                    .map((b) => $(b).text().trim());\r\n                const agency = $el.find('.realty-detail-agency').text();\r\n                const imgSrc = $el.find('.realty-image img').attr('src');\r\n\r\n                const itemTitle = `${address} · ${price} | ${title}`;\r\n                const itemLink = new URL(href ?? '', BASE_URL).href;\r\n                const itemDescription = `${details.join(' · ')} | ${badges.join(' · ')} | ${agency}`;\r\n                const itemCategories = badges.filter((b) => !b.endsWith(' Bilder'));\r\n                const itemImage = imgSrc ? new URL(imgSrc, BASE_URL).href : undefined;\r\n\r\n                return {\r\n                    title: itemTitle,\r\n                    link: itemLink,\r\n                    description: itemDescription,\r\n                    category: itemCategories,\r\n                    image: itemImage,\r\n                    // pubDate is not available on wohnnet.at\r\n                } satisfies DataItem;\r\n            });\r\n\r\n        return {\r\n            title: FEED_TITLE,\r\n            language: FEED_LANGUAGE,\r\n            logo: FEED_LOGO,\r\n            allowEmpty: true,\r\n            item: items,\r\n            link,\r\n        } satisfies Data;\r\n    },\r\n};\r\n"],"mappings":"0MAIA,MAGM,EAAoB,YACpB,EAAW,qCAEJA,EAAe,CACxB,KAAM,kBACN,KAAM,uBACN,YAAa,CAAC,QACd,WAAY,CAAC,SACb,YAAa;;;;;;;;;;;;;;;;;;;MAmBX,EAAS;YACH,EAAkB;MACxB,EAAS;YACH,EAAkB;MACxB,EAAS;YACH,EAAkB;;EAG1B,QAAS,EAAoB,iGAC7B,WAAY,CACR,SAAU,sEACV,OAAQ,oCACR,cAAe,gDACf,UAAW,+BACX,OAAQ,qCACR,QAAS,yEACT,MAAO,+EACP,SAAU,wIAEd,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAM,QAAQ,EAAK,CACf,IAAM,EAAW,EAAI,IAAI,MAAM,YACzB,EAAS,EAAI,IAAI,MAAM,UAGzB,EACA,EAAI,IAAI,KAAK,MAAM,GAAG,IAAoB,EAAS,GAAG,EAAO,GAAG,QAEhE,6BACA,EAAK,WAAW,OAChB,EAAO,EAAK,MAAM,IAGtB,IAAM,EAAO,GAAG,IAAW,EAAS,GAAG,EAAO,IAAI,IAC5C,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GAET,EAAQ,EAAE,oBACX,UACA,IAAK,GAAO,CACT,IAAM,EAAM,EAAE,GACR,EAAO,EAAI,KAAK,QAChB,CAAC,EAAO,GAAW,EACpB,KAAK,gCACL,OACA,MAAM;GACN,IAAK,GAAM,EAAE,QACb,OAAQ,GAAM,EAAE,QACf,EAAQ,EAAI,KAAK,yCAAyC,OAAO,OACjE,EAAU,EACX,KAAK,6BACL,OACA,MAAM;GACN,IAAK,GAAM,EAAE,QACb,OAAQ,GAAM,EAAE,QACf,EAAS,EACV,KAAK,gCACL,UACA,IAAK,GAAM,EAAE,GAAG,OAAO,QACtB,EAAS,EAAI,KAAK,yBAAyB,OAC3C,EAAS,EAAI,KAAK,qBAAqB,KAAK,OAE5C,EAAY,GAAG,EAAQ,KAAK,EAAM,KAAK,IACvC,EAAW,IAAI,IAAI,GAAQ,GAAI,GAAU,KACzC,EAAkB,GAAG,EAAQ,KAAK,OAAO,KAAK,EAAO,KAAK,OAAO,KAAK,IACtE,EAAiB,EAAO,OAAQ,GAAM,CAAC,EAAE,SAAS,YAClD,EAAY,EAAS,IAAI,IAAI,EAAQ,GAAU,KAAO,IAAA,GAE5D,MAAO,CACH,MAAO,EACP,KAAM,EACN,YAAa,EACb,SAAU,EACV,MAAO,KAKnB,MAAO,CACH,MAAO,aACP,SAAU,KACV,KAAM,+DACN,WAAY,GACZ,KAAM,EACN"}