{"version":3,"file":"author-CwE5250d.js","names":["ofetch","route: Route"],"sources":["../../lib/routes/matters/author.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { baseUrl, gqlEndpoint, parseItem } from './utils';\r\n\r\nconst handler = async (ctx) => {\r\n    const { uid } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 20;\r\n    const response = await ofetch(gqlEndpoint, {\r\n        method: 'POST',\r\n        body: {\r\n            query: `{\r\n                user(input: {userName: \"${uid}\"}) {\r\n                  displayName\r\n                  avatar\r\n                  info {\r\n                    description\r\n                  }\r\n                  articles(input: {first: ${limit}}) {\r\n                    edges {\r\n                      node {\r\n                        shortHash\r\n                        title\r\n                        content\r\n                        createdAt\r\n                        author {\r\n                          displayName\r\n                        }\r\n                        tags {\r\n                          content\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }`,\r\n        },\r\n    });\r\n\r\n    const user = response.data.user;\r\n\r\n    return {\r\n        title: `Matters | ${user.displayName}`,\r\n        link: `${baseUrl}/@${uid}`,\r\n        description: user.info.description,\r\n        image: user.avatar,\r\n        item: user.articles.edges.map(({ node }) => parseItem(node)),\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/author/:uid',\r\n    name: 'Author',\r\n    example: '/matters/author/robertu',\r\n    parameters: { uid: \"Author id, can be found at author's homepage url\" },\r\n    maintainers: ['Cerebrater', 'xosdy'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['matters.town/:uid'],\r\n            target: (params) => `/matters/author/${params.uid.slice(1)}`,\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"0RAIA,MAAM,EAAU,KAAO,IAAQ,CAC3B,GAAM,CAAE,OAAQ,EAAI,IAAI,QAClB,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAC/E,EAAW,MAAMA,EAAO,EAAa,CACvC,OAAQ,OACR,KAAM,CACF,MAAO;0CACuB,EAAI;;;;;;4CAMF,EAAM;;;;;;;;;;;;;;;;;oBAqBxC,EAAO,EAAS,KAAK,KAE3B,MAAO,CACH,MAAO,aAAa,EAAK,cACzB,KAAM,GAAG,EAAQ,IAAI,IACrB,YAAa,EAAK,KAAK,YACvB,MAAO,EAAK,OACZ,KAAM,EAAK,SAAS,MAAM,KAAK,CAAE,UAAW,EAAU,MAIjDC,EAAe,CACxB,KAAM,eACN,KAAM,SACN,QAAS,0BACT,WAAY,CAAE,IAAK,oDACnB,YAAa,CAAC,aAAc,SAC5B,UACA,MAAO,CACH,CACI,OAAQ,CAAC,qBACT,OAAS,GAAW,mBAAmB,EAAO,IAAI,MAAM"}