{"version":3,"file":"dailyquestion-cn-Dgs_jwjX.js","names":[],"sources":["../../lib/routes/leetcode/dailyquestion-cn.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst host = 'https://leetcode.cn';\r\n\r\nexport const route: Route = {\r\n    path: '/dailyquestion/cn',\r\n    radar: [\r\n        {\r\n            source: ['leetcode.cn/'],\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n    url: 'leetcode.cn/',\r\n};\r\n\r\nasync function handler() {\r\n    const question = {\r\n        date: '',\r\n        link: '',\r\n        titleSlug: '',\r\n        content: '',\r\n        frontedId: '',\r\n        difficulty: '',\r\n        tags: '',\r\n    };\r\n    const url = host + '/graphql';\r\n    const dailyQuestionPayload = {\r\n        query: `query questionOfToday {\r\n            todayRecord {\r\n                date\r\n                question {\r\n                    frontendQuestionId: questionFrontendId\r\n                    titleSlug\r\n                }\r\n            }\r\n        } `,\r\n        variables: {},\r\n    };\r\n    const dailyQuestionResponse = await got({\r\n        method: 'post',\r\n        url,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dailyQuestionPayload),\r\n    });\r\n    const data = dailyQuestionResponse.data.data.todayRecord[0];\r\n    question.date = data.date;\r\n    question.titleSlug = data.question.titleSlug;\r\n    question.link = host + '/problems/' + question.titleSlug;\r\n\r\n    const detailsPayload = {\r\n        operationName: 'questionData',\r\n        query: `query questionData($titleSlug: String!) {\r\n            question(titleSlug: $titleSlug) {\r\n                questionId\r\n                questionFrontendId\r\n                title\r\n                titleSlug\r\n                content\r\n                translatedTitle\r\n                translatedContent\r\n                difficulty\r\n                topicTags {\r\n                    name\r\n                    slug\r\n                    translatedName\r\n                    __typename\r\n                }\r\n                __typename\r\n            }\r\n        }`,\r\n        variables: {\r\n            titleSlug: question.titleSlug,\r\n        },\r\n    };\r\n    const detailsResponse = await got({\r\n        method: 'post',\r\n        url,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(detailsPayload),\r\n    });\r\n    const emoji = {\r\n        Medium: 'üü°',\r\n        Easy: 'üü¢',\r\n        Hard: 'üî¥',\r\n    };\r\n\r\n    const details = detailsResponse.data.data.question;\r\n    question.content = details.translatedContent;\r\n    question.frontedId = details.questionFrontendId;\r\n    question.difficulty = emoji[details.difficulty];\r\n\r\n    let topicTags = details.topicTags;\r\n    topicTags = topicTags.map((item) => {\r\n        let slug = '#' + item.slug;\r\n        slug = slug.replaceAll('-', '_');\r\n        return slug;\r\n    });\r\n    question.tags = topicTags.join(' ');\r\n\r\n    const rssData = {\r\n        title: question.frontedId + '.' + question.titleSlug,\r\n        description: art(path.join(__dirname, 'templates/question-description.art'), {\r\n            question,\r\n        }),\r\n        link: question.link,\r\n    };\r\n\r\n    return {\r\n        title: 'LeetCode ÊØèÊó•‰∏ÄÈ¢ò',\r\n        link: 'https://leetcode.cn',\r\n        description: 'Leetcode ÊØèÊó•‰∏ÄÈ¢ò',\r\n        item: [\r\n            {\r\n                title: rssData.title,\r\n                description: rssData.description + question.content,\r\n                link: rssData.link,\r\n            },\r\n        ],\r\n    };\r\n}\r\n"],"mappings":"gVAMA,MAAM,EAAO,sBAEA,EAAe,CACxB,KAAM,oBACN,MAAO,CACH,CACI,OAAQ,CAAC,kBAGjB,KAAM,UACN,YAAa,GACb,UACA,IAAK,gBAGT,eAAe,GAAU,CACrB,IAAM,EAAW,CACb,KAAM,GACN,KAAM,GACN,UAAW,GACX,QAAS,GACT,UAAW,GACX,WAAY,GACZ,KAAM,IAEJ,EAAM,EAAO,WACb,EAAuB,CACzB,MAAO;;;;;;;;YASP,UAAW,IAET,EAAwB,MAAM,EAAI,CACpC,OAAQ,OACR,MACA,QAAS,CACL,eAAgB,oBAEpB,KAAM,KAAK,UAAU,KAEnB,EAAO,EAAsB,KAAK,KAAK,YAAY,GACzD,EAAS,KAAO,EAAK,KACrB,EAAS,UAAY,EAAK,SAAS,UACnC,EAAS,KAAO,EAAO,aAAe,EAAS,UAE/C,IAAM,EAAiB,CACnB,cAAe,eACf,MAAO;;;;;;;;;;;;;;;;;;WAmBP,UAAW,CACP,UAAW,EAAS,YAGtB,EAAkB,MAAM,EAAI,CAC9B,OAAQ,OACR,MACA,QAAS,CACL,eAAgB,oBAEpB,KAAM,KAAK,UAAU,KAEnB,EAAQ,CACV,OAAQ,KACR,KAAM,KACN,KAAM,MAGJ,EAAU,EAAgB,KAAK,KAAK,SAC1C,EAAS,QAAU,EAAQ,kBAC3B,EAAS,UAAY,EAAQ,mBAC7B,EAAS,WAAa,EAAM,EAAQ,YAEpC,IAAI,EAAY,EAAQ,UACxB,EAAY,EAAU,IAAK,GAAS,CAChC,IAAI,EAAO,IAAM,EAAK,KAEtB,MADA,GAAO,EAAK,WAAW,IAAK,KACrB,IAEX,EAAS,KAAO,EAAU,KAAK,KAE/B,IAAM,EAAU,CACZ,MAAO,EAAS,UAAY,IAAM,EAAS,UAC3C,YAAa,EAAI,EAAA,KAAA,EAAA,+CAA4D,CACzE,aAEJ,KAAM,EAAS,MAGnB,MAAO,CACH,MAAO,gBACP,KAAM,sBACN,YAAa,gBACb,KAAM,CACF,CACI,MAAO,EAAQ,MACf,YAAa,EAAQ,YAAc,EAAS,QAC5C,KAAM,EAAQ"}