{"version":3,"file":"news-Cx8ErpQf.js","names":["route: Route","ofetch","cache","$"],"sources":["../../lib/routes/newyorker/news.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\n\r\nconst host = 'https://www.newyorker.com';\r\nexport const route: Route = {\r\n    path: '/:category',\r\n    categories: ['traditional-media'],\r\n    view: ViewType.Articles,\r\n    example: '/newyorker/latest',\r\n    parameters: { category: 'tab name. can be found at url' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['newyorker.com/:category?'],\r\n        },\r\n    ],\r\n    name: 'Articles',\r\n    maintainers: ['EthanWng97', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { category } = ctx.req.param();\r\n    const link = `${host}/${category}`;\r\n    const response = await ofetch(link);\r\n    const $ = load(response);\r\n    const preloadedState = JSON.parse(\r\n        $('script:contains(\"window.__PRELOADED_STATE__\")')\r\n            .text()\r\n            .match(/window\\.__PRELOADED_STATE__ = (.*);/)?.[1] ?? '{}'\r\n    );\r\n    const list = preloadedState.transformed.bundle.containers[0].items;\r\n    const items = await Promise.all(\r\n        list.map((item) => {\r\n            const url = `${host}${item.url}`;\r\n            return cache.tryGet(url, async () => {\r\n                const data = await ofetch(url);\r\n                const $ = load(data);\r\n                const description = $('#main-content');\r\n                description.find('h1').remove();\r\n                description.find('.article-body__footer').remove();\r\n                description.find('.social-icons').remove();\r\n                description.find('div[class^=\"ActionBarWrapperContent-\"]').remove();\r\n                description.find('div[class^=\"ContentHeaderByline-\"]').remove();\r\n                return {\r\n                    title: item.dangerousHed,\r\n                    pubDate: item.pubDate,\r\n                    link: url,\r\n                    description: description.html(),\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `The New Yorker - ${category}`,\r\n        link: host,\r\n        description: 'Reporting, Profiles, breaking news, cultural coverage, podcasts, videos, and cartoons from The New Yorker.',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"6SAKA,MAAM,EAAO,4BACAA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,qBACb,KAAM,EAAS,SACf,QAAS,oBACT,WAAY,CAAE,SAAU,iCACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,8BAGjB,KAAM,WACN,YAAa,CAAC,aAAc,YAC5B,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,YAAa,EAAI,IAAI,QACvB,EAAO,GAAG,EAAK,GAAG,IAClB,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GACT,EAAiB,KAAK,MACxB,EAAE,iDACG,OACA,MAAM,yCAAyC,IAAM,MAExD,EAAO,EAAe,YAAY,OAAO,WAAW,GAAG,MACvD,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GAAS,CACf,IAAM,EAAM,GAAG,IAAO,EAAK,MAC3B,OAAOC,EAAM,OAAO,EAAK,SAAY,CACjC,IAAM,EAAO,MAAMD,EAAO,GACpBE,EAAI,EAAK,GACT,EAAcA,EAAE,iBAMtB,OALA,EAAY,KAAK,MAAM,SACvB,EAAY,KAAK,yBAAyB,SAC1C,EAAY,KAAK,iBAAiB,SAClC,EAAY,KAAK,0CAA0C,SAC3D,EAAY,KAAK,sCAAsC,SAChD,CACH,MAAO,EAAK,aACZ,QAAS,EAAK,QACd,KAAM,EACN,YAAa,EAAY,aAMzC,MAAO,CACH,MAAO,oBAAoB,IAC3B,KAAM,EACN,YAAa,6GACb,KAAM"}