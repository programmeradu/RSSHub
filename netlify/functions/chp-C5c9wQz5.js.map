{"version":3,"file":"chp-C5c9wQz5.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/hongkong/chp.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst titles = {\r\n    title: {\r\n        en: 'Hong Kong Centre for Health Protection',\r\n        zh_cn: '香港卫生防护中心',\r\n        zh_tw: '香港衛生防護中心',\r\n    },\r\n    important_ft: {\r\n        en: 'Important Topics',\r\n        zh_cn: '重要资讯',\r\n        zh_tw: '重要資訊',\r\n    },\r\n    press_data_index: {\r\n        en: 'Press Releases',\r\n        zh_cn: '新闻稿',\r\n        zh_tw: '新聞稿',\r\n    },\r\n    ResponseLevel: {\r\n        en: 'Response Level',\r\n        zh_cn: '应变级别',\r\n        zh_tw: '應變級別',\r\n    },\r\n    publication: {\r\n        en: 'Periodicals & Publications',\r\n        zh_cn: '期刊及刊物',\r\n        zh_tw: '期刊及刊物',\r\n    },\r\n    HealthAlert: {\r\n        en: 'Health Notice',\r\n        zh_cn: '健康通告',\r\n        zh_tw: '健康通告',\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/chp/:category?/:language?',\r\n    radar: [\r\n        {\r\n            source: ['dh.gov.hk/'],\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'dh.gov.hk/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const languageCodes = {\r\n        en: 'en',\r\n        zh_cn: 'sc',\r\n        zh_tw: 'tc',\r\n    };\r\n\r\n    const category = ctx.req.param('category') ?? 'important_ft';\r\n    const language = ctx.req.param('language') ?? 'zh_tw';\r\n\r\n    const rootUrl = 'https://www.chp.gov.hk';\r\n    const apiUrl = `${rootUrl}/js/${category}.js`;\r\n    const currentUrl = `${rootUrl}/${languageCodes[language]}${category === 'press_data_index' ? '/media/116' : ''}/index.html`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: apiUrl,\r\n    });\r\n\r\n    const list = JSON.parse(response.data.match(/\"data\":(\\[{.*}])}/)[1]).map((item) => {\r\n        let link = '';\r\n\r\n        if (item.UrlPath_en) {\r\n            link = item[`UrlPath_${language}`].includes('http') ? item[`UrlPath_${language}`] : `${rootUrl}${item[`UrlPath_${language}`]}`;\r\n        } else if (category === 'ResponseLevel' && item.FilePath_en) {\r\n            link = item[`FilePath_${language}`].includes('http') ? item[`FilePath_${language}`] : `${rootUrl}${item[`FilePath_${language}`]}`;\r\n        } else {\r\n            link = `${rootUrl}/${languageCodes[language]}/${category === 'publication' ? 'guideline' : 'features'}/${item.InfoBlockID}.html`;\r\n        }\r\n\r\n        return {\r\n            link,\r\n            pubDate: parseDate(item.PublishDate),\r\n            description: item[`Content_${language}`] ?? '',\r\n            title: item[`Title_${language}`]?.replace(/<.*>/, '') ?? '',\r\n        };\r\n    });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                if ((category === 'important_ft' || category === 'press_data_index') && (item.link.indexOf('htm') > 0 || item.link.indexOf('/features/') > 0)) {\r\n                    const detailResponse = await got({\r\n                        method: 'get',\r\n                        url: item.link,\r\n                    });\r\n\r\n                    const content = load(detailResponse.data);\r\n\r\n                    content('#btmNav, script').remove();\r\n                    content('.contHeader, .title_display_date').remove();\r\n                    content('.printBtn, .bookmarkBtn, .qrBtn, .qr-content').remove();\r\n\r\n                    item.description = content('#mainContent, #pressrelease').html();\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `${titles[category][language]} - ${titles.title[language]}`,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAM,EAAS,CACX,MAAO,CACH,GAAI,yCACJ,MAAO,WACP,MAAO,YAEX,aAAc,CACV,GAAI,mBACJ,MAAO,OACP,MAAO,QAEX,iBAAkB,CACd,GAAI,iBACJ,MAAO,MACP,MAAO,OAEX,cAAe,CACX,GAAI,iBACJ,MAAO,OACP,MAAO,QAEX,YAAa,CACT,GAAI,6BACJ,MAAO,QACP,MAAO,SAEX,YAAa,CACT,GAAI,gBACJ,MAAO,OACP,MAAO,SAIFA,EAAe,CACxB,KAAM,6BACN,MAAO,CACH,CACI,OAAQ,CAAC,gBAGjB,KAAM,UACN,YAAa,CAAC,WACd,UACA,IAAK,cAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAgB,CAClB,GAAI,KACJ,MAAO,KACP,MAAO,MAGL,EAAW,EAAI,IAAI,MAAM,aAAe,eACxC,EAAW,EAAI,IAAI,MAAM,aAAe,QAExC,EAAU,yBACV,EAAS,GAAG,EAAQ,MAAM,EAAS,KACnC,EAAa,GAAG,EAAQ,GAAG,EAAc,KAAY,IAAa,mBAAqB,aAAe,GAAG,aAEzG,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAO,KAAK,MAAM,EAAS,KAAK,MAAM,qBAAqB,IAAI,IAAK,GAAS,CAC/E,IAAI,EAAO,GAUX,MARA,CAKI,EALA,EAAK,WACE,EAAK,WAAW,KAAY,SAAS,QAAU,EAAK,WAAW,KAAc,GAAG,IAAU,EAAK,WAAW,OAC1G,IAAa,iBAAmB,EAAK,YACrC,EAAK,YAAY,KAAY,SAAS,QAAU,EAAK,YAAY,KAAc,GAAG,IAAU,EAAK,YAAY,OAE7G,GAAG,EAAQ,GAAG,EAAc,GAAU,GAAG,IAAa,cAAgB,YAAc,WAAW,GAAG,EAAK,YAAY,OAGvH,CACH,OACA,QAAS,EAAU,EAAK,aACxB,YAAa,EAAK,WAAW,MAAe,GAC5C,MAAO,EAAK,SAAS,MAAa,QAAQ,OAAQ,KAAO,MAI3D,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAK,IAAa,gBAAkB,IAAa,sBAAwB,EAAK,KAAK,QAAQ,OAAS,GAAK,EAAK,KAAK,QAAQ,cAAgB,GAAI,CAC3I,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAEpC,EAAQ,mBAAmB,SAC3B,EAAQ,oCAAoC,SAC5C,EAAQ,gDAAgD,SAExD,EAAK,YAAc,EAAQ,+BAA+B,OAE9D,OAAO,MAKnB,MAAO,CACH,MAAO,GAAG,EAAO,GAAU,GAAU,KAAK,EAAO,MAAM,KACvD,KAAM,EACN,KAAM"}