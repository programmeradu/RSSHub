{"version":3,"file":"rss3-DB9k8DC8.js","names":["result: any","route: Route","ofetch"],"sources":["../../lib/utils/camelcase-keys.ts","../../lib/routes/rss3/index.ts"],"sourcesContent":["const isObject = (obj: any) => obj && typeof obj === 'object';\r\nconst isPlainObject = (obj: any) => isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]' && Object.getPrototypeOf(obj) === Object.prototype;\r\n\r\n/**\r\n * A simple camelCase function that only handles strings, but not handling symbol, date, or other complex case.\r\n * If you need to handle more complex cases, please use camelcase-keys package.\r\n */\r\nexport const camelcaseKeys = <T = any>(obj: any): T => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map((x) => camelcaseKeys(x)) as any;\r\n    }\r\n\r\n    if (isPlainObject(obj)) {\r\n        const result: any = {};\r\n        for (const key of Object.keys(obj)) {\r\n            const nextKey = isMongoId(key) ? key : camelcase(key);\r\n            result[nextKey] = camelcaseKeys(obj[key]);\r\n        }\r\n        return result as any;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nexport function camelcase(str: string) {\r\n    return str.replace(/^_+/, '').replaceAll(/([_-][a-z])/gi, ($1) => $1.toUpperCase().replace('-', '').replace('_', ''));\r\n}\r\nconst isMongoId = (id: string) => id.length === 24 && /^[\\dA-Fa-f]{24}$/.test(id);\r\n","import { Route, type DataItem } from '@/types';\r\n\r\nimport { camelcaseKeys } from '@/utils/camelcase-keys';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { renderItemActionToHTML } from '@rss3/sdk';\r\n\r\nexport const route: Route = {\r\n    path: '/:account/:network?/:tag?',\r\n    categories: ['social-media'],\r\n    example: '/rss3/vitalik.eth',\r\n    name: 'Account Activities',\r\n    maintainers: ['DIYgod', 'pseudoyu'],\r\n    url: 'docs.rss3.io/api-reference#tag/decentralized/GET/decentralized/%7Baccount%7D',\r\n    handler,\r\n    description: 'Retrieve the activities associated with a specified account in the decentralized system.',\r\n    parameters: {\r\n        account: {\r\n            description: 'Retrieve activities from the specified account. This account is a unique identifier within the decentralized system.',\r\n        },\r\n        network: {\r\n            description: 'Retrieve activities from the specified network.',\r\n            default: 'all',\r\n            options: [\r\n                {\r\n                    value: 'all',\r\n                    label: 'All',\r\n                },\r\n                {\r\n                    value: 'arbitrum',\r\n                    label: 'Arbitrum',\r\n                },\r\n                {\r\n                    value: 'arweave',\r\n                    label: 'Arweave',\r\n                },\r\n                {\r\n                    value: 'avax',\r\n                    label: 'Avax',\r\n                },\r\n                {\r\n                    value: 'base',\r\n                    label: 'Base',\r\n                },\r\n                {\r\n                    value: 'binance-smart-chain',\r\n                    label: 'Binance Smart Chain',\r\n                },\r\n                {\r\n                    value: 'crossbell',\r\n                    label: 'Crossbell',\r\n                },\r\n                {\r\n                    value: 'ethereum',\r\n                    label: 'Ethereum',\r\n                },\r\n                {\r\n                    value: 'farcaster',\r\n                    label: 'Farcaster',\r\n                },\r\n                {\r\n                    value: 'gnosis',\r\n                    label: 'Gnosis',\r\n                },\r\n                {\r\n                    value: 'linea',\r\n                    label: 'Linea',\r\n                },\r\n                {\r\n                    value: 'optimism',\r\n                    label: 'Optimism',\r\n                },\r\n                {\r\n                    value: 'polygon',\r\n                    label: 'Polygon',\r\n                },\r\n                {\r\n                    value: 'vsl',\r\n                    label: 'VSL',\r\n                },\r\n            ],\r\n        },\r\n        tag: {\r\n            description: 'Retrieve activities from the specified tag.',\r\n            default: 'all',\r\n            options: [\r\n                {\r\n                    value: 'all',\r\n                    label: 'All',\r\n                },\r\n                {\r\n                    value: 'collectible',\r\n                    label: 'collectible',\r\n                },\r\n                {\r\n                    value: 'exchange',\r\n                    label: 'exchange',\r\n                },\r\n                {\r\n                    value: 'metaverse',\r\n                    label: 'metaverse',\r\n                },\r\n                {\r\n                    value: 'rss',\r\n                    label: 'rss',\r\n                },\r\n                {\r\n                    value: 'social',\r\n                    label: 'social',\r\n                },\r\n                {\r\n                    value: 'transaction',\r\n                    label: 'transaction',\r\n                },\r\n                {\r\n                    value: 'unknown',\r\n                    label: 'unknown',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { account, network, tag } = ctx.req.param();\r\n\r\n    // Check if account contains \"://\" or \"/\"\r\n    if (account.includes('://') || account.includes('/')) {\r\n        throw new Error('Account should not contain \"://\" or path components');\r\n    }\r\n\r\n    const { data } = await ofetch(\r\n        `https://gi.rss3.io/decentralized/${account}?${new URLSearchParams({\r\n            limit: '20',\r\n            ...(network && network !== 'all' && { network }),\r\n            ...(tag && tag !== 'all' && { tag }),\r\n        })}`\r\n    );\r\n\r\n    return {\r\n        title: `${account} activities`,\r\n        link: 'https://rss3.io',\r\n        item: data.map((item) => {\r\n            const content = renderItemActionToHTML(camelcaseKeys(item.actions));\r\n\r\n            const description = `New ${item.tag} ${item.type} action on ${item.network}<br /><br />From: ${item.from}<br/>To: ${item.to}`;\r\n            return {\r\n                title: `New ${item.tag} ${item.type} action on ${item.network}`,\r\n                description: content ?? description,\r\n                link: item.actions?.[0]?.related_urls?.[0],\r\n                guid: item.id,\r\n                author: [\r\n                    {\r\n                        name: item.owner,\r\n                        avatar: `https://cdn.stamp.fyi/avatar/eth:${item.owner}`,\r\n                    },\r\n                ],\r\n\r\n                _extra: { raw: item },\r\n            } as DataItem;\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"8NAAA,MAAM,EAAY,GAAa,GAAO,OAAO,GAAQ,SAC/C,EAAiB,GAAa,EAAS,IAAQ,OAAO,UAAU,SAAS,KAAK,KAAS,mBAAqB,OAAO,eAAe,KAAS,OAAO,UAM3I,EAA0B,GAAgB,CACnD,GAAI,MAAM,QAAQ,GACd,OAAO,EAAI,IAAK,GAAM,EAAc,IAGxC,GAAI,EAAc,GAAM,CACpB,IAAMA,EAAc,GACpB,IAAK,IAAM,KAAO,OAAO,KAAK,GAAM,CAChC,IAAM,EAAU,EAAU,GAAO,EAAM,EAAU,GACjD,EAAO,GAAW,EAAc,EAAI,IAExC,OAAO,EAGX,OAAO,GAGX,SAAgB,EAAU,EAAa,CACnC,OAAO,EAAI,QAAQ,MAAO,IAAI,WAAW,gBAAkB,GAAO,EAAG,cAAc,QAAQ,IAAK,IAAI,QAAQ,IAAK,KAErH,MAAM,EAAa,GAAe,EAAG,SAAW,IAAM,mBAAmB,KAAK,GCrBjEC,EAAe,CACxB,KAAM,4BACN,WAAY,CAAC,gBACb,QAAS,oBACT,KAAM,qBACN,YAAa,CAAC,SAAU,YACxB,IAAK,+EACL,UACA,YAAa,2FACb,WAAY,CACR,QAAS,CACL,YAAa,wHAEjB,QAAS,CACL,YAAa,kDACb,QAAS,MACT,QAAS,CACL,CACI,MAAO,MACP,MAAO,OAEX,CACI,MAAO,WACP,MAAO,YAEX,CACI,MAAO,UACP,MAAO,WAEX,CACI,MAAO,OACP,MAAO,QAEX,CACI,MAAO,OACP,MAAO,QAEX,CACI,MAAO,sBACP,MAAO,uBAEX,CACI,MAAO,YACP,MAAO,aAEX,CACI,MAAO,WACP,MAAO,YAEX,CACI,MAAO,YACP,MAAO,aAEX,CACI,MAAO,SACP,MAAO,UAEX,CACI,MAAO,QACP,MAAO,SAEX,CACI,MAAO,WACP,MAAO,YAEX,CACI,MAAO,UACP,MAAO,WAEX,CACI,MAAO,MACP,MAAO,SAInB,IAAK,CACD,YAAa,8CACb,QAAS,MACT,QAAS,CACL,CACI,MAAO,MACP,MAAO,OAEX,CACI,MAAO,cACP,MAAO,eAEX,CACI,MAAO,WACP,MAAO,YAEX,CACI,MAAO,YACP,MAAO,aAEX,CACI,MAAO,MACP,MAAO,OAEX,CACI,MAAO,SACP,MAAO,UAEX,CACI,MAAO,cACP,MAAO,eAEX,CACI,MAAO,UACP,MAAO,eAO3B,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,UAAS,UAAS,OAAQ,EAAI,IAAI,QAG1C,GAAI,EAAQ,SAAS,QAAU,EAAQ,SAAS,KAC5C,MAAU,MAAM,uDAGpB,GAAM,CAAE,QAAS,MAAMC,EACnB,oCAAoC,EAAQ,GAAG,IAAI,gBAAgB,CAC/D,MAAO,KACP,GAAI,GAAW,IAAY,OAAS,CAAE,WACtC,GAAI,GAAO,IAAQ,OAAS,CAAE,YAItC,MAAO,CACH,MAAO,GAAG,EAAQ,aAClB,KAAM,kBACN,KAAM,EAAK,IAAK,GAAS,CACrB,IAAM,EAAU,EAAuB,EAAc,EAAK,UAEpD,EAAc,OAAO,EAAK,IAAI,GAAG,EAAK,KAAK,aAAa,EAAK,QAAQ,oBAAoB,EAAK,KAAK,WAAW,EAAK,KACzH,MAAO,CACH,MAAO,OAAO,EAAK,IAAI,GAAG,EAAK,KAAK,aAAa,EAAK,UACtD,YAAa,GAAW,EACxB,KAAM,EAAK,UAAU,IAAI,eAAe,GACxC,KAAM,EAAK,GACX,OAAQ,CACJ,CACI,KAAM,EAAK,MACX,OAAQ,oCAAoC,EAAK,UAIzD,OAAQ,CAAE,IAAK"}