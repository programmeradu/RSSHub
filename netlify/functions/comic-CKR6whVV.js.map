{"version":3,"file":"comic-CKR6whVV.js","names":[],"sources":["../../lib/routes/copymanga/comic.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { config } from '@/config';\r\nimport pMap from 'p-map';\r\n\r\nexport const route: Route = {\r\n    path: '/comic/:id/:chapterCnt?',\r\n    categories: ['anime'],\r\n    example: '/copymanga/comic/dianjuren/5',\r\n    parameters: { id: '漫画ID', chapterCnt: '返回章节的数量，默认为 `10`' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '漫画更新',\r\n    maintainers: ['btdwv', 'marvolo666'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    // 用于控制返回的章节数量\r\n    const chapterCnt = Number(ctx.req.param('chapterCnt') || 10);\r\n    // 直接调用拷贝漫画的接口\r\n    const host = 'www.mangacopy.com';\r\n    const baseUrl = `https://${host}`;\r\n    const apiBaseUrl = `https://${host}`;\r\n    const strBaseUrl = `${apiBaseUrl}/api/v3/comic/${id}/group/default/chapters`;\r\n    const iReqLimit = 500;\r\n    // 获取漫画列表\r\n    const chapterArray = await cache.tryGet(\r\n        strBaseUrl,\r\n        async () => {\r\n            let bHasNextPage = false;\r\n            let chapters = [];\r\n            let iReqOffSet = 0;\r\n\r\n            do {\r\n                bHasNextPage = false;\r\n                // eslint-disable-next-line no-await-in-loop\r\n                const data = await ofetch(strBaseUrl, {\r\n                    headers: {\r\n                        platform: '',\r\n                    },\r\n                    query: {\r\n                        limit: iReqLimit,\r\n                        offset: iReqOffSet,\r\n                    },\r\n                });\r\n                const { code, results } = data;\r\n\r\n                if (code !== 200) {\r\n                    break;\r\n                }\r\n\r\n                if (results.limit + results.offset < results.total) {\r\n                    bHasNextPage = true;\r\n                }\r\n                iReqOffSet += iReqLimit;\r\n\r\n                chapters = [...chapters, ...results.list];\r\n            } while (bHasNextPage);\r\n\r\n            chapters = chapters\r\n                .map(({ comic_path_word, uuid, name, size, datetime_created, ordered /* , index*/ }) => ({\r\n                    link: `${baseUrl}/comic/${comic_path_word}/chapter/${uuid}`,\r\n                    guid: `https://copymanga.site/comic/${comic_path_word}/chapter/${uuid}`,\r\n                    uuid,\r\n                    title: name,\r\n                    size,\r\n                    pubDate: parseDate(datetime_created, 'YYYY-MM-DD'),\r\n                    ordered,\r\n                    // index,\r\n                }))\r\n                .sort((a, b) => b.ordered - a.ordered);\r\n\r\n            return chapters;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    // 获取漫画标题、介绍\r\n    const { bookTitle, bookIntro } = await cache.tryGet(`${baseUrl}/comic/${id}`, async () => {\r\n        const data = await ofetch(`${baseUrl}/comic/${id}`);\r\n        const $ = load(data);\r\n        return {\r\n            bookTitle: $('.comicParticulars-title-right > ul > li > h6').text(),\r\n            bookIntro: $('.intro').text(),\r\n        };\r\n    });\r\n\r\n    const genResult = async (chapter) => {\r\n        const { code, results } = await ofetch(`${apiBaseUrl}/api/v3/comic/${id}/chapter/${chapter.uuid}`, {\r\n            headers: {\r\n                webp: '1',\r\n            },\r\n        });\r\n\r\n        const contents =\r\n            code === 210\r\n                ? [] // Request was throttled. Expected available in x seconds.\r\n                : results.chapter.contents.map((content) => ({ url: content.url.replace('.c800x.', '.c1500x.') }));\r\n\r\n        return {\r\n            link: chapter.link,\r\n            guid: chapter.guid,\r\n            title: chapter.title,\r\n            description: art(path.join(__dirname, './templates/comic.art'), {\r\n                size: chapter.size,\r\n                contents,\r\n            }),\r\n            pubDate: chapter.pubDate,\r\n        };\r\n    };\r\n\r\n    const result = await pMap(chapterArray.slice(0, chapterCnt), (chapter) => cache.tryGet(chapter.link, () => genResult(chapter)), { concurrency: 3 });\r\n    const items = [...result, ...chapterArray.slice(chapterCnt)];\r\n\r\n    return {\r\n        title: `拷贝漫画 - ${bookTitle}`,\r\n        link: `${baseUrl}/comic/${id}`,\r\n        description: bookIntro,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"ycAWA,MAAa,EAAe,CACxB,KAAM,0BACN,WAAY,CAAC,SACb,QAAS,+BACT,WAAY,CAAE,GAAI,OAAQ,WAAY,oBACtC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,QAAS,cACvB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAa,OAAO,EAAI,IAAI,MAAM,eAAiB,IAEnD,EAAO,oBACP,EAAU,WAAW,IACrB,EAAa,WAAW,IACxB,EAAa,GAAG,EAAW,gBAAgB,EAAG,yBAG9C,EAAe,MAAM,EAAM,OAC7B,EACA,SAAY,CACR,IAAI,EAAe,GACf,EAAW,GACX,EAAa,EAEjB,EAAG,CACC,EAAe,GAEf,IAAM,EAAO,MAAM,EAAO,EAAY,CAClC,QAAS,CACL,SAAU,IAEd,MAAO,CACH,MAAO,IACP,OAAQ,KAGV,CAAE,OAAM,WAAY,EAE1B,GAAI,IAAS,IACT,MAGA,EAAQ,MAAQ,EAAQ,OAAS,EAAQ,QACzC,EAAe,IAEnB,GAAc,IAEd,EAAW,CAAC,GAAG,EAAU,GAAG,EAAQ,YAC/B,GAeT,MAbA,GAAW,EACN,KAAK,CAAE,kBAAiB,OAAM,OAAM,OAAM,mBAAkB,cAA4B,CACrF,KAAM,GAAG,EAAQ,SAAS,EAAgB,WAAW,IACrD,KAAM,gCAAgC,EAAgB,WAAW,IACjE,OACA,MAAO,EACP,OACA,QAAS,EAAU,EAAkB,cACrC,aAGH,MAAM,EAAG,IAAM,EAAE,QAAU,EAAE,SAE3B,GAEX,EAAO,MAAM,YACb,IAIE,CAAE,YAAW,aAAc,MAAM,EAAM,OAAO,GAAG,EAAQ,SAAS,IAAM,SAAY,CACtF,IAAM,EAAO,MAAM,EAAO,GAAG,EAAQ,SAAS,KACxC,EAAI,EAAK,GACf,MAAO,CACH,UAAW,EAAE,gDAAgD,OAC7D,UAAW,EAAE,UAAU,UAIzB,EAAY,KAAO,IAAY,CACjC,GAAM,CAAE,OAAM,WAAY,MAAM,EAAO,GAAG,EAAW,gBAAgB,EAAG,WAAW,EAAQ,OAAQ,CAC/F,QAAS,CACL,KAAM,OAIR,EACF,IAAS,IACH,GACA,EAAQ,QAAQ,SAAS,IAAK,IAAa,CAAE,IAAK,EAAQ,IAAI,QAAQ,UAAW,eAE3F,MAAO,CACH,KAAM,EAAQ,KACd,KAAM,EAAQ,KACd,MAAO,EAAQ,MACf,YAAa,EAAI,EAAA,KAAA,EAAA,gCAA+C,CAC5D,KAAM,EAAQ,KACd,aAEJ,QAAS,EAAQ,UAInB,EAAS,MAAM,EAAK,EAAa,MAAM,EAAG,GAAc,GAAY,EAAM,OAAO,EAAQ,SAAY,EAAU,IAAW,CAAE,YAAa,IACzI,EAAQ,CAAC,GAAG,EAAQ,GAAG,EAAa,MAAM,IAEhD,MAAO,CACH,MAAO,UAAU,IACjB,KAAM,GAAG,EAAQ,SAAS,IAC1B,YAAa,EACb,KAAM"}