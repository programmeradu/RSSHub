{"version":3,"file":"topics-B57PVpEw.js","names":["route: Route","got"],"sources":["../../lib/routes/apnews/topics.ts"],"sourcesContent":["import { routePath } from 'hono/route';\r\nimport { Route, ViewType } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { fetchArticle, removeDuplicateByKey } from './utils';\r\nimport pMap from 'p-map';\r\nconst HOME_PAGE = 'https://apnews.com';\r\n\r\nexport const route: Route = {\r\n    path: ['/topics/:topic?', '/nav/:nav{.*}?'],\r\n    categories: ['traditional-media'],\r\n    example: '/apnews/topics/apf-topnews',\r\n    view: ViewType.Articles,\r\n    parameters: {\r\n        topic: {\r\n            description: 'Topic name, can be found in URL. For example: the topic name of AP Top News [https://apnews.com/apf-topnews](https://apnews.com/apf-topnews) is `apf-topnews`',\r\n            default: 'trending-news',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['apnews.com/hub/:topic'],\r\n            target: '/topics/:topic',\r\n        },\r\n    ],\r\n    name: 'Topics',\r\n    maintainers: ['zoenglinghou', 'mjysci', 'TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { topic = 'trending-news', nav = '' } = ctx.req.param();\r\n    const useNav = routePath(ctx) === '/apnews/nav/:nav{.*}?';\r\n    const url = useNav ? `${HOME_PAGE}/${nav}` : `${HOME_PAGE}/hub/${topic}`;\r\n    const response = await got(url);\r\n    const $ = load(response.data);\r\n\r\n    const list = $(':is(.PagePromo-content, .PageListStandardE-leadPromo-info) bsp-custom-headline')\r\n        .toArray()\r\n        .slice(0, ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : Infinity)\r\n        .map((e) => ({\r\n            title: $(e).find('span.PagePromoContentIcons-text').text(),\r\n            link: $(e).find('a').attr('href'),\r\n        }))\r\n        .filter((e) => typeof e.link === 'string');\r\n\r\n    const items = ctx.req.query('fulltext') === 'true' ? await pMap(list, (item) => fetchArticle(item), { concurrency: 10 }) : list;\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        description: $(\"meta[property='og:description']\").text(),\r\n        link: url,\r\n        item: removeDuplicateByKey(items, 'link'),\r\n        language: $('html').attr('lang'),\r\n    };\r\n}\r\n"],"mappings":"ofAMA,MAAM,EAAY,qBAELA,EAAe,CACxB,KAAM,CAAC,kBAAmB,kBAC1B,WAAY,CAAC,qBACb,QAAS,6BACT,KAAM,EAAS,SACf,WAAY,CACR,MAAO,CACH,YAAa,gKACb,QAAS,kBAGjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,yBACT,OAAQ,mBAGhB,KAAM,SACN,YAAa,CAAC,eAAgB,SAAU,UACxC,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAQ,gBAAiB,MAAM,IAAO,EAAI,IAAI,QAChD,EAAS,EAAU,KAAS,wBAC5B,EAAM,EAAS,GAAG,EAAU,GAAG,IAAQ,GAAG,EAAU,OAAO,IAC3D,EAAW,MAAMC,EAAI,GACrB,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,kFACV,UACA,MAAM,EAAG,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAC5E,IAAK,IAAO,CACT,MAAO,EAAE,GAAG,KAAK,mCAAmC,OACpD,KAAM,EAAE,GAAG,KAAK,KAAK,KAAK,WAE7B,OAAQ,GAAM,OAAO,EAAE,MAAS,UAE/B,EAAQ,EAAI,IAAI,MAAM,cAAgB,OAAS,MAAM,EAAK,EAAO,GAAS,EAAa,GAAO,CAAE,YAAa,KAAQ,EAE3H,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,YAAa,EAAE,mCAAmC,OAClD,KAAM,EACN,KAAM,EAAqB,EAAO,QAClC,SAAU,EAAE,QAAQ,KAAK"}