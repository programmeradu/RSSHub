{"version":3,"file":"005-sgwalFnk.js","names":[],"sources":["../../lib/routes/005/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const handler = async (ctx) => {\r\n    const { category = 'zx' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 20;\r\n\r\n    const rootUrl = 'https://005.tv';\r\n    const currentUrl = new URL(category ? `${category}/` : '', rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    const language = $('html').prop('lang');\r\n\r\n    let items = $('div.article-list ul li')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const title = item.find('h3').text();\r\n            const image = item.find('img').prop('src');\r\n\r\n            const description = art(path.join(__dirname, 'templates/description.art'), {\r\n                intro: item.find('div.p-row').text(),\r\n                images: image\r\n                    ? [\r\n                          {\r\n                              src: image,\r\n                              alt: title,\r\n                          },\r\n                      ]\r\n                    : undefined,\r\n            });\r\n\r\n            return {\r\n                title,\r\n                description,\r\n                pubDate: parseDate(item.find('span.time').text()),\r\n                link: new URL(item.find('h3 a').prop('href'), rootUrl).href,\r\n                content: {\r\n                    html: description,\r\n                    text: item.find('div.p-row').text(),\r\n                },\r\n                image,\r\n                banner: image,\r\n                language,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const $$ = load(detailResponse);\r\n\r\n                const title = $$('h1.articleTitle-name').text();\r\n                const description = $$('div.articleContent').html();\r\n\r\n                item.title = title;\r\n                item.description = description;\r\n                item.pubDate = timezone(parseDate($$('.time').text()), +8);\r\n                item.category = $$('meta[name=\"keywords\"]').prop('content').split(/,/);\r\n                item.content = {\r\n                    html: description,\r\n                    text: $$('div.articleContent').text(),\r\n                };\r\n                item.language = language;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const title = $('title').text();\r\n    const image = new URL('templets/muban/style/images/logo.png', rootUrl).href;\r\n\r\n    return {\r\n        title,\r\n        description: title.split(/_/)[0],\r\n        link: currentUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image,\r\n        author: title.split(/,/).pop(),\r\n        language,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:category?',\r\n    name: '资讯',\r\n    url: '005.tv',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/005/zx',\r\n    parameters: { category: '分类，可在对应分类页 URL 中找到，默认为二次元资讯' },\r\n    description: `\r\n| 二次元资讯 | 慢慢说 | 道听途说 | 展会资讯 |\r\n| ---------- | ------ | -------- | -------- |\r\n| zx         | zwh    | dtts     | zh       |\r\n    `,\r\n    categories: ['anime'],\r\n\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['005.tv/:category'],\r\n            target: (params) => {\r\n                const category = params.category;\r\n\r\n                return `/005${category ? `/${category}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '二次元资讯',\r\n            source: ['005.tv/zx/'],\r\n            target: '/005/zx',\r\n        },\r\n        {\r\n            title: '慢慢说',\r\n            source: ['005.tv/zwh/'],\r\n            target: '/005/zwh',\r\n        },\r\n        {\r\n            title: '道听途说',\r\n            source: ['005.tv/dtts/'],\r\n            target: '/005/dtts',\r\n        },\r\n        {\r\n            title: '展会资讯',\r\n            source: ['005.tv/zh/'],\r\n            target: '/005/zh',\r\n        },\r\n    ],\r\n};\r\n"],"mappings":"0gBAUA,MAAa,EAAU,KAAO,IAAQ,CAClC,GAAM,CAAE,WAAW,MAAS,EAAI,IAAI,QAC9B,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAU,iBACV,EAAa,IAAI,IAAI,EAAW,GAAG,EAAS,GAAK,GAAI,GAAS,KAE9D,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAI,EAAK,GAET,EAAW,EAAE,QAAQ,KAAK,QAE5B,EAAQ,EAAE,0BACT,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,MAAM,OACxB,EAAQ,EAAK,KAAK,OAAO,KAAK,OAE9B,EAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACvE,MAAO,EAAK,KAAK,aAAa,OAC9B,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,KAGV,MAAO,CACH,MAAA,EACA,cACA,QAAS,EAAU,EAAK,KAAK,aAAa,QAC1C,KAAM,IAAI,IAAI,EAAK,KAAK,QAAQ,KAAK,QAAS,GAAS,KACvD,QAAS,CACL,KAAM,EACN,KAAM,EAAK,KAAK,aAAa,QAEjC,MAAA,EACA,OAAQ,EACR,cAIZ,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAM,EAAI,EAAK,MAE1C,EAAK,EAAK,GAEV,EAAQ,EAAG,wBAAwB,OACnC,EAAc,EAAG,sBAAsB,OAY7C,MAVA,GAAK,MAAQ,EACb,EAAK,YAAc,EACnB,EAAK,QAAU,EAAS,EAAU,EAAG,SAAS,QAAS,GACvD,EAAK,SAAW,EAAG,yBAAyB,KAAK,WAAW,MAAM,KAClE,EAAK,QAAU,CACX,KAAM,EACN,KAAM,EAAG,sBAAsB,QAEnC,EAAK,SAAW,EAET,MAKnB,IAAM,EAAQ,EAAE,SAAS,OACnB,EAAQ,IAAI,IAAI,uCAAwC,GAAS,KAEvE,MAAO,CACH,QACA,YAAa,EAAM,MAAM,KAAK,GAC9B,KAAM,EACN,KAAM,EACN,WAAY,GACZ,QACA,OAAQ,EAAM,MAAM,KAAK,MACzB,aAIK,EAAe,CACxB,KAAM,cACN,KAAM,KACN,IAAK,SACL,YAAa,CAAC,WACd,UACA,QAAS,UACT,WAAY,CAAE,SAAU,+BACxB,YAAa;;;;MAKb,WAAY,CAAC,SAEb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oBACT,OAAS,GAAW,CAChB,IAAM,EAAW,EAAO,SAExB,MAAO,OAAO,EAAW,IAAI,IAAa,OAGlD,CACI,MAAO,QACP,OAAQ,CAAC,cACT,OAAQ,WAEZ,CACI,MAAO,MACP,OAAQ,CAAC,eACT,OAAQ,YAEZ,CACI,MAAO,OACP,OAAQ,CAAC,gBACT,OAAQ,aAEZ,CACI,MAAO,OACP,OAAQ,CAAC,cACT,OAAQ"}