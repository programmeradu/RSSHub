import e from"node:path";import{fileURLToPath as t}from"node:url";import{stringifyQuery as n}from"ufo";const r=e=>{let t=e.split(`/`).filter(Boolean);return t.length>0?t[0]:null},i=e=>{let t=e.url.match(/^https?:\/\/[^/]+(\/[^?]*)/);return t?t[1]:``},a=e=>{let[t,n]=[`,`,`.`],r=e.map(e=>e.replaceAll(/(\d)(?=(\d{3})+(?!\d))/g,`$1`+t));return r.join(n)},o=e=>{let t=Date.now()-e;return a([t<1e3?t+`ms`:Math.round(t/1e3)+`s`])},s=n=>{let r=e.join(t(n));return e.dirname(r)};function c(e){return Object.prototype.toString.call(e)===`[object Object]`}function l(e){let t=c(e)?n(e):null;return t??new URLSearchParams(e).toString()}function u(e){let t=e.trim().replaceAll(/[^\d:]/g,``);return t.split(`:`).toReversed().reduce((e,t,n)=>{let r=Number(t);if(Number.isNaN(r))throw TypeError(`Invalid segment: ${t}`);return e+r*Math.pow(60,n)},0)}export{s as getCurrentPath,i as getPath,r as getRouteNameFromPath,l as getSearchParamsString,u as parseDuration,o as time};
//# sourceMappingURL=helpers-DzX-lcQO.js.map