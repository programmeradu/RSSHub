{"version":3,"file":"blog-C7thXy8g.js","names":[],"sources":["../../lib/routes/gitpod/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { rootUrl } from './utils';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['programming'],\r\n    example: '/gitpod/blog',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gitpod.io/blog', 'gitpod.io/'],\r\n        },\r\n    ],\r\n    name: 'Blog',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'gitpod.io/blog',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 10;\r\n    const response = await got(rootUrl + '/blog');\r\n    const $ = load(response.data);\r\n    let items = $('div[class^=\"flex justify-center\"]')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            return {\r\n                title: item.find('h2').text(),\r\n                link: rootUrl + item.find('a').attr('href'),\r\n                pubDate: parseDate(item.find('span[class^=date]').text()),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got(item.link);\r\n                const content = load(detailResponse.data);\r\n\r\n                const headerImg = content('img[class^=max-h]');\r\n                item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                    img: headerImg.attr('src'),\r\n                    alt: headerImg.attr('alt'),\r\n                    content: content('div[class^=content-blog]').html(),\r\n                });\r\n                item.author = content('span.avatars a')\r\n                    .toArray()\r\n                    .map((e) => content(e).text().trim())\r\n                    .join(', ');\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const ret = {\r\n        title: $('title').text(),\r\n        link: rootUrl + '/blog',\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        language: 'en-US',\r\n        item: items,\r\n    };\r\n\r\n    ctx.set('json', ret);\r\n    return ret;\r\n}\r\n"],"mappings":"sgBAUA,MAAa,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,eACb,QAAS,eACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iBAAkB,gBAGnC,KAAM,OACN,YAAa,CAAC,UACd,UACA,IAAK,kBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAC3E,EAAW,MAAM,EAAI,EAAU,SAC/B,EAAI,EAAK,EAAS,MACpB,EAAQ,EAAE,qCACT,MAAM,EAAG,GACT,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,KAAK,MAAM,OACvB,KAAM,EAAU,EAAK,KAAK,KAAK,KAAK,QACpC,QAAS,EAAU,EAAK,KAAK,qBAAqB,WAI9D,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAM,EAAI,EAAK,MAChC,EAAU,EAAK,EAAe,MAE9B,EAAY,EAAQ,qBAU1B,MATA,GAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,IAAK,EAAU,KAAK,OACpB,IAAK,EAAU,KAAK,OACpB,QAAS,EAAQ,4BAA4B,SAEjD,EAAK,OAAS,EAAQ,kBACjB,UACA,IAAK,GAAM,EAAQ,GAAG,OAAO,QAC7B,KAAK,MACH,MAKnB,IAAM,EAAM,CACR,MAAO,EAAE,SAAS,OAClB,KAAM,EAAU,QAChB,YAAa,EAAE,4BAA4B,KAAK,WAChD,SAAU,QACV,KAAM,GAIV,OADA,EAAI,IAAI,OAAQ,GACT"}