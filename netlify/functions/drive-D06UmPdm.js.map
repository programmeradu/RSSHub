{"version":3,"file":"drive-D06UmPdm.js","names":[],"sources":["../../lib/routes/lenovo/drive.ts"],"sourcesContent":["import { Route, Data, DataItem } from '@/types';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/drive/:selName',\r\n    categories: ['program-update'],\r\n    example: '/lenovo/drive/PF3WRD2G',\r\n    parameters: { selName: '产品序列号' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['lenovo.com.cn'],\r\n            target: '/drive/:selName',\r\n        },\r\n    ],\r\n    name: '驱动',\r\n    maintainers: ['cscnk52'],\r\n    handler,\r\n};\r\n\r\nexport async function handler(ctx) {\r\n    const selName = ctx.req.param('selName');\r\n    const link = `https://newsupport.lenovo.com.cn/api/drive/drive_listnew?searchKey=${selName}`;\r\n\r\n    const response = await ofetch(link);\r\n\r\n    if (response.statusCode !== 200) {\r\n        throw new InvalidParameterError(`无效序列号, 请检查你的序列号是否正确.`);\r\n    }\r\n\r\n    const driveList = response.data.partList.flatMap((part) => part.drivelist);\r\n\r\n    const items: DataItem[] = driveList.map(\r\n        (item) =>\r\n            ({\r\n                title: `${item.DriverName} ${item.Version}`,\r\n                link: `https://newsupport.lenovo.com.cn/driveDownloads_detail.html?driveId=${item.DriverEdtionId}`,\r\n                description: art(path.join(__dirname, 'templates/drive.art'), {\r\n                    driveName: item.DriverName,\r\n                    driveCode: item.DriverCode,\r\n                    driveVersion: item.Version,\r\n                    downloadFileName: item.FileName,\r\n                    downloadFilePath: item.FilePath,\r\n                }),\r\n                pubDate: parseDate(item.CreateTime, +8),\r\n            }) as DataItem\r\n    );\r\n\r\n    return {\r\n        title: `${response.data.driverSerious[0].NodeCode} 驱动`,\r\n        item: items,\r\n        language: 'zh-CN',\r\n    } as Data;\r\n}\r\n"],"mappings":"4ZAOA,MAAa,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,kBACb,QAAS,yBACT,WAAY,CAAE,QAAS,SACvB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iBACT,OAAQ,oBAGhB,KAAM,KACN,YAAa,CAAC,WACd,WAGJ,eAAsB,EAAQ,EAAK,CAC/B,IAAM,EAAU,EAAI,IAAI,MAAM,WACxB,EAAO,sEAAsE,IAE7E,EAAW,MAAM,EAAO,GAE9B,GAAI,EAAS,aAAe,IACxB,MAAM,IAAI,EAAsB,wBAGpC,IAAM,EAAY,EAAS,KAAK,SAAS,QAAS,GAAS,EAAK,WAE1D,EAAoB,EAAU,IAC/B,IACI,CACG,MAAO,GAAG,EAAK,WAAW,GAAG,EAAK,UAClC,KAAM,uEAAuE,EAAK,iBAClF,YAAa,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAC1D,UAAW,EAAK,WAChB,UAAW,EAAK,WAChB,aAAc,EAAK,QACnB,iBAAkB,EAAK,SACvB,iBAAkB,EAAK,WAE3B,QAAS,EAAU,EAAK,WAAY,MAIhD,MAAO,CACH,MAAO,GAAG,EAAS,KAAK,cAAc,GAAG,SAAS,KAClD,KAAM,EACN,SAAU"}