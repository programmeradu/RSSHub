{"version":3,"file":"column-DUm2qHPj.js","names":["route: Route","got","title","link","cache","response","description"],"sources":["../../lib/routes/sspai/column.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/column/:id',\r\n    categories: ['new-media'],\r\n    example: '/sspai/column/262',\r\n    parameters: { id: '专栏 id' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['sspai.com/column/:id'],\r\n        },\r\n    ],\r\n    name: '专栏',\r\n    maintainers: ['LogicJake'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const link = `https://sspai.com/column/${id}`;\r\n\r\n    const desApi = `https://sspai.com/api/v1/special_columns/${id}`;\r\n    let response = await got({\r\n        method: 'get',\r\n        url: desApi,\r\n        headers: {\r\n            Referer: link,\r\n        },\r\n    });\r\n\r\n    const result = response.data;\r\n    const title = result.title;\r\n    const description = result.intro;\r\n\r\n    const api = `https://sspai.com/api/v1/articles?offset=0&limit=10&special_column_ids=${id}&include_total=false`;\r\n    response = await got({\r\n        method: 'get',\r\n        url: api,\r\n        headers: {\r\n            Referer: link,\r\n        },\r\n    });\r\n\r\n    const list = response.data.list;\r\n\r\n    const out = await Promise.all(\r\n        list.map((item) => {\r\n            const title = item.title;\r\n            const date = item.created_at;\r\n            const link = `https://sspai.com/api/v1/article/info/get?id=${item.id}&view=second&support_webp=true`;\r\n            const itemUrl = `https://sspai.com/post/${item.id}`;\r\n            const author = item.author.nickname;\r\n\r\n            return cache.tryGet(`sspai: ${item.id}`, async () => {\r\n                const response = await got(link);\r\n                const description = response.data.data.body;\r\n\r\n                const single = {\r\n                    title,\r\n                    link: itemUrl,\r\n                    author,\r\n                    description,\r\n                    pubDate: parseDate(date * 1000),\r\n                };\r\n                return single;\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `少数派专栏-${title}`,\r\n        link,\r\n        description,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"yUAKA,MAAaA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,aACb,QAAS,oBACT,WAAY,CAAE,GAAI,SAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,KACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAO,4BAA4B,IAEnC,EAAS,4CAA4C,IACvD,EAAW,MAAMC,EAAI,CACrB,OAAQ,MACR,IAAK,EACL,QAAS,CACL,QAAS,KAIX,EAAS,EAAS,KAClB,EAAQ,EAAO,MACf,EAAc,EAAO,MAErB,EAAM,0EAA0E,EAAG,sBACzF,EAAW,MAAMA,EAAI,CACjB,OAAQ,MACR,IAAK,EACL,QAAS,CACL,QAAS,KAIjB,IAAM,EAAO,EAAS,KAAK,KAErB,EAAM,MAAM,QAAQ,IACtB,EAAK,IAAK,GAAS,CACf,IAAMC,EAAQ,EAAK,MACb,EAAO,EAAK,WACZC,EAAO,gDAAgD,EAAK,GAAG,gCAC/D,EAAU,0BAA0B,EAAK,KACzC,EAAS,EAAK,OAAO,SAE3B,OAAOC,EAAM,OAAO,UAAU,EAAK,KAAM,SAAY,CACjD,IAAMC,EAAW,MAAMJ,EAAIE,GACrBG,EAAcD,EAAS,KAAK,KAAK,KAEjC,EAAS,CACX,MAAA,EACA,KAAM,EACN,SACA,YAAA,EACA,QAAS,EAAU,EAAO,MAE9B,OAAO,OAKnB,MAAO,CACH,MAAO,SAAS,IAChB,OACA,cACA,KAAM"}