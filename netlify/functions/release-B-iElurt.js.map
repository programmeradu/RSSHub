{"version":3,"file":"release-B-iElurt.js","names":["handler: Route['handler']","ofetch","day","link","item","cache","data","$","route: Route"],"sources":["../../lib/routes/notion/release.ts"],"sourcesContent":["import type { DataItem, Route } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport day from 'dayjs';\r\n\r\nconst handler: Route['handler'] = async () => {\r\n    const data = await ofetch('https://notion.so/releases', {\r\n        headers: {\r\n            'Accept-Language': 'en-US', // TODO accept param\r\n        },\r\n    });\r\n\r\n    const $ = load(data);\r\n\r\n    // the first post, do not cache\r\n    const title = $('h2').first().text() ?? '';\r\n    const pubDate = parseDate($('time').first().text());\r\n    const description = $('article.release article').first().html() ?? '';\r\n    const link = `https://notion.so/releases/${day(pubDate).format('YYYY-MM-DD')}`;\r\n\r\n    // archive\r\n    const item = (await Promise.all(\r\n        $('div[class^=\"releasePreviewsSection\"] h3 a[href^=\"/releases/\"]')\r\n            .toArray()\r\n            .slice(0, 5)\r\n            .map((item) => {\r\n                const link = `https://notion.so${item.attribs.href}`;\r\n\r\n                return cache.tryGet(`notion:release:${link}`, async () => {\r\n                    const data = await ofetch(link, {\r\n                        headers: {\r\n                            'Accept-Language': 'en-US', // Notion will adjust returned content based on this header\r\n                        },\r\n                    });\r\n\r\n                    const $ = load(data);\r\n\r\n                    return {\r\n                        title: $('h2').first().text() ?? '',\r\n                        pubDate: parseDate($('time').first().text()),\r\n                        description: $('article.release article').first().html() ?? '',\r\n                        link,\r\n                    };\r\n                });\r\n            })\r\n    )) as DataItem[];\r\n\r\n    return {\r\n        title: 'Notion Releases',\r\n        link: 'https://notion.so/releases',\r\n        item: [\r\n            {\r\n                title,\r\n                description,\r\n                pubDate,\r\n                link,\r\n            },\r\n            ...item,\r\n        ],\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    name: 'Release',\r\n    path: '/release',\r\n    url: 'notion.so/releases',\r\n    example: '/notion/release',\r\n    categories: ['program-update'],\r\n    maintainers: ['equt'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    handler,\r\n};\r\n"],"mappings":"wUAOA,MAAMA,EAA4B,SAAY,CAC1C,IAAM,EAAO,MAAMC,EAAO,6BAA8B,CACpD,QAAS,CACL,kBAAmB,WAIrB,EAAI,EAAK,GAGT,EAAQ,EAAE,MAAM,QAAQ,QAAU,GAClC,EAAU,EAAU,EAAE,QAAQ,QAAQ,QACtC,EAAc,EAAE,2BAA2B,QAAQ,QAAU,GAC7D,EAAO,8BAA8BC,EAAI,GAAS,OAAO,gBAGzD,EAAQ,MAAM,QAAQ,IACxB,EAAE,iEACG,UACA,MAAM,EAAG,GACT,IAAK,GAAS,CACX,IAAMC,EAAO,oBAAoBC,EAAK,QAAQ,OAE9C,OAAOC,EAAM,OAAO,kBAAkBF,IAAQ,SAAY,CACtD,IAAMG,EAAO,MAAML,EAAOE,EAAM,CAC5B,QAAS,CACL,kBAAmB,WAIrBI,EAAI,EAAKD,GAEf,MAAO,CACH,MAAOC,EAAE,MAAM,QAAQ,QAAU,GACjC,QAAS,EAAUA,EAAE,QAAQ,QAAQ,QACrC,YAAaA,EAAE,2BAA2B,QAAQ,QAAU,GAC5D,KAAA,QAMpB,MAAO,CACH,MAAO,kBACP,KAAM,6BACN,KAAM,CACF,CACI,QACA,cACA,UACA,QAEJ,GAAG,KAKFC,EAAe,CACxB,KAAM,UACN,KAAM,WACN,IAAK,qBACL,QAAS,kBACT,WAAY,CAAC,kBACb,YAAa,CAAC,QACd,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB"}