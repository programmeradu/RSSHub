{"version":3,"file":"blog-SKIDkfgq.js","names":["got","route: Route"],"sources":["../../lib/routes/cline/blog.ts"],"sourcesContent":["import { load, type CheerioAPI } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { Route, DataItem } from '@/types';\r\n\r\nconst rootUrl = 'https://cline.bot';\r\nconst blogUrl = `${rootUrl}/blog`;\r\n\r\n// Extract article information from DOM\r\nfunction extractArticlesFromDOM($: CheerioAPI): DataItem[] {\r\n    return $('article.group')\r\n        .toArray()\r\n        .map((article) => {\r\n            const element = $(article);\r\n\r\n            const title = element.find('h2').text().trim();\r\n            const link = element.find('a').first().attr('href');\r\n            const fullLink = link ? (link.startsWith('http') ? link : `${rootUrl}${link.startsWith('/') ? link : `/${link}`}`) : '';\r\n\r\n            // Extract date and author with single regex\r\n            const metaText = element.find('.text-sm.text-slate-500').text().trim();\r\n            const metaMatch = metaText.match(/^([^•]+)\\s*•\\s*([A-Za-z]+\\s+\\d{1,2},?\\s+\\d{4})/);\r\n            const author = metaMatch ? metaMatch[1].trim() : 'Cline Team';\r\n            const pubDate = metaMatch ? parseDate(metaMatch[2]) : undefined;\r\n\r\n            const summary = element.find('p.text-slate-600').text().trim();\r\n            const imgSrc = element.find('img').attr('src') || '';\r\n\r\n            return title && link\r\n                ? {\r\n                      title,\r\n                      link: fullLink,\r\n                      pubDate,\r\n                      author,\r\n                      description: imgSrc ? `<img src=\"${imgSrc}\" alt=\"${title}\" /><p>${summary}</p>` : `<p>${summary}</p>`,\r\n                  }\r\n                : null;\r\n        })\r\n        .filter(Boolean) as DataItem[];\r\n}\r\n\r\nasync function handler() {\r\n    // Use the archive page which has all articles\r\n    const archiveUrl = `${rootUrl}/blog/archive`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: archiveUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const articles = extractArticlesFromDOM($);\r\n\r\n    if (articles.length === 0) {\r\n        throw new Error('No articles found.');\r\n    }\r\n\r\n    return {\r\n        title: 'Cline Official Blog',\r\n        link: blogUrl,\r\n        item: articles,\r\n        description: 'Cline Official Blog - AI Coding Assistant',\r\n        language: 'en' as const,\r\n    };\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['blog'],\r\n    example: '/cline/blog',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['cline.bot/blog/archive', 'cline.bot/blog'],\r\n            target: '/blog',\r\n        },\r\n    ],\r\n    name: 'Blog',\r\n    maintainers: ['yeshan333'],\r\n    description: 'Cline Official Blog articles',\r\n    handler,\r\n    url: 'cline.bot/blog',\r\n};\r\n"],"mappings":"oTAKA,MAAM,EAAU,oBACV,EAAU,GAAG,EAAQ,OAG3B,SAAS,EAAuB,EAA2B,CACvD,OAAO,EAAE,iBACJ,UACA,IAAK,GAAY,CACd,IAAM,EAAU,EAAE,GAEZ,EAAQ,EAAQ,KAAK,MAAM,OAAO,OAClC,EAAO,EAAQ,KAAK,KAAK,QAAQ,KAAK,QACtC,EAAW,EAAQ,EAAK,WAAW,QAAU,EAAO,GAAG,IAAU,EAAK,WAAW,KAAO,EAAO,IAAI,MAAY,GAG/G,EAAW,EAAQ,KAAK,2BAA2B,OAAO,OAC1D,EAAY,EAAS,MAAM,kDAC3B,EAAS,EAAY,EAAU,GAAG,OAAS,aAC3C,EAAU,EAAY,EAAU,EAAU,IAAM,IAAA,GAEhD,EAAU,EAAQ,KAAK,oBAAoB,OAAO,OAClD,EAAS,EAAQ,KAAK,OAAO,KAAK,QAAU,GAElD,OAAO,GAAS,EACV,CACI,QACA,KAAM,EACN,UACA,SACA,YAAa,EAAS,aAAa,EAAO,SAAS,EAAM,SAAS,EAAQ,MAAQ,MAAM,EAAQ,OAEpG,OAET,OAAO,SAGhB,eAAe,GAAU,CAErB,IAAM,EAAa,GAAG,EAAQ,eAExB,EAAW,MAAMA,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAClB,EAAW,EAAuB,GAExC,GAAI,EAAS,SAAW,EACpB,MAAU,MAAM,sBAGpB,MAAO,CACH,MAAO,sBACP,KAAM,EACN,KAAM,EACN,YAAa,4CACb,SAAU,MAIlB,MAAaC,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,cACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,yBAA0B,kBACnC,OAAQ,UAGhB,KAAM,OACN,YAAa,CAAC,aACd,YAAa,+BACb,UACA,IAAK"}