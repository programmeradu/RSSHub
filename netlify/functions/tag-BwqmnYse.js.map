{"version":3,"file":"tag-BwqmnYse.js","names":["route: Route","ofetch","cache","response","$","preloadedState","el"],"sources":["../../lib/routes/wired/tag.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as cheerio from 'cheerio';\r\nimport { Item } from './types';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/tag/:tag',\r\n    example: '/wired/tag/facebook',\r\n    parameters: { tag: 'Tag name' },\r\n    radar: [\r\n        {\r\n            source: ['www.wired.com/tag/:tag/'],\r\n        },\r\n    ],\r\n    name: 'Tags',\r\n    maintainers: ['Naiqus'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://www.wired.com';\r\n    const { tag } = ctx.req.param() as { tag: string };\r\n    const link = `${baseUrl}/tag/${tag}/`;\r\n\r\n    const response = await ofetch(link);\r\n    const $ = cheerio.load(response);\r\n    const preloadedState = JSON.parse(\r\n        $('script:contains(\"window.__PRELOADED_STATE__\")')\r\n            .text()\r\n            .match(/window\\.__PRELOADED_STATE__ = (.*);/)?.[1] ?? '{}'\r\n    );\r\n\r\n    const list = (preloadedState.transformed.tag.items as Item[]).map((item) => ({\r\n        title: item.dangerousHed,\r\n        description: item.dangerousDek,\r\n        link: `${baseUrl}${item.url}`,\r\n        pubDate: parseDate(item.date),\r\n        author: item.contributors.author.items.map((author) => author.name).join(', '),\r\n        category: [item.rubric.name],\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(item.link);\r\n                const $ = cheerio.load(response);\r\n                const preloadedState = JSON.parse(\r\n                    $('script:contains(\"window.__PRELOADED_STATE__\")')\r\n                        .text()\r\n                        .match(/window\\.__PRELOADED_STATE__ = (.*);/)?.[1] ?? '{}'\r\n                );\r\n\r\n                const headerLeadAsset = $('div[data-testid*=\"ContentHeaderLeadAsset\"]');\r\n                headerLeadAsset.find('button').remove();\r\n                // false postive: 'some' does not exist on type 'Cheerio<Element>'\r\n                // eslint-disable-next-line unicorn/prefer-array-some\r\n                if (headerLeadAsset.find('video')) {\r\n                    headerLeadAsset.find('video').attr('src', $('link[rel=\"preload\"][as=\"video\"]').attr('href'));\r\n                    headerLeadAsset.find('video').attr('controls', '');\r\n                    headerLeadAsset.find('video').attr('preload', 'metadata');\r\n                    headerLeadAsset.find('video').removeAttr('autoplay');\r\n                }\r\n\r\n                const content = $('.body__inner-container')\r\n                    .toArray()\r\n                    .map((el) => {\r\n                        const $el = $(el);\r\n                        $el.find('noscript').each((_, el) => {\r\n                            const $e = $(el);\r\n                            $e.replaceWith($e.html() || '');\r\n                        });\r\n\r\n                        return $el.html();\r\n                    })\r\n                    .join('');\r\n\r\n                item.description = ($('div[class^=ContentHeaderDek]').prop('outerHTML') || '') + headerLeadAsset.prop('outerHTML') + content;\r\n\r\n                item.category = [...new Set([...item.category, ...preloadedState.transformed.article.tagCloud.tags.map((t: { tag: string }) => t.tag)])];\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: preloadedState.transformed['head.title'],\r\n        description: preloadedState.transformed['head.description'],\r\n        link,\r\n        image: `${baseUrl}${preloadedState.transformed.logo.sources.sm.url}`,\r\n        language: 'en',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"8SAQA,MAAaA,EAAe,CACxB,KAAM,YACN,QAAS,sBACT,WAAY,CAAE,IAAK,YACnB,MAAO,CACH,CACI,OAAQ,CAAC,6BAGjB,KAAM,OACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,wBACV,CAAE,OAAQ,EAAI,IAAI,QAClB,EAAO,GAAG,EAAQ,OAAO,EAAI,GAE7B,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAQ,KAAK,GACjB,EAAiB,KAAK,MACxB,EAAE,iDACG,OACA,MAAM,yCAAyC,IAAM,MAGxD,EAAQ,EAAe,YAAY,IAAI,MAAiB,IAAK,IAAU,CACzE,MAAO,EAAK,aACZ,YAAa,EAAK,aAClB,KAAM,GAAG,IAAU,EAAK,MACxB,QAAS,EAAU,EAAK,MACxB,OAAQ,EAAK,aAAa,OAAO,MAAM,IAAK,GAAW,EAAO,MAAM,KAAK,MACzE,SAAU,CAAC,EAAK,OAAO,SAGrB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAO,EAAK,MAC7BG,EAAI,EAAQ,KAAKD,GACjBE,EAAiB,KAAK,MACxBD,EAAE,iDACG,OACA,MAAM,yCAAyC,IAAM,MAGxD,EAAkBA,EAAE,8CAC1B,EAAgB,KAAK,UAAU,SAG3B,EAAgB,KAAK,WACrB,EAAgB,KAAK,SAAS,KAAK,MAAOA,EAAE,mCAAmC,KAAK,SACpF,EAAgB,KAAK,SAAS,KAAK,WAAY,IAC/C,EAAgB,KAAK,SAAS,KAAK,UAAW,YAC9C,EAAgB,KAAK,SAAS,WAAW,aAG7C,IAAM,EAAUA,EAAE,0BACb,UACA,IAAK,GAAO,CACT,IAAM,EAAMA,EAAE,GAMd,OALA,EAAI,KAAK,YAAY,MAAM,EAAG,IAAO,CACjC,IAAM,EAAKA,EAAEE,GACb,EAAG,YAAY,EAAG,QAAU,MAGzB,EAAI,SAEd,KAAK,IAMV,MAJA,GAAK,aAAeF,EAAE,gCAAgC,KAAK,cAAgB,IAAM,EAAgB,KAAK,aAAe,EAErH,EAAK,SAAW,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAK,SAAU,GAAGC,EAAe,YAAY,QAAQ,SAAS,KAAK,IAAK,GAAuB,EAAE,QAE1H,MAKnB,MAAO,CACH,MAAO,EAAe,YAAY,cAClC,YAAa,EAAe,YAAY,oBACxC,OACA,MAAO,GAAG,IAAU,EAAe,YAAY,KAAK,QAAQ,GAAG,MAC/D,SAAU,KACV,KAAM"}