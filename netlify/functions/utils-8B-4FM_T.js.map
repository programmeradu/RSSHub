{"version":3,"file":"utils-8B-4FM_T.js","names":[],"sources":["../../lib/routes/fansly/utils.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport cache from '@/utils/cache';\r\n\r\nconst apiBaseUrl = 'https://apiv3.fansly.com';\r\nconst baseUrl = 'https://fansly.com';\r\nconst icon = `${baseUrl}/assets/images/icons/apple-touch-icon.png`;\r\n\r\nconst findAccountById = (accountId, accounts) => {\r\n    const account = accounts.find((account) => account.id === accountId);\r\n    return {\r\n        displayName: account.displayName,\r\n        username: account.username,\r\n    };\r\n};\r\n\r\nconst getAccountByUsername = (username) =>\r\n    cache.tryGet(`fansly:account:${username.toLowerCase()}`, async () => {\r\n        const { data: accountResponse } = await got(`${apiBaseUrl}/api/v1/account`, {\r\n            searchParams: {\r\n                usernames: username,\r\n                'ngsw-bypass': true,\r\n            },\r\n        });\r\n\r\n        if (!accountResponse.response.length) {\r\n            throw new InvalidParameterError('This profile or page does not exist.');\r\n        }\r\n\r\n        return accountResponse.response[0];\r\n    });\r\n\r\nconst getTimelineByAccountId = async (accountId) => {\r\n    const { data: timeline } = await got(`${apiBaseUrl}/api/v1/timelinenew/${accountId}`, {\r\n        searchParams: {\r\n            before: 0,\r\n            after: 0,\r\n            wallId: '',\r\n            contentSearch: '',\r\n            'ngsw-bypass': true,\r\n        },\r\n    });\r\n\r\n    return timeline.response;\r\n};\r\n\r\nconst getTagId = (tag) =>\r\n    cache.tryGet(`fansly:tag:${tag.toLowerCase()}`, async () => {\r\n        const { data: tagResponse } = await got(`${apiBaseUrl}/api/v1/contentdiscovery/media/tag`, {\r\n            searchParams: {\r\n                tag,\r\n                'ngsw-bypass': true,\r\n            },\r\n        });\r\n\r\n        if (!tagResponse.response.mediaOfferSuggestionTag) {\r\n            throw new Error(\"Couldn't find this hashtag.\");\r\n        }\r\n\r\n        return tagResponse.response.mediaOfferSuggestionTag.id;\r\n    });\r\n\r\nconst getTagSuggestion = async (tagId) => {\r\n    const { data: suggestionResponse } = await got(`${apiBaseUrl}/api/v1/contentdiscovery/media/suggestionsnew`, {\r\n        searchParams: {\r\n            before: 0,\r\n            after: 0,\r\n            tagIds: tagId,\r\n            limit: 25,\r\n            offset: 0,\r\n            'ngsw-bypass': true,\r\n        },\r\n    });\r\n\r\n    return suggestionResponse.response;\r\n};\r\n\r\nconst parseDescription = (post, aggregationData) => post.content.replaceAll('\\n', '<br>') + '<br>' + parseAttachments(post.attachments, aggregationData);\r\n\r\nconst parseAttachments = (attachments, aggregationData) =>\r\n    attachments\r\n        .map((attachment) => {\r\n            switch (attachment.contentType) {\r\n                case 1:\r\n                    // single media\r\n                    return parseMedia(attachment.contentId, aggregationData.accountMedia);\r\n                case 2: {\r\n                    // media bundle\r\n                    let attachments = '';\r\n                    const bundle = aggregationData.accountMediaBundles.find((bundle) => bundle.id === attachment.contentId);\r\n                    for (const mediaId of bundle.accountMediaIds) {\r\n                        attachments += parseMedia(mediaId, aggregationData.accountMedia);\r\n                    }\r\n                    return attachments;\r\n                }\r\n                case 8: {\r\n                    // aggregated post (repost)\r\n                    let attachments = '<br><br>';\r\n                    const repost = aggregationData.aggregatedPosts.find((post) => post.id === attachment.contentId) || aggregationData.posts.find((post) => post.id === attachment.contentId);\r\n                    attachments += parseDescription(repost, aggregationData);\r\n\r\n                    return attachments;\r\n                }\r\n\r\n                case 7100:\r\n                    return renderTipGoal(attachment.contentId, aggregationData.tipGoals);\r\n                case 32001:\r\n                    // unknown\r\n                    return '';\r\n                case 42001:\r\n                    return renderPoll(attachment.contentId, aggregationData.polls);\r\n\r\n                default:\r\n                    throw new Error(`Unhandled attachment type: ${attachment.contentType} for post ${attachment.postId}`);\r\n            }\r\n        })\r\n        .join('');\r\n\r\nconst parseMedia = (contentId, accountMedia) => {\r\n    const media = accountMedia.find((media) => media.id === contentId);\r\n    if (!media) {\r\n        return '';\r\n    }\r\n    return renderMedia(media.preview ?? media.media);\r\n};\r\n\r\nconst renderMedia = (media) => {\r\n    switch (media.mimetype) {\r\n        case 'image/gif':\r\n        case 'image/jpeg':\r\n        case 'image/png':\r\n        case 'video/mp4':\r\n        case 'audio/mp4':\r\n            return art(path.join(__dirname, 'templates/media.art'), {\r\n                poster: media.mimetype === 'video/mp4' ? media.variants[0].locations[0] : null,\r\n                src: media.locations[0],\r\n            });\r\n        default:\r\n            throw new Error(`Unhandled media type: ${media.mimetype}`);\r\n    }\r\n};\r\n\r\nconst renderPoll = (pollId, polls) => {\r\n    const poll = polls.find((poll) => poll.id === pollId);\r\n    return art(path.join(__dirname, 'templates/poll.art'), {\r\n        title: poll.question,\r\n        options: poll.options,\r\n        version: poll.version,\r\n    });\r\n};\r\nconst renderTipGoal = (tipGoalId, tipGoals) => {\r\n    const goal = tipGoals.find((goal) => goal.id === tipGoalId);\r\n    return art(path.join(__dirname, 'templates/tip-goal.art'), {\r\n        label: goal.label,\r\n        description: goal.description,\r\n        currentAmount: goal.currentAmount,\r\n        goalAmount: goal.goalAmount,\r\n        currentPercentage: goal.currentPercentage,\r\n    });\r\n};\r\n\r\nexport { findAccountById, baseUrl, icon, getAccountByUsername, getTimelineByAccountId, getTagId, getTagSuggestion, parseAttachments, parseDescription, parseMedia, renderMedia, renderPoll, renderTipGoal };\r\n"],"mappings":"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"}