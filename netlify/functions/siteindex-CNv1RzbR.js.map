{"version":3,"file":"siteindex-CNv1RzbR.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/nature/siteindex.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { baseUrl, cookieJar } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/siteindex',\r\n    categories: ['journal'],\r\n    example: '/nature/siteindex',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Journal List',\r\n    maintainers: ['TonyRL', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const response = await got(`${baseUrl}/siteindex`, { cookieJar });\r\n    const $ = load(response.data);\r\n\r\n    let items = $('li[class^=\"grid mq640-grid-12\"]')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            return {\r\n                title: item.find('a').attr('href').replaceAll('/', ''),\r\n                name: item.find('a').text(),\r\n                link: baseUrl + item.find('a').attr('href'),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(`nature:siteindex:${item.title}`, async () => {\r\n                try {\r\n                    const response = await got(item.link, { cookieJar });\r\n                    const $ = load(response.data);\r\n\r\n                    const imgSrc = $('.app-latest-issue-row__image img').attr('src');\r\n                    if (imgSrc) {\r\n                        const match = imgSrc.match(/.*\\/journal\\/(\\d{5})/);\r\n                        if (match) {\r\n                            const id = match[1];\r\n                            return {\r\n                                title: item.title,\r\n                                name: item.name,\r\n                                id,\r\n                                description: id,\r\n                            };\r\n                        }\r\n                    }\r\n                    return {\r\n                        title: item.title,\r\n                        name: item.name,\r\n                    };\r\n                } catch {\r\n                    return {\r\n                        title: item.title,\r\n                        name: item.name,\r\n                    };\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    ctx.set('json', {\r\n        items,\r\n    });\r\n    return {\r\n        title: 'Nature siteindex',\r\n        link: response.url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"iZAMA,MAAaA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,WACb,QAAS,oBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,eACN,YAAa,CAAC,SAAU,YACxB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,MAAMC,EAAI,GAAG,EAAQ,YAAa,CAAE,cAC/C,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,mCACT,UACA,IAAK,IACF,EAAO,EAAE,GACF,CACH,MAAO,EAAK,KAAK,KAAK,KAAK,QAAQ,WAAW,IAAK,IACnD,KAAM,EAAK,KAAK,KAAK,OACrB,KAAM,EAAU,EAAK,KAAK,KAAK,KAAK,WAyChD,MArCA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,oBAAoB,EAAK,QAAS,SAAY,CACvD,GAAI,CACA,IAAMC,EAAW,MAAMF,EAAI,EAAK,KAAM,CAAE,cAClCG,EAAI,EAAKD,EAAS,MAElB,EAASC,EAAE,oCAAoC,KAAK,OAC1D,GAAI,EAAQ,CACR,IAAM,EAAQ,EAAO,MAAM,wBAC3B,GAAI,EAAO,CACP,IAAM,EAAK,EAAM,GACjB,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EAAK,KACX,KACA,YAAa,IAIzB,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EAAK,WAEX,CACJ,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EAAK,WAO/B,EAAI,IAAI,OAAQ,CACZ,UAEG,CACH,MAAO,mBACP,KAAM,EAAS,IACf,KAAM"}