{"version":3,"file":"comic-Dv3wWmvj.js","names":["result: DataItem[]","route: Route","got"],"sources":["../../lib/routes/manhuagui/comic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport LZString from 'lz-string';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nlet baseUrl = '';\r\n\r\nconst getChapters = ($) => {\r\n    let time_mark = 100;\r\n    // 用于一次更新多个新章节的排序\r\n    let new_time_mark = 0;\r\n    const result: DataItem[] = [];\r\n    $('h4').each((_, ele) => {\r\n        const categoryName = $(ele).text();\r\n        let nextEle = ele.next;\r\n        while (nextEle && !$(nextEle).hasClass('chapter-list')) {\r\n            nextEle = nextEle.next;\r\n        }\r\n        if (!nextEle) {\r\n            return;\r\n        }\r\n        for (const ul of $(nextEle).children('ul').toArray().toReversed()) {\r\n            for (const li of $(ul).children('li').toArray()) {\r\n                const a = $(li).children('a');\r\n                // 通过操作发布时间来对章节进行排序,如果是刚刚更新的单行本或者番外,保留最新更新时间\r\n                let pDate = new Date(new Date($.pubDate) - time_mark++ * 1000);\r\n                if (a.find('em').length > 0) {\r\n                    // 对更新的章节也进行排序\r\n                    pDate = new Date(new Date($.pubDate) - new_time_mark++ * 1000);\r\n                    $.newChapterCnt++;\r\n                }\r\n                result.push({\r\n                    link: new URL(a.attr('href'), baseUrl).href,\r\n                    title: a.attr('title'),\r\n                    pub_date: pDate,\r\n                    num: a.find('i').text(),\r\n                    category: categoryName,\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\nexport const route: Route = {\r\n    path: ['/comic/:id/:chapterCnt?', '/:domain?/comic/:id/:chapterCnt?'],\r\n    categories: ['anime'],\r\n    example: '/manhuagui/comic/22942/5',\r\n    parameters: { id: '漫画ID', chapterCnt: '返回章节的数量，默认为0，返回所有章节' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.mhgui.com/comic/:id/'],\r\n            target: '/comic/:id',\r\n        },\r\n    ],\r\n    name: '漫画更新',\r\n    maintainers: ['MegrezZhu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { id, domain } = ctx.req.param();\r\n    if (domain === 'mhgui') {\r\n        baseUrl = 'https://www.mhgui.com';\r\n    } else if (domain === 'twmanhuagui') {\r\n        baseUrl = 'https://tw.manhuagui.com';\r\n    } else {\r\n        baseUrl = 'https://www.manhuagui.com';\r\n    }\r\n\r\n    const chapterCnt = Number(ctx.req.param('chapterCnt') || 0);\r\n    const { data } = await got(`${baseUrl}/comic/${id}/`);\r\n    const $ = load(data);\r\n\r\n    if ($('#__VIEWSTATE').length > 0) {\r\n        const n = LZString.decompressFromBase64($('#__VIEWSTATE').val());\r\n        if (n) {\r\n            $('#erroraudit_show').replaceWith(n);\r\n            $('#__VIEWSTATE').remove();\r\n        }\r\n    }\r\n\r\n    const bookTitle = $('.book-title > h1').text();\r\n    const bookIntro = $('#intro-all').text();\r\n    const coverImgSrc = $('.book-cover img').attr('src');\r\n    // 对最新更新的章节增加了pubDate\r\n    const reg = /最近[于於].+更新至/;\r\n    // 处理已下架的漫画\r\n    if ($('.status > span').text().indexOf('已下架') > 0) {\r\n        return {\r\n            title: `看漫画 - ${bookTitle} 已下架`,\r\n            link: `${baseUrl}/comic/${id}/`,\r\n            description: bookIntro,\r\n            item: [{ link: `${baseUrl}/comic/${id}/`, title: bookTitle, description: '已下架' }],\r\n        };\r\n    } else {\r\n        const pub_date_str = $('.status > span')\r\n            .text()\r\n            .match(reg)[0]\r\n            .replace(/最近[于於] \\[/, '')\r\n            .replace('] 更新至', '');\r\n        // 为了能在闭包内访问到这个日期而不是每次需要处理这个最近更新日期\r\n        $.pubDate = parseDate(pub_date_str);\r\n        $.newChapterCnt = 0;\r\n        const chapters = getChapters($);\r\n        const genResult = (chapter) => ({\r\n            link: chapter.link,\r\n            title: chapter.title,\r\n            pubDate: chapter.pub_date,\r\n            category: chapter.category,\r\n            description: `\r\n            <h1>${chapter.num}</h1>\r\n            <img src='${coverImgSrc}' />\r\n        `.trim(),\r\n        });\r\n        const items = chapters.map((element) => genResult(element));\r\n        let itemsLen = items.length;\r\n        if (chapterCnt > 0) {\r\n            itemsLen = Math.max(chapterCnt, $.newChapterCnt);\r\n        }\r\n\r\n        return {\r\n            title: `看漫画 - ${bookTitle}`,\r\n            link: `${baseUrl}/comic/${id}/`,\r\n            description: bookIntro,\r\n            item: items.slice(0, itemsLen),\r\n        };\r\n    }\r\n}\r\n"],"mappings":"6UAMA,IAAI,EAAU,GAEd,MAAM,EAAe,GAAM,CACvB,IAAI,EAAY,IAEZ,EAAgB,EACdA,EAAqB,GA8B3B,OA7BA,EAAE,MAAM,MAAM,EAAG,IAAQ,CACrB,IAAM,EAAe,EAAE,GAAK,OACxB,EAAU,EAAI,KAClB,KAAO,GAAW,CAAC,EAAE,GAAS,SAAS,iBACnC,EAAU,EAAQ,KAEjB,KAGL,IAAK,IAAM,KAAM,EAAE,GAAS,SAAS,MAAM,UAAU,aACjD,IAAK,IAAM,KAAM,EAAE,GAAI,SAAS,MAAM,UAAW,CAC7C,IAAM,EAAI,EAAE,GAAI,SAAS,KAErB,EAAQ,IAAI,KAAK,IAAI,KAAK,EAAE,SAAW,IAAc,KACrD,EAAE,KAAK,MAAM,OAAS,IAEtB,EAAQ,IAAI,KAAK,IAAI,KAAK,EAAE,SAAW,IAAkB,KACzD,EAAE,iBAEN,EAAO,KAAK,CACR,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAS,KACvC,MAAO,EAAE,KAAK,SACd,SAAU,EACV,IAAK,EAAE,KAAK,KAAK,OACjB,SAAU,OAKnB,GAGEC,EAAe,CACxB,KAAM,CAAC,0BAA2B,oCAClC,WAAY,CAAC,SACb,QAAS,2BACT,WAAY,CAAE,GAAI,OAAQ,WAAY,uBACtC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,4BACT,OAAQ,eAGhB,KAAM,OACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,KAAI,UAAW,EAAI,IAAI,QAC/B,AAKI,EALA,IAAW,QACD,wBACH,IAAW,cACR,2BAEA,4BAGd,IAAM,EAAa,OAAO,EAAI,IAAI,MAAM,eAAiB,GACnD,CAAE,QAAS,MAAMC,EAAI,GAAG,EAAQ,SAAS,EAAG,IAC5C,EAAI,EAAK,GAEf,GAAI,EAAE,gBAAgB,OAAS,EAAG,CAC9B,IAAM,EAAI,EAAS,qBAAqB,EAAE,gBAAgB,OACtD,IACA,EAAE,oBAAoB,YAAY,GAClC,EAAE,gBAAgB,UAI1B,IAAM,EAAY,EAAE,oBAAoB,OAClC,EAAY,EAAE,cAAc,OAC5B,EAAc,EAAE,mBAAmB,KAAK,OAExC,EAAM,cAEZ,GAAI,EAAE,kBAAkB,OAAO,QAAQ,OAAS,EAC5C,MAAO,CACH,MAAO,SAAS,EAAU,MAC1B,KAAM,GAAG,EAAQ,SAAS,EAAG,GAC7B,YAAa,EACb,KAAM,CAAC,CAAE,KAAM,GAAG,EAAQ,SAAS,EAAG,GAAI,MAAO,EAAW,YAAa,SAE1E,CACH,IAAM,EAAe,EAAE,kBAClB,OACA,MAAM,GAAK,GACX,QAAQ,YAAa,IACrB,QAAQ,QAAS,IAEtB,EAAE,QAAU,EAAU,GACtB,EAAE,cAAgB,EAClB,IAAM,EAAW,EAAY,GACvB,EAAa,IAAa,CAC5B,KAAM,EAAQ,KACd,MAAO,EAAQ,MACf,QAAS,EAAQ,SACjB,SAAU,EAAQ,SAClB,YAAa;kBACP,EAAQ,IAAI;wBACN,EAAY;UAC1B,SAEI,EAAQ,EAAS,IAAK,GAAY,EAAU,IAC9C,EAAW,EAAM,OAKrB,OAJI,EAAa,IACb,EAAW,KAAK,IAAI,EAAY,EAAE,gBAG/B,CACH,MAAO,SAAS,IAChB,KAAM,GAAG,EAAQ,SAAS,EAAG,GAC7B,YAAa,EACb,KAAM,EAAM,MAAM,EAAG"}