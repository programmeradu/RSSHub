{"version":3,"file":"util-ClalSR2I.js","names":[],"sources":["../../lib/routes/huxiu/util.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst domain = 'huxiu.com';\r\nconst rootUrl = `https://www.${domain}`;\r\n\r\nconst apiArticleRootUrl = `https://api-article.${domain}`;\r\nconst apiBriefRootUrl = `https://api-brief.${domain}`;\r\nconst apiMemberRootUrl = `https://api-account.${domain}`;\r\nconst apiMomentRootUrl = `https://moment-api.${domain}`;\r\nconst apiSearchRootUrl = `https://search-api.${domain}`;\r\n\r\n/**\r\n * Cleans up HTML data by removing specific elements and attributes.\r\n *\r\n * @param {string} data - The HTML data to clean up.\r\n * @returns {string} - The cleaned up HTML data.\r\n */\r\nconst cleanUpHTML = (data) => {\r\n    const $ = load(data);\r\n\r\n    $('div.neirong-shouquan').remove();\r\n    $('em.vote__bar, div.vote__btn, div.vote__time').remove();\r\n    $('p img').each((_, e) => {\r\n        e = $(e);\r\n        if ((e.prop('src') ?? e.prop('_src')) !== undefined) {\r\n            e.parent().replaceWith(\r\n                art(path.join(__dirname, 'templates/description.art'), {\r\n                    image: {\r\n                        src: (e.prop('src') ?? e.prop('_src')).split(/\\?/)[0],\r\n                        width: e.prop('data-w'),\r\n                        height: e.prop('data-h'),\r\n                    },\r\n                })\r\n            );\r\n        }\r\n    });\r\n    $('p, span').each((_, e) => {\r\n        e = $(e);\r\n        if (e.contents().length === 1 && /^\\s*$/.test(e.text())) {\r\n            e.remove();\r\n        } else {\r\n            e.removeClass();\r\n            e.removeAttr('data-check-id label class');\r\n        }\r\n    });\r\n    $('.text-big-title').each((_, e) => {\r\n        e.tagName = 'h3';\r\n        e = $(e);\r\n        e.removeClass();\r\n        e.removeAttr('class');\r\n    });\r\n    $('.text-sm-title').each((_, e) => {\r\n        e.tagName = 'h4';\r\n        e = $(e);\r\n        e.removeClass();\r\n        e.removeAttr('class');\r\n    });\r\n\r\n    return $.html();\r\n};\r\n\r\n/**\r\n * Fetch brief column data for the specified ID.\r\n *\r\n * @param {string} url - The ID of the brief column to fetch data from.\r\n * @returns {Promise<Object>} A promise that resolves to an object containing the fetched data\r\n *                            to be added into `ctx.state.data`.\r\n */\r\nconst fetchBriefColumnData = async (id) => {\r\n    const apiBriefColumnUrl = new URL('briefColumn/detail', apiBriefRootUrl).href;\r\n\r\n    const {\r\n        data: { data },\r\n    } = await got.post(apiBriefColumnUrl, {\r\n        form: {\r\n            platform: 'www',\r\n            brief_column_id: id,\r\n        },\r\n    });\r\n\r\n    const currentUrl = new URL(`club/${data.club_id}.html`, rootUrl).href;\r\n\r\n    const { data: currentResponse } = await got(currentUrl);\r\n\r\n    const $ = load(currentResponse);\r\n\r\n    const subtitle = `${data.name}-${data.sub_name}`;\r\n    const icon = new URL($('link[rel=\"apple-touch-icon\"]').prop('href'), rootUrl).href;\r\n    const author = $('meta[name=\"author\"]').prop('content');\r\n\r\n    return {\r\n        title: `${subtitle}-${author}`,\r\n        link: currentUrl,\r\n        description: data.summary,\r\n        language: $('html').prop('lang'),\r\n        image: data.head_img,\r\n        icon,\r\n        logo: icon,\r\n        subtitle,\r\n        author,\r\n        itunes_author: author,\r\n        itunes_category: 'News',\r\n        allowEmpty: true,\r\n    };\r\n};\r\n\r\n/**\r\n * Fetches club data for the specified ID and the ID of the default brief column.\r\n *\r\n * @param {string} id - The ID of the club to fetch data from.\r\n * @returns {Promise<Object>} data - A promise that resolves to an object containing the fetched data\r\n *                            to be added into `ctx.state.data`.\r\n * @returns {string} id - the ID of the default brief column.\r\n */\r\nconst fetchClubData = async (id) => {\r\n    const currentUrl = new URL(`club/${id}.html`, rootUrl).href;\r\n\r\n    const { data: currentResponse } = await got(currentUrl);\r\n\r\n    const $ = load(currentResponse);\r\n\r\n    const title = $('title').text();\r\n    const icon = new URL($('link[rel=\"apple-touch-icon\"]').prop('href'), rootUrl).href;\r\n    const author = $('meta[name=\"author\"]').prop('content');\r\n\r\n    return {\r\n        data: {\r\n            title,\r\n            link: currentUrl,\r\n            description: $('ul.content-item li.content').text().trim(),\r\n            language: $('html').prop('lang'),\r\n            image: $('div.header img.img').prop('data-src')?.split(/\\?/)[0] ?? undefined,\r\n            icon,\r\n            logo: icon,\r\n            subtitle: title.split(/-/)[0],\r\n            author,\r\n            itunes_author: author,\r\n            itunes_category: 'News',\r\n            allowEmpty: true,\r\n        },\r\n        briefColumnId: currentResponse.match(/\"brief_column_id\":\"(\\d+)\",/)[1],\r\n    };\r\n};\r\n\r\n/**\r\n * Fetch data from the specified URL.\r\n *\r\n * @param {string} url - The URL to fetch data from.\r\n * @returns {Promise<Object>} A promise that resolves to an object containing the fetched data\r\n *                            to be added into `ctx.state.data`.\r\n */\r\nconst fetchData = async (url) => {\r\n    const { data: response } = await got(url);\r\n\r\n    const $ = load(response);\r\n\r\n    const icon = new URL($('link[rel=\"apple-touch-icon\"]').prop('href'), rootUrl).href;\r\n    const author = $('meta[name=\"author\"]').prop('content');\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        link: url,\r\n        description: $('div.tag-content').text() || $('span.author-intro').text() || $('p.collection__intro').text() || $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('title').text().split(/-/)[0],\r\n        author,\r\n        itunes_author: author,\r\n        itunes_category: 'News',\r\n        allowEmpty: true,\r\n    };\r\n};\r\n\r\n/**\r\n * Fetches item data.\r\n *\r\n * @param {Object} item - The item to fetch data for.\r\n * @returns {Promise<Object>} The fetched item data object.\r\n */\r\nconst fetchItem = async (item) => {\r\n    const { data: detailResponse } = await got(item.link);\r\n\r\n    const state = parseInitialState(detailResponse);\r\n    const data = state?.briefStoreModule?.brief_detail.brief ?? state?.articleDetail?.articleDetail ?? undefined;\r\n\r\n    if (!data) {\r\n        return item;\r\n    }\r\n\r\n    const { processed: audio, processedItem: audioItem = {} } = processAudioInfo(data.audio_info);\r\n\r\n    if (Object.keys(audioItem).length !== 0) {\r\n        audioItem.itunes_item_image = data.pic_path ?? data.share_info?.share_img ?? undefined;\r\n    }\r\n\r\n    const { processed: video, processedItem: videoItem = {} } = processVideoInfo(data.video_info);\r\n\r\n    item.title = data.title ?? item.title;\r\n    item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n        image: {\r\n            src: data.pic_path,\r\n        },\r\n        video,\r\n        audio,\r\n        preface: cleanUpHTML(data.content_preface ?? data.preface),\r\n        summary: data.ai_summary,\r\n        description: cleanUpHTML(data.content),\r\n    });\r\n    item.author = data.user_info?.username ?? item.author;\r\n    item.category = [data.video_article_tag, data.brief_column?.name ?? undefined, data.club_info?.name ?? undefined, ...(data.tags_info?.map((c) => c.name) ?? []), ...(data.relation_info?.channel?.map((c) => c.name) ?? [])].filter(\r\n        Boolean\r\n    );\r\n    item.pubDate = parseDate(data.dateline ?? data.publish_time, 'X');\r\n    item.upvote = data.agreenum ?? item.upvote;\r\n    item.comments = data.commentnum ?? data.total_comment_num ?? item.comments;\r\n\r\n    item.upvote = Number.parseInt(item.upvote, 10);\r\n    item.comments = Number.parseInt(item.comments, 10);\r\n\r\n    return {\r\n        ...audioItem,\r\n        ...videoItem,\r\n        ...item,\r\n    };\r\n};\r\n\r\n/**\r\n * Generates a random nonce string.\r\n *\r\n * @returns {string} The generated nonce string.\r\n */\r\nconst generateNonce = () => {\r\n    let nonce = '';\r\n    const e = 'abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const t = 16;\r\n    for (let i = 0; i < t; i++) {\r\n        nonce += e.charAt(Math.floor(Math.random() * e.length));\r\n    }\r\n    return nonce;\r\n};\r\n\r\n/**\r\n * Generates a signature object containing a nonce, timestamp, and signature value.\r\n *\r\n * @returns {string} nonce - The generated nonce.\r\n * @returns {string} timestamp - The timestamp.\r\n * @returns {string} signature - The calculated signature value.\r\n */\r\nconst generateSignature = () => {\r\n    const timestamp = Math.round(Date.now() / 1000).toString();\r\n\r\n    const appSecret = 'hUzaABtNfDE-6UiyaYhfsmjW-8dnoyVc';\r\n    const nonce = generateNonce();\r\n    const r = [appSecret, timestamp, nonce].sort();\r\n    return {\r\n        nonce,\r\n        timestamp,\r\n        signature: CryptoJS.SHA1(r[0] + r[1] + r[2]).toString(),\r\n    };\r\n};\r\n\r\n/**\r\n * Parses the initial state from the provided data.\r\n *\r\n * @param {string} data - The data to parse the initial state from.\r\n * @returns {Object|undefined} - The parsed initial state object, or undefined if not found.\r\n */\r\nconst parseInitialState = (data) => {\r\n    const matches = data.match(/window\\.__INITIAL_STATE__=({.*?});\\(function\\(\\)/);\r\n    if (matches) {\r\n        return JSON.parse(matches[1]);\r\n    }\r\n    return;\r\n};\r\n\r\nconst audioQualities = ['', 'low'];\r\n\r\n/**\r\n * Processes the audio information and returns the processed data.\r\n *\r\n * @param {Object} info - The audio information to process.\r\n * @returns {Object} - An object containing the processed audio data.\r\n */\r\nconst processAudioInfo = (info) => {\r\n    const quality = info ? audioQualities.find((quality) => Object.hasOwn(info, `audio_${quality === '' ? '' : `${quality}_`}path`)) : undefined;\r\n\r\n    if (quality === undefined) {\r\n        return {\r\n            processed: undefined,\r\n            processedItem: {},\r\n        };\r\n    }\r\n\r\n    const linkKey = `audio_${quality}path`;\r\n    const sizeKey = `audio_${quality}size`;\r\n\r\n    const processed = {\r\n        duration: info.format_length_new ?? info.format_length,\r\n        size: Object.hasOwn(info, sizeKey) ? info[sizeKey] : undefined,\r\n        src: info[linkKey],\r\n        type: `audio/${info[linkKey].split(/\\./).pop()}`,\r\n    };\r\n\r\n    const processedItem = {\r\n        itunes_duration: processed.duration,\r\n        enclosure_url: processed.src,\r\n        enclosure_length: processed.size,\r\n        enclosure_type: processed.type,\r\n    };\r\n\r\n    return {\r\n        processed,\r\n        processedItem,\r\n    };\r\n};\r\n\r\n/**\r\n * Process the item list and return the resulting array.\r\n *\r\n * @param {Object[]} items - The items to process.\r\n * @param {number} limit - The maximum number of items to process.\r\n * @param {Function} tryGet   - The tryGet function that handles the retrieval process.\r\n * @returns {Promise<Object[]>} - A promise that resolves to an array of processed items.\r\n */\r\nconst processItems = async (items, limit, tryGet) => {\r\n    items = items\r\n        .map((item) => {\r\n            let guid = '';\r\n            let link = '';\r\n\r\n            if (item.moment_id) {\r\n                guid = `huxiu-moment-${item.moment_id}`;\r\n                link = item.url || new URL(`moment/${item.moment_id}.html`, rootUrl).href;\r\n            } else if (item.brief_id || /huxiu\\.com\\/brief\\//.test(item.url)) {\r\n                item.brief_id = item.brief_id ?? item.aid;\r\n                guid = `huxiu-brief-${item.brief_id}`;\r\n                link = new URL(`brief/${item.brief_id}.html`, rootUrl).href;\r\n            } else if (item.aid) {\r\n                guid = `huxiu-article-${item.aid}`;\r\n                link = new URL(`article/${item.aid}.html`, rootUrl).href;\r\n            } else {\r\n                return '';\r\n            }\r\n\r\n            const { processed: audio, processedItem: audioItem = {} } = processAudioInfo(item.audio_info);\r\n\r\n            if (Object.keys(audioItem).length !== 0) {\r\n                audioItem.itunes_item_image = item.pic_path ?? item.share_info?.share_img ?? undefined;\r\n            }\r\n\r\n            const { processed: video, processedItem: videoItem = {} } = processVideoInfo(item.video_info);\r\n\r\n            const upvotes = item.count_info?.agree ?? item.count_info?.favtimes ?? item.agree_num ?? 0;\r\n            const downvotes = item.count_info?.disagree ?? 0;\r\n            const comments = item.count_info?.total_comment_num ?? item.count_info?.commentnum ?? item.total_comment_num ?? item.commentnum ?? 0;\r\n\r\n            return {\r\n                ...audioItem,\r\n                ...videoItem,\r\n                title: (item.title ?? item.summary ?? item.content)?.replace(/<\\/?(?:em|br)?>/g, ''),\r\n                link,\r\n                description: art(path.join(__dirname, 'templates/description.art'), {\r\n                    image: {\r\n                        src: item.origin_pic_path ?? item.pic_path ?? item.big_pic_path?.split(/\\?/)[0] ?? undefined,\r\n                    },\r\n                    audio,\r\n                    video,\r\n                    summary: item.summary ?? item.content ?? item.preface,\r\n                }),\r\n                author: item.user_info?.username ?? item.brief_column?.name ?? item.author_info?.username ?? item.author,\r\n                guid,\r\n                pubDate: (item.publish_time ?? item.dateline) ? parseDate(item.publish_time ?? item.dateline, 'X') : undefined,\r\n                upvotes: Number.parseInt(upvotes, 10),\r\n                downvotes: Number.parseInt(downvotes, 10),\r\n                comments: Number.parseInt(comments, 10),\r\n            };\r\n        })\r\n        .filter(Boolean)\r\n        .slice(0, limit);\r\n\r\n    return await Promise.all(\r\n        items.map((item) =>\r\n            tryGet(item.guid, async () => {\r\n                if (!new RegExp(domain, 'i').test(new URL(item.link).hostname)) {\r\n                    return item;\r\n                } else if (!item.guid.startsWith('huxiu-moment')) {\r\n                    return await fetchItem(item);\r\n                }\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n};\r\n\r\nconst videoQualities = ['fhd', 'fhd_medium', 'wifi', 'fhd_low', 'flow', 'hd', 'sd'];\r\n\r\n/**\r\n * Processes the video information and returns the processed data.\r\n *\r\n * @param {Object} info - The video information to process.\r\n * @returns {Object} - An object containing the processed video data.\r\n */\r\nconst processVideoInfo = (info) => {\r\n    const quality = info ? videoQualities.find((quality) => Object.hasOwn(info, `${quality}_link`)) : undefined;\r\n\r\n    if (quality === undefined) {\r\n        return {\r\n            processed: undefined,\r\n            processedItem: {},\r\n        };\r\n    }\r\n\r\n    const linkKey = `${quality}_link`;\r\n    const sizeKey = `origin_${quality}_size`;\r\n\r\n    const processed = {\r\n        duration: info.duration ?? info.origin_duration,\r\n        poster: info.cover ?? info.custom_cover_path ?? info.gif_path,\r\n        size: Object.hasOwn(info, sizeKey) ? info[sizeKey] : undefined,\r\n        src: info[linkKey],\r\n        type: `video/${info[linkKey].split(/\\./).pop()}`,\r\n    };\r\n\r\n    const processedItem = {\r\n        itunes_item_image: processed.poster,\r\n        itunes_duration: processed.duration,\r\n        enclosure_url: processed.src,\r\n        enclosure_length: processed.size,\r\n        enclosure_type: processed.type,\r\n    };\r\n\r\n    return {\r\n        processed,\r\n        processedItem,\r\n    };\r\n};\r\n\r\nexport { rootUrl, apiArticleRootUrl, apiBriefRootUrl, apiMemberRootUrl, apiMomentRootUrl, apiSearchRootUrl, fetchBriefColumnData, fetchClubData, fetchData, generateSignature, processItems };\r\n"],"mappings":"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"}