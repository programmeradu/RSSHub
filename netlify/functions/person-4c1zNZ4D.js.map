{"version":3,"file":"person-4c1zNZ4D.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/bangumi.tv/person/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/person/:id',\r\n    categories: ['anime'],\r\n    example: '/bangumi.tv/person/32943',\r\n    parameters: { id: '人物 id, 在人物页面的地址栏查看' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['bgm.tv/person/:id'],\r\n        },\r\n    ],\r\n    name: '现实人物的新作品',\r\n    maintainers: ['ylc395'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    // bangumi.tv未提供获取“人物信息”的API，因此仍需要通过抓取网页来获取\r\n    const personID = ctx.req.param('id');\r\n    const link = `https://bgm.tv/person/${personID}/works?sort=date`;\r\n    const html = await ofetch(link);\r\n    const $ = load(html);\r\n    const personName = $('.nameSingle a').text();\r\n    const works = $('.item')\r\n        .toArray()\r\n        .map((el) => {\r\n            const $el = $(el);\r\n            const $workEl = $el.find('.l');\r\n            return {\r\n                work: $workEl.text(),\r\n                workURL: `https://bgm.tv${$workEl.attr('href')}`,\r\n                workInfo: $el.find('p.info').text(),\r\n                job: $el.find('.badge_job').text(),\r\n            };\r\n        });\r\n\r\n    return {\r\n        title: `${personName}参与的作品`,\r\n        link,\r\n        item: works.map((c) => {\r\n            const match = c.workInfo.match(/(\\d{4}[年-]\\d{1,2}[月-]\\d{1,2})/);\r\n            return {\r\n                title: `${personName}以${c.job}的身份参与了作品《${c.work}》`,\r\n                description: c.workInfo,\r\n                link: c.workURL,\r\n                pubDate: match ? parseDate(match[1], ['YYYY-MM-DD', 'YYYY-M-D']) : null,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"+PAKA,MAAaA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,SACb,QAAS,2BACT,WAAY,CAAE,GAAI,sBAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAGjB,KAAM,WACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CAExB,IAAM,EAAW,EAAI,IAAI,MAAM,MACzB,EAAO,yBAAyB,EAAS,kBACzC,EAAO,MAAMC,EAAO,GACpB,EAAI,EAAK,GACT,EAAa,EAAE,iBAAiB,OAChC,EAAQ,EAAE,SACX,UACA,IAAK,GAAO,CACT,IAAM,EAAM,EAAE,GACR,EAAU,EAAI,KAAK,MACzB,MAAO,CACH,KAAM,EAAQ,OACd,QAAS,iBAAiB,EAAQ,KAAK,UACvC,SAAU,EAAI,KAAK,UAAU,OAC7B,IAAK,EAAI,KAAK,cAAc,UAIxC,MAAO,CACH,MAAO,GAAG,EAAW,OACrB,OACA,KAAM,EAAM,IAAK,GAAM,CACnB,IAAM,EAAQ,EAAE,SAAS,MAAM,iCAC/B,MAAO,CACH,MAAO,GAAG,EAAW,GAAG,EAAE,IAAI,WAAW,EAAE,KAAK,GAChD,YAAa,EAAE,SACf,KAAM,EAAE,QACR,QAAS,EAAQ,EAAU,EAAM,GAAI,CAAC,aAAc,aAAe"}