{"version":3,"file":"utils-CBZRM1PW.js","names":["ofetch"],"sources":["../../lib/routes/afr/query.ts","../../lib/routes/afr/utils.ts"],"sourcesContent":["export const pageByNavigationPathQuery = `query pageByNavigationPath(\r\n    $input: PageByNavigationPathInput!\r\n    $firstStories: Int\r\n    $afterStories: Cursor\r\n  ) {\r\n    pageByNavigationPath(input: $input) {\r\n      error {\r\n        message\r\n        type {\r\n          class\r\n          ... on ErrorTypeInvalidRequest {\r\n            fields {\r\n              field\r\n              message\r\n            }\r\n          }\r\n        }\r\n      }\r\n      page {\r\n        ads {\r\n          suppress\r\n        }\r\n        description\r\n        id\r\n        latestStoriesConnection(first: $firstStories, after: $afterStories) {\r\n          edges {\r\n            node {\r\n              byline {\r\n                ...AssetBylineFragment\r\n              }\r\n              headlines {\r\n                headline\r\n              }\r\n              ads {\r\n                sponsor {\r\n                  name\r\n                }\r\n              }\r\n              overview {\r\n                about\r\n                label\r\n              }\r\n              type\r\n              dates {\r\n                firstPublished\r\n                published\r\n              }\r\n              id\r\n              publicId\r\n              images {\r\n                ...AssetImagesFragmentAudience\r\n              }\r\n              tags {\r\n                primary {\r\n                  ...TagFragmentAudience\r\n                }\r\n                secondary {\r\n                  ...TagFragmentAudience\r\n                }\r\n              }\r\n              urls {\r\n                ...AssetUrlsAudienceFragment\r\n              }\r\n            }\r\n          }\r\n          pageInfo {\r\n            endCursor\r\n            hasNextPage\r\n          }\r\n        }\r\n        name\r\n        seo {\r\n          canonical {\r\n            brand {\r\n              key\r\n            }\r\n          }\r\n          description\r\n          title\r\n        }\r\n        social {\r\n          image {\r\n            height\r\n            url\r\n            width\r\n          }\r\n        }\r\n      }\r\n      redirect\r\n    }\r\n  }\r\n  fragment AssetBylineFragment on AssetByline {\r\n    type\r\n    ... on AssetBylineAuthor {\r\n      author {\r\n        name\r\n        publicId\r\n        profile {\r\n          avatar\r\n          bio\r\n          body\r\n          canonical {\r\n            brand {\r\n              key\r\n            }\r\n          }\r\n          email\r\n          socials {\r\n            facebook {\r\n              publicId\r\n            }\r\n            twitter {\r\n              publicId\r\n            }\r\n          }\r\n          title\r\n        }\r\n      }\r\n    }\r\n    ... on AssetBylineName {\r\n      name\r\n    }\r\n  }\r\n  fragment AssetImagesFragmentAudience on ImageRenditions {\r\n    landscape16x9 {\r\n      ...ImageFragmentAudience\r\n    }\r\n    landscape3x2 {\r\n      ...ImageFragmentAudience\r\n    }\r\n    portrait2x3 {\r\n      ...ImageFragmentAudience\r\n    }\r\n    square1x1 {\r\n      ...ImageFragmentAudience\r\n    }\r\n  }\r\n  fragment ImageFragmentAudience on ImageRendition {\r\n    altText\r\n    animated\r\n    caption\r\n    credit\r\n    crop {\r\n      offsetX\r\n      offsetY\r\n      width\r\n      zoom\r\n    }\r\n    mediaId\r\n    mimeType\r\n    source\r\n    type\r\n  }\r\n  fragment AssetUrlsAudienceFragment on AssetURLs {\r\n    canonical {\r\n      brand {\r\n        key\r\n      }\r\n      path\r\n    }\r\n    external {\r\n      url\r\n    }\r\n    published {\r\n      brand {\r\n        key\r\n      }\r\n      path\r\n    }\r\n  }\r\n  fragment TagFragmentAudience on Tag {\r\n    company {\r\n      exchangeCode\r\n      stockCode\r\n    }\r\n    context {\r\n      name\r\n    }\r\n    description\r\n    displayName\r\n    externalEntities {\r\n      google {\r\n        placeId\r\n      }\r\n      wikipedia {\r\n        publicId\r\n        url\r\n      }\r\n    }\r\n    id\r\n    location {\r\n      latitude\r\n      longitude\r\n      postalCode\r\n      state\r\n    }\r\n    name\r\n    publicId\r\n    seo {\r\n      description\r\n      title\r\n    }\r\n    urls {\r\n      canonical {\r\n        brand {\r\n          key\r\n        }\r\n        path\r\n      }\r\n      published {\r\n        brand {\r\n          key\r\n        }\r\n        path\r\n      }\r\n    }\r\n  }`;\r\n\r\nexport const assetsConnectionByCriteriaQuery = `query assetsConnectionByCriteria(\r\n    $after: ID\r\n    $brand: Brand!\r\n    $categories: [Int!]\r\n    $first: Int!\r\n    $render: Render!\r\n    $types: [AssetType!]!\r\n  ) {\r\n    assetsConnectionByCriteria(\r\n      after: $after\r\n      brand: $brand\r\n      categories: $categories\r\n      first: $first\r\n      render: $render\r\n      types: $types\r\n    ) {\r\n      edges {\r\n        cursor\r\n        node {\r\n          ...AssetFragment\r\n          sponsor {\r\n            name\r\n          }\r\n        }\r\n      }\r\n      error {\r\n        message\r\n        type {\r\n          class\r\n        }\r\n      }\r\n      pageInfo {\r\n        endCursor\r\n        hasNextPage\r\n      }\r\n    }\r\n  }\r\n  fragment AssetFragment on Asset {\r\n    asset {\r\n      about\r\n      byline\r\n      duration\r\n      headlines {\r\n        headline\r\n      }\r\n      live\r\n    }\r\n    assetType\r\n    dates {\r\n      firstPublished\r\n      modified\r\n      published\r\n    }\r\n    id\r\n    featuredImages {\r\n      landscape16x9 {\r\n        ...ImageFragment\r\n      }\r\n      landscape3x2 {\r\n        ...ImageFragment\r\n      }\r\n      portrait2x3 {\r\n        ...ImageFragment\r\n      }\r\n      square1x1 {\r\n        ...ImageFragment\r\n      }\r\n    }\r\n    label\r\n    tags {\r\n      primary: primaryTag {\r\n        ...AssetTag\r\n      }\r\n      secondary {\r\n        ...AssetTag\r\n      }\r\n    }\r\n    urls {\r\n      ...AssetURLs\r\n    }\r\n  }\r\n  fragment AssetTag on AssetTagDetails {\r\n    ...AssetTagAudience\r\n    shortID\r\n    slug\r\n  }\r\n  fragment AssetTagAudience on AssetTagDetails {\r\n    company {\r\n      exchangeCode\r\n      stockCode\r\n    }\r\n    context\r\n    displayName\r\n    id\r\n    name\r\n    urls {\r\n      canonical {\r\n        brand\r\n        path\r\n      }\r\n      published {\r\n        afr {\r\n          path\r\n        }\r\n      }\r\n    }\r\n  }\r\n  fragment AssetURLs on AssetURLs {\r\n    canonical {\r\n      brand\r\n      path\r\n    }\r\n    published {\r\n      afr {\r\n        path\r\n      }\r\n    }\r\n  }\r\n  fragment ImageFragment on Image {\r\n    data {\r\n      altText\r\n      aspect\r\n      autocrop\r\n      caption\r\n      cropWidth\r\n      id\r\n      offsetX\r\n      offsetY\r\n      zoom\r\n    }\r\n  }`;\r\n","import * as cheerio from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const getItem = async (item) => {\r\n    const response = await ofetch(item.link);\r\n    const $ = cheerio.load(response);\r\n\r\n    const reduxState = JSON.parse($('script#__REDUX_STATE__').text().replaceAll(':undefined', ':null').match('__REDUX_STATE__=(.*);')?.[1] || '{}');\r\n\r\n    const content = reduxState.page.content;\r\n    const asset = content.asset;\r\n\r\n    switch (content.assetType) {\r\n        case 'liveArticle':\r\n            item.description = asset.posts.map((post) => `<h2>${post.asset.headlines.headline}</h2>${post.asset.body}`).join('');\r\n            break;\r\n\r\n        case 'article':\r\n        case 'featureArticle':\r\n            item.description = renderArticle(asset, item.link);\r\n            break;\r\n\r\n        default:\r\n            throw new Error(`Unknown asset type: ${content.assetType} in ${item.link}`);\r\n    }\r\n\r\n    return item;\r\n};\r\n\r\nconst renderArticle = (asset, link: string) => {\r\n    const $ = cheerio.load(asset.body, null, false);\r\n    $('x-placeholder').each((_, el) => {\r\n        const $el = $(el);\r\n        const id = $el.attr('id');\r\n        if (!id) {\r\n            $el.replaceWith('');\r\n        }\r\n\r\n        const placeholder = asset.bodyPlaceholders[id!];\r\n        switch (placeholder?.type) {\r\n            case 'callout':\r\n            case 'relatedStory':\r\n                $el.replaceWith('');\r\n                break;\r\n\r\n            case 'iframe':\r\n                $el.replaceWith(`<iframe src=\"${placeholder.data.url}\" frameborder=\"0\" allowfullscreen></iframe>`);\r\n                break;\r\n\r\n            case 'image':\r\n                $el.replaceWith(`<img src=\"https://static.ffx.io/images/${placeholder.data.fileName}\" alt=\"${placeholder.data.altText}\" />`);\r\n                break;\r\n\r\n            case 'linkArticle':\r\n                $el.replaceWith(placeholder.data.text);\r\n                break;\r\n\r\n            case 'linkExternal':\r\n                $el.replaceWith(`<a href=\"${placeholder.data.url}\" target=\"_blank\" rel=\"noopener\">${placeholder.data.text}</a>`);\r\n                break;\r\n\r\n            case 'quote':\r\n                $el.replaceWith(placeholder.data.markup);\r\n                break;\r\n\r\n            case 'scribd':\r\n                $el.replaceWith(`<a href=\"${placeholder.data.url}\" target=\"_blank\" rel=\"noopener\">View on Scribd</a>`);\r\n                break;\r\n\r\n            case 'twitter':\r\n                $el.replaceWith(`<a href=\"${placeholder.data.url}\">${placeholder.data.url}</a>`);\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unknown placeholder type: ${placeholder?.type} in ${link}`);\r\n        }\r\n    });\r\n\r\n    return $.html();\r\n};\r\n"],"mappings":"gFAAA,MAAa,EAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA0N5B,EAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCvNlC,EAAU,KAAO,IAAS,CACnC,IAAM,EAAW,MAAMA,EAAO,EAAK,MAC7B,EAAI,EAAQ,KAAK,GAEjB,EAAa,KAAK,MAAM,EAAE,0BAA0B,OAAO,WAAW,aAAc,SAAS,MAAM,2BAA2B,IAAM,MAEpI,EAAU,EAAW,KAAK,QAC1B,EAAQ,EAAQ,MAEtB,OAAQ,EAAQ,UAAhB,CACI,IAAK,cACD,EAAK,YAAc,EAAM,MAAM,IAAK,GAAS,OAAO,EAAK,MAAM,UAAU,SAAS,OAAO,EAAK,MAAM,QAAQ,KAAK,IACjH,MAEJ,IAAK,UACL,IAAK,iBACD,EAAK,YAAc,EAAc,EAAO,EAAK,MAC7C,MAEJ,QACI,MAAU,MAAM,uBAAuB,EAAQ,UAAU,MAAM,EAAK,QAG5E,OAAO,GAGL,GAAiB,EAAO,IAAiB,CAC3C,IAAM,EAAI,EAAQ,KAAK,EAAM,KAAM,KAAM,IAgDzC,OA/CA,EAAE,iBAAiB,MAAM,EAAG,IAAO,CAC/B,IAAM,EAAM,EAAE,GACR,EAAK,EAAI,KAAK,MACf,GACD,EAAI,YAAY,IAGpB,IAAM,EAAc,EAAM,iBAAiB,GAC3C,OAAQ,GAAa,KAArB,CACI,IAAK,UACL,IAAK,eACD,EAAI,YAAY,IAChB,MAEJ,IAAK,SACD,EAAI,YAAY,gBAAgB,EAAY,KAAK,IAAI,8CACrD,MAEJ,IAAK,QACD,EAAI,YAAY,0CAA0C,EAAY,KAAK,SAAS,SAAS,EAAY,KAAK,QAAQ,OACtH,MAEJ,IAAK,cACD,EAAI,YAAY,EAAY,KAAK,MACjC,MAEJ,IAAK,eACD,EAAI,YAAY,YAAY,EAAY,KAAK,IAAI,mCAAmC,EAAY,KAAK,KAAK,OAC1G,MAEJ,IAAK,QACD,EAAI,YAAY,EAAY,KAAK,QACjC,MAEJ,IAAK,SACD,EAAI,YAAY,YAAY,EAAY,KAAK,IAAI,sDACjD,MAEJ,IAAK,UACD,EAAI,YAAY,YAAY,EAAY,KAAK,IAAI,IAAI,EAAY,KAAK,IAAI,OAC1E,MAEJ,QACI,MAAU,MAAM,6BAA6B,GAAa,KAAK,MAAM,QAI1E,EAAE"}