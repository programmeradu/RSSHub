{"version":3,"file":"topic-C9YnngER.js","names":["got","route: Route","cache"],"sources":["../../lib/routes/oschina/topic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate, parseRelativeDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\nimport { load } from 'cheerio';\r\n\r\nasync function loadContent(link) {\r\n    const res = await got(link);\r\n    const content = load(res.data);\r\n    return content;\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/topic/:topic',\r\n    categories: ['programming'],\r\n    example: '/oschina/topic/weekly-news',\r\n    parameters: { topic: '主题名，可从 [全部主题](https://www.oschina.net/question/topics) 进入主题页，在 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['oschina.net/question/topic/:topic'],\r\n        },\r\n    ],\r\n    name: '问答主题',\r\n    maintainers: ['loveely7'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const topic = ctx.req.param('topic');\r\n    const topicUrl = `https://www.oschina.net/question/topic/${topic}?show=time`;\r\n\r\n    const $ = await loadContent(topicUrl);\r\n    const topicName = $('.topic-info > .topic-header > h3').text();\r\n    const list = $('#questionList .question-item')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const date = item.find('.extra > .list > .item:nth-of-type(2)').text();\r\n            return {\r\n                title: item.find('.header').text(),\r\n                description: item.find('.description').html(),\r\n                link: item.find('.header').attr('href'),\r\n                author: item.find('.extra > .list > .item:nth-of-type(1)').text(),\r\n                pubDate: timezone(/\\//.test(date) ? parseDate(date, ['YYYY/MM/DD HH:mm', 'MM/DD HH:mm']) : parseRelativeDate(date), +8),\r\n            };\r\n        });\r\n\r\n    const resultItem = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                try {\r\n                    const content = await loadContent(item.link);\r\n                    content('.ad-wrap').remove();\r\n                    item.description = content('#articleContent').html();\r\n                } catch {\r\n                    // 403\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `开源中国-${topicName}`,\r\n        description: $('.topic-introduction').text(),\r\n        link: topicUrl,\r\n        item: resultItem,\r\n    };\r\n}\r\n"],"mappings":"ibAOA,eAAe,EAAY,EAAM,CAC7B,IAAM,EAAM,MAAMA,EAAI,GAChB,EAAU,EAAK,EAAI,MACzB,OAAO,EAGX,MAAaC,EAAe,CACxB,KAAM,gBACN,WAAY,CAAC,eACb,QAAS,6BACT,WAAY,CAAE,MAAO,0EACrB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uCAGjB,KAAM,OACN,YAAa,CAAC,YACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SACtB,EAAW,0CAA0C,EAAM,YAE3D,EAAI,MAAM,EAAY,GACtB,EAAY,EAAE,oCAAoC,OAClD,EAAO,EAAE,gCACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAO,EAAK,KAAK,yCAAyC,OAChE,MAAO,CACH,MAAO,EAAK,KAAK,WAAW,OAC5B,YAAa,EAAK,KAAK,gBAAgB,OACvC,KAAM,EAAK,KAAK,WAAW,KAAK,QAChC,OAAQ,EAAK,KAAK,yCAAyC,OAC3D,QAAS,EAAS,KAAK,KAAK,GAAQ,EAAU,EAAM,CAAC,mBAAoB,gBAAkB,EAAkB,GAAO,MAI1H,EAAa,MAAM,QAAQ,IAC7B,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CACA,IAAM,EAAU,MAAM,EAAY,EAAK,MACvC,EAAQ,YAAY,SACpB,EAAK,YAAc,EAAQ,mBAAmB,YAC1C,EAGR,OAAO,MAKnB,MAAO,CACH,MAAO,QAAQ,IACf,YAAa,EAAE,uBAAuB,OACtC,KAAM,EACN,KAAM"}