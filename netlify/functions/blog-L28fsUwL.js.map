{"version":3,"file":"blog-L28fsUwL.js","names":["route: Route","ofetch","cache","pubDate: Date | undefined"],"sources":["../../lib/routes/cockroachlabs/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    name: 'Blogs',\r\n    maintainers: ['CookiePieWw'],\r\n    categories: ['programming'],\r\n    path: '/blog/:category?',\r\n    example: '/cockroachlabs/blog/engineering',\r\n    parameters: { category: 'Blog category, e.g., engineering. Subscribe all recent articles if empty.' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['cockroachlabs.com/blog/:category', 'cockroachlabs.com/blog'],\r\n            target: '/blog',\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category');\r\n    const rootUrl = 'https://www.cockroachlabs.com';\r\n    const currentUrl = `${rootUrl}/blog${category ? `/${category}/` : '/'}`;\r\n\r\n    const webpage = await ofetch(currentUrl);\r\n    const html = load(webpage);\r\n\r\n    // Title article:\r\n    // <a href=\"href..\">\r\n    //   <h2 class=\"mb-3 truncate text-display-md font-semibold tracking-tight md:max-w-full md:text-white\">\r\n    //     Title...\r\n    //   </h2>\r\n    // </a>\r\n    const titleH2Element = html('[class=\"mb-3 truncate text-display-md font-semibold tracking-tight md:max-w-full md:text-white\"]');\r\n\r\n    // Left articles:\r\n    // <a href=\"href..\">\r\n    //   <p class=\"mb-2 line-clamp-2 text-lg font-semibold leading-5\">\r\n    //    Title..\r\n    //   </p>\r\n    // </a>\r\n    const leftArticles = html('a > p[class=\"mb-2 line-clamp-2 text-lg font-semibold leading-5\"]');\r\n    const articleList = titleH2Element.add(leftArticles).map((_, element) => {\r\n        const title = html(element).text();\r\n        const link = `${rootUrl}${html(element).parent('a').attr('href')}`;\r\n        return { title, link };\r\n    });\r\n\r\n    const items = await Promise.all(\r\n        articleList.toArray().map((article) =>\r\n            cache.tryGet(article.link, async () => {\r\n                const response = await ofetch(article.link);\r\n                const $ = load(response);\r\n\r\n                // <article class=\"blog-content null\">\r\n                //   ..multiple <div>/<a>/<img>/<p>..\r\n                // </article>\r\n                const content = $('article.blog-content').html() || '';\r\n\r\n                // <div class=\"mt-4 flex flex-col items-center justify-center gap-1 sm:flex-row sm:gap-4\">\r\n                //   <div>\r\n                //     <p>\r\n                //       Last edited on June 13, 2025\r\n                //     </p>\r\n                //   </div>\r\n                //   ...\r\n                // </div>\r\n                const dateText = $(String.raw`div.mt-4.flex.flex-col.items-center.justify-center.gap-1.sm\\:flex-row.sm\\:gap-4`)\r\n                    .find('p')\r\n                    .first()\r\n                    .text()\r\n                    .match(/Last edited on (.+)/)?.[1];\r\n\r\n                let pubDate: Date | undefined;\r\n                if (dateText) {\r\n                    try {\r\n                        const date = new Date(dateText);\r\n                        if (!Number.isNaN(date.getTime())) {\r\n                            pubDate = parseDate(date.toISOString().split('T')[0]);\r\n                        }\r\n                    } catch {\r\n                        // Ignore parsing errors\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    title: article.title,\r\n                    link: article.link,\r\n                    description: content,\r\n                    pubDate,\r\n                };\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `Cockroach Labs Blog${category ? ` - ${category}` : ''}`,\r\n        link: currentUrl,\r\n        item: items,\r\n        description: 'Cockroach Labs Blog',\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,QACN,YAAa,CAAC,eACd,WAAY,CAAC,eACb,KAAM,mBACN,QAAS,kCACT,WAAY,CAAE,SAAU,6EACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mCAAoC,0BAC7C,OAAQ,UAGhB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YACzB,EAAU,gCACV,EAAa,GAAG,EAAQ,OAAO,EAAW,IAAI,EAAS,GAAK,MAE5D,EAAU,MAAMC,EAAO,GACvB,EAAO,EAAK,GAQZ,EAAiB,EAAK,oGAQtB,EAAe,EAAK,oEACpB,EAAc,EAAe,IAAI,GAAc,KAAK,EAAG,IAAY,CACrE,IAAM,EAAQ,EAAK,GAAS,OACtB,EAAO,GAAG,IAAU,EAAK,GAAS,OAAO,KAAK,KAAK,UACzD,MAAO,CAAE,QAAO,UAGd,EAAQ,MAAM,QAAQ,IACxB,EAAY,UAAU,IAAK,GACvBC,EAAM,OAAO,EAAQ,KAAM,SAAY,CACnC,IAAM,EAAW,MAAMD,EAAO,EAAQ,MAChC,EAAI,EAAK,GAKT,EAAU,EAAE,wBAAwB,QAAU,GAU9C,EAAW,EAAE,OAAO,GAAG,mFACxB,KAAK,KACL,QACA,OACA,MAAM,yBAAyB,GAEhCE,EACJ,GAAI,EACA,GAAI,CACA,IAAM,EAAO,IAAI,KAAK,GACjB,OAAO,MAAM,EAAK,aACnB,EAAU,EAAU,EAAK,cAAc,MAAM,KAAK,UAElD,EAKZ,MAAO,CACH,MAAO,EAAQ,MACf,KAAM,EAAQ,KACd,YAAa,EACb,eAMhB,MAAO,CACH,MAAO,sBAAsB,EAAW,MAAM,IAAa,KAC3D,KAAM,EACN,KAAM,EACN,YAAa"}