{"version":3,"file":"pnas-B2BiOyVU.js","names":[],"sources":["../../lib/routes/pnas/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { setCookies } from '@/utils/puppeteer-utils';\r\nimport { CookieJar } from 'tough-cookie';\r\nimport logger from '@/utils/logger';\r\nimport puppeteer from '@/utils/puppeteer';\r\n\r\nexport const route: Route = {\r\n    path: '/:topicPath{.+}?',\r\n    radar: [\r\n        {\r\n            source: ['pnas.org/*topicPath'],\r\n            target: '/:topicPath',\r\n        },\r\n    ],\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n    url: 'pnas.org/*topicPath',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://www.pnas.org';\r\n    const topicPath = ctx.req.param('topicPath');\r\n    const link = `${baseUrl}/${topicPath ?? 'latest'}`;\r\n\r\n    let cookieJar = await cache.get('pnas:cookieJar');\r\n    const cacheMiss = !cookieJar;\r\n    cookieJar = cacheMiss ? new CookieJar() : CookieJar.fromJSON(cookieJar);\r\n    const { data: res } = await got(link, {\r\n        cookieJar,\r\n    });\r\n    if (cacheMiss) {\r\n        await cache.set('pnas:cookieJar', cookieJar.toJSON());\r\n    }\r\n\r\n    const $ = load(res);\r\n    const list = $('.card--row-reversed .card-content')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const a = item.find('.article-title a');\r\n            return {\r\n                title: a.text(),\r\n                link: new URL(a.attr('href'), baseUrl).href,\r\n                pubDate: parseDate(item.find('.card__meta__date').text()),\r\n            };\r\n        });\r\n\r\n    const browser = await puppeteer();\r\n\r\n    const out = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const page = await browser.newPage();\r\n                await setCookies(page, await cookieJar.getCookieString(item.link), '.pnas.org');\r\n                await page.setRequestInterception(true);\r\n                page.on('request', (request) => {\r\n                    request.resourceType() === 'document' ? request.continue() : request.abort();\r\n                });\r\n                logger.http(`Requesting ${item.link}`);\r\n                await page.goto(item.link, {\r\n                    waitUntil: 'domcontentloaded',\r\n                    referer: link,\r\n                });\r\n                await page.waitForSelector('.core-container');\r\n\r\n                const res = await page.evaluate(() => document.documentElement.innerHTML);\r\n                await page.close();\r\n\r\n                const $ = load(res);\r\n                const PNASdataLayer = JSON.parse(\r\n                    $('script')\r\n                        .text()\r\n                        .match(/PNASdataLayer =(.*?);/)[1]\r\n                );\r\n\r\n                $('.signup-alert-ad, .citations-truncation button').remove();\r\n\r\n                const { keywords, topic } = PNASdataLayer.page.attributes;\r\n\r\n                item.category = [...keywords, topic];\r\n                item.author = PNASdataLayer.page.pageInfo.author;\r\n                item.doi = PNASdataLayer.page.pageInfo.DOI;\r\n                item.description = art(path.join(__dirname, 'templates/article.art'), {\r\n                    access: PNASdataLayer.user.access === 'yes',\r\n                    //\r\n                    abstracts: $('#abstracts .core-container').html(),\r\n                    //\r\n                    articleBody: $('[property=articleBody]').html(),\r\n                    //\r\n                    dataAvailability: $('#data-availability').html(),\r\n                    acknowledgments: $('#acknowledgments').html(),\r\n                    supplementaryMaterials: $('#supplementary-materials').html(),\r\n                    bibliography: $('#bibliography').html(),\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    await browser.close();\r\n\r\n    return {\r\n        title: `${$('.banner-widget__content h1').text()} - PNAS`,\r\n        description: $('.banner-widget__content p').text(),\r\n        image: 'https://www.pnas.org/favicon.ico',\r\n        language: 'en-US',\r\n        link,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"6qBAaA,MAAa,EAAe,CACxB,KAAM,mBACN,MAAO,CACH,CACI,OAAQ,CAAC,uBACT,OAAQ,gBAGhB,KAAM,UACN,YAAa,GACb,UACA,IAAK,uBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,uBACV,EAAY,EAAI,IAAI,MAAM,aAC1B,EAAO,GAAG,EAAQ,GAAG,GAAa,WAEpC,EAAY,MAAM,EAAM,IAAI,kBAC1B,EAAY,CAAC,EACnB,EAAY,EAAY,IAAI,EAAc,EAAU,SAAS,GAC7D,GAAM,CAAE,KAAM,GAAQ,MAAM,EAAI,EAAM,CAClC,cAEA,GACA,MAAM,EAAM,IAAI,iBAAkB,EAAU,UAGhD,IAAM,EAAI,EAAK,GACT,EAAO,EAAE,qCACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,oBACpB,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAS,KACvC,QAAS,EAAU,EAAK,KAAK,qBAAqB,WAIxD,EAAU,MAAM,IAEhB,EAAM,MAAM,QAAQ,IACtB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAO,MAAM,EAAQ,UAC3B,MAAM,EAAW,EAAM,MAAM,EAAU,gBAAgB,EAAK,MAAO,aACnE,MAAM,EAAK,uBAAuB,IAClC,EAAK,GAAG,UAAY,GAAY,CAC5B,EAAQ,iBAAmB,WAAa,EAAQ,WAAa,EAAQ,UAEzE,EAAO,KAAK,cAAc,EAAK,QAC/B,MAAM,EAAK,KAAK,EAAK,KAAM,CACvB,UAAW,mBACX,QAAS,IAEb,MAAM,EAAK,gBAAgB,mBAE3B,IAAM,EAAM,MAAM,EAAK,aAAe,SAAS,gBAAgB,WAC/D,MAAM,EAAK,QAEX,IAAM,EAAI,EAAK,GACT,EAAgB,KAAK,MACvB,EAAE,UACG,OACA,MAAM,yBAAyB,IAGxC,EAAE,kDAAkD,SAEpD,GAAM,CAAE,WAAU,SAAU,EAAc,KAAK,WAkB/C,MAhBA,GAAK,SAAW,CAAC,GAAG,EAAU,GAC9B,EAAK,OAAS,EAAc,KAAK,SAAS,OAC1C,EAAK,IAAM,EAAc,KAAK,SAAS,IACvC,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAClE,OAAQ,EAAc,KAAK,SAAW,MAEtC,UAAW,EAAE,8BAA8B,OAE3C,YAAa,EAAE,0BAA0B,OAEzC,iBAAkB,EAAE,sBAAsB,OAC1C,gBAAiB,EAAE,oBAAoB,OACvC,uBAAwB,EAAE,4BAA4B,OACtD,aAAc,EAAE,iBAAiB,SAG9B,MAOnB,OAFA,MAAM,EAAQ,QAEP,CACH,MAAO,GAAG,EAAE,8BAA8B,OAAO,SACjD,YAAa,EAAE,6BAA6B,OAC5C,MAAO,mCACP,SAAU,QACV,OACA,KAAM"}