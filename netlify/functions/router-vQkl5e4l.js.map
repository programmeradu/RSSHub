{"version":3,"file":"router-vQkl5e4l.js","names":["route: Route"],"sources":["../../lib/routes/japanpost/utils.ts","../../lib/routes/japanpost/track.ts","../../lib/routes/japanpost/router.ts"],"sourcesContent":["import crypto from 'node:crypto';\r\n\r\nimport cityTimezones from 'city-timezones';\r\nimport dayjs from 'dayjs';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\r\nimport utc from 'dayjs/plugin/utc.js';\r\nimport timezone from 'dayjs/plugin/timezone.js';\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nconst utils = {\r\n    expandOdd: (c) => {\r\n        c.prototype.odd = function () {\r\n            const odds = [];\r\n            this.each((index, item) => {\r\n                if (index % 2 === 1) {\r\n                    odds.push(item);\r\n                }\r\n            });\r\n            return c(odds);\r\n        };\r\n    },\r\n    expandEven: (c) => {\r\n        c.prototype.even = function () {\r\n            const evens = [];\r\n            this.each((index, item) => {\r\n                if (index % 2 === 0) {\r\n                    evens.push(item);\r\n                }\r\n            });\r\n            return c(evens);\r\n        };\r\n    },\r\n    expandReverse: (c) => {\r\n        c.prototype.reverse = function () {\r\n            const reverses = [];\r\n            this.each((index, item) => {\r\n                reverses.push(item);\r\n            });\r\n            reverses.reverse();\r\n            return c(reverses);\r\n        };\r\n    },\r\n    generateGuid: (t) => {\r\n        const hash = crypto.createHash('sha512');\r\n        hash.update(t);\r\n        const r = hash.digest('hex').toUpperCase();\r\n        return r;\r\n    },\r\n    parseDatetime: (t, o, r, tz, l) => {\r\n        const formatJaDate = 'YYYY/MM/DD';\r\n        const formatJaDateTime = 'YYYY/MM/DD HH:mm';\r\n        const formatEnDate = 'MM/DD/YYYY';\r\n        const formatEnDateTime = 'MM/DD/YYYY HH:mm';\r\n        let customFormat;\r\n\r\n        switch (l) {\r\n            case 'ja':\r\n                customFormat = dayjs(t, formatJaDate, true).isValid() ? formatJaDate : dayjs(t, formatJaDateTime, true).isValid() ? formatJaDateTime : undefined;\r\n                break;\r\n            case 'en':\r\n                customFormat = dayjs(t, formatEnDate, true).isValid() ? formatEnDate : dayjs(t, formatEnDateTime, true).isValid() ? formatEnDateTime : undefined;\r\n                break;\r\n        }\r\n\r\n        if (o) {\r\n            const packageInJPKeywords = [['郵便局'], ['都', '道', '府', '県']];\r\n            if (packageInJPKeywords[0].some((i) => o.includes(i)) || packageInJPKeywords[1].some((i) => r.includes(i))) {\r\n                tz = 'Asia/Tokyo';\r\n            } else {\r\n                const oS = o.replace(' EMS', '').replace(' INT', '');\r\n                try {\r\n                    try {\r\n                        tz = cityTimezones.lookupViaCity(oS)[0].timezone;\r\n                    } catch {\r\n                        tz = cityTimezones.lookupViaCity(r)[0].timezone;\r\n                    }\r\n                } catch {\r\n                    // empty\r\n                }\r\n            }\r\n        }\r\n\r\n        return customFormat ? [dayjs.tz(t, customFormat, tz).valueOf(), tz] : [new Date(t).getTime(), tz];\r\n    },\r\n};\r\n\r\nexport default utils;\r\n","import got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport { load } from 'cheerio';\r\nimport path from 'node:path';\r\nimport utils from './utils';\r\n\r\nlet baseTitle = '日本郵便';\r\nconst baseUrl = 'https://trackings.post.japanpost.jp/services/srv/search/direct?';\r\n\r\nexport async function track(ctx) {\r\n    const reqCode = ctx.req.param('reqCode');\r\n    const reqReqCode = 'reqCodeNo1=' + reqCode;\r\n\r\n    let locale = 'ja';\r\n    if (ctx.req.param('locale') === 'en') {\r\n        locale = 'en';\r\n        baseTitle = 'Japanpost';\r\n    }\r\n    const reqLocale = '&locale=' + locale;\r\n\r\n    const link = baseUrl + reqReqCode + reqLocale;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: link,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    utils.expandEven($);\r\n    utils.expandOdd($);\r\n\r\n    const list = $('.tableType01').eq(1).find('tr').slice(2);\r\n    const officeList = $('.tableType03').eq(0).find('tr').slice(1);\r\n    let officeItemList;\r\n\r\n    if (officeList.length) {\r\n        officeItemList = officeList.toArray().map((e) => {\r\n            const eTd = $(e).find('td');\r\n            return {\r\n                officeType: eTd.eq(0).text().trim(),\r\n                officeName: eTd.eq(1).html().trim(),\r\n                officeTel: eTd.eq(2).html().trim(),\r\n            };\r\n        });\r\n    }\r\n\r\n    if (!list.length) {\r\n        const resErrorText = $('.tableType01').eq(0).find('tr').eq(2).find('td').eq(1).text().trim();\r\n        throw new Error(resErrorText);\r\n    }\r\n\r\n    const listEven = list.even();\r\n    const listOdd = list.odd();\r\n\r\n    const packageType = $('.tableType01').eq(0).find('tr').eq(1).find('td').eq(1).text().trim();\r\n    const packageService = $('.tableType01').eq(0).find('tr').eq(1).find('td').eq(2).text().trim();\r\n    const serviceText = locale === 'ja' ? '付加サービス：' : 'Additional services: ';\r\n\r\n    let lastItemTimeStamp;\r\n    let tz;\r\n\r\n    return {\r\n        title: `${baseTitle} ${reqCode} ${packageType}`,\r\n        link,\r\n        description: `${baseTitle} ${reqCode} ${packageType}`,\r\n        language: locale,\r\n        icon: 'https://www.post.japanpost.jp/favicon.ico',\r\n        logo: 'https://www.post.japanpost.jp/favicon.ico',\r\n        item: listEven.toArray().map((item, index) => {\r\n            const itemTd = $(item).find('td');\r\n            const packageStatus = itemTd.eq(1).text().trim();\r\n            const packageRegion = itemTd.eq(4).text().trim();\r\n            const packageOffice = itemTd.eq(3).text().trim();\r\n            const packageOfficeZipCode = listOdd.eq(index).find('td').eq(0).text().trim();\r\n            const itemTitle = `${packageStatus} ${packageOffice} ${packageRegion}`;\r\n            const packageTrackRecord = itemTd.eq(2).text().trim();\r\n            const itemDescription = art(path.join(__dirname, 'templates/track_item_desc.art'), {\r\n                packageStatus,\r\n                packageTrackRecord,\r\n                packageOfficeZipCode,\r\n                packageOffice,\r\n                packageRegion,\r\n                index,\r\n                officeItemList,\r\n                serviceText,\r\n                packageService,\r\n            });\r\n\r\n            const itemPubDateText = itemTd.eq(0).text().trim();\r\n            const itemGuid = utils.generateGuid(reqCode + itemTitle + itemDescription + itemPubDateText);\r\n\r\n            let thisItemTimeStamp;\r\n            [thisItemTimeStamp, tz] = utils.parseDatetime(itemPubDateText, packageOffice, packageRegion, tz, locale);\r\n            if (lastItemTimeStamp && thisItemTimeStamp <= lastItemTimeStamp) {\r\n                thisItemTimeStamp = lastItemTimeStamp + 1000;\r\n            }\r\n            lastItemTimeStamp = thisItemTimeStamp;\r\n\r\n            return {\r\n                title: itemTitle,\r\n                description: itemDescription,\r\n                pubDate: new Date(thisItemTimeStamp),\r\n                link,\r\n                guid: itemGuid.slice(0, 32),\r\n            };\r\n        }),\r\n    };\r\n}\r\n","import { Route } from '@/types';\r\nimport { track } from './track';\r\n\r\nexport const route: Route = {\r\n    name: 'Track & Trace Service',\r\n    path: '/track/:reqCode/:locale?',\r\n    example: '/japanpost/track/EJ123456789JP/en',\r\n    url: 'trackings.post.japanpost.jp/services/srv/search/',\r\n    handler: track,\r\n    categories: ['other'],\r\n    maintainers: ['tuzi3040'],\r\n    parameters: {\r\n        reqCode: 'Package Number',\r\n        locale: 'Language, default to japanese `ja`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: false, // unsupported due to deprecation of `target` as a function in RSSHub-Radar 2.0.19\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    description: `| Japanese | English |\r\n| -------- | ------- |\r\n| ja       | en      |`,\r\n    zh: {\r\n        name: '邮件追踪查询',\r\n        description: `| 日语 | 英语 |\r\n| ---- | ---- |\r\n| ja   | en   |`,\r\n    },\r\n    ja: {\r\n        name: '郵便追跡サービス',\r\n        description: `| 日本語 | 英語 |\r\n| ---- | ---- |\r\n| ja   | en   |`,\r\n    },\r\n};\r\n"],"mappings":"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"}