{"version":3,"file":"newseed-CLqYlASg.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/newseed/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/latest',\r\n    categories: ['new-media'],\r\n    example: '/newseed/latest',\r\n    url: 'news.newseed.cn',\r\n    name: '最新新闻',\r\n    maintainers: ['p3psi-boo'],\r\n    handler,\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = 'https://news.newseed.cn/';\r\n    const response = await got({\r\n        method: 'get',\r\n        url: baseUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    const list = $('#news-list li')\r\n        .toArray()\r\n        .map((item) => {\r\n            const element = $(item);\r\n            const a = element.find('h3 a');\r\n            const link = a.attr('href') || '';\r\n            const title = a.text();\r\n            const image = element.find('.img img').attr('src');\r\n            const info = element.find('.info');\r\n            const author = info.find('.author a').text();\r\n            const pubDate = info.find('.date').text();\r\n            const tags = element\r\n                .find('.tag a')\r\n                .toArray()\r\n                .map((el) => $(el).text())\r\n                .filter((tag) => tag !== author);\r\n\r\n            return {\r\n                title,\r\n                link,\r\n                author,\r\n                pubDate,\r\n                category: tags,\r\n                description: image ? `<img src=\"${image}\"><br>${title}` : title,\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const $ = load(response.data);\r\n                item.description = $('.news-content').html() || item.description;\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '新芽 - 最新新闻',\r\n        link: baseUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,UACN,WAAY,CAAC,aACb,QAAS,kBACT,IAAK,kBACL,KAAM,OACN,YAAa,CAAC,aACd,WAGJ,eAAe,GAAU,CACrB,IAAM,EAAU,2BACV,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,iBACV,UACA,IAAK,GAAS,CACX,IAAM,EAAU,EAAE,GACZ,EAAI,EAAQ,KAAK,QACjB,EAAO,EAAE,KAAK,SAAW,GACzB,EAAQ,EAAE,OACV,EAAQ,EAAQ,KAAK,YAAY,KAAK,OACtC,EAAO,EAAQ,KAAK,SACpB,EAAS,EAAK,KAAK,aAAa,OAChC,EAAU,EAAK,KAAK,SAAS,OAC7B,EAAO,EACR,KAAK,UACL,UACA,IAAK,GAAO,EAAE,GAAI,QAClB,OAAQ,GAAQ,IAAQ,GAE7B,MAAO,CACH,QACA,OACA,SACA,UACA,SAAU,EACV,YAAa,EAAQ,aAAa,EAAM,QAAQ,IAAU,KAIhE,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAI,CACvB,OAAQ,MACR,IAAK,EAAK,OAGRG,EAAI,EAAKD,EAAS,MAExB,MADA,GAAK,YAAcC,EAAE,iBAAiB,QAAU,EAAK,YAC9C,MAKnB,MAAO,CACH,MAAO,YACP,KAAM,EACN,KAAM"}