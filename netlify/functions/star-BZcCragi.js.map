{"version":3,"file":"star-BZcCragi.js","names":["route: Route","ConfigNotFoundError","got"],"sources":["../../lib/routes/github/star.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/stars/:user/:repo',\r\n    categories: ['programming'],\r\n    example: '/github/stars/DIYgod/RSSHub',\r\n    view: ViewType.Notifications,\r\n    parameters: { user: 'GitHub username', repo: 'GitHub repo name' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'GITHUB_ACCESS_TOKEN',\r\n                description: 'GitHub Access Token',\r\n            },\r\n        ],\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/:user/:repo/stargazers', 'github.com/:user/:repo'],\r\n        },\r\n    ],\r\n    name: 'Repo Stars',\r\n    maintainers: ['HenryQW'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    if (!config.github || !config.github.access_token) {\r\n        throw new ConfigNotFoundError('GitHub star RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n    const user = ctx.req.param('user');\r\n    const repo = ctx.req.param('repo');\r\n\r\n    const host = `https://github.com/${user}/${repo}/stargazers`;\r\n    const url = 'https://api.github.com/graphql';\r\n\r\n    const response = await got({\r\n        method: 'post',\r\n        url,\r\n        headers: {\r\n            Authorization: `bearer ${config.github.access_token}`,\r\n        },\r\n        json: {\r\n            query: `\r\n            {\r\n                repository(owner: \"${user}\", name: \"${repo}\") {\r\n                  stargazers(last: 10) {\r\n                    edges {\r\n                      node {\r\n                        login\r\n                        avatarUrl\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            `,\r\n        },\r\n    });\r\n\r\n    const data = response.data.data.repository.stargazers.edges.toReversed();\r\n\r\n    return {\r\n        allowEmpty: true,\r\n        title: `${user}/${repo}â€™s stargazers`,\r\n        link: host,\r\n        item: data.map((follower) => ({\r\n            title: `${follower.node.login} starred ${user}/${repo}`,\r\n            author: follower.node.login,\r\n            description: `<a href=\"https://github.com/${follower.node.login}\">${follower.node.login}</a> <br> <img sytle=\"width:50px;\" src='${follower.node.avatarUrl}'>`,\r\n            link: `https://github.com/${follower.node.login}`,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"0WAKA,MAAaA,EAAe,CACxB,KAAM,qBACN,WAAY,CAAC,eACb,QAAS,8BACT,KAAM,EAAS,cACf,WAAY,CAAE,KAAM,kBAAmB,KAAM,oBAC7C,SAAU,CACN,cAAe,CACX,CACI,KAAM,sBACN,YAAa,yBAIzB,MAAO,CACH,CACI,OAAQ,CAAC,oCAAqC,4BAGtD,KAAM,aACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAI,CAAC,EAAO,QAAU,CAAC,EAAO,OAAO,aACjC,MAAM,IAAIC,EAAoB,oJAElC,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAO,EAAI,IAAI,MAAM,QAErB,EAAO,sBAAsB,EAAK,GAAG,EAAK,aAG1C,EAAW,MAAMC,EAAI,CACvB,OAAQ,OACR,qCACA,QAAS,CACL,cAAe,UAAU,EAAO,OAAO,gBAE3C,KAAM,CACF,MAAO;;qCAEkB,EAAK,YAAY,EAAK;;;;;;;;;;;iBAejD,EAAO,EAAS,KAAK,KAAK,WAAW,WAAW,MAAM,aAE5D,MAAO,CACH,WAAY,GACZ,MAAO,GAAG,EAAK,GAAG,EAAK,eACvB,KAAM,EACN,KAAM,EAAK,IAAK,IAAc,CAC1B,MAAO,GAAG,EAAS,KAAK,MAAM,WAAW,EAAK,GAAG,IACjD,OAAQ,EAAS,KAAK,MACtB,YAAa,+BAA+B,EAAS,KAAK,MAAM,IAAI,EAAS,KAAK,MAAM,0CAA0C,EAAS,KAAK,UAAU,IAC1J,KAAM,sBAAsB,EAAS,KAAK"}