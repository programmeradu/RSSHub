{"version":3,"file":"announcement-DmCm3imH.js","names":["handler: Route['handler']","cache","ofetch","$","appData","catalog","link","item","route: Route"],"sources":["../../lib/routes/binance/announcement.ts"],"sourcesContent":["import { DataItem, Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport * as cheerio from 'cheerio';\r\nimport { AnnouncementCatalog, AnnouncementsConfig } from './types';\r\n\r\ninterface AnnouncementFragment {\r\n    reactRoot: [{ id: 'Fragment'; children: { id: string; props: object }[]; props: object }];\r\n}\r\n\r\nconst ROUTE_PARAMETERS_CATALOGID_MAPPING = {\r\n    'new-cryptocurrency-listing': 48,\r\n    'latest-binance-news': 49,\r\n    'latest-activities': 93,\r\n    'new-fiat-listings': 50,\r\n    'api-updates': 51,\r\n    'crypto-airdrop': 128,\r\n    'wallet-maintenance-updates': 157,\r\n    delisting: 161,\r\n};\r\n\r\nfunction assertAnnouncementsConfig(playlist: unknown): playlist is AnnouncementFragment {\r\n    if (!playlist || typeof playlist !== 'object') {\r\n        return false;\r\n    }\r\n    if (!('reactRoot' in (playlist as { reactRoot: unknown[] }))) {\r\n        return false;\r\n    }\r\n    if (!Array.isArray((playlist as { reactRoot: unknown[] }).reactRoot)) {\r\n        return false;\r\n    }\r\n    if ((playlist as { reactRoot: { id: string }[] }).reactRoot?.[0]?.id !== 'Fragment') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction assertAnnouncementsConfigList(props: unknown): props is { config: { list: AnnouncementsConfig[] } } {\r\n    if (!props || typeof props !== 'object') {\r\n        return false;\r\n    }\r\n    if (!('config' in props)) {\r\n        return false;\r\n    }\r\n    if (!('list' in (props.config as { list: AnnouncementsConfig[] }))) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst handler: Route['handler'] = async (ctx) => {\r\n    const baseUrl = 'https://www.binance.com';\r\n    const announcementCategoryUrl = `${baseUrl}/support/announcement`;\r\n    const { type } = ctx.req.param<'/binance/announcement/:type'>();\r\n    const language = ctx.req.header('Accept-Language');\r\n    const headers = {\r\n        Referer: baseUrl,\r\n        'Accept-Language': language ?? 'en-US,en;q=0.9',\r\n    };\r\n    const announcementsConfig = (await cache.tryGet(`binance:announcements:${language}`, async () => {\r\n        const announcementRes = await ofetch<string>(announcementCategoryUrl, { headers });\r\n        const $ = cheerio.load(announcementRes);\r\n\r\n        const appData = JSON.parse($('#__APP_DATA').text());\r\n\r\n        const announcements = Object.values(appData.appState.loader.dataByRouteId as Record<string, object>).find((value) => 'playlist' in value) as { playlist: unknown };\r\n\r\n        if (!assertAnnouncementsConfig(announcements.playlist)) {\r\n            throw new Error('Get announcement config failed');\r\n        }\r\n\r\n        const listConfigProps = announcements.playlist.reactRoot[0].children.find((i) => i.id === 'TopicCardList')?.props;\r\n\r\n        if (!assertAnnouncementsConfigList(listConfigProps)) {\r\n            throw new Error(\"Can't get announcement config list\");\r\n        }\r\n\r\n        return listConfigProps.config.list;\r\n    })) as AnnouncementsConfig[];\r\n\r\n    const announcementCatalogId = ROUTE_PARAMETERS_CATALOGID_MAPPING[type];\r\n\r\n    if (!announcementCatalogId) {\r\n        throw new Error(`${type} is not supported`);\r\n    }\r\n\r\n    const targetItem = announcementsConfig.find((i) => i.url.includes(`c-${announcementCatalogId}`));\r\n\r\n    if (!targetItem) {\r\n        throw new Error('Unexpected announcements config');\r\n    }\r\n\r\n    const link = new URL(targetItem.url, baseUrl).toString();\r\n\r\n    const response = await ofetch<string>(link, { headers });\r\n\r\n    const $ = cheerio.load(response);\r\n    const appData = JSON.parse($('#__APP_DATA').text());\r\n\r\n    const values = Object.values(appData.appState.loader.dataByRouteId as Record<string, object>);\r\n    const catalogs = values.find((value) => 'catalogs' in value) as { catalogs: AnnouncementCatalog[] };\r\n    const catalog = catalogs.catalogs.find((catalog) => catalog.catalogId === announcementCatalogId);\r\n\r\n    const item = await Promise.all(\r\n        catalog!.articles.map((i) => {\r\n            const link = `${announcementCategoryUrl}/${i.code}`;\r\n            const item = {\r\n                title: i.title,\r\n                link,\r\n                description: i.title,\r\n                pubDate: parseDate(i.releaseDate),\r\n            } as DataItem;\r\n            return cache.tryGet(`binance:announcement:${i.code}:${language}`, async () => {\r\n                const res = await ofetch(link, { headers });\r\n                const $ = cheerio.load(res);\r\n                const descriptionEl = $('#support_article > div').first();\r\n                descriptionEl.find('style').remove();\r\n                item.description = descriptionEl.html() ?? '';\r\n                return item;\r\n            }) as Promise<DataItem>;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: targetItem.title,\r\n        link,\r\n        description: targetItem.description,\r\n        item,\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/announcement/:type',\r\n    categories: ['finance'],\r\n    view: ViewType.Articles,\r\n    example: '/binance/announcement/new-cryptocurrency-listing',\r\n    parameters: {\r\n        type: {\r\n            description: 'Binance Announcement type',\r\n            default: 'new-cryptocurrency-listing',\r\n            options: [\r\n                { value: 'new-cryptocurrency-listing', label: 'New Cryptocurrency Listing' },\r\n                { value: 'latest-binance-news', label: 'Latest Binance News' },\r\n                { value: 'latest-activities', label: 'Latest Activities' },\r\n                { value: 'new-fiat-listings', label: 'New Fiat Listings' },\r\n                { value: 'api-updates', label: 'API Updates' },\r\n                { value: 'crypto-airdrop', label: 'Crypto Airdrop' },\r\n                { value: 'wallet-maintenance-updates', label: 'Wallet Maintenance Updates' },\r\n                { value: 'delisting', label: 'Delisting' },\r\n            ],\r\n        },\r\n    },\r\n    name: 'Announcement',\r\n    description: `\r\nType category\r\n\r\n - new-cryptocurrency-listing => New Cryptocurrency Listing\r\n - latest-binance-news        => Latest Binance News\r\n - latest-activities          => Latest Activities\r\n - new-fiat-listings          => New Fiat Listings\r\n - api-updates                => API Updates\r\n - crypto-airdrop             => Crypto Airdrop\r\n - wallet-maintenance-updates => Wallet Maintenance Updates\r\n - delisting                  => Delisting\r\n`,\r\n    maintainers: ['enpitsulin'],\r\n    handler,\r\n};\r\n"],"mappings":"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"}