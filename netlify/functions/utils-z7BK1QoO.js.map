{"version":3,"file":"utils-z7BK1QoO.js","names":["cache","got"],"sources":["../../lib/routes/coolapk/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport md5 from '@/utils/md5';\r\nimport { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst dynamicTpye = { 0: '基本动态', 8: '酷图', 9: '评论', 10: '提问', 11: '回答', 12: '图文', 15: '二手', 17: '观点', 20: '交易动态' };\r\n\r\nconst getRandomDEVICE_ID = () => {\r\n    let id = [10, 6, 6, 6, 14];\r\n    id = id.map((i) => Math.random().toString(36).substring(2, i));\r\n    return id.join('-');\r\n};\r\n\r\nconst get_app_token = () => {\r\n    const DEVICE_ID = getRandomDEVICE_ID();\r\n    const now = Math.round(Date.now() / 1000);\r\n    const hex_now = '0x' + now.toString(16);\r\n    const md5_now = md5(now.toString());\r\n    const s = 'token://com.coolapk.market/c67ef5943784d09750dcfbb31020f0ab?' + md5_now + '$' + DEVICE_ID + '&com.coolapk.market';\r\n    const md5_s = md5(Buffer.from(s).toString('base64'));\r\n    const token = md5_s + DEVICE_ID + hex_now;\r\n    return token;\r\n};\r\n\r\nconst base_url = 'https://api.coolapk.com';\r\n\r\nconst getHeaders = () => ({\r\n    'X-Requested-With': 'XMLHttpRequest',\r\n    'X-App-Id': 'com.coolapk.market',\r\n    'X-App-Token': get_app_token(),\r\n    'X-Sdk-Int': '29',\r\n    'X-Sdk-Locale': 'zh-CN',\r\n    'X-App-Version': '11.0',\r\n    'X-Api-Version': '11',\r\n    'X-App-Code': '2101202',\r\n    'User-Agent': 'Dalvik/2.1.0 (Linux; U; Android 10; Redmi K30 5G MIUI/V12.0.3.0.QGICMXM) (#Build; Redmi; Redmi K30 5G; QKQ1.191222.002 test-keys; 10) +CoolMarket/11.0-2101202',\r\n});\r\n\r\nconst parseTuwenFromRaw = (raw) =>\r\n    raw.map((i) => {\r\n        if (i.type === 'text') {\r\n            const output = i.message\r\n                .split('\\n')\r\n                .filter((t) => t !== '')\r\n                .map((t) => `<p>${t}</p>`)\r\n                .join('');\r\n            return output;\r\n        } else if (i.type === 'image') {\r\n            return `<div class=\"img-container\" style=\"text-align: center;\">\r\n                <img src=\"${i.url}\">\r\n                <p class=\"image-caption\" style=\"text-align: center;\">${i.description}</p></div>`;\r\n        } else {\r\n            // console.log(i);\r\n            return `Unkown type`;\r\n        }\r\n    });\r\n\r\nconst parseDynamic = async (item) => {\r\n    const pubDate = parseDate(item.dateline, 'X');\r\n    if (item.entityType === 'sponsorCard' || item.shareUrl === undefined) {\r\n        return;\r\n    }\r\n    const itemUrl = item.shareUrl.split('?')[0];\r\n    let description, title;\r\n    const type = Number.parseInt(item.type);\r\n    switch (type) {\r\n        case 0:\r\n        case 5:\r\n        case 7: // external share\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n        case 11:\r\n        case 13: // feedType: video (external)\r\n        case 15:\r\n        case 17:\r\n        case 20: {\r\n            // //////////////////////////////////////////// 基本内容 ////////////////////////////////////////////\r\n            if (item.issummary) {\r\n                // 需要爬内容\r\n                description = await cache.tryGet(itemUrl, async () => {\r\n                    const result = await got(itemUrl, {\r\n                        headers: getHeaders(),\r\n                    });\r\n                    const message = `<p>` + result.data.data?.message.split('\\n').join('<br>') + `</p>`;\r\n                    const picArr = item.picArr.filter(Boolean).map((i) => `<img src=\"${i}\">`); // 若无图片，item.picArr=[\"\"]\r\n                    return message + picArr.join('');\r\n                });\r\n            } else {\r\n                const picArr = item.picArr.filter(Boolean).map((i) => `<img src=\"${i}\">`);\r\n                description = `<p>` + item.message + `</p>` + picArr.join('');\r\n            }\r\n            const $ = load('<div class=\"title-filter\">' + description + '</div>');\r\n            title = $('.title-filter').text().trim(); // no need to perform substring because it's will be handled by RSSHub 'TITLE_LENGTH_LIMIT'\r\n\r\n            // //////////////////////////////////////////// 基本内容结束 ////////////////////////////////////////////\r\n\r\n            if (type === 17) {\r\n                const keys = item.extra_key.split(',');\r\n                description += `<p>` + item.vote.message_title + ` 已选${keys.length}项</p>`;\r\n                for (const i of item.vote.options) {\r\n                    if (keys.includes(String(i.id))) {\r\n                        description += `<p>${i.title}√</p>`;\r\n                    }\r\n                }\r\n            } else if (type === 10 || type === 11) {\r\n                title = `${item.message_title} 更多:` + title;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 12:\r\n            title = item.title;\r\n            description = await cache.tryGet(itemUrl, async () => {\r\n                const result = await got(itemUrl, {\r\n                    headers: getHeaders(),\r\n                });\r\n\r\n                const raw = JSON.parse(result.data.data.message_raw_output);\r\n\r\n                const tags = parseTuwenFromRaw(raw);\r\n\r\n                return `<img src=\"${result.data.data.pic}\"><hr>` + tags.join('');\r\n            });\r\n            break;\r\n\r\n        default:\r\n            // console.log(item.type);\r\n            // console.log(item);\r\n            break;\r\n    }\r\n\r\n    return {\r\n        title,\r\n        description,\r\n        pubDate,\r\n        link: item.shareUrl,\r\n        guid: itemUrl,\r\n        author: item.username,\r\n    };\r\n};\r\n\r\nexport default { get_app_token, base_url, getHeaders, parseDynamic, dynamicTpye };\r\n"],"mappings":"gOAMA,MAAM,EAAc,CAAE,EAAG,OAAQ,EAAG,KAAM,EAAG,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,QAEnG,MAA2B,CAC7B,IAAI,EAAK,CAAC,GAAI,EAAG,EAAG,EAAG,IAEvB,MADA,GAAK,EAAG,IAAK,GAAM,KAAK,SAAS,SAAS,IAAI,UAAU,EAAG,IACpD,EAAG,KAAK,MAGb,MAAsB,CACxB,IAAM,EAAY,IACZ,EAAM,KAAK,MAAM,KAAK,MAAQ,KAC9B,EAAU,KAAO,EAAI,SAAS,IAC9B,EAAU,EAAI,EAAI,YAClB,EAAI,+DAAiE,EAAU,IAAM,EAAY,sBACjG,EAAQ,EAAI,OAAO,KAAK,GAAG,SAAS,WACpC,EAAQ,EAAQ,EAAY,EAClC,OAAO,GAKL,OAAoB,CACtB,mBAAoB,iBACpB,WAAY,qBACZ,cAAe,IACf,YAAa,KACb,eAAgB,QAChB,gBAAiB,OACjB,gBAAiB,KACjB,aAAc,UACd,aAAc,mKAGZ,EAAqB,GACvB,EAAI,IAAK,GAAM,CACX,GAAI,EAAE,OAAS,OAAQ,CACnB,IAAM,EAAS,EAAE,QACZ,MAAM;GACN,OAAQ,GAAM,IAAM,IACpB,IAAK,GAAM,MAAM,EAAE,OACnB,KAAK,IACV,OAAO,UACA,EAAE,OAAS,QAClB,MAAO;4BACS,EAAE,IAAI;uEACqC,EAAE,YAAY,iBAGzE,MAAO,gBAIb,EAAe,KAAO,IAAS,CACjC,IAAM,EAAU,EAAU,EAAK,SAAU,KACzC,GAAI,EAAK,aAAe,eAAiB,EAAK,WAAa,IAAA,GACvD,OAEJ,IAAM,EAAU,EAAK,SAAS,MAAM,KAAK,GACrC,EAAa,EACX,EAAO,OAAO,SAAS,EAAK,MAClC,OAAQ,EAAR,CACI,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAAI,CAEL,GAAI,EAAK,UAEL,EAAc,MAAMA,EAAM,OAAO,EAAS,SAAY,CAClD,IAAM,EAAS,MAAMC,EAAI,EAAS,CAC9B,QAAS,MAEP,EAAU,MAAQ,EAAO,KAAK,MAAM,QAAQ,MAAM;GAAM,KAAK,QAAU,OACvE,EAAS,EAAK,OAAO,OAAO,SAAS,IAAK,GAAM,aAAa,EAAE,KACrE,OAAO,EAAU,EAAO,KAAK,UAE9B,CACH,IAAM,EAAS,EAAK,OAAO,OAAO,SAAS,IAAK,GAAM,aAAa,EAAE,KACrE,EAAc,MAAQ,EAAK,QAAU,OAAS,EAAO,KAAK,IAE9D,IAAM,EAAI,EAAK,6BAA+B,EAAc,UAK5D,GAJA,EAAQ,EAAE,iBAAiB,OAAO,OAI9B,IAAS,GAAI,CACb,IAAM,EAAO,EAAK,UAAU,MAAM,KAClC,GAAe,MAAQ,EAAK,KAAK,cAAgB,MAAM,EAAK,OAAO,OACnE,IAAK,IAAM,KAAK,EAAK,KAAK,QAClB,EAAK,SAAS,OAAO,EAAE,OACvB,GAAe,MAAM,EAAE,MAAM,cAG9B,IAAS,IAAM,IAAS,MAC/B,EAAQ,GAAG,EAAK,cAAc,MAAQ,GAG1C,MAEJ,IAAK,IACD,EAAQ,EAAK,MACb,EAAc,MAAMD,EAAM,OAAO,EAAS,SAAY,CAClD,IAAM,EAAS,MAAMC,EAAI,EAAS,CAC9B,QAAS,MAGP,EAAM,KAAK,MAAM,EAAO,KAAK,KAAK,oBAElC,EAAO,EAAkB,GAE/B,MAAO,aAAa,EAAO,KAAK,KAAK,IAAI,QAAU,EAAK,KAAK,MAEjE,MAEJ,QAGI,MAGR,MAAO,CACH,QACA,cACA,UACA,KAAM,EAAK,SACX,KAAM,EACN,OAAQ,EAAK,WAIrB,IAAA,EAAe,CAAE,gBAAe,mCAAU,aAAY,eAAc"}