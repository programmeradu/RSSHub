{"version":3,"file":"articles-ArTSObwO.js","names":["route: Route","oftech","cache"],"sources":["../../lib/routes/sustainabilitymag/articles.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport oftech from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/articles',\r\n    name: 'Articles',\r\n    url: 'sustainabilitymag.com/articles',\r\n    maintainers: ['mintyfrankie'],\r\n    categories: ['other'],\r\n    example: '/sustainabilitymag/articles',\r\n    radar: [\r\n        {\r\n            source: ['https://sustainabilitymag.com/articles'],\r\n            target: '/sustainabilitymag/articles',\r\n        },\r\n    ],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    handler,\r\n};\r\n\r\nconst findLargestImgKey = (images) =>\r\n    Object.keys(images)\r\n        .filter((key) => key.startsWith('inline_free_') || key.startsWith('hero_landscape_'))\r\n        .sort((a, b) => Number.parseInt(b.split('_')[2]) - Number.parseInt(a.split('_')[2]))[0];\r\n\r\nconst renderFigure = (url, caption) => `<figure><img src=\"${url}\" alt=\"${caption}\" /><figcaption>${caption}</figcaption></figure>`;\r\n\r\nconst render = (widgets) =>\r\n    widgets\r\n        .map((w) => {\r\n            switch (w.type) {\r\n                case 'text':\r\n                    return w.html;\r\n                case 'blockquote':\r\n                    return `<blockquote>${w.html}</blockquote>`;\r\n                case 'keyFacts':\r\n                    return `<div><ul>${w.keyFacts.map((k) => `<li>${k.text}</li>`).join('')}</ul></div>`;\r\n                case 'inlineVideo':\r\n                    return w.provider === 'youtube'\r\n                        ? `<iframe id=\"ytplayer\" type=\"text/html\" width=\"640\" height=\"360\" src=\"https://www.youtube-nocookie.com/embed/${w.videoId}\" frameborder=\"0\" allowfullscreen></iframe>`\r\n                        : new Error(`Unhandled inlineVideo provider: ${w.provider}`);\r\n                case 'inlineImage':\r\n                    return w.inlineImageImages\r\n                        .map((image) => {\r\n                            const i = image.images[findLargestImgKey(image.images)][0];\r\n                            return renderFigure(i.url, i.caption);\r\n                        })\r\n                        .join('');\r\n                default:\r\n                    throw new Error(`Unhandled widget type: ${w.type}`);\r\n            }\r\n        })\r\n        .join('');\r\n\r\nasync function handler() {\r\n    const baseURL = `https://sustainabilitymag.com`;\r\n    const feedURL = `${baseURL}/articles`;\r\n    const feedLang = 'en';\r\n    const feedDescription = 'Sustainability Magazine Articles';\r\n\r\n    const requestEndpoint = `${baseURL}/graphql`;\r\n    const requestBody = JSON.stringify({\r\n        query: `query PaginatedQuery($url: String!, $page: Int = 1, $widgetType: String!) {\r\n          paginatedWidget(url: $url, widgetType: $widgetType) {\r\n            ... on SimpleArticleGridWidget {\r\n              articles(page: $page) {\r\n                results {\r\n                  _id\r\n                  headline\r\n                  fullUrlPath\r\n                  featured\r\n                  category\r\n                  contentType\r\n                  tags {\r\n                    tag\r\n                  }\r\n                  attribution\r\n                  subAttribution\r\n                  sell\r\n                  images {\r\n                    thumbnail_widescreen_553 {\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }`,\r\n        operationName: 'PaginatedQuery',\r\n        variables: {\r\n            widgetType: 'simpleArticleGrid',\r\n            page: 1,\r\n            url: 'https://sustainabilitymag.com/articles',\r\n        },\r\n    });\r\n\r\n    const results = await oftech(requestEndpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: requestBody,\r\n    });\r\n\r\n    const list = results.data.paginatedWidget.articles.results.map((item) => ({\r\n        title: item.headline,\r\n        link: `${baseURL}${item.fullUrlPath}`,\r\n        image: item.images?.thumbnail_widescreen_553?.url,\r\n        category: item.category,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await oftech(item.link);\r\n                const $ = load(response);\r\n\r\n                const nextData = JSON.parse($('script#__NEXT_DATA__').text());\r\n                const article = nextData.props.pageProps.article;\r\n                item.pubDate = parseDate(article.displayDate);\r\n                item.author = article.author.name;\r\n                const heroImage = article.images[findLargestImgKey(article.images)][0];\r\n                item.description = renderFigure(heroImage.url, heroImage.caption) + render(article.body.widgets);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Sustainability Magazine Articles',\r\n        language: feedLang,\r\n        description: feedDescription,\r\n        link: `https://${feedURL}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,YACN,KAAM,WACN,IAAK,iCACL,YAAa,CAAC,gBACd,WAAY,CAAC,SACb,QAAS,8BACT,MAAO,CACH,CACI,OAAQ,CAAC,0CACT,OAAQ,gCAGhB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,WAGE,EAAqB,GACvB,OAAO,KAAK,GACP,OAAQ,GAAQ,EAAI,WAAW,iBAAmB,EAAI,WAAW,oBACjE,MAAM,EAAG,IAAM,OAAO,SAAS,EAAE,MAAM,KAAK,IAAM,OAAO,SAAS,EAAE,MAAM,KAAK,KAAK,GAEvF,GAAgB,EAAK,IAAY,qBAAqB,EAAI,SAAS,EAAQ,kBAAkB,EAAQ,wBAErG,EAAU,GACZ,EACK,IAAK,GAAM,CACR,OAAQ,EAAE,KAAV,CACI,IAAK,OACD,OAAO,EAAE,KACb,IAAK,aACD,MAAO,eAAe,EAAE,KAAK,eACjC,IAAK,WACD,MAAO,YAAY,EAAE,SAAS,IAAK,GAAM,OAAO,EAAE,KAAK,QAAQ,KAAK,IAAI,aAC5E,IAAK,cACD,OAAO,EAAE,WAAa,UAChB,+GAA+G,EAAE,QAAQ,6CACrH,MAAM,mCAAmC,EAAE,YACzD,IAAK,cACD,OAAO,EAAE,kBACJ,IAAK,GAAU,CACZ,IAAM,EAAI,EAAM,OAAO,EAAkB,EAAM,SAAS,GACxD,OAAO,EAAa,EAAE,IAAK,EAAE,WAEhC,KAAK,IACd,QACI,MAAU,MAAM,0BAA0B,EAAE,WAGvD,KAAK,IAEd,eAAe,GAAU,CACrB,IAAM,EAAU,gCACV,EAAU,GAAG,EAAQ,WAIrB,EAAkB,GAAG,EAAQ,UAC7B,EAAc,KAAK,UAAU,CAC/B,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;WA2BP,cAAe,iBACf,UAAW,CACP,WAAY,oBACZ,KAAM,EACN,IAAK,4CAIP,EAAU,MAAMC,EAAO,EAAiB,CAC1C,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,IAGJ,EAAO,EAAQ,KAAK,gBAAgB,SAAS,QAAQ,IAAK,IAAU,CACtE,MAAO,EAAK,SACZ,KAAM,GAAG,IAAU,EAAK,cACxB,MAAO,EAAK,QAAQ,0BAA0B,IAC9C,SAAU,EAAK,YAGb,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAW,MAAMD,EAAO,EAAK,MAC7B,EAAI,EAAK,GAET,EAAW,KAAK,MAAM,EAAE,wBAAwB,QAChD,EAAU,EAAS,MAAM,UAAU,QACzC,EAAK,QAAU,EAAU,EAAQ,aACjC,EAAK,OAAS,EAAQ,OAAO,KAC7B,IAAM,EAAY,EAAQ,OAAO,EAAkB,EAAQ,SAAS,GAGpE,MAFA,GAAK,YAAc,EAAa,EAAU,IAAK,EAAU,SAAW,EAAO,EAAQ,KAAK,SAEjF,MAKnB,MAAO,CACH,MAAO,mCACP,SAAU,KACV,YAAa,mCACb,KAAM,WAAW,IACjB,KAAM"}