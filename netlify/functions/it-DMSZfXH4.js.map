{"version":3,"file":"it-DMSZfXH4.js","names":["got","route: Route","got","util","cache"],"sources":["../../lib/routes/bjfu/it/utils.ts","../../lib/routes/bjfu/it/index.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport iconv from 'iconv-lite';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\n// 完整文章页\r\nasync function loadContent(link) {\r\n    let response;\r\n    try {\r\n        response = await got.get(link, {\r\n            responseType: 'buffer',\r\n        });\r\n    } catch {\r\n        return { description: '' };\r\n    }\r\n\r\n    const data = response.data; // 不用转码\r\n\r\n    // 加载文章内容\r\n    let $ = load(iconv.decode(data, 'utf-8'));\r\n    const charset = $('meta[charset]').attr('charset');\r\n    if (charset?.toLowerCase() !== 'utf-8') {\r\n        $ = load(iconv.decode(data, charset ?? 'utf-8'));\r\n    }\r\n\r\n    // 提取内容\r\n    const description = ($('.template-body').length ? $('.template-body').html() : '') + ($('.template-tail').length ? $('.template-tail').html() : '');\r\n\r\n    // 返回解析的结果\r\n    return { description };\r\n}\r\n\r\nconst ProcessFeed = (base, list, caches) =>\r\n    // 使用 Promise.all() 进行 async 并发\r\n    Promise.all(\r\n        // 遍历每一篇文章\r\n        list.map((item) => {\r\n            const $ = load(item);\r\n\r\n            const $title = $('a');\r\n            // 还原相对链接为绝对链接\r\n            const itemUrl = new URL($title.attr('href'), base).href; // 感谢@hoilc指导\r\n\r\n            // 解析日期\r\n            const pubDate = timezone(\r\n                parseDate(\r\n                    $('span')\r\n                        .text()\r\n                        .match(/\\d{4}-\\d{2}-\\d{2}/)\r\n                ),\r\n                +8\r\n            );\r\n\r\n            // 使用tryGet方法从缓存获取内容。\r\n            // 当缓存中无法获取到链接内容的时候，则使用load方法加载文章内容。\r\n            return caches.tryGet(itemUrl, async () => {\r\n                const { description } = await loadContent(itemUrl);\r\n\r\n                // 列表上提取到的信息\r\n                return {\r\n                    title: $title.text(),\r\n                    link: itemUrl,\r\n                    author: '北林信息',\r\n                    description,\r\n                    pubDate,\r\n                };\r\n            });\r\n        })\r\n    );\r\nexport default { ProcessFeed };\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport util from './utils';\r\nimport iconv from 'iconv-lite';\r\n\r\nexport const route: Route = {\r\n    path: '/it/:type',\r\n    categories: ['university'],\r\n    example: '/bjfu/it/xyxw',\r\n    parameters: { type: '通知类别' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['it.bjfu.edu.cn/:type/index.html'],\r\n        },\r\n    ],\r\n    name: '信息学院通知',\r\n    maintainers: ['wzc-blog'],\r\n    handler,\r\n    description: `| 学院新闻 | 科研动态 | 本科生培养 | 研究生培养 |\r\n| -------- | -------- | ---------- | ---------- |\r\n| xyxw     | kydt     | pydt       | pydt2      |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type');\r\n    let title, path;\r\n    switch (type) {\r\n        case 'kydt':\r\n            title = '科研动态';\r\n            path = 'kyxz/kydt/';\r\n            break;\r\n        case 'pydt':\r\n            title = '本科生培养';\r\n            path = 'bkspy/pydt/';\r\n            break;\r\n        case 'pydt2':\r\n            title = '研究生培养';\r\n            path = 'yjspy/pydt2/';\r\n            break;\r\n        default:\r\n            title = '学院新闻';\r\n            path = 'xyxw/';\r\n    }\r\n    const base = 'http://it.bjfu.edu.cn/' + path;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        responseType: 'buffer',\r\n        url: base,\r\n    });\r\n\r\n    const data = response.data;\r\n    let $ = load(iconv.decode(data, 'utf-8'));\r\n    const charset = $('meta[charset]').attr('charset');\r\n    if (charset?.toLowerCase() !== 'utf-8') {\r\n        $ = load(iconv.decode(data, charset ?? 'utf-8'));\r\n    }\r\n\r\n    const list = $('.item-content').toArray();\r\n\r\n    const result = await util.ProcessFeed(base, list, cache); // 感谢@hoilc指导\r\n\r\n    return {\r\n        title: '北林信息 - ' + title,\r\n        link: 'http://it.bjfu.edu.cn/' + path,\r\n        description: '北京林业大学信息学院 - ' + title,\r\n        item: result,\r\n    };\r\n}\r\n"],"mappings":"obAOA,eAAe,EAAY,EAAM,CAC7B,IAAI,EACJ,GAAI,CACA,EAAW,MAAME,EAAI,IAAI,EAAM,CAC3B,aAAc,gBAEd,CACJ,MAAO,CAAE,YAAa,IAG1B,IAAM,EAAO,EAAS,KAGlB,EAAI,EAAK,EAAM,OAAO,EAAM,UAC1B,EAAU,EAAE,iBAAiB,KAAK,WACpC,GAAS,gBAAkB,UAC3B,EAAI,EAAK,EAAM,OAAO,EAAM,GAAW,WAI3C,IAAM,GAAe,EAAE,kBAAkB,OAAS,EAAE,kBAAkB,OAAS,KAAO,EAAE,kBAAkB,OAAS,EAAE,kBAAkB,OAAS,IAGhJ,MAAO,CAAE,eAGb,MAAM,GAAe,EAAM,EAAM,IAE7B,QAAQ,IAEJ,EAAK,IAAK,GAAS,CACf,IAAM,EAAI,EAAK,GAET,EAAS,EAAE,KAEX,EAAU,IAAI,IAAI,EAAO,KAAK,QAAS,GAAM,KAG7C,EAAU,EACZ,EACI,EAAE,QACG,OACA,MAAM,sBAEf,GAKJ,OAAO,EAAO,OAAO,EAAS,SAAY,CACtC,GAAM,CAAE,eAAgB,MAAM,EAAY,GAG1C,MAAO,CACH,MAAO,EAAO,OACd,KAAM,EACN,OAAQ,OACR,cACA,gBAKpB,IAAA,EAAe,CAAE,eC/DjB,MAAaD,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,cACb,QAAS,gBACT,WAAY,CAAE,KAAM,QACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qCAGjB,KAAM,SACN,YAAa,CAAC,YACd,UACA,YAAa;;oDAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACvB,EAAO,EACX,OAAQ,EAAR,CACI,IAAK,OACD,EAAQ,OACR,EAAO,aACP,MACJ,IAAK,OACD,EAAQ,QACR,EAAO,cACP,MACJ,IAAK,QACD,EAAQ,QACR,EAAO,eACP,MACJ,QACI,EAAQ,OACR,EAAO,QAEf,IAAM,EAAO,yBAA2B,EAElC,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,aAAc,SACd,IAAK,IAGH,EAAO,EAAS,KAClB,EAAI,EAAK,EAAM,OAAO,EAAM,UAC1B,EAAU,EAAE,iBAAiB,KAAK,WACpC,GAAS,gBAAkB,UAC3B,EAAI,EAAK,EAAM,OAAO,EAAM,GAAW,WAG3C,IAAM,EAAO,EAAE,iBAAiB,UAE1B,EAAS,MAAMC,EAAK,YAAY,EAAM,EAAMC,GAElD,MAAO,CACH,MAAO,UAAY,EACnB,KAAM,yBAA2B,EACjC,YAAa,gBAAkB,EAC/B,KAAM"}