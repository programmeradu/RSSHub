{"version":3,"file":"blog-zYhTQhM2.js","names":[],"sources":["../../lib/routes/hashnode/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst baseApiUrl = 'https://api.hashnode.com';\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:username',\r\n    categories: ['blog'],\r\n    example: '/hashnode/blog/inklings',\r\n    parameters: { username: '博主名称，用户头像 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['hashnode.dev/'],\r\n        },\r\n    ],\r\n    name: '用户博客',\r\n    maintainers: ['hnrainll'],\r\n    handler,\r\n    url: 'hashnode.dev/',\r\n    description: `::: tip\r\n  username 为博主用户名，而非\\`xxx.hashnode.dev\\`中\\`xxx\\`所代表的 blog 地址。\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const username = ctx.req.param('username');\r\n    if (!username) {\r\n        return;\r\n    }\r\n\r\n    const query = `\r\n    {\r\n        user(username: \"${username}\") {\r\n            publication {\r\n                posts{\r\n                    slug\r\n                    title\r\n                    brief\r\n                    coverImage\r\n                    dateAdded\r\n                }\r\n            }\r\n        }\r\n    }\r\n    `;\r\n\r\n    const userUrl = `https://${username}.hashnode.dev`;\r\n    const response = await got({\r\n        method: 'POST',\r\n        url: baseApiUrl,\r\n        headers: {\r\n            Referer: userUrl,\r\n            'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ query }),\r\n    });\r\n\r\n    const publication = response.data.data.user.publication;\r\n    if (!publication) {\r\n        return;\r\n    }\r\n\r\n    const list = publication.posts;\r\n    return {\r\n        title: `Hashnode by ${username}`,\r\n        link: userUrl,\r\n        item: list\r\n            .map((item) => ({\r\n                title: item.title,\r\n                description: art(path.join(__dirname, 'templates/description.art'), {\r\n                    image: item.coverImage,\r\n                    brief: item.brief,\r\n                }),\r\n                pubDate: parseDate(item.dateAdded),\r\n                link: `${userUrl}/${item.slug}`,\r\n            }))\r\n            .filter((item) => item !== ''),\r\n    };\r\n}\r\n"],"mappings":"qYAOA,MAEa,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,QACb,QAAS,0BACT,WAAY,CAAE,SAAU,qBACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mBAGjB,KAAM,OACN,YAAa,CAAC,YACd,UACA,IAAK,gBACL,YAAa,2EAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YAC/B,GAAI,CAAC,EACD,OAGJ,IAAM,EAAQ;;0BAEQ,EAAS;;;;;;;;;;;;MAczB,EAAU,WAAW,EAAS,eAC9B,EAAW,MAAM,EAAI,CACvB,OAAQ,OACR,IAAK,2BACL,QAAS,CACL,QAAS,EACT,eAAgB,oBAEpB,KAAM,KAAK,UAAU,CAAE,YAGrB,EAAc,EAAS,KAAK,KAAK,KAAK,YAC5C,GAAI,CAAC,EACD,OAGJ,IAAM,EAAO,EAAY,MACzB,MAAO,CACH,MAAO,eAAe,IACtB,KAAM,EACN,KAAM,EACD,IAAK,IAAU,CACZ,MAAO,EAAK,MACZ,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,MAAO,EAAK,WACZ,MAAO,EAAK,QAEhB,QAAS,EAAU,EAAK,WACxB,KAAM,GAAG,EAAQ,GAAG,EAAK,UAE5B,OAAQ,GAAS,IAAS"}