{"version":3,"file":"tribe-set-DdMn2WMZ.js","names":["cache","ofetch"],"sources":["../../lib/routes/500px/utils.ts","../../lib/routes/500px/tribe-set.ts"],"sourcesContent":["import ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport { config } from '@/config';\r\n\r\nconst baseUrl = 'https://500px.com.cn';\r\n\r\n/*\r\nty_rum.server = {\r\n    id: 'Fm3hXcTiLT8',\r\n    ignore_err: true,\r\n    beacon: 'beacon.tingyun.com',\r\n    beacon_err: 'beacon-err.tingyun.com',\r\n    key: 'M1laN7-zRM0',\r\n    trace_threshold: 7000,\r\n    custom_urls: [],\r\n    sr: 1.0,\r\n};\r\nv && v.id && this._ty_rum && y(this._ty_rum.url) && (this._ty_rum.r = (new Date).getTime() % 1e8,\r\nthis.setRequestHeader && this.setRequestHeader(\"X-Tingyun-Id\", v.id + \";r=\" + this._ty_rum.r))\r\n*/\r\nconst headers = {\r\n    // {\"anonymousId\":\"\",\"latitude\":null,\"longitude\":null,\"manufacturer\":\"\",\"province\":\"\",\"area\":\"\",\"city\":\"\"}\r\n    'x-500px-client-info': 'eyJhbm9ueW1vdXNJZCI6IiIsImxhdGl0dWRlIjpudWxsLCJsb25naXR1ZGUiOm51bGwsIm1hbnVmYWN0dXJlciI6IiIsInByb3ZpbmNlIjoiIiwiYXJlYSI6IiIsImNpdHkiOiIifQ==',\r\n    'X-Tingyun-Id': `Fm3hXcTiLT8;r=${Date.now() % 1e8}`,\r\n};\r\n\r\nconst getUserInfoFromUsername = (username) =>\r\n    cache.tryGet(`500px:user:${username}`, async () => {\r\n        const data = await ofetch(`${baseUrl}/${username}`);\r\n        const $ = load(data);\r\n        return JSON.parse(\r\n            $('script[type=\"text/javascript\"]')\r\n                .text()\r\n                .match(/var cur_user = new Object\\((.*?)\\);/)?.[1] || '{}'\r\n        );\r\n    });\r\n\r\nconst getUserInfoFromId = (id) =>\r\n    cache.tryGet(`500px:user:indexInfo:${id}`, async () => {\r\n        const data = await ofetch(`${baseUrl}/community/v2/user/indexInfo`, {\r\n            headers: {\r\n                ...headers,\r\n            },\r\n            query: {\r\n                queriedUserId: id,\r\n            },\r\n        });\r\n        return data.data;\r\n    });\r\n\r\nconst getUserWorks = (id, limit) =>\r\n    cache.tryGet(\r\n        `500px:user:profile:${id}`,\r\n        async () => {\r\n            const data = await ofetch(`${baseUrl}/community/v2/user/profile`, {\r\n                headers: {\r\n                    ...headers,\r\n                },\r\n                query: {\r\n                    resourceType: '0,2,4',\r\n                    imgsize: 'p1,p2,p3,p4',\r\n                    queriedUserId: id,\r\n                    startTime: '',\r\n                    page: 1,\r\n                    size: limit,\r\n                    type: 'json',\r\n                },\r\n            });\r\n            return data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst getTribeDetail = (id) =>\r\n    cache.tryGet(\r\n        `500px:tribeDetail:${id}`,\r\n        async () => {\r\n            const data = await ofetch(`${baseUrl}/community/tribe/tribeDetail`, {\r\n                headers: {\r\n                    ...headers,\r\n                },\r\n                query: {\r\n                    tribeId: id,\r\n                },\r\n            });\r\n            return data.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst getTribeSets = (id, limit) =>\r\n    cache.tryGet(\r\n        `500px:tribeSets:${id}`,\r\n        async () => {\r\n            const data = await ofetch(`${baseUrl}/community/tribe/getTribeSetsV2`, {\r\n                headers: {\r\n                    ...headers,\r\n                },\r\n                query: {\r\n                    tribeId: id,\r\n                    privacy: 1,\r\n                    page: 1,\r\n                    size: limit,\r\n                    type: 'json',\r\n                },\r\n            });\r\n            return data.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nexport { baseUrl, getUserInfoFromUsername, getUserInfoFromId, getUserWorks, getTribeDetail, getTribeSets };\r\n","import { Route, ViewType } from '@/types';\r\n\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nimport { baseUrl, getTribeDetail, getTribeSets } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/tribe/set/:id',\r\n    categories: ['picture'],\r\n    view: ViewType.Pictures,\r\n    example: '/500px/tribe/set/f5de0b8aa6d54ec486f5e79616418001',\r\n    parameters: { id: '部落 ID' },\r\n    name: '部落影集',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const limit = Number.parseInt(ctx.req.query('limit')) || 100;\r\n\r\n    const { tribe } = await getTribeDetail(id);\r\n    const tribeSets = await getTribeSets(id, limit);\r\n\r\n    const items = tribeSets.map((item) => ({\r\n        title: item.title,\r\n        description: art(path.join(__dirname, 'templates/tribeSet.art'), { item }),\r\n        author: item.uploaderInfo.nickName,\r\n        pubDate: parseDate(item.createdTime, 'x'),\r\n        link: `${baseUrl}/community/set/${item.id}/details`,\r\n    }));\r\n\r\n    return {\r\n        title: tribe.name,\r\n        description: `${tribe.watchword} - ${tribe.introduce}`,\r\n        link: `${baseUrl}/page/tribe/detail?tribeId=${id}&pagev=set`,\r\n        image: tribe.avatar.a1,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"meAKA,MAAA,EAAA,uBAgBA,EAAA,wNAsDA,EAAA,GAAA,EAAA,OAAA,qBAAA,IAAA,SAAA,sFAYY,OAAA,EAAA,8BAMZ,GAAA,EAAA,IAAA,EAAA,OAAA,mBAAA,IAAA,SAAA,6HAgBY,OAAA,EAAA,8BCrGC,EAAe,CACxB,KAAM,iBACN,WAAY,CAAC,WACb,KAAM,EAAS,SACf,QAAS,oDACT,WAAY,CAAE,GAAI,SAClB,KAAM,OACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,WAAa,IAEnD,CAAE,SAAU,MAAM,EAAe,GACjC,EAAY,MAAM,EAAa,EAAI,GAEnC,EAAQ,EAAU,IAAK,IAAU,CACnC,MAAO,EAAK,MACZ,YAAa,EAAI,EAAA,KAAA,EAAA,mCAAgD,CAAE,SACnE,OAAQ,EAAK,aAAa,SAC1B,QAAS,EAAU,EAAK,YAAa,KACrC,KAAM,GAAG,EAAQ,iBAAiB,EAAK,GAAG,aAG9C,MAAO,CACH,MAAO,EAAM,KACb,YAAa,GAAG,EAAM,UAAU,KAAK,EAAM,YAC3C,KAAM,GAAG,EAAQ,6BAA6B,EAAG,YACjD,MAAO,EAAM,OAAO,GACpB,KAAM"}