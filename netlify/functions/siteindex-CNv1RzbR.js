import"./esm-shims-Dqvxr0BZ.js";import"./config-Dl8a1sIg.js";import"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import{cache_default as e}from"./cache-kimkMTWJ.js";import"./parse-date-Bgabdhlb.js";import"./ofetch-Bzt0BXUH.js";import{got_default as t}from"./got-CdvI2yKX.js";import{baseUrl as n,cookieJar as r}from"./utils-B3NMDEnK.js";import{load as i}from"cheerio";const a={path:`/siteindex`,categories:[`journal`],example:`/nature/siteindex`,parameters:{},features:{requireConfig:!1,requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Journal List`,maintainers:[`TonyRL`,`pseudoyu`],handler:o};async function o(a){let o=await t(`${n}/siteindex`,{cookieJar:r}),s=i(o.data),c=s(`li[class^="grid mq640-grid-12"]`).toArray().map(e=>(e=s(e),{title:e.find(`a`).attr(`href`).replaceAll(`/`,``),name:e.find(`a`).text(),link:n+e.find(`a`).attr(`href`)}));return c=await Promise.all(c.map(n=>e.tryGet(`nature:siteindex:${n.title}`,async()=>{try{let e=await t(n.link,{cookieJar:r}),a=i(e.data),o=a(`.app-latest-issue-row__image img`).attr(`src`);if(o){let e=o.match(/.*\/journal\/(\d{5})/);if(e){let t=e[1];return{title:n.title,name:n.name,id:t,description:t}}}return{title:n.title,name:n.name}}catch{return{title:n.title,name:n.name}}}))),a.set(`json`,{items:c}),{title:`Nature siteindex`,link:o.url,item:c}}export{a as route};
//# sourceMappingURL=siteindex-CNv1RzbR.js.map