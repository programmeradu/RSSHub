{"version":3,"file":"web-api-YITebs7G.js","names":["route: Route","InvalidParameterError","cache","ConfigNotFoundError"],"sources":["../../lib/routes/instagram/web-api/utils.ts","../../lib/routes/instagram/web-api/index.ts"],"sourcesContent":["import ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nconst baseUrl = 'https://www.instagram.com';\r\nconst COOKIE_URL = baseUrl;\r\n\r\nconst getCSRFTokenFromJar = async (cookieJar) => {\r\n    const cookieString = await cookieJar.getCookieString(COOKIE_URL);\r\n    return cookieString.match(/csrftoken=([^;]+)/)?.[1];\r\n};\r\n\r\nconst getHeaders = async (cookieJar) => ({\r\n    'sec-fetch-dest': 'empty',\r\n    'sec-fetch-mode': 'cors',\r\n    'sec-fetch-site': 'same-origin',\r\n    'x-asbd-id': 359341,\r\n    'x-csrftoken': await getCSRFTokenFromJar(cookieJar),\r\n    'x-ig-app-id': 936_619_743_392_459,\r\n    'x-ig-www-claim': '0',\r\n});\r\n\r\nconst checkLogin = async (cookieJar) => {\r\n    const response = await ofetch(`${baseUrl}/api/v1/web/fxcal/ig_sso_users/`, {\r\n        // cookieJar,\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n            cookie: (await cookieJar.getCookieString(COOKIE_URL)) as string,\r\n            ...((await getHeaders(cookieJar)) as unknown as Record<string, string>),\r\n            // 'X-IG-WWW-Claim': '0',\r\n        },\r\n        method: 'POST',\r\n    });\r\n\r\n    // const wwwClaimV2 = response.headers['x-ig-set-www-claim'];\r\n\r\n    // if (wwwClaimV2) {\r\n    //     cache.set('instagram:wwwClaimV2', wwwClaimV2);\r\n    // }\r\n\r\n    return Boolean(response.status === 'ok');\r\n};\r\n\r\nconst getUserInfo = async (username, cookieJar) => {\r\n    let webProfileInfo;\r\n    let id = await cache.get(`instagram:getIdByUsername:${username}`);\r\n    let userInfoCache = await cache.get(`instagram:userInfo:${id}`);\r\n    userInfoCache = userInfoCache && typeof userInfoCache === 'string' ? JSON.parse(userInfoCache) : userInfoCache;\r\n\r\n    if (!userInfoCache) {\r\n        try {\r\n            const response = await ofetch.raw(`${baseUrl}/api/v1/users/web_profile_info/`, {\r\n                // cookieJar,\r\n                headers: {\r\n                    cookie: (await cookieJar.getCookieString(COOKIE_URL)) as string,\r\n                    ...((await getHeaders(cookieJar)) as unknown as Record<string, string>),\r\n                    // 'X-IG-WWW-Claim': (await cache.get('instagram:wwwClaimV2')) ?? undefined,\r\n                },\r\n                query: {\r\n                    username,\r\n                },\r\n            });\r\n            if (response.url.includes('/accounts/login/')) {\r\n                throw new ConfigNotFoundError('Invalid cookie');\r\n            }\r\n\r\n            webProfileInfo = response._data.data.user;\r\n            id = webProfileInfo.id;\r\n\r\n            await cache.set(`instagram:getIdByUsername:${username}`, id, 31_536_000); // 1 year since it will never change\r\n            await cache.set(`instagram:userInfo:${id}`, webProfileInfo);\r\n        } catch (error) {\r\n            if (error.message.includes(\"Cookie not in this host's domain\")) {\r\n                throw new ConfigNotFoundError('Invalid cookie');\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    return userInfoCache || webProfileInfo;\r\n};\r\n\r\nconst getUserFeedItems = (id, username, cookieJar) =>\r\n    cache.tryGet(\r\n        `instagram:feed:${id}`,\r\n        async () => {\r\n            const response = await ofetch.raw(`${baseUrl}/api/v1/feed/user/${username}/username/`, {\r\n                // cookieJar,\r\n                headers: {\r\n                    cookie: (await cookieJar.getCookieString(COOKIE_URL)) as string,\r\n                    ...((await getHeaders(cookieJar)) as unknown as Record<string, string>),\r\n                    // 401 Unauthorized if cookie does not match with IP\r\n                    // 'X-IG-WWW-Claim': await cache.get('instagram:wwwClaimV2'),\r\n                },\r\n                query: {\r\n                    count: 30,\r\n                },\r\n            });\r\n            if (response.url.includes('/accounts/login/')) {\r\n                throw new ConfigNotFoundError(`Invalid cookie.\r\n                Please also check if your account is being blocked by Instagram.`);\r\n            }\r\n\r\n            return response._data.items;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst getTagsFeed = (tag, cookieJar) =>\r\n    cache.tryGet(\r\n        `instagram:tags:${tag}`,\r\n        async () => {\r\n            const response = await ofetch(`${baseUrl}/api/v1/tags/web_info/`, {\r\n                // cookieJar, cookieJar is behaving weirdly here, so we use cookie header instead\r\n                headers: {\r\n                    cookie: (await cookieJar.getCookieString(COOKIE_URL)) as string,\r\n                    ...((await getHeaders(cookieJar)) as unknown as Record<string, string>),\r\n                },\r\n                query: {\r\n                    tag_name: tag,\r\n                },\r\n            });\r\n\r\n            return response.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst renderGuestItems = (items) => {\r\n    const renderVideo = (node, summary) =>\r\n        art(path.join(__dirname, '../templates/video.art'), {\r\n            summary,\r\n            image: node.display_url,\r\n            video: {\r\n                url: node.video_url,\r\n                height: node.dimensions.height,\r\n                width: node.dimensions.width,\r\n            },\r\n        });\r\n    const renderImages = (node, summary) =>\r\n        art(path.join(__dirname, '../templates/images.art'), {\r\n            summary,\r\n            images: [{ url: node.display_url, height: node.dimensions.height, width: node.dimensions.width }],\r\n        });\r\n\r\n    return items.map(({ node }) => {\r\n        const type = node.__typename;\r\n        const summary = node.edge_media_to_caption.edges[0]?.node.text ?? '';\r\n\r\n        let description = '';\r\n        switch (type) {\r\n            // carousel, can include GraphVideo and GraphImage\r\n            case 'GraphSidecar':\r\n                description = node.edge_sidecar_to_children\r\n                    ? node.edge_sidecar_to_children.edges\r\n                          .map(({ node }, i) => {\r\n                              const _type = node.__typename;\r\n                              switch (_type) {\r\n                                  case 'GraphVideo':\r\n                                      return renderVideo(node, i === 0 ? summary : '');\r\n                                  case 'GraphImage':\r\n                                      return renderImages(node, i === 0 ? summary : '');\r\n                                  default:\r\n                                      throw new Error(`Instagram: Unhandled carousel type: ${_type}`);\r\n                              }\r\n                          })\r\n                          .join('')\r\n                    : renderImages(node, summary);\r\n                break;\r\n            case 'GraphVideo':\r\n                description = renderVideo(node, summary);\r\n                break;\r\n            case 'GraphImage':\r\n                description = renderImages(node, summary);\r\n                break;\r\n            default:\r\n                throw new Error(`Instagram: Unhandled feed type: ${type}`);\r\n        }\r\n\r\n        return {\r\n            title: summary.split('\\n')[0],\r\n            id: node.id,\r\n            pubDate: parseDate(node.taken_at_timestamp, 'X'),\r\n            author: node.owner.username,\r\n            link: `${baseUrl}/p/${node.shortcode}/`,\r\n            summary,\r\n            description,\r\n        };\r\n    });\r\n};\r\n\r\nexport { baseUrl, COOKIE_URL, checkLogin, getUserInfo, getUserFeedItems, getTagsFeed, renderGuestItems };\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { CookieJar } from 'tough-cookie';\r\nimport { config } from '@/config';\r\nimport { renderItems } from '../common-utils';\r\nimport { baseUrl, COOKIE_URL, checkLogin, getUserInfo, getUserFeedItems, getTagsFeed, renderGuestItems } from './utils';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/2/:category/:key',\r\n    categories: ['social-media'],\r\n    example: '/instagram/2/user/stefaniejoosten',\r\n    parameters: { category: 'Feed category, see table below', key: 'Username / Hashtag name' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'User Profile / Hashtag',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    description: `::: tip\r\nYou may need to setup cookie for a less restrictive rate limit and private profiles.\r\n:::\r\n\r\n\r\n| User timeline | Hashtag |\r\n| ------------- | ------- |\r\n| user          | tags    |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    // if (!config.instagram || !config.instagram.cookie) {\r\n    //     throw new ConfigNotFoundError('Instagram RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    // }\r\n    const availableCategories = ['user', 'tags'];\r\n    const { category, key } = ctx.req.param();\r\n    const { cookie } = config.instagram;\r\n    if (!availableCategories.includes(category)) {\r\n        throw new InvalidParameterError('Such feed is not supported.');\r\n    }\r\n\r\n    let cookieJar = await cache.get('instagram:cookieJar');\r\n    // const wwwClaimV2 = await cache.get('instagram:wwwClaimV2');\r\n    const cacheMiss = !cookieJar;\r\n\r\n    if (cacheMiss) {\r\n        cookieJar = new CookieJar();\r\n        if (cookie) {\r\n            for await (const c of cookie.split('; ')) {\r\n                await cookieJar.setCookie(c, COOKIE_URL);\r\n            }\r\n        }\r\n    } else {\r\n        cookieJar = CookieJar.fromJSON(cookieJar);\r\n    }\r\n\r\n    if (/* !wwwClaimV2 &&*/ cookie && !(await checkLogin(cookieJar))) {\r\n        throw new ConfigNotFoundError('Invalid cookie');\r\n    }\r\n\r\n    let feedTitle, feedLink, feedDescription, feedLogo;\r\n    let items;\r\n    switch (category) {\r\n        case 'user': {\r\n            const userInfo = await getUserInfo(key, cookieJar);\r\n\r\n            // User feed metadata\r\n            const biography = userInfo.biography;\r\n            const fullName = userInfo.full_name;\r\n            const id = userInfo.id;\r\n            const username = userInfo.username;\r\n            feedTitle = `${fullName} (@${username}) - Instagram`;\r\n            feedDescription = biography;\r\n            // exists in web api ?? exist in private api ?? exist in both\r\n            feedLogo = userInfo.profile_pic_url_hd ?? userInfo.hd_profile_pic_url_info?.url ?? userInfo.profile_pic_url;\r\n            feedLink = `${baseUrl}/${username}`;\r\n\r\n            items = cookie ? await getUserFeedItems(id, username, cookieJar) : [...userInfo.edge_felix_video_timeline.edges, ...userInfo.edge_owner_to_timeline_media.edges];\r\n\r\n            break;\r\n        }\r\n        case 'tags': {\r\n            if (!config.instagram || !config.instagram.cookie) {\r\n                throw new ConfigNotFoundError('Instagram RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n            }\r\n            const tag = key;\r\n\r\n            feedTitle = `#${tag} - Instagram`;\r\n            feedLink = `${baseUrl}/explore/search/keyword/?q=%23${tag}`;\r\n\r\n            const feedData = await getTagsFeed(tag, cookieJar);\r\n\r\n            feedLogo = feedData.profile_pic_url;\r\n            items = feedData.top.sections.flatMap((section) =>\r\n                // either media or clips\r\n                (section.feed_type === 'media' ? section.layout_content.medias : [...section.layout_content.one_by_two_item.clips.items, ...section.layout_content.fill_items]).map((item) => item.media)\r\n            );\r\n\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    await cache.set('instagram:cookieJar', cookieJar.toJSON(), 31_536_000);\r\n\r\n    return {\r\n        title: feedTitle,\r\n        link: feedLink,\r\n        description: feedDescription,\r\n        item: cookie ? renderItems(items) : renderGuestItems(items),\r\n        icon: `${baseUrl}/static/images/ico/xxhdpi_launcher.png/99cf3909d459.png`,\r\n        logo: feedLogo,\r\n        image: feedLogo,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"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"}