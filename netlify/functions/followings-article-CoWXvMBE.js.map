{"version":3,"file":"followings-article-CoWXvMBE.js","names":["route: Route","cache","ConfigNotFoundError","got"],"sources":["../../lib/routes/bilibili/followings-article.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport cache from './cache';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/followings/article/:uid',\r\n    categories: ['social-media'],\r\n    example: '/bilibili/followings/article/99800931',\r\n    parameters: { uid: '用户 id' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'BILIBILI_COOKIE_*',\r\n                description: `BILIBILI_COOKIE_{uid}: 用于用户关注动态系列路由，对应 uid 的 b 站用户登录后的 Cookie 值，\\`{uid}\\` 替换为 uid，如 \\`BILIBILI_COOKIE_2267573\\`，获取方式：\r\n    1.  打开 [https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&type=8](https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&type=8)\r\n    2.  打开控制台，切换到 Network 面板，刷新\r\n    3.  点击 dynamic_new 请求，找到 Cookie\r\n    4.  视频和专栏，UP 主粉丝及关注只要求 \\`SESSDATA\\` 字段，动态需复制整段 Cookie`,\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '用户关注专栏',\r\n    maintainers: ['woshiluo'],\r\n    handler,\r\n    description: `::: warning\r\n  用户动态需要 b 站登录后的 Cookie 值，所以只能自建，详情见部署页面的配置模块。\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = String(ctx.req.param('uid'));\r\n    const name = await cache.getUsernameFromUID(uid);\r\n\r\n    const cookie = config.bilibili.cookies[uid];\r\n    if (cookie === undefined) {\r\n        throw new ConfigNotFoundError('缺少对应 uid 的 Bilibili 用户登录后的 Cookie 值');\r\n    }\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: `https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=${uid}&type=64`,\r\n        headers: {\r\n            Referer: `https://space.bilibili.com/${uid}/`,\r\n            Cookie: cookie,\r\n        },\r\n    });\r\n    if (response.data.code === -6) {\r\n        throw new ConfigNotFoundError('对应 uid 的 Bilibili 用户的 Cookie 已过期');\r\n    }\r\n    const cards = response.data.data.cards;\r\n\r\n    const out = await Promise.all(\r\n        cards.map(async (card) => {\r\n            const card_data = JSON.parse(card.card);\r\n            const { url: link, description } = await cache.getArticleDataFromCvid(card_data.id, uid);\r\n\r\n            const item = {\r\n                title: card_data.title,\r\n                description,\r\n                pubDate: new Date(card_data.publish_time * 1000).toUTCString(),\r\n                link,\r\n                author: card.desc.user_profile.info.uname,\r\n            };\r\n            return item;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `${name} 关注专栏动态`,\r\n        link: `https://t.bilibili.com/?tab=64`,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"0hBAMA,MAAaA,EAAe,CACxB,KAAM,2BACN,WAAY,CAAC,gBACb,QAAS,wCACT,WAAY,CAAE,IAAK,SACnB,SAAU,CACN,cAAe,CACX,CACI,KAAM,oBACN,YAAa,oaAOrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,YACd,UACA,YAAa;;MAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,OAAO,EAAI,IAAI,MAAM,QAC3B,EAAO,MAAMC,EAAM,mBAAmB,GAEtC,EAAS,EAAO,SAAS,QAAQ,GACvC,GAAI,IAAW,IAAA,GACX,MAAM,IAAIC,EAAoB,uCAGlC,IAAM,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,0EAA0E,EAAI,UACnF,QAAS,CACL,QAAS,8BAA8B,EAAI,GAC3C,OAAQ,KAGhB,GAAI,EAAS,KAAK,OAAS,GACvB,MAAM,IAAID,EAAoB,oCAElC,IAAM,EAAQ,EAAS,KAAK,KAAK,MAE3B,EAAM,MAAM,QAAQ,IACtB,EAAM,IAAI,KAAO,IAAS,CACtB,IAAM,EAAY,KAAK,MAAM,EAAK,MAC5B,CAAE,IAAK,EAAM,eAAgB,MAAMD,EAAM,uBAAuB,EAAU,GAAI,GAE9E,EAAO,CACT,MAAO,EAAU,MACjB,cACA,QAAS,IAAI,KAAK,EAAU,aAAe,KAAM,cACjD,OACA,OAAQ,EAAK,KAAK,aAAa,KAAK,OAExC,OAAO,KAIf,MAAO,CACH,MAAO,GAAG,EAAK,SACf,KAAM,iCACN,KAAM"}