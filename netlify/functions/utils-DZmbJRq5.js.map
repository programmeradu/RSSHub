{"version":3,"file":"utils-DZmbJRq5.js","names":[],"sources":["../../lib/routes/misskey/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nimport { MisskeyNote, MisskeyUser } from './types';\r\n\r\nconst allowSiteList = ['misskey.io', 'madost.one', 'mk.nixnet.social'];\r\n\r\nconst parseNotes = (data: MisskeyNote[], site: string, simplifyAuthor: boolean = false) =>\r\n    data.map((item: MisskeyNote) => {\r\n        const isRenote = item.renote && Object.keys(item.renote).length > 0;\r\n        const isReply = item.reply && Object.keys(item.reply).length > 0;\r\n        const noteToUse: MisskeyNote = isRenote ? (item.renote as MisskeyNote) : item;\r\n\r\n        const host = noteToUse.user.host ?? site;\r\n        const author = simplifyAuthor ? String(noteToUse.user.name) : `${noteToUse.user.name} (${noteToUse.user.username}@${host})`;\r\n\r\n        const description = art(path.join(__dirname, 'templates/note.art'), {\r\n            text: noteToUse.text,\r\n            files: noteToUse.files,\r\n            reply: item.reply,\r\n            site,\r\n        });\r\n\r\n        let title = '';\r\n        if (isReply && item.reply) {\r\n            const replyToHost = item.reply.user.host ?? site;\r\n            const replyToAuthor = simplifyAuthor ? item.reply.user.name : `${item.reply.user.name} (${item.reply.user.username}@${replyToHost})`;\r\n            title = `Reply to ${replyToAuthor}: \"${noteToUse.text ?? ''}\"`;\r\n        } else if (isRenote) {\r\n            title = `Renote: ${author}: \"${noteToUse.text ?? ''}\"`;\r\n        } else {\r\n            title = `${author}: \"${noteToUse.text ?? ''}\"`;\r\n        }\r\n\r\n        /**\r\n         * For renotes from non-Misskey instances (e.g. Mastodon, Pleroma),\r\n         * we can't use noteToUse.id to link to the original note since:\r\n         * 1. The URL format differs from Misskey's /notes/{id} pattern\r\n         * 2. Direct access to the original note may not be possible\r\n         * Therefore, we link to the renote itself in such cases\r\n         */\r\n        let noteId = noteToUse.id;\r\n\r\n        if (isRenote) {\r\n            const renoteHost = item.user.host ?? site;\r\n            const noteHost = noteToUse.user.host ?? site;\r\n\r\n            // Use renote's ID if the note is from a different host or not in allowSiteList\r\n            if (renoteHost !== noteHost || !allowSiteList.includes(noteHost)) {\r\n                noteId = item.id;\r\n            }\r\n        }\r\n        const link = `https://${host}/notes/${noteId}`;\r\n        const pubDate = parseDate(noteToUse.createdAt);\r\n\r\n        return {\r\n            title,\r\n            description,\r\n            pubDate,\r\n            link,\r\n            author,\r\n        };\r\n    });\r\nasync function getUserTimelineByUsername(username, site, { withRenotes = false, mediaOnly = false }) {\r\n    const searchUrl = `https://${site}/api/users/search-by-username-and-host`;\r\n    const cacheUid = `misskey_username/${site}/${username}`;\r\n\r\n    const userData = (await cache.tryGet(cacheUid, async () => {\r\n        const searchResponse = await got({\r\n            method: 'post',\r\n            url: searchUrl,\r\n            json: {\r\n                username,\r\n                host: site,\r\n                detail: true,\r\n                limit: 1,\r\n            },\r\n        });\r\n        const user = searchResponse.data.find((item) => item.username === username);\r\n\r\n        if (!user) {\r\n            throw new Error(`username ${username} not found`);\r\n        }\r\n        return user;\r\n    })) as MisskeyUser;\r\n\r\n    const accountId = userData.id;\r\n    const avatarUrl = userData.avatarUrl;\r\n\r\n    // https://misskey.io/api-doc#tag/users/operation/users___notes\r\n    const usernotesUrl = `https://${site}/api/users/notes`;\r\n    const usernotesResponse = await got({\r\n        method: 'post',\r\n        url: usernotesUrl,\r\n        json: {\r\n            userId: accountId,\r\n            withChannelNotes: true,\r\n            withRenotes,\r\n            withReplies: !mediaOnly, // Disable replies if mediaOnly is true\r\n            withFiles: mediaOnly,\r\n            limit: 10,\r\n            offset: 0,\r\n        },\r\n    });\r\n    const accountData = usernotesResponse.data;\r\n    return { site, accountId, accountData, avatarUrl };\r\n}\r\n\r\nexport default { parseNotes, getUserTimelineByUsername, allowSiteList };\r\n"],"mappings":"ySAQA,MAAM,EAAgB,CAAC,aAAc,aAAc,oBAE7C,GAAc,EAAqB,EAAc,EAA0B,KAC7E,EAAK,IAAK,GAAsB,CAC5B,IAAM,EAAW,EAAK,QAAU,OAAO,KAAK,EAAK,QAAQ,OAAS,EAC5D,EAAU,EAAK,OAAS,OAAO,KAAK,EAAK,OAAO,OAAS,EACzD,EAAyB,EAAY,EAAK,OAAyB,EAEnE,EAAO,EAAU,KAAK,MAAQ,EAC9B,EAAS,EAAiB,OAAO,EAAU,KAAK,MAAQ,GAAG,EAAU,KAAK,KAAK,IAAI,EAAU,KAAK,SAAS,GAAG,EAAK,GAEnH,EAAc,EAAI,EAAA,KAAA,EAAA,+BAA4C,CAChE,KAAM,EAAU,KAChB,MAAO,EAAU,MACjB,MAAO,EAAK,MACZ,SAGA,EAAQ,GACZ,GAAI,GAAW,EAAK,MAAO,CACvB,IAAM,EAAc,EAAK,MAAM,KAAK,MAAQ,EACtC,EAAgB,EAAiB,EAAK,MAAM,KAAK,KAAO,GAAG,EAAK,MAAM,KAAK,KAAK,IAAI,EAAK,MAAM,KAAK,SAAS,GAAG,EAAY,GAClI,EAAQ,YAAY,EAAc,KAAK,EAAU,MAAQ,GAAG,QAI5D,EAHO,EACC,WAAW,EAAO,KAAK,EAAU,MAAQ,GAAG,GAE5C,GAAG,EAAO,KAAK,EAAU,MAAQ,GAAG,GAUhD,IAAI,EAAS,EAAU,GAEvB,GAAI,EAAU,CACV,IAAM,EAAa,EAAK,KAAK,MAAQ,EAC/B,EAAW,EAAU,KAAK,MAAQ,GAGpC,IAAe,GAAY,CAAC,EAAc,SAAS,MACnD,EAAS,EAAK,IAGtB,IAAM,EAAO,WAAW,EAAK,SAAS,IAChC,EAAU,EAAU,EAAU,WAEpC,MAAO,CACH,QACA,cACA,UACA,OACA,YAGZ,eAAe,EAA0B,EAAU,EAAM,CAAE,cAAc,GAAO,YAAY,IAAS,CACjG,IAAM,EAAY,WAAW,EAAK,wCAC5B,EAAW,oBAAoB,EAAK,GAAG,IAEvC,EAAY,MAAM,EAAM,OAAO,EAAU,SAAY,CACvD,IAAM,EAAiB,MAAM,EAAI,CAC7B,OAAQ,OACR,IAAK,EACL,KAAM,CACF,WACA,KAAM,EACN,OAAQ,GACR,MAAO,KAGT,EAAO,EAAe,KAAK,KAAM,GAAS,EAAK,WAAa,GAElE,GAAI,CAAC,EACD,MAAU,MAAM,YAAY,EAAS,aAEzC,OAAO,IAGL,EAAY,EAAS,GACrB,EAAY,EAAS,UAGrB,EAAe,WAAW,EAAK,kBAC/B,EAAoB,MAAM,EAAI,CAChC,OAAQ,OACR,IAAK,EACL,KAAM,CACF,OAAQ,EACR,iBAAkB,GAClB,cACA,YAAa,CAAC,EACd,UAAW,EACX,MAAO,GACP,OAAQ,KAGV,EAAc,EAAkB,KACtC,MAAO,CAAE,OAAM,YAAW,cAAa,aAG3C,IAAA,EAAe,CAAE,aAAY,4BAA2B"}