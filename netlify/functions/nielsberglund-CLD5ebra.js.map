{"version":3,"file":"nielsberglund-CLD5ebra.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/nielsberglund/index.ts"],"sourcesContent":["import { Route, DataItem } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['blog'],\r\n    example: '/nielsberglund/blog',\r\n    radar: [\r\n        {\r\n            source: ['nielsberglund.com/'],\r\n        },\r\n    ],\r\n    url: 'nielsberglund.com/',\r\n    name: 'Blog',\r\n    maintainers: ['liyaozhong'],\r\n    handler,\r\n    description: 'Niels Berglund Blog Posts',\r\n};\r\n\r\nasync function handler() {\r\n    const rootUrl = 'https://nielsberglund.com';\r\n    const currentUrl = rootUrl;\r\n\r\n    const response = await got(currentUrl);\r\n    const $ = load(response.data);\r\n\r\n    let items = $('.post-preview')\r\n        .toArray()\r\n        .map((item) => {\r\n            const $item = $(item);\r\n            const $link = $item.find('a').first();\r\n            const href = $link.attr('href');\r\n            const title = $item.find('.post-title').first().text().trim();\r\n            const dateStr = $item.find('.post-meta').text().trim();\r\n\r\n            if (!href || !title) {\r\n                return null;\r\n            }\r\n\r\n            const link = new URL(href, rootUrl).href;\r\n            const pubDate = parseDate(dateStr);\r\n\r\n            return {\r\n                title,\r\n                link,\r\n                pubDate,\r\n            } as DataItem;\r\n        })\r\n        .filter((item): item is DataItem => item !== null);\r\n\r\n    items = (\r\n        await Promise.all(\r\n            items.map((item) =>\r\n                cache.tryGet(item.link as string, async () => {\r\n                    try {\r\n                        const detailResponse = await got(item.link);\r\n                        const $detail = load(detailResponse.data);\r\n\r\n                        item.description = $detail('.post-container').html() || '';\r\n\r\n                        return item;\r\n                    } catch {\r\n                        return item;\r\n                    }\r\n                })\r\n            )\r\n        )\r\n    ).filter((item): item is DataItem => item !== null);\r\n\r\n    return {\r\n        title: 'Niels Berglund Blog',\r\n        link: rootUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,sBACT,MAAO,CACH,CACI,OAAQ,CAAC,wBAGjB,IAAK,qBACL,KAAM,OACN,YAAa,CAAC,cACd,UACA,YAAa,6BAGjB,eAAe,GAAU,CACrB,IAAM,EAAU,4BAGV,EAAW,MAAMC,EAAI,6BACrB,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,iBACT,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GACV,EAAQ,EAAM,KAAK,KAAK,QACxB,EAAO,EAAM,KAAK,QAClB,EAAQ,EAAM,KAAK,eAAe,QAAQ,OAAO,OACjD,EAAU,EAAM,KAAK,cAAc,OAAO,OAEhD,GAAI,CAAC,GAAQ,CAAC,EACV,OAAO,KAGX,IAAM,EAAO,IAAI,IAAI,EAAM,GAAS,KAC9B,EAAU,EAAU,GAE1B,MAAO,CACH,QACA,OACA,aAGP,OAAQ,GAA2B,IAAS,MAqBjD,MAnBA,IACI,MAAM,QAAQ,IACV,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAgB,SAAY,CAC1C,GAAI,CACA,IAAM,EAAiB,MAAMD,EAAI,EAAK,MAChC,EAAU,EAAK,EAAe,MAIpC,MAFA,GAAK,YAAc,EAAQ,mBAAmB,QAAU,GAEjD,OACH,CACJ,OAAO,QAKzB,OAAQ,GAA2B,IAAS,MAEvC,CACH,MAAO,sBACP,KAAM,EACN,KAAM"}