{"version":3,"file":"post-DrwKntF8.js","names":["route: Route","got"],"sources":["../../lib/routes/gelbooru/utils.ts","../../lib/routes/gelbooru/post.ts"],"sourcesContent":["import path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { config } from '@/config';\r\n\r\nexport function renderDesc(post, link, quality: 'sample' | 'orig') {\r\n    const { id, source, owner, file_url: fileUrl, tags, score } = post;\r\n    const isHttp = /^https?:\\/\\//.test(source);\r\n    const sourceHost = isHttp ? new URL(source).host : source || 'unknown';\r\n    const imgQualityMap = { sample: 'sample_url', orig: 'file_url' };\r\n\r\n    // 判断是否是视频链接\r\n    const videoExtList = ['mp4', 'webm'];\r\n    const fileExt = fileUrl.slice(fileUrl.lastIndexOf('.') + 1);\r\n    const isVideo = videoExtList.includes(fileExt);\r\n    // 如果是视频则始终使用 fileUrl（原文件）\r\n    let contentURL = post[imgQualityMap[quality]] || fileUrl;\r\n    if (isVideo) {\r\n        contentURL = fileUrl;\r\n    }\r\n\r\n    return art(path.join(__dirname, 'templates/description.art'), {\r\n        id,\r\n        source,\r\n        owner,\r\n        tags,\r\n        link,\r\n        isHttp,\r\n        sourceHost,\r\n        contentURL,\r\n        isVideo,\r\n        score: score || 0,\r\n    });\r\n}\r\n\r\nexport function getAPIKeys() {\r\n    return {\r\n        apiKey: config.gelbooru.apiKey || '',\r\n        userId: config.gelbooru.userId || '',\r\n    };\r\n}\r\n","import { Route, ViewType } from '@/types';\r\nimport { Context } from 'hono';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { renderDesc, getAPIKeys } from './utils';\r\n\r\nimport got from '@/utils/got';\r\nimport queryString from 'query-string';\r\n\r\nexport const route: Route = {\r\n    path: '/post/:tags?/:quality?',\r\n    categories: ['picture'],\r\n    view: ViewType.Pictures,\r\n    example: '/gelbooru/post/1girl rating:general',\r\n    parameters: {\r\n        tags: '要搜索的标签，多个标签用 ` `（空格）隔开',\r\n        quality: {\r\n            description: '图片质量，可选值为 `sample`（压缩后的图片，推荐值） 或 `orig`（原图），默认为 `sample`',\r\n            default: 'sample',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'GELBOORU_API_KEY',\r\n                description: 'Gelbooru 偶尔会开启 API 认证，需配合 `GELBOORU_USER_ID`，从 `https://gelbooru.com/index.php?page=account&s=options` 获取',\r\n                optional: true,\r\n            },\r\n            {\r\n                name: 'GELBOORU_USER_ID',\r\n                description: '参见 `GELBOORU_API_KEY`',\r\n                optional: true,\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gelbooru.com/index.php'],\r\n        },\r\n    ],\r\n    name: '标签查询',\r\n    maintainers: ['magicFeirl'],\r\n    description: `\r\n- 默认查询: \\`/gelbooru/post\\` 功能等同查询 Gelbooru 网站最新的投稿\r\n- 单标签查询: \\`/gelbooru/post/1girl\\` 查询 \\`1girl\\` 的最新投稿\r\n- 多标签查询: \\`/gelbooru/post/1girl school_uniform rating:general\\`\r\n- 指定为原图: \\`/gelbooru/post/1girl school_uniform rating:general/orig\\`\r\n- 更多例子: 请参考 Gelbooru 官方 wiki https://gelbooru.com/index.php?page=wiki&s=&s=view&id=25921\r\n\r\n**可选的 URL 参数**\r\n- limit 页面返回数据量，默认 40，可选 1 ~ 100\r\n\r\ne.g.: \\`/gelbooru/post?limit=20&\\`\r\n`,\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const { tags: _tags = '', quality = 'sample' }: { tags?: string; quality?: 'sample' | 'orig' } = ctx.req.param();\r\n\r\n    const tags = decodeURIComponent(_tags).trim();\r\n\r\n    const { limit = 40 }: { limit?: number } = ctx.req.query();\r\n    const { apiKey, useId } = getAPIKeys();\r\n\r\n    const response = await got({\r\n        url: 'https://gelbooru.com/index.php',\r\n        searchParams: queryString.stringify({\r\n            page: 'dapi',\r\n            s: 'post',\r\n            q: 'index',\r\n            tags,\r\n            api_key: apiKey,\r\n            user_id: useId,\r\n            limit: limit <= 0 || limit > 100 ? 40 : limit,\r\n            json: 1,\r\n        }),\r\n    });\r\n\r\n    const posts = response.data.post;\r\n\r\n    return {\r\n        title: tags ? `${tags} - gelbooru.com` : 'gelbooru.com post list',\r\n        link: `https://gelbooru.com/index.php?page=post&s=list&tags=${tags}`,\r\n        icon: 'https://gelbooru.com/favicon.png',\r\n        logo: 'https://gelbooru.com/favicon.png',\r\n        description: 'Gelbooru post list',\r\n        item: posts.map((post) => ({\r\n            title: post.id,\r\n            id: post.id,\r\n            link: `https://gelbooru.com/index.php?page=post&s=view&id=${post.id}`,\r\n            author: post.owner,\r\n            pubDate: parseDate(post.created_at),\r\n            description: renderDesc(post, `https://gelbooru.com/index.php?page=post&s=view&id=${post.id}`, quality),\r\n            upvotes: post.score,\r\n            updated: parseDate(post.change),\r\n            media: {\r\n                content: {\r\n                    url: post.file_url,\r\n                },\r\n                thumbnail: {\r\n                    url: post.preview_url,\r\n                },\r\n            },\r\n            category: post.tags.split(/\\s+/g),\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"ieAIA,SAAgB,EAAW,EAAM,EAAM,EAA4B,CAC/D,GAAM,CAAE,KAAI,SAAQ,QAAO,SAAU,EAAS,OAAM,SAAU,EACxD,EAAS,eAAe,KAAK,GAC7B,EAAa,EAAS,IAAI,IAAI,GAAQ,KAAO,GAAU,UACvD,EAAgB,CAAE,OAAQ,aAAc,KAAM,YAG9C,EAAe,CAAC,MAAO,QACvB,EAAU,EAAQ,MAAM,EAAQ,YAAY,KAAO,GACnD,EAAU,EAAa,SAAS,GAElC,EAAa,EAAK,EAAc,KAAa,EAKjD,OAJI,IACA,EAAa,GAGV,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC1D,KACA,SACA,QACA,OACA,OACA,SACA,aACA,aACA,UACA,MAAO,GAAS,IAIxB,SAAgB,GAAa,CACzB,MAAO,CACH,OAAQ,EAAO,SAAS,QAAU,GAClC,OAAQ,EAAO,SAAS,QAAU,IC7B1C,MAAaA,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,WACb,KAAM,EAAS,SACf,QAAS,sCACT,WAAY,CACR,KAAM,yBACN,QAAS,CACL,YAAa,2DACb,QAAS,WAGjB,SAAU,CACN,cAAe,CACX,CACI,KAAM,mBACN,YAAa,4GACb,SAAU,IAEd,CACI,KAAM,mBACN,YAAa,wBACb,SAAU,KAGlB,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,4BAGjB,KAAM,OACN,YAAa,CAAC,cACd,YAAa,8ZAYb,WAGJ,eAAe,EAAQ,EAAc,CACjC,GAAM,CAAE,KAAM,EAAQ,GAAI,UAAU,UAA6D,EAAI,IAAI,QAEnG,EAAO,mBAAmB,GAAO,OAEjC,CAAE,QAAQ,IAA2B,EAAI,IAAI,QAC7C,CAAE,SAAQ,SAAU,IAEpB,EAAW,MAAMC,EAAI,CACvB,IAAK,iCACL,aAAc,EAAY,UAAU,CAChC,KAAM,OACN,EAAG,OACH,EAAG,QACH,OACA,QAAS,EACT,QAAS,EACT,MAAO,GAAS,GAAK,EAAQ,IAAM,GAAK,EACxC,KAAM,MAIR,EAAQ,EAAS,KAAK,KAE5B,MAAO,CACH,MAAO,EAAO,GAAG,EAAK,iBAAmB,yBACzC,KAAM,wDAAwD,IAC9D,KAAM,mCACN,KAAM,mCACN,YAAa,qBACb,KAAM,EAAM,IAAK,IAAU,CACvB,MAAO,EAAK,GACZ,GAAI,EAAK,GACT,KAAM,sDAAsD,EAAK,KACjE,OAAQ,EAAK,MACb,QAAS,EAAU,EAAK,YACxB,YAAa,EAAW,EAAM,sDAAsD,EAAK,KAAM,GAC/F,QAAS,EAAK,MACd,QAAS,EAAU,EAAK,QACxB,MAAO,CACH,QAAS,CACL,IAAK,EAAK,UAEd,UAAW,CACP,IAAK,EAAK,cAGlB,SAAU,EAAK,KAAK,MAAM"}