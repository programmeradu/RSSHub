{"version":3,"file":"account-id-CtLB_TQc.js","names":["route: Route","utils","ConfigNotFoundError"],"sources":["../../lib/routes/mastodon/account-id.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport utils from './utils';\r\nimport { config } from '@/config';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/account_id/:site/:account_id/statuses/:only_media?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/mastodon/account_id/mas.to/109300507275095341/statuses/false',\r\n    parameters: {\r\n        site: 'instance address, only domain, no `http://` or `https://` protocol header',\r\n        account_id: 'account ID, you can get it from `https://INSTANCE/api/v1/accounts/lookup?acct=USERNAME` api',\r\n        only_media: {\r\n            description: 'whether only display media content, default to false, any value to true',\r\n            options: [\r\n                { value: 'true', label: 'true' },\r\n                { value: 'false', label: 'false' },\r\n            ],\r\n            default: 'false',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'User timeline (by account ID)',\r\n    maintainers: ['notofoe', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const site = ctx.req.param('site');\r\n    const account_id = ctx.req.param('account_id');\r\n    const only_media = ctx.req.param('only_media') === 'true' ? 'true' : 'false';\r\n    if (!config.feature.allow_user_supply_unsafe_domain && !utils.allowSiteList.includes(site)) {\r\n        throw new ConfigNotFoundError(`This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\r\n    }\r\n\r\n    const { account_data, data } = await utils.getAccountStatuses(site, account_id, only_media);\r\n\r\n    return {\r\n        title: `${account_data.display_name} (@${account_data.acct})`,\r\n        link: account_data.url,\r\n        description: account_data.note,\r\n        item: utils.parseStatuses(data),\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"qcAKA,MAAaA,EAAe,CACxB,KAAM,sDACN,WAAY,CAAC,gBACb,KAAM,EAAS,YACf,QAAS,gEACT,WAAY,CACR,KAAM,4EACN,WAAY,8FACZ,WAAY,CACR,YAAa,0EACb,QAAS,CACL,CAAE,MAAO,OAAQ,MAAO,QACxB,CAAE,MAAO,QAAS,MAAO,UAE7B,QAAS,UAGjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,gCACN,YAAa,CAAC,UAAW,YACzB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAa,EAAI,IAAI,MAAM,cAC3B,EAAa,EAAI,IAAI,MAAM,gBAAkB,OAAS,OAAS,QACrE,GAAI,CAAC,EAAO,QAAQ,iCAAmC,CAACC,EAAM,cAAc,SAAS,GACjF,MAAM,IAAIC,EAAoB,mFAGlC,GAAM,CAAE,eAAc,QAAS,MAAMD,EAAM,mBAAmB,EAAM,EAAY,GAEhF,MAAO,CACH,MAAO,GAAG,EAAa,aAAa,KAAK,EAAa,KAAK,GAC3D,KAAM,EAAa,IACnB,YAAa,EAAa,KAC1B,KAAMA,EAAM,cAAc,GAC1B,WAAY"}