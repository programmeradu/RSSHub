{"version":3,"file":"author-sTph4QpZ.js","names":[],"sources":["../../lib/routes/tencent/news/author.ts"],"sourcesContent":["import { Route, Data } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/news/author/:mid',\r\n    categories: ['new-media'],\r\n    example: '/tencent/news/author/5933889',\r\n    parameters: { mid: '企鹅号 ID' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            title: '当前作者文章',\r\n            source: ['news.qq.com/omn/author/:mid'],\r\n        },\r\n    ],\r\n    name: '作者',\r\n    maintainers: ['LogicJake', 'miles170'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const mid = ctx.req.param('mid');\r\n    const userType = /^\\d+$/.test(mid) ? 'chlid' : 'guestSuid';\r\n    const homePageInfoUrl = `https://i.news.qq.com/i/getUserHomepageInfo?${userType}=${mid}`;\r\n    const userInfo = await cache.tryGet(homePageInfoUrl, async () => (await got(homePageInfoUrl)).data.userinfo);\r\n    const title = userInfo.nick;\r\n    const description = userInfo.user_desc;\r\n    const suid = encodeURIComponent(userInfo.suid);\r\n\r\n    const newsListUrl = `https://i.news.qq.com/getSubNewsMixedList?guestSuid=${suid}&tabId=om_index`;\r\n    const news = await cache.tryGet(newsListUrl, async () => (await got(newsListUrl)).data.newslist, config.cache.routeExpire, false);\r\n\r\n    const items = await Promise.all(\r\n        news.map((item) => {\r\n            const title = item.title;\r\n            const pubDate = parseDate(item.timestamp, 'X');\r\n            const itemUrl = item.url;\r\n            const author = item.source;\r\n            const abstract = item.abstract;\r\n\r\n            if (item.articletype === '4' || item.articletype === '118') {\r\n                // Video\r\n                return {\r\n                    title,\r\n                    description: `<a href=${item.url}><img src=\"${item.articletype === '4' ? item.miniProShareImage : item.miniVideoPic}\" style=\"width: 100%\"></a>`,\r\n                    link: itemUrl,\r\n                    author,\r\n                    pubDate,\r\n                };\r\n            }\r\n\r\n            return cache.tryGet(itemUrl, async () => {\r\n                const response = await got(itemUrl);\r\n                const $ = load(response.data);\r\n                const data = JSON.parse(\r\n                    $('script:contains(\"window.DATA\")')\r\n                        .text()\r\n                        .match(/window\\.DATA = ({.+});/)[1]\r\n                );\r\n                const $data = load(data.originContent?.text || '', null, false);\r\n                if ($data) {\r\n                    // Not video page\r\n                    $data('*')\r\n                        .contents()\r\n                        .filter((_, elem) => elem.type === 'comment')\r\n                        .replaceWith((_, elem) =>\r\n                            art(path.join(__dirname, '../templates/news/image.art'), {\r\n                                attribute: elem.data.trim(),\r\n                                originAttribute: data.originAttribute,\r\n                            })\r\n                        );\r\n                }\r\n\r\n                return {\r\n                    title,\r\n                    description: $data.html() || abstract,\r\n                    link: itemUrl,\r\n                    author,\r\n                    pubDate,\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title,\r\n        description,\r\n        link: `https://new.qq.com/omn/author/${mid}`,\r\n        item: items,\r\n        image: userInfo?.shareImg,\r\n    };\r\n}\r\n"],"mappings":"yeAUA,MAAa,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,aACb,QAAS,+BACT,WAAY,CAAE,IAAK,UACnB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,MAAO,SACP,OAAQ,CAAC,iCAGjB,KAAM,KACN,YAAa,CAAC,YAAa,YAC3B,WAGJ,eAAe,EAAQ,EAAoB,CACvC,IAAM,EAAM,EAAI,IAAI,MAAM,OACpB,EAAW,QAAQ,KAAK,GAAO,QAAU,YACzC,EAAkB,+CAA+C,EAAS,GAAG,IAC7E,EAAW,MAAM,EAAM,OAAO,EAAiB,UAAa,MAAM,EAAI,IAAkB,KAAK,UAC7F,EAAQ,EAAS,KACjB,EAAc,EAAS,UACvB,EAAO,mBAAmB,EAAS,MAEnC,EAAc,uDAAuD,EAAK,iBAC1E,EAAO,MAAM,EAAM,OAAO,EAAa,UAAa,MAAM,EAAI,IAAc,KAAK,SAAU,EAAO,MAAM,YAAa,IAErH,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GAAS,CACf,IAAM,EAAQ,EAAK,MACb,EAAU,EAAU,EAAK,UAAW,KACpC,EAAU,EAAK,IACf,EAAS,EAAK,OACd,EAAW,EAAK,SAatB,OAXI,EAAK,cAAgB,KAAO,EAAK,cAAgB,MAE1C,CACH,MAAA,EACA,YAAa,WAAW,EAAK,IAAI,aAAa,EAAK,cAAgB,IAAM,EAAK,kBAAoB,EAAK,aAAa,4BACpH,KAAM,EACN,SACA,WAID,EAAM,OAAO,EAAS,SAAY,CACrC,IAAM,EAAW,MAAM,EAAI,GACrB,EAAI,EAAK,EAAS,MAClB,EAAO,KAAK,MACd,EAAE,kCACG,OACA,MAAM,0BAA0B,IAEnC,EAAQ,EAAK,EAAK,eAAe,MAAQ,GAAI,KAAM,IAczD,OAbI,GAEA,EAAM,KACD,WACA,QAAQ,EAAG,IAAS,EAAK,OAAS,WAClC,aAAa,EAAG,IACb,EAAI,EAAA,KAAA,EAAA,gCAAqD,CACrD,UAAW,EAAK,KAAK,OACrB,gBAAiB,EAAK,mBAK/B,CACH,MAAA,EACA,YAAa,EAAM,QAAU,EAC7B,KAAM,EACN,SACA,gBAMhB,MAAO,CACH,QACA,cACA,KAAM,iCAAiC,IACvC,KAAM,EACN,MAAO,GAAU"}