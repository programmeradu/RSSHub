{"version":3,"file":"navigation-BdZJEQ29.js","names":["route: Route","ofetch","cache"],"sources":["../../lib/routes/afr/navigation.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport type { Context } from 'hono';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { pageByNavigationPathQuery } from './query';\r\nimport { getItem } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/navigation/:path{.+}',\r\n    categories: ['traditional-media'],\r\n    example: '/afr/navigation/markets',\r\n    parameters: {\r\n        path: 'Navigation path, can be found in the URL of the page',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.afr.com/path*'],\r\n        },\r\n    ],\r\n    name: 'Navigation',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'www.afr.com',\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const { path } = ctx.req.param();\r\n    const limit = Number.parseInt(ctx.req.query('limit') ?? '10');\r\n\r\n    const response = await ofetch('https://api.afr.com/api/content-audience/afr/graphql', {\r\n        query: {\r\n            query: pageByNavigationPathQuery,\r\n            operationName: 'pageByNavigationPath',\r\n            variables: {\r\n                input: { brandKey: 'afr', navigationPath: `/${path}`, renderName: 'web' },\r\n                firstStories: limit,\r\n                afterStories: '',\r\n            },\r\n        },\r\n    });\r\n\r\n    const list = response.data.pageByNavigationPath.page.latestStoriesConnection.edges.map(({ node }) => ({\r\n        title: node.headlines.headline,\r\n        description: node.overview.about,\r\n        link: `https://www.afr.com${node.urls.canonical.path}`,\r\n        pubDate: parseDate(node.dates.firstPublished),\r\n        updated: parseDate(node.dates.modified),\r\n        author: node.byline\r\n            .filter((byline) => byline.type === 'AUTHOR')\r\n            .map((byline) => byline.author.name)\r\n            .join(', '),\r\n        category: [node.tags.primary.displayName, ...node.tags.secondary.map((tag) => tag.displayName)],\r\n        image: node.images && `https://static.ffx.io/images/${node.images.landscape16x9.mediaId}`,\r\n    }));\r\n\r\n    const items = await Promise.all(list.map((item) => cache.tryGet(item.link, () => getItem(item))));\r\n\r\n    return {\r\n        title: response.data.pageByNavigationPath.page.seo.title,\r\n        description: response.data.pageByNavigationPath.page.seo.description,\r\n        image: 'https://www.afr.com/apple-touch-icon-1024x1024.png',\r\n        link: `https://www.afr.com/${path}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"iWASA,MAAaA,EAAe,CACxB,KAAM,wBACN,WAAY,CAAC,qBACb,QAAS,0BACT,WAAY,CACR,KAAM,wDAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAGjB,KAAM,aACN,YAAa,CAAC,UACd,UACA,IAAK,eAGT,eAAe,EAAQ,EAAc,CACjC,GAAM,CAAE,QAAS,EAAI,IAAI,QACnB,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,MAElD,EAAW,MAAMC,EAAO,uDAAwD,CAClF,MAAO,CACH,MAAO,EACP,cAAe,uBACf,UAAW,CACP,MAAO,CAAE,SAAU,MAAO,eAAgB,IAAI,IAAQ,WAAY,OAClE,aAAc,EACd,aAAc,OAKpB,EAAO,EAAS,KAAK,qBAAqB,KAAK,wBAAwB,MAAM,KAAK,CAAE,WAAY,CAClG,MAAO,EAAK,UAAU,SACtB,YAAa,EAAK,SAAS,MAC3B,KAAM,sBAAsB,EAAK,KAAK,UAAU,OAChD,QAAS,EAAU,EAAK,MAAM,gBAC9B,QAAS,EAAU,EAAK,MAAM,UAC9B,OAAQ,EAAK,OACR,OAAQ,GAAW,EAAO,OAAS,UACnC,IAAK,GAAW,EAAO,OAAO,MAC9B,KAAK,MACV,SAAU,CAAC,EAAK,KAAK,QAAQ,YAAa,GAAG,EAAK,KAAK,UAAU,IAAK,GAAQ,EAAI,cAClF,MAAO,EAAK,QAAU,gCAAgC,EAAK,OAAO,cAAc,aAG9E,EAAQ,MAAM,QAAQ,IAAI,EAAK,IAAK,GAASC,EAAM,OAAO,EAAK,SAAY,EAAQ,MAEzF,MAAO,CACH,MAAO,EAAS,KAAK,qBAAqB,KAAK,IAAI,MACnD,YAAa,EAAS,KAAK,qBAAqB,KAAK,IAAI,YACzD,MAAO,qDACP,KAAM,uBAAuB,IAC7B,KAAM"}