{"version":3,"file":"gs-BXjcmJaa.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/whu/gs/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst gsIndexMap = new Map([\r\n    [0, 'xwdt.htm'],\r\n    [1, 'xs_ts.htm'],\r\n    [2, 'yxfc.htm'],\r\n    [3, 'tzgg/qb.htm'],\r\n    [4, 'tzgg/zs.htm'],\r\n    [5, 'tzgg/py.htm'],\r\n    [6, 'tzgg/xw.htm'],\r\n    [7, 'tzgg/zlyzyxw.htm'],\r\n    [8, 'tzgg/zh.htm'],\r\n]);\r\n\r\nexport const route: Route = {\r\n    path: '/gs/:type?',\r\n    categories: ['university'],\r\n    example: '/whu/gs/0',\r\n    parameters: { type: '分类，默认为 `0`，具体参数见下表' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gs.whu.edu.cn/index.htm', 'gs.whu.edu.cn/'],\r\n            target: '/gs',\r\n        },\r\n    ],\r\n    name: '研究生院',\r\n    maintainers: ['Delreyaa'],\r\n    handler,\r\n    url: 'gs.whu.edu.cn/index.htm',\r\n    description: `| 公告类型 | 新闻动态 | 学术探索 | 院系风采 | 通知 (全部) | 通知 (招生) | 通知 (培养) | 通知 (学位) | 通知 (质量与专业学位) | 通知 (综合) |\r\n| -------- | -------- | -------- | -------- | ----------- | ----------- | ----------- | ----------- | --------------------- | ----------- |\r\n| 参数     | 0        | 1        | 2        | 3           | 4           | 5           | 6           | 7                     | 8           |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const host = 'https://gs.whu.edu.cn/';\r\n    const paremType = ctx.req.param('type');\r\n    const type = paremType ? Number.parseInt(paremType) : 0;\r\n    const response = await got(host + gsIndexMap.get(type));\r\n\r\n    const $ = load(response.data);\r\n    const feed_title = $('div.location a')\r\n        .slice(-2)\r\n        .toArray()\r\n        .map((element) => $(element).text())\r\n        .join(' > ');\r\n\r\n    let items = $('.list ul li')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const link = item.find('a').attr('href');\r\n            return {\r\n                title: item.find('p').text(),\r\n                link: link.startsWith('http') ? link : new URL(link, host).href,\r\n                pubDate: parseDate(item.find('span').text()),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                try {\r\n                    const detail = await got(item.link);\r\n                    const content = load(detail.data);\r\n\r\n                    content('input').remove();\r\n                    content('h1').remove();\r\n                    content('h2').remove();\r\n                    content('div.arc-tit h2').remove();\r\n                    content('h4.information').remove();\r\n                    content('div.arc-info').remove();\r\n                    content('.con_xq').remove();\r\n\r\n                    content('form[name=_newscontent_fromname] img').each((_, i) => {\r\n                        i = $(i);\r\n                        if (i.attr('src').startsWith('/')) {\r\n                            i.attr('src', new URL(i.attr('src'), host).href);\r\n                        }\r\n                    });\r\n                    content('form[name=_newscontent_fromname] ul li a').each((_, a) => {\r\n                        a = $(a);\r\n                        if (a.attr('href').startsWith('/')) {\r\n                            a.attr('href', new URL(a.attr('href'), host).href);\r\n                        }\r\n                    });\r\n\r\n                    item.description = content('form[name=_newscontent_fromname]').html();\r\n                    return item;\r\n                } catch {\r\n                    item.description = 'NULL';\r\n                    return item;\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `武汉大学研究生院 - ${feed_title}`,\r\n        link: host + gsIndexMap.get(type),\r\n        description: '武大研究生院',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAM,EAAa,IAAI,IAAI,CACvB,CAAC,EAAG,YACJ,CAAC,EAAG,aACJ,CAAC,EAAG,YACJ,CAAC,EAAG,eACJ,CAAC,EAAG,eACJ,CAAC,EAAG,eACJ,CAAC,EAAG,eACJ,CAAC,EAAG,oBACJ,CAAC,EAAG,iBAGKA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,cACb,QAAS,YACT,WAAY,CAAE,KAAM,sBACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAA2B,kBACpC,OAAQ,QAGhB,KAAM,OACN,YAAa,CAAC,YACd,UACA,IAAK,0BACL,YAAa;;4IAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,yBACP,EAAY,EAAI,IAAI,MAAM,QAC1B,EAAO,EAAY,OAAO,SAAS,GAAa,EAChD,EAAW,MAAMC,EAAI,EAAO,EAAW,IAAI,IAE3C,EAAI,EAAK,EAAS,MAClB,EAAa,EAAE,kBAChB,MAAM,IACN,UACA,IAAK,GAAY,EAAE,GAAS,QAC5B,KAAK,OAEN,EAAQ,EAAE,eACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAO,EAAK,KAAK,KAAK,KAAK,QACjC,MAAO,CACH,MAAO,EAAK,KAAK,KAAK,OACtB,KAAM,EAAK,WAAW,QAAU,EAAO,IAAI,IAAI,EAAM,GAAM,KAC3D,QAAS,EAAU,EAAK,KAAK,QAAQ,WA0CjD,MAtCA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CACA,IAAM,EAAS,MAAMD,EAAI,EAAK,MACxB,EAAU,EAAK,EAAO,MAwB5B,OAtBA,EAAQ,SAAS,SACjB,EAAQ,MAAM,SACd,EAAQ,MAAM,SACd,EAAQ,kBAAkB,SAC1B,EAAQ,kBAAkB,SAC1B,EAAQ,gBAAgB,SACxB,EAAQ,WAAW,SAEnB,EAAQ,wCAAwC,MAAM,EAAG,IAAM,CAC3D,EAAI,EAAE,GACF,EAAE,KAAK,OAAO,WAAW,MACzB,EAAE,KAAK,MAAO,IAAI,IAAI,EAAE,KAAK,OAAQ,GAAM,QAGnD,EAAQ,4CAA4C,MAAM,EAAG,IAAM,CAC/D,EAAI,EAAE,GACF,EAAE,KAAK,QAAQ,WAAW,MAC1B,EAAE,KAAK,OAAQ,IAAI,IAAI,EAAE,KAAK,QAAS,GAAM,QAIrD,EAAK,YAAc,EAAQ,oCAAoC,OACxD,OACH,CAEJ,MADA,GAAK,YAAc,OACZ,OAMhB,CACH,MAAO,cAAc,IACrB,KAAM,EAAO,EAAW,IAAI,GAC5B,YAAa,SACb,KAAM"}