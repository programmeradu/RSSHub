{"version":3,"file":"channel-BUJu4FtU.js","names":[],"sources":["../../lib/routes/youku/channel.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/channel/:channelId/:embed?',\r\n    categories: ['multimedia'],\r\n    example: '/youku/channel/UNTg3MTM3OTcy',\r\n    parameters: { channelId: '频道 id', embed: '默认为开启内嵌视频, 任意值为关闭' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['i.youku.com/i/:id'],\r\n            target: '/channel/:id',\r\n        },\r\n    ],\r\n    name: '频道',\r\n    maintainers: ['xyqfer', 'Fatpandac'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const channelId = ctx.req.param('channelId');\r\n    const embed = !ctx.req.param('embed');\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: `https://i.youku.com/i/${channelId}/videos`,\r\n        headers: {\r\n            Host: 'i.youku.com',\r\n            Referer: `https://i.youku.com/i/${channelId}`,\r\n        },\r\n    });\r\n\r\n    const data = response.data;\r\n    const $ = load(data);\r\n    const list = $('div.videoitem_pack');\r\n\r\n    return {\r\n        title: $('.username').text(),\r\n        link: `https://i.youku.com/i/${channelId}`,\r\n        description: $('.desc').text(),\r\n        item: list\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n                const title = item.find('a.videoitem_videolink').attr('title');\r\n                const cover = item.find('a.videoitem_videolink > img').attr('src');\r\n                const $link = item.find('a.videoitem_videolink');\r\n                const link = $link.length > 0 ? `https:${$link.attr('href')}` : null;\r\n                const dateText = item.find('p.videoitem_subtitle').text().split('-').length === 2 ? `${new Date().getFullYear()}-${item.find('p.videoitem_subtitle').text()}` : item.find('p.videoitem_subtitle').text();\r\n                const pubDate = parseDate(dateText);\r\n\r\n                return link\r\n                    ? {\r\n                          title,\r\n                          description: art(path.join(__dirname, 'templates/channel.art'), {\r\n                              embed,\r\n                              videoId: path.parse(link).name.replaceAll(/^id_/g, ''),\r\n                              cover,\r\n                          }),\r\n                          link,\r\n                          pubDate,\r\n                      }\r\n                    : null;\r\n            })\r\n            .filter(Boolean),\r\n    };\r\n}\r\n"],"mappings":"oaAQA,MAAa,EAAe,CACxB,KAAM,8BACN,WAAY,CAAC,cACb,QAAS,+BACT,WAAY,CAAE,UAAW,QAAS,MAAO,qBACzC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qBACT,OAAQ,iBAGhB,KAAM,KACN,YAAa,CAAC,SAAU,aACxB,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAY,EAAI,IAAI,MAAM,aAC1B,EAAQ,CAAC,EAAI,IAAI,MAAM,SAEvB,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,IAAK,yBAAyB,EAAU,SACxC,QAAS,CACL,KAAM,cACN,QAAS,yBAAyB,OAIpC,EAAO,EAAS,KAChB,EAAI,EAAK,GACT,EAAO,EAAE,sBAEf,MAAO,CACH,MAAO,EAAE,aAAa,OACtB,KAAM,yBAAyB,IAC/B,YAAa,EAAE,SAAS,OACxB,KAAM,EACD,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAQ,EAAK,KAAK,yBAAyB,KAAK,SAChD,EAAQ,EAAK,KAAK,+BAA+B,KAAK,OACtD,EAAQ,EAAK,KAAK,yBAClB,EAAO,EAAM,OAAS,EAAI,SAAS,EAAM,KAAK,UAAY,KAC1D,EAAW,EAAK,KAAK,wBAAwB,OAAO,MAAM,KAAK,SAAW,EAAI,GAAG,IAAI,OAAO,cAAc,GAAG,EAAK,KAAK,wBAAwB,SAAW,EAAK,KAAK,wBAAwB,OAC5L,EAAU,EAAU,GAE1B,OAAO,EACD,CACI,QACA,YAAa,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAC5D,QACA,QAAS,EAAK,MAAM,GAAM,KAAK,WAAW,QAAS,IACnD,UAEJ,OACA,WAEJ,OAET,OAAO"}