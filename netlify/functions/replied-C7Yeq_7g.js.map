{"version":3,"file":"replied-C7Yeq_7g.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/douban/other/replied.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/replied/:uid',\r\n    categories: ['social-media'],\r\n    example: '/douban/replied/xiaoyaxiaoya',\r\n    parameters: { uid: '用户id，可在用户日记页 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '最新回应过的日记',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const currentUrl = `https://www.douban.com/people/${ctx.req.param('uid')}/notes`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const list = $('div.recent-replied-mod ul.comment-list li')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const p = item.find('p');\r\n            const nid = p\r\n                .find('a')\r\n                .attr('href')\r\n                .match(/%2Fnote%2F(.*?)%2F&type=note/)[1];\r\n            const title = p.find('a').text();\r\n            p.remove();\r\n\r\n            return {\r\n                title: `${item.find('a.lnk-people').text()} - ${title}`,\r\n                link: `https://www.douban.com/note/${nid}`,\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                try {\r\n                    const detailResponse = await got({\r\n                        method: 'get',\r\n                        url: item.link,\r\n                    });\r\n                    const match = detailResponse.data.match(/'comments':(.*)}],/);\r\n\r\n                    if (match.length > 1) {\r\n                        const content = load(detailResponse.data);\r\n                        const title = `${content('a.note-author').text()} - ${content('h1').text()}`;\r\n\r\n                        const comments = JSON.parse(match[1] + '}]');\r\n\r\n                        let latest = new Date(0),\r\n                            description,\r\n                            pubDate,\r\n                            author;\r\n\r\n                        for (const c of comments) {\r\n                            if (c.author.uid === ctx.req.param('uid') && new Date(c.create_time) > new Date(latest)) {\r\n                                latest = new Date(c.create_time + ' GMT+8');\r\n                                pubDate = latest.toUTCString();\r\n                                description = c.text;\r\n                                author = c.author.name;\r\n                            } else if (c.replies.length > 0) {\r\n                                comments.push(...c.replies);\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            title,\r\n                            description,\r\n                            pubDate,\r\n                            author,\r\n                            link: item.link,\r\n                        };\r\n                    }\r\n                    throw new Error('No comments');\r\n                } catch {\r\n                    return {\r\n                        title: item.title,\r\n                        link: item.link,\r\n                    };\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('title').text() + ' - 最新回应过',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAKA,MAAaA,EAAe,CACxB,KAAM,gBACN,WAAY,CAAC,gBACb,QAAS,+BACT,WAAY,CAAE,IAAK,wBACnB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,WACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAa,iCAAiC,EAAI,IAAI,MAAM,OAAO,QACnE,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,6CACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KACd,EAAM,EACP,KAAK,KACL,KAAK,QACL,MAAM,gCAAgC,GACrC,EAAQ,EAAE,KAAK,KAAK,OAG1B,OAFA,EAAE,SAEK,CACH,MAAO,GAAG,EAAK,KAAK,gBAAgB,OAAO,KAAK,IAChD,KAAM,+BAA+B,OAI3C,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,CACA,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAER,EAAQ,EAAe,KAAK,MAAM,sBAExC,GAAI,EAAM,OAAS,EAAG,CAClB,IAAM,EAAU,EAAK,EAAe,MAC9B,EAAQ,GAAG,EAAQ,iBAAiB,OAAO,KAAK,EAAQ,MAAM,SAE9D,EAAW,KAAK,MAAM,EAAM,GAAK,MAEnC,EAAS,IAAI,KAAK,GAClB,EACA,EACA,EAEJ,IAAK,IAAM,KAAK,EACR,EAAE,OAAO,MAAQ,EAAI,IAAI,MAAM,QAAU,IAAI,KAAK,EAAE,aAAe,IAAI,KAAK,IAC5E,EAAS,IAAI,KAAK,EAAE,YAAc,UAClC,EAAU,EAAO,cACjB,EAAc,EAAE,KAChB,EAAS,EAAE,OAAO,MACX,EAAE,QAAQ,OAAS,GAC1B,EAAS,KAAK,GAAG,EAAE,SAI3B,MAAO,CACH,QACA,cACA,UACA,SACA,KAAM,EAAK,MAGnB,MAAU,MAAM,oBACZ,CACJ,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EAAK,WAO/B,MAAO,CACH,MAAO,EAAE,SAAS,OAAS,WAC3B,KAAM,EACN,KAAM"}