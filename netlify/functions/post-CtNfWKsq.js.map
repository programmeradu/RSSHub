{"version":3,"file":"post-CtNfWKsq.js","names":["route: Route","got"],"sources":["../../lib/routes/loongarch/post.ts"],"sourcesContent":["import { parseDate } from '@/utils/parse-date';\r\nimport got from '@/utils/got';\r\nimport { Route } from '@/types';\r\n\r\nexport const route: Route = {\r\n    path: '/post/:type?',\r\n    categories: ['bbs'],\r\n    example: '/loongarch/post/newest',\r\n    parameters: { type: 'top 或 newest' },\r\n    radar: [\r\n        {\r\n            source: ['bbs.loongarch.org'],\r\n        },\r\n    ],\r\n    name: '最热 / 最新帖子',\r\n    maintainers: ['ladeng07', '3401797899'],\r\n    handler,\r\n    url: 'bbs.loongarch.org/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type');\r\n    const link = 'https://bbs.loongarch.org/api/discussions';\r\n\r\n    let title = '最新帖子';\r\n    let sortValue = '-createdAt';\r\n    if (type === 'top') {\r\n        title = '最热帖子';\r\n        sortValue = '-commentCount';\r\n    }\r\n\r\n    const { data: response } = await got('https://bbs.loongarch.org/api/discussions', {\r\n        searchParams: {\r\n            include: 'user,tags,tags.parent,firstPost',\r\n            sort: sortValue,\r\n            'page[offset]': 0,\r\n        },\r\n    });\r\n\r\n    const users = response.included.filter((i) => i.type === 'users');\r\n    const tags = response.included.filter((i) => i.type === 'tags');\r\n    const posts = response.included.filter((i) => i.type === 'posts');\r\n\r\n    const out = response.data.map(({ attributes, relationships }) => ({\r\n        title: attributes.title,\r\n        link: `https://bbs.loongarch.org/d/${attributes.slug}`,\r\n        author: users.find((i) => i.id === relationships.user.data.id).attributes.displayName,\r\n        description: posts.find((i) => i.id === relationships.firstPost.data.id).attributes.contentHtml,\r\n        pubDate: parseDate(attributes.createdAt),\r\n        updated: parseDate(attributes.lastPostedAt),\r\n        category: relationships.tags.data.map((tag) => tags.find((i) => i.id === tag.id).attributes.name),\r\n    }));\r\n\r\n    return {\r\n        title: `LA UOSC-${title}`,\r\n        link,\r\n        description: `LA UOSC-${title}`,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"qRAIA,MAAaA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,OACb,QAAS,yBACT,WAAY,CAAE,KAAM,gBACpB,MAAO,CACH,CACI,OAAQ,CAAC,uBAGjB,KAAM,YACN,YAAa,CAAC,WAAY,cAC1B,UACA,IAAK,sBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QAGvB,EAAQ,OACR,EAAY,aACZ,IAAS,QACT,EAAQ,OACR,EAAY,iBAGhB,GAAM,CAAE,KAAM,GAAa,MAAMC,EAAI,4CAA6C,CAC9E,aAAc,CACV,QAAS,kCACT,KAAM,EACN,eAAgB,KAIlB,EAAQ,EAAS,SAAS,OAAQ,GAAM,EAAE,OAAS,SACnD,EAAO,EAAS,SAAS,OAAQ,GAAM,EAAE,OAAS,QAClD,EAAQ,EAAS,SAAS,OAAQ,GAAM,EAAE,OAAS,SAEnD,EAAM,EAAS,KAAK,KAAK,CAAE,aAAY,oBAAqB,CAC9D,MAAO,EAAW,MAClB,KAAM,+BAA+B,EAAW,OAChD,OAAQ,EAAM,KAAM,GAAM,EAAE,KAAO,EAAc,KAAK,KAAK,IAAI,WAAW,YAC1E,YAAa,EAAM,KAAM,GAAM,EAAE,KAAO,EAAc,UAAU,KAAK,IAAI,WAAW,YACpF,QAAS,EAAU,EAAW,WAC9B,QAAS,EAAU,EAAW,cAC9B,SAAU,EAAc,KAAK,KAAK,IAAK,GAAQ,EAAK,KAAM,GAAM,EAAE,KAAO,EAAI,IAAI,WAAW,SAGhG,MAAO,CACH,MAAO,WAAW,IAClB,iDACA,YAAa,WAAW,IACxB,KAAM"}