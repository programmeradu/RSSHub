{"version":3,"file":"blog-posts-C55s3Drc.js","names":["route: Route","got","author","cache","response","$"],"sources":["../../lib/routes/konghq/blog-posts.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\n// Get the lastest blog posts of https://konghq.com/\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst BASE_URL = 'https://konghq.com';\r\nconst BLOG_POSTS_URL = `${BASE_URL}/blog`;\r\n\r\nexport const route: Route = {\r\n    path: '/blog-posts',\r\n    categories: ['programming'],\r\n    example: '/konghq/blog-posts',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['konghq.com/blog/*'],\r\n        },\r\n    ],\r\n    name: '博客最新文章',\r\n    maintainers: ['piglei'],\r\n    handler,\r\n    url: 'konghq.com/blog/*',\r\n};\r\n\r\nasync function handler() {\r\n    // Always get the posts on the first page.\r\n    const url = `${BLOG_POSTS_URL}/page/1`;\r\n\r\n    // Request and parse the index page to get the posts\r\n    const { data: response } = await got(url);\r\n    const $ = load(response);\r\n    const nextData = JSON.parse($('#__NEXT_DATA__').text());\r\n    const posts = nextData.props.pageProps.cardsPaged.cards.map((item) => {\r\n        const title = item.title;\r\n        const author = item.authors.map((author) => author.title).join(', ');\r\n        const category = item.term.title;\r\n\r\n        const link = `${BASE_URL}${item.link.href}`;\r\n        const pubDate = parseDate(item.publishedAt);\r\n        return {\r\n            title,\r\n            link,\r\n            pubDate,\r\n            author,\r\n            category,\r\n        };\r\n    });\r\n\r\n    // Request each post to get the details content as \"description\"\r\n    const items = await Promise.all(\r\n        posts.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: response } = await got(item.link);\r\n                const $ = load(response);\r\n\r\n                // Update the description to post's main content\r\n                item.description = $('section[class^=\"blog_sections\"]').first().html();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `Kong Inc(konghq.com) blog posts`,\r\n        link: BLOG_POSTS_URL,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAOA,MAAM,EAAW,qBACX,EAAiB,GAAG,EAAS,OAEtBA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,eACb,QAAS,qBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAGjB,KAAM,SACN,YAAa,CAAC,UACd,UACA,IAAK,qBAGT,eAAe,GAAU,CAErB,IAAM,EAAM,GAAG,EAAe,SAGxB,CAAE,KAAM,GAAa,MAAMC,EAAI,GAC/B,EAAI,EAAK,GACT,EAAW,KAAK,MAAM,EAAE,kBAAkB,QAC1C,EAAQ,EAAS,MAAM,UAAU,WAAW,MAAM,IAAK,GAAS,CAClE,IAAM,EAAQ,EAAK,MACb,EAAS,EAAK,QAAQ,IAAK,GAAWC,EAAO,OAAO,KAAK,MACzD,EAAW,EAAK,KAAK,MAErB,EAAO,GAAG,IAAW,EAAK,KAAK,OAC/B,EAAU,EAAU,EAAK,aAC/B,MAAO,CACH,QACA,OACA,UACA,SACA,cAKF,EAAQ,MAAM,QAAQ,IACxB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAMC,GAAa,MAAMH,EAAI,EAAK,MACpCI,EAAI,EAAKD,GAIf,MADA,GAAK,YAAcC,EAAE,mCAAmC,QAAQ,OACzD,MAKnB,MAAO,CACH,MAAO,kCACP,KAAM,EACN,KAAM"}