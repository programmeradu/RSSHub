{"version":3,"file":"activity-BcMo0Zfr.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/github/activity.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport Parser from 'rss-parser';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\nconst parser = new Parser();\r\n\r\nexport const route: Route = {\r\n    path: '/activity/:user',\r\n    name: 'User Activities',\r\n    maintainers: ['hyoban'],\r\n    example: '/github/activity/DIYgod',\r\n    categories: ['programming'],\r\n    view: ViewType.Notifications,\r\n    parameters: {\r\n        user: 'GitHub username',\r\n    },\r\n    description: 'Get the activities of a user on GitHub, based on the GitHub official RSS feed',\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['github.com/:user'],\r\n            target: '/activity/:user',\r\n        },\r\n    ],\r\n    handler: async (ctx) => {\r\n        const { user } = ctx.req.param();\r\n        const response = (await ofetch(`https://github.com/${user}.atom`)) as Blob;\r\n        const raw = await response.text();\r\n        // <media:thumbnail height=\"30\" width=\"30\" url=\"https://avatars.githubusercontent.com/u/8266075?s=30&amp;v=4\"/>\r\n        const image = raw.match(/<media:thumbnail height=\"30\" width=\"30\" url=\"(.+?)\"/)?.[1];\r\n        const feed = await parser.parseString(raw);\r\n        return {\r\n            title: `${user}'s GitHub activities`,\r\n            link: feed.link,\r\n            image,\r\n            item: feed.items.map((item) => ({\r\n                title: item.title ?? '',\r\n                link: item.link,\r\n                description: sanitizeHtml(item.content?.replace(/href=\"\\/(.+?)\"/g, `href=\"https://github.com/$1\"`) ?? '', { allowedTags: [...sanitizeHtml.defaults.allowedTags, 'img'] }),\r\n                pubDate: item.pubDate ? parseDate(item.pubDate) : undefined,\r\n                author: item.author,\r\n                guid: item.id,\r\n                image,\r\n            })),\r\n            allowEmpty: true,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"sUAMA,MAAM,EAAS,IAAI,EAENA,EAAe,CACxB,KAAM,kBACN,KAAM,kBACN,YAAa,CAAC,UACd,QAAS,0BACT,WAAY,CAAC,eACb,KAAM,EAAS,cACf,WAAY,CACR,KAAM,mBAEV,YAAa,gFACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oBACT,OAAQ,oBAGhB,QAAS,KAAO,IAAQ,CACpB,GAAM,CAAE,QAAS,EAAI,IAAI,QACnB,EAAY,MAAMC,EAAO,sBAAsB,EAAK,QACpD,EAAM,MAAM,EAAS,OAErB,EAAQ,EAAI,MAAM,yDAAyD,GAC3E,EAAO,MAAM,EAAO,YAAY,GACtC,MAAO,CACH,MAAO,GAAG,EAAK,sBACf,KAAM,EAAK,KACX,QACA,KAAM,EAAK,MAAM,IAAK,IAAU,CAC5B,MAAO,EAAK,OAAS,GACrB,KAAM,EAAK,KACX,YAAa,EAAa,EAAK,SAAS,QAAQ,kBAAmB,iCAAmC,GAAI,CAAE,YAAa,CAAC,GAAG,EAAa,SAAS,YAAa,SAChK,QAAS,EAAK,QAAU,EAAU,EAAK,SAAW,IAAA,GAClD,OAAQ,EAAK,OACb,KAAM,EAAK,GACX,WAEJ,WAAY"}