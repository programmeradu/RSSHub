{"version":3,"file":"util-8SJMgMdF.js","names":[],"sources":["../../lib/routes/56kog/util.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport iconv from 'iconv-lite';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst rootUrl = 'https://www.56kog.com';\r\n\r\nconst fetchItems = async (limit, currentUrl, tryGet) => {\r\n    const { data: response } = await got(currentUrl, {\r\n        responseType: 'buffer',\r\n    });\r\n\r\n    const $ = load(iconv.decode(response, 'gbk'));\r\n\r\n    let items = $('p.line')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const a = item.find('a');\r\n\r\n            return {\r\n                title: a.text(),\r\n                link: new URL(a.prop('href'), rootUrl).href,\r\n                author: item.find('span').last().text(),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            tryGet(item.link, async () => {\r\n                try {\r\n                    const { data: detailResponse } = await got(item.link, {\r\n                        responseType: 'buffer',\r\n                    });\r\n\r\n                    const content = load(iconv.decode(detailResponse, 'gbk'));\r\n\r\n                    const details = content('div.mohe-content p')\r\n                        .toArray()\r\n                        .map((detail) => {\r\n                            detail = content(detail);\r\n                            const as = detail.find('a');\r\n\r\n                            return {\r\n                                label: detail.find('span.c-l-depths').text().split(/：/)[0],\r\n                                value:\r\n                                    as.length === 0\r\n                                        ? content(\r\n                                              detail\r\n                                                  .contents()\r\n                                                  .toArray()\r\n                                                  .find((c) => c.nodeType === 3)\r\n                                          )\r\n                                              .text()\r\n                                              .trim()\r\n                                        : {\r\n                                              href: new URL(as.first().prop('href'), rootUrl).href,\r\n                                              text: as.first().text().trim(),\r\n                                          },\r\n                            };\r\n                        });\r\n\r\n                    const pubDate = details.find((detail) => detail.label === '更新').value;\r\n\r\n                    item.title = content('h1').contents().first().text();\r\n                    item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                        images: [\r\n                            {\r\n                                src: new URL(content('a.mohe-imgs img').prop('src'), rootUrl).href,\r\n                                alt: item.title,\r\n                            },\r\n                        ],\r\n                        details,\r\n                    });\r\n                    item.author = details.find((detail) => detail.label === '作者').value;\r\n                    item.category = [details.find((detail) => detail.label === '状态').value, details.find((detail) => detail.label === '类型').value.text].filter(Boolean);\r\n                    item.guid = `56kog-${item.link.match(/\\/(\\d+)\\.html$/)[1]}#${pubDate}`;\r\n                    item.pubDate = timezone(parseDate(pubDate), +8);\r\n                } catch {\r\n                    // no-empty\r\n                }\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const icon = new URL('favicon.ico', rootUrl).href;\r\n\r\n    return {\r\n        item: items.filter((item) => item.description).slice(0, limit),\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('meta[name=\"keywords\"]').prop('content'),\r\n        author: $('div.uni_footer a').text(),\r\n        allowEmpty: true,\r\n    };\r\n};\r\n\r\nexport { rootUrl, fetchItems };\r\n"],"mappings":"gWAQA,MAAM,EAAU,wBAEV,EAAa,MAAO,EAAO,EAAY,IAAW,CACpD,GAAM,CAAE,KAAM,GAAa,MAAM,EAAI,EAAY,CAC7C,aAAc,WAGZ,EAAI,EAAK,EAAM,OAAO,EAAU,QAElC,EAAQ,EAAE,UACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAI,EAAK,KAAK,KAEpB,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAS,KACvC,OAAQ,EAAK,KAAK,QAAQ,OAAO,UAI7C,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAO,EAAK,KAAM,SAAY,CAC1B,GAAI,CACA,GAAM,CAAE,KAAM,GAAmB,MAAM,EAAI,EAAK,KAAM,CAClD,aAAc,WAGZ,EAAU,EAAK,EAAM,OAAO,EAAgB,QAE5C,EAAU,EAAQ,sBACnB,UACA,IAAK,GAAW,CACb,EAAS,EAAQ,GACjB,IAAM,EAAK,EAAO,KAAK,KAEvB,MAAO,CACH,MAAO,EAAO,KAAK,mBAAmB,OAAO,MAAM,KAAK,GACxD,MACI,EAAG,SAAW,EACR,EACI,EACK,WACA,UACA,KAAM,GAAM,EAAE,WAAa,IAE/B,OACA,OACL,CACI,KAAM,IAAI,IAAI,EAAG,QAAQ,KAAK,QAAS,GAAS,KAChD,KAAM,EAAG,QAAQ,OAAO,WAK5C,EAAU,EAAQ,KAAM,GAAW,EAAO,QAAU,MAAM,MAEhE,EAAK,MAAQ,EAAQ,MAAM,WAAW,QAAQ,OAC9C,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,OAAQ,CACJ,CACI,IAAK,IAAI,IAAI,EAAQ,mBAAmB,KAAK,OAAQ,GAAS,KAC9D,IAAK,EAAK,QAGlB,YAEJ,EAAK,OAAS,EAAQ,KAAM,GAAW,EAAO,QAAU,MAAM,MAC9D,EAAK,SAAW,CAAC,EAAQ,KAAM,GAAW,EAAO,QAAU,MAAM,MAAO,EAAQ,KAAM,GAAW,EAAO,QAAU,MAAM,MAAM,MAAM,OAAO,SAC3I,EAAK,KAAO,SAAS,EAAK,KAAK,MAAM,kBAAkB,GAAG,GAAG,IAC7D,EAAK,QAAU,EAAS,EAAU,GAAU,QACxC,EAIR,OAAO,MAKnB,IAAM,EAAO,IAAI,IAAI,cAAe,GAAS,KAE7C,MAAO,CACH,KAAM,EAAM,OAAQ,GAAS,EAAK,aAAa,MAAM,EAAG,GACxD,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,YAAa,EAAE,4BAA4B,KAAK,WAChD,SAAU,EAAE,QAAQ,KAAK,QACzB,OACA,KAAM,EACN,SAAU,EAAE,yBAAyB,KAAK,WAC1C,OAAQ,EAAE,oBAAoB,OAC9B,WAAY"}