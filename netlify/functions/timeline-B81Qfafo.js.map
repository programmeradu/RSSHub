{"version":3,"file":"timeline-B81Qfafo.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/utgd/timeline.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport { rootUrl, apiRootUrl, parseResult, parseArticle } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/timeline',\r\n    categories: ['new-media'],\r\n    example: '/utgd/timeline',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['utgd.net/'],\r\n        },\r\n    ],\r\n    name: '时间线',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'utgd.net/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20;\r\n\r\n    const response = await ofetch(`${apiRootUrl}/api/v2/timeline/`, {\r\n        query: {\r\n            page: 1,\r\n            page_size: limit,\r\n        },\r\n    });\r\n\r\n    const list = parseResult(response.results, limit);\r\n\r\n    const items = await Promise.all(list.map((item) => parseArticle(item)));\r\n\r\n    return {\r\n        title: 'UNTAG',\r\n        link: rootUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"qYAKA,MAAaA,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,aACb,QAAS,iBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,eAGjB,KAAM,MACN,YAAa,CAAC,WACd,UACA,IAAK,aAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAE3E,EAAW,MAAMC,EAAO,GAAG,EAAW,mBAAoB,CAC5D,MAAO,CACH,KAAM,EACN,UAAW,KAIb,EAAO,EAAY,EAAS,QAAS,GAErC,EAAQ,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAS,EAAa,KAEhE,MAAO,CACH,MAAO,QACP,KAAM,EACN,KAAM"}