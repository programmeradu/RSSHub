{"version":3,"file":"topic-Xr2RDX1w.js","names":[],"sources":["../../lib/routes/vice/topic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\n\r\nconst render = (data) => art(path.join(__dirname, 'templates/article.art'), data);\r\n\r\nexport const route: Route = {\r\n    path: '/topic/:topic/:language?',\r\n    categories: ['traditional-media'],\r\n    example: '/vice/topic/politics/en',\r\n    parameters: {\r\n        topic: 'Can be found in the URL',\r\n        language: 'defaults to `en`, use the website to discover other codes',\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.vice.com/:language/topic/:topic'],\r\n            target: '/topic/:topic/:language',\r\n        },\r\n    ],\r\n    name: 'Topic',\r\n    maintainers: ['K33k0'],\r\n    handler,\r\n    url: 'vice.com/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { language = 'en', topic } = ctx.req.param();\r\n    const response = await ofetch(`https://www.vice.com/${language}/topic/${topic}`);\r\n    const $ = load(response);\r\n    const nextData = JSON.parse($('script#__NEXT_DATA__').text());\r\n\r\n    const list = nextData.props.pageProps.listPageData.articles.map((item) => ({\r\n        title: item.title,\r\n        link: `https://vice.com${item.url}`,\r\n        pubDate: parseDate(item.publish_date, 'x'),\r\n        author: item.contributions.map((c) => c.contributor.full_name).join(', '),\r\n        description: item.dek,\r\n        category: [...new Set([item.primary_topic.name, ...item.topics.map((t) => t.name)])],\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(item.link);\r\n                const $ = load(response);\r\n                const articleNextData = JSON.parse($('script#__NEXT_DATA__').text()).props.pageProps.data.articles[0];\r\n                const bodyComponent = JSON.parse(articleNextData.body_components_json);\r\n\r\n                item.description =\r\n                    render({\r\n                        image: {\r\n                            url: articleNextData.thumbnail_url,\r\n                            alt: articleNextData.caption,\r\n                            caption: articleNextData.caption,\r\n                            credit: articleNextData.credit,\r\n                        },\r\n                    }) +\r\n                    bodyComponent\r\n                        .map((component) => {\r\n                            switch (component.role) {\r\n                                case 'body':\r\n                                    return render({ body: { html: component.html } });\r\n                                case 'heading2':\r\n                                    return render({ heading2: { html: component.html } });\r\n                                case 'image':\r\n                                    return render({\r\n                                        image: {\r\n                                            url: component.URL,\r\n                                            alt: component.alt,\r\n                                            caption: component.caption,\r\n                                        },\r\n                                    });\r\n                                case 'oembed':\r\n                                case 'tweet':\r\n                                case 'youtube':\r\n                                    return render({ oembed: { html: component.oembed.html } });\r\n                                default:\r\n                                    return '';\r\n                            }\r\n                        })\r\n                        .join('');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        // channel title\r\n        title: `VICE | ${topic} articles`,\r\n        // channel link\r\n        link: `https://vice.com/${language}/topic/${topic}`,\r\n        // each feed item\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"maAQA,MAAM,EAAU,GAAS,EAAI,EAAA,KAAA,EAAA,kCAA+C,GAE/D,EAAe,CACxB,KAAM,2BACN,WAAY,CAAC,qBACb,QAAS,0BACT,WAAY,CACR,MAAO,0BACP,SAAU,6DAEd,MAAO,CACH,CACI,OAAQ,CAAC,uCACT,OAAQ,4BAGhB,KAAM,QACN,YAAa,CAAC,SACd,UACA,IAAK,aAGT,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAW,KAAM,SAAU,EAAI,IAAI,QACrC,EAAW,MAAM,EAAO,wBAAwB,EAAS,SAAS,KAClE,EAAI,EAAK,GACT,EAAW,KAAK,MAAM,EAAE,wBAAwB,QAEhD,EAAO,EAAS,MAAM,UAAU,aAAa,SAAS,IAAK,IAAU,CACvE,MAAO,EAAK,MACZ,KAAM,mBAAmB,EAAK,MAC9B,QAAS,EAAU,EAAK,aAAc,KACtC,OAAQ,EAAK,cAAc,IAAK,GAAM,EAAE,YAAY,WAAW,KAAK,MACpE,YAAa,EAAK,IAClB,SAAU,CAAC,GAAG,IAAI,IAAI,CAAC,EAAK,cAAc,KAAM,GAAG,EAAK,OAAO,IAAK,GAAM,EAAE,YAG1E,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAW,MAAM,EAAO,EAAK,MAC7B,EAAI,EAAK,GACT,EAAkB,KAAK,MAAM,EAAE,wBAAwB,QAAQ,MAAM,UAAU,KAAK,SAAS,GAC7F,EAAgB,KAAK,MAAM,EAAgB,sBAoCjD,MAlCA,GAAK,YACD,EAAO,CACH,MAAO,CACH,IAAK,EAAgB,cACrB,IAAK,EAAgB,QACrB,QAAS,EAAgB,QACzB,OAAQ,EAAgB,UAGhC,EACK,IAAK,GAAc,CAChB,OAAQ,EAAU,KAAlB,CACI,IAAK,OACD,OAAO,EAAO,CAAE,KAAM,CAAE,KAAM,EAAU,QAC5C,IAAK,WACD,OAAO,EAAO,CAAE,SAAU,CAAE,KAAM,EAAU,QAChD,IAAK,QACD,OAAO,EAAO,CACV,MAAO,CACH,IAAK,EAAU,IACf,IAAK,EAAU,IACf,QAAS,EAAU,WAG/B,IAAK,SACL,IAAK,QACL,IAAK,UACD,OAAO,EAAO,CAAE,OAAQ,CAAE,KAAM,EAAU,OAAO,QACrD,QACI,MAAO,MAGlB,KAAK,IAEP,MAKnB,MAAO,CAEH,MAAO,UAAU,EAAM,WAEvB,KAAM,oBAAoB,EAAS,SAAS,IAE5C,KAAM"}