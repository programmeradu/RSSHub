{"version":3,"file":"channel-CTxnYHlw.js","names":["route: Route","ofetch","cache"],"sources":["../../lib/routes/storm/channel.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/channel/:id?',\r\n    categories: ['new-media'],\r\n    example: '/storm/channel/2',\r\n    parameters: { id: 'ID，可在 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['storm.mg/channel/:id'],\r\n        },\r\n    ],\r\n    name: '频道',\r\n    maintainers: ['dzx-dzx'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id') ?? '2';\r\n\r\n    const rootUrl = 'https://www.storm.mg';\r\n    const currentUrl = new URL(`/api/getArticleList`, rootUrl).href;\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20;\r\n\r\n    const response = await ofetch(currentUrl, {\r\n        query: {\r\n            q: {\r\n                condition: ['channel_id'],\r\n                limit: [0, limit],\r\n                order: { col: 'publish_at', sort: 'DESC' },\r\n                pagination: 1,\r\n                remark: '文章列表',\r\n                value: [[id]],\r\n            },\r\n        },\r\n    });\r\n\r\n    const list = response.list.map((item) => ({\r\n        title: item.title,\r\n        pubDate: parseDate(item.createdAt),\r\n        author: item.articleAuthor,\r\n        category: [...item.articleChannel.map((e) => e.channel.title), ...item.articleKeyword.map((e) => e.keyword.title)],\r\n        updated: parseDate(item.updated),\r\n        link: new URL(`/article/${item.oldId}`, rootUrl).href,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await ofetch(item.link);\r\n\r\n                const content = load(detailResponse);\r\n\r\n                content('.notify_wordings').remove();\r\n                content('#premium_block').remove();\r\n\r\n                item.description = content('div[data-test-comp=\"ArticleContent\"]').html();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '風傳媒',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,gBACN,WAAY,CAAC,aACb,QAAS,mBACT,WAAY,CAAE,GAAI,iBAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,KACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,OAAS,IAE5B,EAAU,uBACV,EAAa,IAAI,IAAI,sBAAuB,GAAS,KACrD,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAE3E,EAAW,MAAMC,EAAO,EAAY,CACtC,MAAO,CACH,EAAG,CACC,UAAW,CAAC,cACZ,MAAO,CAAC,EAAG,GACX,MAAO,CAAE,IAAK,aAAc,KAAM,QAClC,WAAY,EACZ,OAAQ,OACR,MAAO,CAAC,CAAC,QAKf,EAAO,EAAS,KAAK,IAAK,IAAU,CACtC,MAAO,EAAK,MACZ,QAAS,EAAU,EAAK,WACxB,OAAQ,EAAK,cACb,SAAU,CAAC,GAAG,EAAK,eAAe,IAAK,GAAM,EAAE,QAAQ,OAAQ,GAAG,EAAK,eAAe,IAAK,GAAM,EAAE,QAAQ,QAC3G,QAAS,EAAU,EAAK,SACxB,KAAM,IAAI,IAAI,YAAY,EAAK,QAAS,GAAS,QAG/C,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAO,EAAK,MAEnC,EAAU,EAAK,GAMrB,OAJA,EAAQ,oBAAoB,SAC5B,EAAQ,kBAAkB,SAE1B,EAAK,YAAc,EAAQ,wCAAwC,OAC5D,MAKnB,MAAO,CACH,MAAO,MACP,KAAM,EACN,KAAM"}