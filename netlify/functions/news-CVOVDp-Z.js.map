{"version":3,"file":"news-CVOVDp-Z.js","names":["route: Route"],"sources":["../../lib/routes/gamersky/news.ts"],"sourcesContent":["import type { Route } from '@/types';\r\nimport type { Context } from 'hono';\r\nimport { getArticleList, parseArticleList, getArticle, mdTableBuilder } from './utils';\r\n\r\nconst idNameMap = [\r\n    {\r\n        type: 'today',\r\n        name: '今日推荐',\r\n        nodeId: '11007',\r\n    },\r\n    {\r\n        name: '单机电玩',\r\n        type: 'pc',\r\n        nodeId: '129',\r\n    },\r\n    {\r\n        name: 'NS',\r\n        type: 'ns',\r\n        nodeId: '21160',\r\n    },\r\n    {\r\n        name: '手游',\r\n        type: 'mobile',\r\n        nodeId: '20260',\r\n    },\r\n    {\r\n        name: '网游',\r\n        type: 'web',\r\n        nodeId: '20225',\r\n    },\r\n    {\r\n        name: '业界',\r\n        type: 'industry',\r\n        nodeId: '21163',\r\n    },\r\n    {\r\n        name: '硬件',\r\n        type: 'hardware',\r\n        nodeId: '20070',\r\n    },\r\n    {\r\n        name: '科技',\r\n        type: 'tech',\r\n        nodeId: '20547',\r\n    },\r\n];\r\n\r\nexport const route: Route = {\r\n    path: '/news/:type?',\r\n    categories: ['game'],\r\n    example: '/gamersky/news/pc',\r\n    parameters: {\r\n        type: '资讯类型，见表，默认为 `pc`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.gamersky.com/news'],\r\n            target: '/news',\r\n        },\r\n    ],\r\n    name: '资讯',\r\n    maintainers: ['yy4382'],\r\n    description: mdTableBuilder(idNameMap),\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const type = ctx.req.param('type') ?? 'pc';\r\n\r\n    const idName = idNameMap.find((item) => item.type === type);\r\n    if (!idName) {\r\n        throw new Error(`Invalid type: ${type}`);\r\n    }\r\n\r\n    const response = await getArticleList(idName.nodeId);\r\n    const list = parseArticleList(response);\r\n    const fullTextList = await Promise.all(list.map((item) => getArticle(item)));\r\n    return {\r\n        title: `${idName.name} - 游民星空`,\r\n        link: 'https://www.gamersky.com/news',\r\n        item: fullTextList,\r\n    };\r\n}\r\n"],"mappings":"6VAIA,MAAM,EAAY,CACd,CACI,KAAM,QACN,KAAM,OACN,OAAQ,SAEZ,CACI,KAAM,OACN,KAAM,KACN,OAAQ,OAEZ,CACI,KAAM,KACN,KAAM,KACN,OAAQ,SAEZ,CACI,KAAM,KACN,KAAM,SACN,OAAQ,SAEZ,CACI,KAAM,KACN,KAAM,MACN,OAAQ,SAEZ,CACI,KAAM,KACN,KAAM,WACN,OAAQ,SAEZ,CACI,KAAM,KACN,KAAM,WACN,OAAQ,SAEZ,CACI,KAAM,KACN,KAAM,OACN,OAAQ,UAIHA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,QACb,QAAS,oBACT,WAAY,CACR,KAAM,oBAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,yBACT,OAAQ,UAGhB,KAAM,KACN,YAAa,CAAC,UACd,YAAa,EAAe,GAC5B,WAGJ,eAAe,EAAQ,EAAc,CACjC,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,KAEhC,EAAS,EAAU,KAAM,GAAS,EAAK,OAAS,GACtD,GAAI,CAAC,EACD,MAAU,MAAM,iBAAiB,KAGrC,IAAM,EAAW,MAAM,EAAe,EAAO,QACvC,EAAO,EAAiB,GACxB,EAAe,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAS,EAAW,KACrE,MAAO,CACH,MAAO,GAAG,EAAO,KAAK,SACtB,KAAM,gCACN,KAAM"}