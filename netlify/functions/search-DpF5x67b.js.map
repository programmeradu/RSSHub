{"version":3,"file":"search-DpF5x67b.js","names":["ofetch","route: Route"],"sources":["../../lib/routes/hanime1/search.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { config } from '@/config';\r\nimport { load } from 'cheerio';\r\n\r\nasync function handler(ctx) {\r\n    const { params } = ctx.req.param();\r\n    const baseUrl = 'https://hanime1.me';\r\n\r\n    // 提取参数\r\n    const searchParams = new URLSearchParams(params);\r\n    const query = searchParams.get('query') || '';\r\n    const genre = searchParams.get('genre') || '';\r\n    const broad = searchParams.get('broad') || '';\r\n    const tags = searchParams.getAll('tags[]');\r\n    const sort = searchParams.get('sort') || '';\r\n    const year = searchParams.get('year') || '';\r\n    const month = searchParams.get('month') || '';\r\n\r\n    let link = `${baseUrl}/search?query=${query}&genre=${genre}&broad=${broad}&sort=${sort}&year=${year}&month=${month}`;\r\n    for (const tag of tags) {\r\n        link += `&tags[]=${tag}`;\r\n    }\r\n\r\n    const response = await ofetch(link, {\r\n        headers: {\r\n            referer: baseUrl,\r\n            'user-agent': config.trueUA,\r\n        },\r\n    });\r\n    const $ = load(response);\r\n\r\n    const target = '.content-padding-new .row.no-gutter';\r\n\r\n    const items = $(target)\r\n        .find('.search-doujin-videos.hidden-xs') // 过滤掉重复的元素\r\n        .toArray()\r\n        .map((item) => {\r\n            const element = $(item);\r\n            const title = element.attr('title');\r\n            const videoLink = element.find('a.overlay').attr('href');\r\n            const imageSrc = element.find('img[style*=\"object-fit: cover\"]').attr('src'); // 选择缩略图\r\n\r\n            return {\r\n                title,\r\n                link: videoLink,\r\n                description: `<img src=\"${imageSrc}\">`,\r\n            };\r\n        });\r\n\r\n    // 最多显示三个标签\r\n    const maxTagsToShow = 3;\r\n    const displayedTags = tags.slice(0, maxTagsToShow).join(', ') + (tags.length > maxTagsToShow ? ', ...' : '');\r\n\r\n    const feedTitle = `Hanime1 搜索结果` + (genre ? ` | 类型: ${genre}` : '') + (query ? ` | 关键词: ${query}` : '') + (tags.length ? ` | 标签: ${displayedTags}` : '');\r\n\r\n    return {\r\n        title: feedTitle,\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/search/:params',\r\n    name: '搜索结果',\r\n    maintainers: ['kjasn'],\r\n    example: '/hanime1/search/tags%5B%5D=%E7%B4%94%E6%84%9B&',\r\n    categories: ['anime'],\r\n    parameters: {\r\n        params: {\r\n            description: `\r\n| 参数                | 说明                              | 示例或可选值                                                                                                          |\r\n| ------------------- | --------------------------------- | --------------------------------------------------------------------------------------------------------------------- |\r\n| \\`query\\`           | 搜索框输入的内容                  | 任意值都可以，例如：\\`辣妹\\`                                                                                          |\r\n| \\`genre\\`           | 番剧类型，默认为\\`全部\\`          | 可选值有：\\`全部\\` / \\`裏番\\` / \\`泡麵番\\` / \\`Motion+Anime\\` / \\`3D動畫\\` / \\`同人作品\\` / \\`MMD\\` / \\`Cosplay\\`     |\r\n| \\`tags[]\\`          | 标签                              | 可选值过多，不一一列举，详细请查看原网址。例如：\\`tags[]=純愛&tags[]=中文字幕\\`                                       |\r\n| \\`broad\\`           | 标签模糊匹配，默认为 \\`off\\`      | \\`on\\`（模糊匹配，包含任一标签） / \\`off\\`（精确匹配，包含全部标签）                                                  |\r\n| \\`sort\\`            | 搜索结果排序，默认 \\`最新上市\\`   | \\`最新上市\\` / \\`最新上傳\\` / \\`本日排行\\` / \\`本週排行\\` / \\`本月排行\\` / \\`觀看次數\\` / \\`讚好比例\\` / \\`他們在看\\` |\r\n| \\`year\\`, \\`month\\` | 筛选发布时间，默认为 \\`全部时间\\` | 例如：\\`year=2025&month=5\\`                                                                                           |\r\n\r\n::: tip\r\n如果你不确定标签或类型的具体名字，可以直接去原网址选好筛选条件后，把网址中的参数复制过来使用。例如： \\`https://hanime1.me/search?query=&genre=裏番&broad=on&sort=最新上市&tags[]=純愛&tags[]=中文字幕\\`，\\`/search?\\`后面的部分就是参数了,最后得到**类似**这样的路由 \\`https://rsshub.app/hanime1/search/query=&genre=裏番&broad=on&sort=最新上市&tags[]=純愛&tags[]=中文字幕\\`\r\n:::\r\n`,\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    handler,\r\n};\r\n"],"mappings":"2NAKA,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,UAAW,EAAI,IAAI,QACrB,EAAU,qBAGV,EAAe,IAAI,gBAAgB,GACnC,EAAQ,EAAa,IAAI,UAAY,GACrC,EAAQ,EAAa,IAAI,UAAY,GACrC,EAAQ,EAAa,IAAI,UAAY,GACrC,EAAO,EAAa,OAAO,UAC3B,EAAO,EAAa,IAAI,SAAW,GACnC,EAAO,EAAa,IAAI,SAAW,GACnC,EAAQ,EAAa,IAAI,UAAY,GAEvC,EAAO,GAAG,EAAQ,gBAAgB,EAAM,SAAS,EAAM,SAAS,EAAM,QAAQ,EAAK,QAAQ,EAAK,SAAS,IAC7G,IAAK,IAAM,KAAO,EACd,GAAQ,WAAW,IAGvB,IAAM,EAAW,MAAMA,EAAO,EAAM,CAChC,QAAS,CACL,QAAS,EACT,aAAc,EAAO,UAGvB,EAAI,EAAK,GAIT,EAAQ,EAAE,uCACX,KAAK,mCACL,UACA,IAAK,GAAS,CACX,IAAM,EAAU,EAAE,GACZ,EAAQ,EAAQ,KAAK,SACrB,EAAY,EAAQ,KAAK,aAAa,KAAK,QAC3C,EAAW,EAAQ,KAAK,mCAAmC,KAAK,OAEtE,MAAO,CACH,QACA,KAAM,EACN,YAAa,aAAa,EAAS,OAMzC,EAAgB,EAAK,MAAM,EAAG,GAAe,KAAK,OAAS,EAAK,OAAS,EAAgB,QAAU,IAEnG,EAAY,gBAAkB,EAAQ,UAAU,IAAU,KAAO,EAAQ,WAAW,IAAU,KAAO,EAAK,OAAS,UAAU,IAAkB,IAErJ,MAAO,CACH,MAAO,EACP,OACA,KAAM,GAId,MAAaC,EAAe,CACxB,KAAM,kBACN,KAAM,OACN,YAAa,CAAC,SACd,QAAS,iDACT,WAAY,CAAC,SACb,WAAY,CACR,OAAQ,CACJ,YAAa,88CAgBrB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB"}