{"version":3,"file":"utils-C1-XvpW_.js","names":[],"sources":["../../lib/routes/psyche/utils.ts"],"sourcesContent":["import cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nconst getImageById = async (id) => {\r\n    const response = await ofetch('https://api.aeonmedia.co/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            query: 'query getImageById($id: ID!) { image(id: $id) { id url alt caption width height } }',\r\n            variables: { id, site: 'Aeon' },\r\n            operationName: 'getImageById',\r\n        }),\r\n    });\r\n\r\n    return response.data.image.url;\r\n};\r\n\r\nfunction format(article) {\r\n    const type = article.type.toLowerCase();\r\n\r\n    let block = '';\r\n    let banner = '';\r\n    let authorsBio = '';\r\n\r\n    switch (type) {\r\n        case 'film':\r\n            block = art(path.join(__dirname, 'templates/video.art'), { article });\r\n\r\n            break;\r\n\r\n        case 'guide': {\r\n            banner = article.imageSquare?.url;\r\n            authorsBio = article.authors.map((author) => author.bio).join(' ');\r\n\r\n            const sectionNames = ['Need To Know', 'What To Do', 'Key Points', 'Learn More', 'Links & Books'];\r\n            const sections = Object.keys(article).filter((key) => key.startsWith('section') && key !== 'section');\r\n            const content = sections\r\n                .map((section) => {\r\n                    const capture = load(article[section]);\r\n                    capture('p.pullquote').remove();\r\n                    const sectionName = sectionNames.shift();\r\n                    return `<h2>${sectionName}</h2>` + capture.html();\r\n                })\r\n                .join('');\r\n\r\n            block = art(path.join(__dirname, 'templates/essay.art'), { banner, authorsBio, content });\r\n\r\n            break;\r\n        }\r\n        case 'idea': {\r\n            banner = article.imageLandscape?.url;\r\n            authorsBio = article.authors.map((author) => author.bio).join(' ');\r\n\r\n            const capture = load(article.body);\r\n            capture('p.pullquote').remove();\r\n            block = art(path.join(__dirname, 'templates/essay.art'), { banner, authorsBio, content: capture.html() });\r\n\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n    return block;\r\n}\r\n\r\nconst getData = async (list) => {\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const data = await ofetch(item.json);\r\n                const article = data.pageProps.article;\r\n                item.pubDate = new Date(article.publishedAt).toUTCString();\r\n                const content = format(article);\r\n                const capture = load(content);\r\n                await Promise.all(\r\n                    capture('dl > dt')\r\n                        .toArray()\r\n                        .map(async (item) => {\r\n                            const id = capture(item).text();\r\n                            const image = await getImageById(id);\r\n                            capture(item).replaceWith(`<img src=\"${image}\" alt=\"${id}\">`);\r\n                        })\r\n                );\r\n\r\n                let authors = '';\r\n                authors = article.type === 'film' ? article.creditsShort : article.authors.map((author) => author.name).join(', ');\r\n\r\n                item.description = capture.html();\r\n                item.author = authors;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return items;\r\n};\r\n\r\nexport { getData };\r\n"],"mappings":"yRAMA,MAAM,EAAe,KAAO,IAAO,CAC/B,IAAM,EAAW,MAAM,EAAO,mCAAoC,CAC9D,OAAQ,OACR,QAAS,CACL,eAAgB,oBAEpB,KAAM,KAAK,UAAU,CACjB,MAAO,sFACP,UAAW,CAAE,KAAI,KAAM,QACvB,cAAe,mBAIvB,OAAO,EAAS,KAAK,MAAM,KAG/B,SAAS,EAAO,EAAS,CACrB,IAAM,EAAO,EAAQ,KAAK,cAEtB,EAAQ,GACR,EAAS,GACT,EAAa,GAEjB,OAAQ,EAAR,CACI,IAAK,OACD,EAAQ,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAAE,YAE3D,MAEJ,IAAK,QAAS,CACV,EAAS,EAAQ,aAAa,IAC9B,EAAa,EAAQ,QAAQ,IAAK,GAAW,EAAO,KAAK,KAAK,KAE9D,IAAM,EAAe,CAAC,eAAgB,aAAc,aAAc,aAAc,iBAC1E,EAAW,OAAO,KAAK,GAAS,OAAQ,GAAQ,EAAI,WAAW,YAAc,IAAQ,WACrF,EAAU,EACX,IAAK,GAAY,CACd,IAAM,EAAU,EAAK,EAAQ,IAC7B,EAAQ,eAAe,SACvB,IAAM,EAAc,EAAa,QACjC,MAAO,OAAO,EAAY,OAAS,EAAQ,SAE9C,KAAK,IAEV,EAAQ,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAAE,SAAQ,aAAY,YAE/E,MAEJ,IAAK,OAAQ,CACT,EAAS,EAAQ,gBAAgB,IACjC,EAAa,EAAQ,QAAQ,IAAK,GAAW,EAAO,KAAK,KAAK,KAE9D,IAAM,EAAU,EAAK,EAAQ,MAC7B,EAAQ,eAAe,SACvB,EAAQ,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAAE,SAAQ,aAAY,QAAS,EAAQ,SAEhG,MAEJ,QACI,MAER,OAAO,EAGX,MAAM,EAAU,KAAO,IAAS,CAC5B,IAAM,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAO,MAAM,EAAO,EAAK,MACzB,EAAU,EAAK,UAAU,QAC/B,EAAK,QAAU,IAAI,KAAK,EAAQ,aAAa,cAC7C,IAAM,EAAU,EAAO,GACjB,EAAU,EAAK,GACrB,MAAM,QAAQ,IACV,EAAQ,WACH,UACA,IAAI,KAAO,IAAS,CACjB,IAAM,EAAK,EAAQ,GAAM,OACnB,EAAQ,MAAM,EAAa,GACjC,EAAQ,GAAM,YAAY,aAAa,EAAM,SAAS,EAAG,QAIrE,IAAI,EAAU,GAMd,MALA,GAAU,EAAQ,OAAS,OAAS,EAAQ,aAAe,EAAQ,QAAQ,IAAK,GAAW,EAAO,MAAM,KAAK,MAE7G,EAAK,YAAc,EAAQ,OAC3B,EAAK,OAAS,EAEP,MAKnB,OAAO"}