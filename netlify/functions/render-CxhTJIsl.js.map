{"version":3,"file":"render-CxhTJIsl.js","names":["RSS: FC<{ data: Data }>","RSS","RSS: FC<{ data: Data }>"],"sources":["../../lib/views/rss3.ts","../../lib/views/json.ts","../../lib/views/rss.tsx","../../lib/views/atom.tsx"],"sourcesContent":["import dayjs from 'dayjs';\r\n\r\n/**\r\n * This function should be used by RSSHub middleware only.\r\n * @param {object} data ctx.state.data\r\n * @returns `JSON.stringify`-ed [UMS Result](https://docs.rss3.io/docs/unified-metadata-schemas)\r\n */\r\n\r\nconst NETWORK = 'rsshub';\r\nconst TAG = 'RSS';\r\nconst TYPE = 'feed';\r\nconst PLATFORM = 'RSSHub';\r\n\r\nconst rss3 = (data) => {\r\n    const currentUnixTsp = dayjs().unix();\r\n    const umsResult = {\r\n        data: data.item.map((item) => {\r\n            const owner = getOwnershipFieldFromURL(item);\r\n            return {\r\n                owner,\r\n                id: item.link,\r\n                network: NETWORK,\r\n                from: owner,\r\n                to: owner,\r\n                tag: TAG,\r\n                type: TYPE,\r\n                direction: 'out',\r\n                feeValue: '0',\r\n                actions: [\r\n                    {\r\n                        tag: TAG,\r\n                        type: TYPE,\r\n                        platform: PLATFORM,\r\n                        from: owner,\r\n                        to: owner,\r\n                        metadata: {\r\n                            authors: typeof item.author === 'string' ? [{ name: item.author }] : item.author,\r\n                            description: item.description,\r\n                            pub_date: item.pubDate,\r\n                            tags: typeof item.category === 'string' ? [item.category] : item.category,\r\n                            title: item.title,\r\n                        },\r\n                        related_urls: [item.link],\r\n                    },\r\n                ],\r\n                timestamp: dayjs(item.updated).unix() || currentUnixTsp,\r\n            };\r\n        }),\r\n    };\r\n    return umsResult;\r\n};\r\n\r\n// we treat the domain as the owner of the content\r\nfunction getOwnershipFieldFromURL(item) {\r\n    try {\r\n        const urlObj = new URL(item.link);\r\n        return urlObj.hostname;\r\n    } catch {\r\n        return item.link;\r\n    }\r\n}\r\n\r\nexport default rss3;\r\n","import { Data } from '@/types';\r\n\r\n/**\r\n * This function should be used by RSSHub middleware only.\r\n * @param {object} data ctx.state.data\r\n * @returns `JSON.stringify`-ed [JSON Feed](https://www.jsonfeed.org/)\r\n */\r\nconst json = (data: Data) => {\r\n    const jsonFeed = {\r\n        version: 'https://jsonfeed.org/version/1.1',\r\n        title: data.title || 'RSSHub',\r\n        home_page_url: data.link || 'https://docs.rsshub.app',\r\n        feed_url: data.feedLink,\r\n        description: `${data.description || data.title} - Powered by RSSHub`,\r\n        icon: data.image,\r\n        authors: typeof data.author === 'string' ? [{ name: data.author }] : data.author,\r\n        language: data.language || 'zh-cn',\r\n        items: data.item?.map((item) => ({\r\n            id: item.guid || item.id || item.link,\r\n            url: item.link,\r\n            title: item.title,\r\n            content_html: (item.content && item.content.html) || item.description || item.title,\r\n            content_text: item.content && item.content.text,\r\n            image: item.image || item.itunes_item_image,\r\n            banner_image: item.banner,\r\n            date_published: item.pubDate,\r\n            date_modified: item.updated,\r\n            authors: typeof item.author === 'string' ? [{ name: item.author }] : item.author,\r\n            tags: typeof item.category === 'string' ? [item.category] : item.category,\r\n            language: item.language,\r\n            attachments:\r\n                item.attachments ||\r\n                (item.enclosure_url\r\n                    ? [\r\n                          {\r\n                              url: item.enclosure_url,\r\n                              mime_type: item.enclosure_type,\r\n                              title: item.enclosure_title,\r\n                              size_in_bytes: item.enclosure_length,\r\n                              duration_in_seconds: item.itunes_duration,\r\n                          },\r\n                      ]\r\n                    : undefined),\r\n            _extra: item._extra || undefined,\r\n        })),\r\n    };\r\n    return JSON.stringify(jsonFeed);\r\n};\r\n\r\nexport default json;\r\n","import type { FC } from 'hono/jsx';\r\nimport { Data } from '@/types';\r\n\r\nconst RSS: FC<{ data: Data }> = ({ data }) => {\r\n    const hasItunes = data.itunes_author || data.itunes_category || (data.item && data.item.some((i) => i.itunes_item_image || i.itunes_duration));\r\n    const hasMedia = data.item?.some((i) => i.media);\r\n    const isTelegramLink = data.link?.startsWith('https://t.me/s/');\r\n\r\n    return (\r\n        <rss xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:itunes={hasItunes ? 'http://www.itunes.com/dtds/podcast-1.0.dtd' : undefined} xmlns:media={hasMedia ? 'http://search.yahoo.com/mrss/' : undefined} version=\"2.0\">\r\n            <channel>\r\n                <title>{data.title || 'RSSHub'}</title>\r\n                <link>{data.link || 'https://docs.rsshub.app'}</link>\r\n                <atom:link href={data.atomlink} rel=\"self\" type=\"application/rss+xml\" />\r\n                <description>{data.description || data.title} - Powered by RSSHub</description>\r\n                <generator>RSSHub</generator>\r\n                <webMaster>contact@rsshub.app (RSSHub)</webMaster>\r\n                {data.itunes_author && <itunes:author>{data.itunes_author}</itunes:author>}\r\n                {data.itunes_category && <itunes:category text={data.itunes_category} />}\r\n                {data.itunes_author && <itunes:explicit>{data.itunes_explicit || 'false'}</itunes:explicit>}\r\n                <language>{data.language || 'en'}</language>\r\n                {data.image && (\r\n                    <image>\r\n                        <url>{data.image}</url>\r\n                        <title>{data.title || 'RSSHub'}</title>\r\n                        <link>{data.link}</link>\r\n                        {isTelegramLink && (\r\n                            <>\r\n                                <height>31</height>\r\n                                <width>88</width>\r\n                            </>\r\n                        )}\r\n                    </image>\r\n                )}\r\n                <lastBuildDate>{data.lastBuildDate}</lastBuildDate>\r\n                <ttl>{data.ttl}</ttl>\r\n                {data.item?.map((item) => (\r\n                    <item>\r\n                        <title>{item.title}</title>\r\n                        <description>{item.description}</description>\r\n                        <link>{item.link}</link>\r\n                        <guid isPermaLink=\"false\">{item.guid || item.link || item.title}</guid>\r\n                        {item.pubDate && <pubDate>{item.pubDate}</pubDate>}\r\n                        {item.author && <author>{item.author}</author>}\r\n                        {item.image && <enclosure url={item.image} type=\"image/jpeg\" />}\r\n                        {item.itunes_item_image && <itunes:image href={item.itunes_item_image} />}\r\n                        {item.enclosure_url && <enclosure url={item.enclosure_url} length={item.enclosure_length} type={item.enclosure_type} />}\r\n                        {item.itunes_duration && <itunes:duration>{item.itunes_duration}</itunes:duration>}\r\n                        {typeof item.category === 'string' ? <category>{item.category}</category> : item.category?.map((c) => <category>{c}</category>)}\r\n                        {item.media &&\r\n                            Object.entries(item.media).map(([key, value]) => {\r\n                                const Tag = `media:${key}`;\r\n                                return <Tag {...value} />;\r\n                            })}\r\n                    </item>\r\n                ))}\r\n            </channel>\r\n        </rss>\r\n    );\r\n};\r\n\r\nexport default RSS;\r\n","import type { FC } from 'hono/jsx';\r\nimport { Data } from '@/types';\r\n\r\nconst RSS: FC<{ data: Data }> = ({ data }) => (\r\n    <feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:rsshub=\"http://rsshub.app/xml/schemas\">\r\n        <title>{data.title || 'RSSHub'}</title>\r\n        <link href={data.link || 'https://docs.rsshub.app'} />\r\n        <id>{data.id || data.link}</id>\r\n        <subtitle>{data.description || data.title} - Powered by RSSHub</subtitle>\r\n        <generator>RSSHub</generator>\r\n        <webMaster>contact@rsshub.app (RSSHub)</webMaster>\r\n        <language>{data.language || 'en'}</language>\r\n        <updated>{data.lastBuildDate}</updated>\r\n        <author>\r\n            <name>{data.author || 'RSSHub'}</name>\r\n        </author>\r\n        {data.icon && <icon>{data.icon}</icon>}\r\n        {data.logo && <logo>{data.logo}</logo>}\r\n\r\n        {data.item?.map((item) => (\r\n            <entry>\r\n                <title>{item.title}</title>\r\n                <content type=\"html\" src={item.link}>\r\n                    {item.description}\r\n                </content>\r\n                <link href={item.link} />\r\n                <id>{item.guid || item.link || item.title}</id>\r\n                {item.pubDate && <published>{item.pubDate}</published>}\r\n                {item.updated && <updated>{item.updated || item.pubDate}</updated>}\r\n                {item.author && (\r\n                    <author>\r\n                        <name>{item.author}</name>\r\n                    </author>\r\n                )}\r\n                {typeof item.category === 'string' ? <category term={item.category}></category> : item.category?.map((c) => <category term={c}></category>)}\r\n                {item.media &&\r\n                    Object.entries(item.media).map(([key, value]) => {\r\n                        const Tag = `media:${key}`;\r\n                        return <Tag {...value} />;\r\n                    })}\r\n                {item.upvotes ? <rsshub:upvotes>{item.upvotes}</rsshub:upvotes> : ''}\r\n                {item.downvotes ? <rsshub:downvotes>{item.downvotes}</rsshub:downvotes> : ''}\r\n                {item.comments ? <rsshub:comments>{item.comments}</rsshub:comments> : ''}\r\n            </entry>\r\n        ))}\r\n    </feed>\r\n);\r\n\r\nexport default RSS;\r\n"],"mappings":"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"}