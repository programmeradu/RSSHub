{"version":3,"file":"user-DiGJPc-X.js","names":["route: Route","cache","got","weiboUtils","description"],"sources":["../../lib/routes/weibo/user.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport querystring from 'node:querystring';\r\nimport got from '@/utils/got';\r\nimport weiboUtils from './utils';\r\nimport { config } from '@/config';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { fallback, queryToBoolean } from '@/utils/readable-social';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:uid/:routeParams?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/weibo/user/1195230310',\r\n    parameters: { uid: '用户 id, 博主主页打开控制台执行 `$CONFIG.oid` 获取', routeParams: '额外参数；请参阅上面的说明和表格；特别地，当 `routeParams=1` 时开启微博视频显示' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'WEIBO_COOKIES',\r\n                optional: true,\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['m.weibo.cn/u/:uid', 'm.weibo.cn/profile/:uid'],\r\n            target: '/user/:uid',\r\n        },\r\n        {\r\n            source: ['weibo.com/u/:uid'],\r\n            target: '/user/:uid',\r\n        },\r\n        {\r\n            source: ['www.weibo.com/u/:uid'],\r\n            target: '/user/:uid',\r\n        },\r\n    ],\r\n    name: '博主',\r\n    maintainers: ['DIYgod', 'iplusx', 'Rongronggg9', 'Konano'],\r\n    handler,\r\n    description: `::: warning\r\n  部分博主仅登录可见，未提供 Cookie 的情况下不支持订阅，可以通过打开 \\`https://m.weibo.cn/u/:uid\\` 验证\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = ctx.req.param('uid');\r\n    let displayVideo = '1';\r\n    let displayArticle = '0';\r\n    let displayComments = '0';\r\n    let showRetweeted = '1';\r\n    let showBloggerIcons = '0';\r\n    if (ctx.req.param('routeParams')) {\r\n        if (ctx.req.param('routeParams') === '1' || ctx.req.param('routeParams') === '0') {\r\n            displayVideo = ctx.req.param('routeParams');\r\n        } else {\r\n            const routeParams = querystring.parse(ctx.req.param('routeParams'));\r\n            displayVideo = fallback(undefined, queryToBoolean(routeParams.displayVideo), true) ? '1' : '0';\r\n            displayArticle = fallback(undefined, queryToBoolean(routeParams.displayArticle), false) ? '1' : '0';\r\n            displayComments = fallback(undefined, queryToBoolean(routeParams.displayComments), false) ? '1' : '0';\r\n            showRetweeted = fallback(undefined, queryToBoolean(routeParams.showRetweeted), false) ? '1' : '0';\r\n            showBloggerIcons = fallback(undefined, queryToBoolean(routeParams.showBloggerIcons), false) ? '1' : '0';\r\n        }\r\n    }\r\n    const containerData = await cache.tryGet(\r\n        `weibo:user:index:${uid}`,\r\n        async () => {\r\n            const _r = await got({\r\n                method: 'get',\r\n                url: `https://m.weibo.cn/api/container/getIndex?type=uid&value=${uid}`,\r\n                headers: {\r\n                    Referer: `https://m.weibo.cn/u/${uid}`,\r\n                    'MWeibo-Pwa': 1,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    Cookie: config.weibo.cookies,\r\n                },\r\n            });\r\n            return _r.data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    const name = containerData.data.userInfo.screen_name;\r\n    const description = containerData.data.userInfo.description;\r\n    const profileImageUrl = containerData.data.userInfo.profile_image_url;\r\n    const containerId = containerData.data.tabsInfo.tabs.find((item) => item.tab_type === 'weibo').containerid;\r\n\r\n    const cards = await cache.tryGet(\r\n        `weibo:user:cards:${uid}:${containerId}`,\r\n        async () => {\r\n            const _r = await got({\r\n                method: 'get',\r\n                url: `https://m.weibo.cn/api/container/getIndex?type=uid&value=${uid}&containerid=${containerId}`,\r\n                headers: {\r\n                    Referer: `https://m.weibo.cn/u/${uid}`,\r\n                    'MWeibo-Pwa': 1,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    Cookie: config.weibo.cookies,\r\n                },\r\n            });\r\n            return _r.data.data.cards;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    let resultItems = await Promise.all(\r\n        cards\r\n            .filter((item) => {\r\n                if (item.mblog === undefined) {\r\n                    return false;\r\n                }\r\n                if (showRetweeted === '0' && item.mblog.retweeted_status) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            })\r\n            .map(async (item) => {\r\n                // TODO: unify cache key and let weiboUtils.getShowData() handle the cache? It seems safe to do so.\r\n                //       Need more investigation, pending for now since the current version works fine.\r\n                // TODO: getShowData() on demand? The API seems to return most things we need since 2022/05/21.\r\n                //       Need more investigation, pending for now since the current version works fine.\r\n                let { bid } = item.mblog;\r\n                const { retweeted_status, created_at } = item.mblog;\r\n                if (bid === '') {\r\n                    const url = new URL(item.scheme);\r\n                    bid = url.searchParams.get('mblogid');\r\n                    item.mblog.bid = bid;\r\n                }\r\n                const key = `weibo:user:${bid}`;\r\n                const data = await cache.tryGet(key, () => weiboUtils.getShowData(uid, bid));\r\n\r\n                if (data && data.text) {\r\n                    item.mblog.text = data.text;\r\n                    item.mblog.created_at = parseDate(data.created_at);\r\n                    item.mblog.pics = data.pics;\r\n                    if (retweeted_status && data.retweeted_status) {\r\n                        retweeted_status.created_at = data.retweeted_status.created_at;\r\n                    }\r\n                } else {\r\n                    item.mblog.created_at = timezone(created_at, +8);\r\n                }\r\n\r\n                // 转发的长微博处理\r\n                const retweet = retweeted_status;\r\n                if (retweet && retweet.isLongText) {\r\n                    // TODO: unify cache key and ...\r\n                    const retweetData = await cache.tryGet(`weibo:retweeted:${retweet.user.id}:${retweet.bid}`, () => weiboUtils.getShowData(retweet.user.id, retweet.bid));\r\n                    if (retweetData !== undefined && retweetData.text) {\r\n                        retweeted_status.text = retweetData.text;\r\n                    }\r\n                }\r\n\r\n                const formatExtended = weiboUtils.formatExtended(ctx, item.mblog, uid);\r\n                let description = formatExtended.description;\r\n\r\n                // 视频的处理\r\n                if (displayVideo === '1') {\r\n                    // 含被转发微博时需要从被转发微博中获取视频\r\n                    description = retweeted_status ? weiboUtils.formatVideo(description, retweeted_status) : weiboUtils.formatVideo(description, item.mblog);\r\n                }\r\n\r\n                // 评论的处理\r\n                if (displayComments === '1') {\r\n                    description = await weiboUtils.formatComments(ctx, description, item.mblog, showBloggerIcons);\r\n                }\r\n\r\n                // 文章的处理\r\n                if (displayArticle === '1') {\r\n                    // 含被转发微博时需要从被转发微博中获取文章\r\n                    description = await (retweeted_status ? weiboUtils.formatArticle(ctx, description, retweeted_status) : weiboUtils.formatArticle(ctx, description, item.mblog));\r\n                }\r\n\r\n                return {\r\n                    ...formatExtended,\r\n                    description,\r\n                    isPinned: item.profile_type_id?.startsWith('proweibotop'),\r\n                };\r\n            })\r\n    );\r\n\r\n    // remove pinned weibo if they are posted before the earliest **ordinary** weibo\r\n    // there may be multiple pinned weibo at the same time, only remove the ones that meet the above condition\r\n    const pinnedItems = resultItems.filter((item) => item.isPinned);\r\n    const ordinaryItems = resultItems.filter((item) => !item.isPinned);\r\n    if (pinnedItems.length > 0 && ordinaryItems.length > 0) {\r\n        const earliestOrdinaryPostTime = Math.min(...ordinaryItems.map((i) => i.pubDate).filter(Boolean));\r\n        resultItems = ordinaryItems;\r\n        for (const item of pinnedItems) {\r\n            if (item.pubDate > earliestOrdinaryPostTime) {\r\n                resultItems.unshift(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    return weiboUtils.sinaimgTvax({\r\n        title: `${name}的微博`,\r\n        link: `https://weibo.com/${uid}/`,\r\n        description,\r\n        image: profileImageUrl,\r\n        item: resultItems,\r\n        allowEmpty: true,\r\n    });\r\n}\r\n"],"mappings":"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"}