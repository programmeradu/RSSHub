{"version":3,"file":"user-DrEKL_Wg.js","names":["route: Route","cache","ofetch"],"sources":["../../lib/routes/daily/user.ts"],"sourcesContent":["import { DataItem, Route } from '@/types';\r\nimport { baseUrl, getBuildId, getData, getList } from './utils';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { config } from '@/config';\r\n\r\nconst userPostQuery = `\r\n  query AuthorFeed(\r\n    $loggedIn: Boolean! = false\r\n    $userId: ID!\r\n    $after: String\r\n    $first: Int\r\n    $supportedTypes: [String!] = [\r\n      \"article\"\r\n      \"share\"\r\n      \"freeform\"\r\n      \"video:youtube\"\r\n      \"collection\"\r\n    ]\r\n  ) {\r\n    page: authorFeed(\r\n      author: $userId\r\n      after: $after\r\n      first: $first\r\n      ranking: TIME\r\n      supportedTypes: $supportedTypes\r\n    ) {\r\n      ...FeedPostConnection\r\n    }\r\n  }\r\n  fragment FeedPostConnection on PostConnection {\r\n    pageInfo {\r\n      hasNextPage\r\n      endCursor\r\n    }\r\n    edges {\r\n      node {\r\n        ...FeedPost\r\n        contentHtml\r\n        ...UserPost @include(if: $loggedIn)\r\n      }\r\n    }\r\n  }\r\n  fragment FeedPost on Post {\r\n    ...SharedPostInfo\r\n    sharedPost {\r\n      ...SharedPostInfo\r\n    }\r\n    trending\r\n    feedMeta\r\n    collectionSources {\r\n      handle\r\n      image\r\n    }\r\n    numCollectionSources\r\n    updatedAt\r\n    slug\r\n  }\r\n  fragment SharedPostInfo on Post {\r\n    id\r\n    title\r\n    titleHtml\r\n    image\r\n    readTime\r\n    permalink\r\n    commentsPermalink\r\n    summary\r\n    createdAt\r\n    private\r\n    upvoted\r\n    commented\r\n    bookmarked\r\n    views\r\n    numUpvotes\r\n    numComments\r\n    videoId\r\n    scout {\r\n      ...UserShortInfo\r\n    }\r\n    author {\r\n      ...UserShortInfo\r\n    }\r\n    type\r\n    tags\r\n    source {\r\n      ...SourceBaseInfo\r\n    }\r\n    downvoted\r\n    flags {\r\n      promoteToPublic\r\n    }\r\n    userState {\r\n      vote\r\n      flags {\r\n        feedbackDismiss\r\n      }\r\n    }\r\n    slug\r\n  }\r\n  fragment SourceBaseInfo on Source {\r\n    id\r\n    active\r\n    handle\r\n    name\r\n    permalink\r\n    public\r\n    type\r\n    description\r\n    image\r\n    membersCount\r\n    privilegedMembers {\r\n      user {\r\n        id\r\n      }\r\n      role\r\n    }\r\n    currentMember {\r\n      ...CurrentMember\r\n    }\r\n    memberPostingRole\r\n    memberInviteRole\r\n  }\r\n  fragment CurrentMember on SourceMember {\r\n    user {\r\n      id\r\n    }\r\n    permissions\r\n    role\r\n    referralToken\r\n    flags {\r\n      hideFeedPosts\r\n      collapsePinnedPosts\r\n    }\r\n  }\r\n  fragment UserShortInfo on User {\r\n    id\r\n    name\r\n    image\r\n    permalink\r\n    username\r\n    bio\r\n    createdAt\r\n    reputation\r\n  }\r\n  fragment UserPost on Post {\r\n    read\r\n    upvoted\r\n    commented\r\n    bookmarked\r\n    downvoted\r\n  }`;\r\n\r\nexport const route: Route = {\r\n    path: '/user/:userId/:innerSharedContent?',\r\n    example: '/daily/user/kramer',\r\n    radar: [\r\n        {\r\n            source: ['app.daily.dev/:userId/posts', 'app.daily.dev/:userId'],\r\n        },\r\n    ],\r\n    parameters: {\r\n        innerSharedContent: {\r\n            description: 'Where to Fetch inner Shared Posts instead of original',\r\n            default: 'false',\r\n            options: [\r\n                { value: 'false', label: 'False' },\r\n                { value: 'true', label: 'True' },\r\n            ],\r\n        },\r\n    },\r\n    name: 'User Posts',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'app.daily.dev',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const userId = ctx.req.param('userId');\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 7;\r\n    const innerSharedContent = ctx.req.param('innerSharedContent') ? JSON.parse(ctx.req.param('innerSharedContent')) : false;\r\n    const buildId = await getBuildId();\r\n\r\n    const userData = await cache.tryGet(`daily:user:${userId}`, async () => {\r\n        const response = await ofetch(`${baseUrl}/_next/data/${buildId}/en/${userId}.json`, {\r\n            query: {\r\n                userId,\r\n            },\r\n        });\r\n        return response.pageProps;\r\n    });\r\n    const user = (userData as any).user;\r\n\r\n    const items = await cache.tryGet(\r\n        `daily:user:${userId}:posts`,\r\n        async () => {\r\n            const edges = await getData({\r\n                query: userPostQuery,\r\n                variables: {\r\n                    userId: user.id,\r\n                    first: limit,\r\n                    loggedIn: false,\r\n                },\r\n            });\r\n            return getList(edges, innerSharedContent, true);\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    return {\r\n        title: `${user.name} | daily.dev`,\r\n        description: user.bio,\r\n        link: `${baseUrl}/${userId}/posts`,\r\n        item: items as DataItem[],\r\n        image: user.image,\r\n        logo: user.image,\r\n        icon: user.image,\r\n        language: 'en-us',\r\n    };\r\n}\r\n"],"mappings":"sYAMA,MAkJaA,EAAe,CACxB,KAAM,qCACN,QAAS,qBACT,MAAO,CACH,CACI,OAAQ,CAAC,8BAA+B,2BAGhD,WAAY,CACR,mBAAoB,CAChB,YAAa,wDACb,QAAS,QACT,QAAS,CACL,CAAE,MAAO,QAAS,MAAO,SACzB,CAAE,MAAO,OAAQ,MAAO,WAIpC,KAAM,aACN,YAAa,CAAC,UACd,UACA,IAAK,iBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAS,EAAI,IAAI,MAAM,UACvB,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,EAC/E,EAAqB,EAAI,IAAI,MAAM,sBAAwB,KAAK,MAAM,EAAI,IAAI,MAAM,uBAAyB,GAC7G,EAAU,MAAM,IAEhB,EAAW,MAAMC,EAAM,OAAO,cAAc,IAAU,SAAY,CACpE,IAAM,EAAW,MAAMC,EAAO,GAAG,EAAQ,cAAc,EAAQ,MAAM,EAAO,OAAQ,CAChF,MAAO,CACH,YAGR,OAAO,EAAS,YAEd,EAAQ,EAAiB,KAEzB,EAAQ,MAAMD,EAAM,OACtB,cAAc,EAAO,QACrB,SAAY,CACR,IAAM,EAAQ,MAAM,EAAQ,CACxB,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KACP,UAAW,CACP,OAAQ,EAAK,GACb,MAAO,EACP,SAAU,MAGlB,OAAO,EAAQ,EAAO,EAAoB,KAE9C,EAAO,MAAM,YACb,IAGJ,MAAO,CACH,MAAO,GAAG,EAAK,KAAK,cACpB,YAAa,EAAK,IAClB,KAAM,GAAG,EAAQ,GAAG,EAAO,QAC3B,KAAM,EACN,MAAO,EAAK,MACZ,KAAM,EAAK,MACX,KAAM,EAAK,MACX,SAAU"}