{"version":3,"file":"cn-BqE7RGxA.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/nikkei/cn/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { getSubPath } from '@/utils/common-utils';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\nimport Parser from 'rss-parser';\r\n\r\nconst parser = new Parser({\r\n    customFields: {\r\n        item: ['magnet'],\r\n    },\r\n    headers: {\r\n        'User-Agent': config.ua,\r\n    },\r\n    defaultRSS: 0.9,\r\n});\r\n\r\nexport const route: Route = {\r\n    path: '/cn/*',\r\n    name: '中文版新闻',\r\n    example: '/nikkei/cn',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `::: tip\r\n  如 [中国 经济 日经中文网](https://cn.nikkei.com/china/ceconomy.html) 的 URL 为 \\`https://cn.nikkei.com/china/ceconomy.html\\` 对应路由为 [\\`/nikkei/cn/cn/china/ceconomy\\`](https://rsshub.app/nikkei/cn/cn/china/ceconomy)\r\n\r\n  如 [中國 經濟 日經中文網](https://zh.cn.nikkei.com/china/ceconomy.html) 的 URL 为 \\`https://zh.cn.nikkei.com/china/ceconomy.html\\` 对应路由为 [\\`/nikkei/cn/zh/china/ceconomy\\`](https://rsshub.app/nikkei/cn/zh/china/ceconomy)\r\n\r\n  特别地，当 \\`path\\` 填入 \\`rss\\` 后（如路由为 [\\`/nikkei/cn/cn/rss\\`](https://rsshub.app/nikkei/cn/cn/rss)），此时返回的是 [官方 RSS 的内容](https://cn.nikkei.com/rss.html)\r\n:::`,\r\n    radar: [\r\n        {\r\n            title: '中文版新闻',\r\n            source: ['cn.nikkei.com/:category/:type', 'cn.nikkei.com/:category', 'cn.nikkei.com/'],\r\n            target: (params) => {\r\n                if (params.category && params.type) {\r\n                    return `/nikkei/cn/cn/${params.category}/${params.type.replace('.html', '')}`;\r\n                } else if (params.category && !params.type) {\r\n                    return `/nikkei/cn/cn/${params.category.replace('.html', '')}`;\r\n                } else {\r\n                    return `/nikkei/cn/cn`;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: '中文版新聞',\r\n            source: ['zh.cn.nikkei.com/:category/:type', 'zh.cn.nikkei.com/:category', 'zh.cn.nikkei.com/'],\r\n            target: (params) => {\r\n                if (params.category && params.type) {\r\n                    return `/nikkei/cn/zh/${params.category}/${params.type.replace('.html', '')}`;\r\n                } else if (params.category && !params.type) {\r\n                    return `/nikkei/cn/zh/${params.category.replace('.html', '')}`;\r\n                } else {\r\n                    return `/nikkei/cn/zh`;\r\n                }\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nasync function handler(ctx) {\r\n    let language = '';\r\n    let path = getSubPath(ctx);\r\n\r\n    if (/^\\/cn\\/(cn|zh)/.test(path)) {\r\n        language = path.match(/^\\/cn\\/(cn|zh)/)[1];\r\n        path = path.match(new RegExp(String.raw`\\/cn\\/` + language + '(.*)'))[1];\r\n    } else {\r\n        language = 'cn';\r\n    }\r\n\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 25;\r\n\r\n    const rootUrl = `https://${language === 'zh' ? 'zh.' : ''}cn.nikkei.com`;\r\n    const isOfficialRSS = path === '/rss';\r\n    const currentUrl = `${rootUrl}${path}${isOfficialRSS ? '.html' : ''}`;\r\n\r\n    let officialFeed;\r\n\r\n    let items = [],\r\n        $;\r\n\r\n    if (isOfficialRSS) {\r\n        officialFeed = await parser.parseURL(currentUrl);\r\n        items = officialFeed.items.slice(0, limit).map((item) => ({\r\n            title: item.title,\r\n            link: new URL(item.link, rootUrl).href,\r\n        }));\r\n    } else {\r\n        const response = await got({\r\n            method: 'get',\r\n            url: currentUrl,\r\n        });\r\n\r\n        $ = load(response.data);\r\n\r\n        const seenLinks = new Set<string>();\r\n        items = $('dt a')\r\n            .toArray()\r\n            .map((item) => {\r\n                item = $(item);\r\n\r\n                return {\r\n                    title: item.text(),\r\n                    link: new URL(item.attr('href'), currentUrl).href,\r\n                };\r\n            })\r\n            .filter((item) => {\r\n                if (seenLinks.has(item.link)) {\r\n                    return false;\r\n                }\r\n                seenLinks.add(item.link);\r\n                return true;\r\n            })\r\n            .slice(0, limit);\r\n    }\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: `${item.link}?print=1`,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                const divs = content('#contentDiv div');\r\n                divs.first().remove();\r\n                divs.last().remove();\r\n\r\n                item.pubDate = timezone(parseDate(item.link.match(/\\/\\d+-(.*?)\\.html/)[1], 'YYYY-MM-DD-HH-mm-ss'), +9);\r\n\r\n                item.author = content('meta[name=\"author\"]').attr('content');\r\n                item.title = item.title ?? content('meta[name=\"twitter:title\"]').attr('content');\r\n                item.description = content('#contentDiv')\r\n                    .html()\r\n                    ?.replace(/&nbsp;/g, '')\r\n                    .replaceAll('<p></p>', '');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: isOfficialRSS ? officialFeed.title : $('title').first().text(),\r\n        description: isOfficialRSS ? officialFeed.description : '',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"6fAUA,MAAM,EAAS,IAAI,EAAO,CACtB,aAAc,CACV,KAAM,CAAC,WAEX,QAAS,CACL,aAAc,EAAO,IAEzB,WAAY,KAGHA,EAAe,CACxB,KAAM,QACN,KAAM,QACN,QAAS,aACT,YAAa,CAAC,WACd,UACA,YAAa,2jBAOb,MAAO,CACH,CACI,MAAO,QACP,OAAQ,CAAC,gCAAiC,0BAA2B,kBACrE,OAAS,GACD,EAAO,UAAY,EAAO,KACnB,iBAAiB,EAAO,SAAS,GAAG,EAAO,KAAK,QAAQ,QAAS,MACjE,EAAO,UAAY,CAAC,EAAO,KAC3B,iBAAiB,EAAO,SAAS,QAAQ,QAAS,MAElD,iBAInB,CACI,MAAO,QACP,OAAQ,CAAC,mCAAoC,6BAA8B,qBAC3E,OAAS,GACD,EAAO,UAAY,EAAO,KACnB,iBAAiB,EAAO,SAAS,GAAG,EAAO,KAAK,QAAQ,QAAS,MACjE,EAAO,UAAY,CAAC,EAAO,KAC3B,iBAAiB,EAAO,SAAS,QAAQ,QAAS,MAElD,mBAO3B,eAAe,EAAQ,EAAK,CACxB,IAAI,EAAW,GACX,EAAO,EAAW,GAElB,iBAAiB,KAAK,IACtB,EAAW,EAAK,MAAM,kBAAkB,GACxC,EAAO,EAAK,MAAU,OAAO,OAAO,GAAG,SAAW,EAAW,SAAS,IAEtE,EAAW,KAGf,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAE3E,EAAU,WAAW,IAAa,KAAO,MAAQ,GAAG,eACpD,EAAgB,IAAS,OACzB,EAAa,GAAG,IAAU,IAAO,EAAgB,QAAU,KAE7D,EAEA,EAAQ,GACR,EAEJ,GAAI,EACA,EAAe,MAAM,EAAO,SAAS,GACrC,EAAQ,EAAa,MAAM,MAAM,EAAG,GAAO,IAAK,IAAU,CACtD,MAAO,EAAK,MACZ,KAAM,IAAI,IAAI,EAAK,KAAM,GAAS,YAEnC,CACH,IAAM,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGT,EAAI,EAAK,EAAS,MAElB,IAAM,EAAY,IAAI,IACtB,EAAQ,EAAE,QACL,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,OACZ,KAAM,IAAI,IAAI,EAAK,KAAK,QAAS,GAAY,QAGpD,OAAQ,GACD,EAAU,IAAI,EAAK,MACZ,IAEX,EAAU,IAAI,EAAK,MACZ,KAEV,MAAM,EAAG,GA+BlB,MA5BA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,GAAG,EAAK,KAAK,YAGhB,EAAU,EAAK,EAAe,MAE9B,EAAO,EAAQ,mBAarB,OAZA,EAAK,QAAQ,SACb,EAAK,OAAO,SAEZ,EAAK,QAAU,EAAS,EAAU,EAAK,KAAK,MAAM,qBAAqB,GAAI,uBAAwB,GAEnG,EAAK,OAAS,EAAQ,uBAAuB,KAAK,WAClD,EAAK,MAAQ,EAAK,OAAS,EAAQ,8BAA8B,KAAK,WACtE,EAAK,YAAc,EAAQ,eACtB,QACC,QAAQ,UAAW,IACpB,WAAW,UAAW,IAEpB,MAKZ,CACH,MAAO,EAAgB,EAAa,MAAQ,EAAE,SAAS,QAAQ,OAC/D,YAAa,EAAgB,EAAa,YAAc,GACxD,KAAM,EACN,KAAM"}