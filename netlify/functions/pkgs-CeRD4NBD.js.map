{"version":3,"file":"pkgs-CeRD4NBD.js","names":["route: Route","data: RowData[]","cache","got"],"sources":["../../lib/routes/alpinelinux/pkgs.ts"],"sourcesContent":["import { Data, Route } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\nimport { Context } from 'hono';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    name: 'Packages',\r\n    categories: ['program-update'],\r\n    maintainers: ['CaoMeiYouRen'],\r\n    path: '/pkgs/:name/:routeParams?',\r\n    parameters: { name: 'Packages name', routeParams: 'Filters of packages type. E.g. branch=edge&repo=main&arch=armv7&maintainer=Jakub%20Jirutka' },\r\n    example: '/alpinelinux/pkgs/nodejs',\r\n    description: `Alpine Linux packages update`,\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['https://pkgs.alpinelinux.org/packages'],\r\n            target: (params, url) => {\r\n                const searchParams = new URL(url).searchParams;\r\n                const name = searchParams.get('name');\r\n                searchParams.delete('name');\r\n                const routeParams = searchParams.toString();\r\n                return `/alpinelinux/pkgs/${name}/${routeParams}`;\r\n            },\r\n        },\r\n    ],\r\n    zh: {\r\n        name: '软件包',\r\n        description: 'Alpine Linux 软件包更新',\r\n    },\r\n};\r\n\r\ntype RowData = {\r\n    package: string;\r\n    packageUrl?: string;\r\n    version: string;\r\n    description?: string;\r\n    project?: string;\r\n    license: string;\r\n    branch: string;\r\n    repository: string;\r\n    architecture: string;\r\n    maintainer: string;\r\n    buildDate: string;\r\n};\r\n\r\nfunction parseTableToJSON(tableHTML: string) {\r\n    const $ = load(tableHTML);\r\n    const data: RowData[] = $('tbody tr')\r\n        .toArray()\r\n        .map((row) => ({\r\n            package: $(row).find('.package a').text().trim(),\r\n            packageUrl: $(row).find('.package a').attr('href')?.trim(),\r\n            description: $(row).find('.package a').attr('aria-label')?.trim(),\r\n            version: $(row).find('.version').text().trim(),\r\n            project: $(row).find('.url a').attr('href')?.trim(),\r\n            license: $(row).find('.license').text().trim(),\r\n            branch: $(row).find('.branch').text().trim(),\r\n            repository: $(row).find('.repo a').text().trim(),\r\n            architecture: $(row).find('.arch a').text().trim(),\r\n            maintainer: $(row).find('.maintainer a').text().trim(),\r\n            buildDate: $(row).find('.bdate').text().trim(),\r\n        }));\r\n\r\n    return data;\r\n}\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const { name, routeParams } = ctx.req.param();\r\n    const query = new URLSearchParams(routeParams);\r\n    query.append('name', name);\r\n    const link = `https://pkgs.alpinelinux.org/packages?${query.toString()}`;\r\n    const key = `alpinelinux:packages:${query.toString()}`;\r\n    const rowData = (await cache.tryGet(\r\n        key,\r\n        async () => {\r\n            const response = await got({\r\n                url: link,\r\n            });\r\n            const html = response.data;\r\n            return parseTableToJSON(html);\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    )) as RowData[];\r\n\r\n    const items = rowData.map((e) => ({\r\n        title: `${e.package}@${e.version}/${e.architecture}`,\r\n        description: `Version: ${e.version}<br>Project: ${e.project}<br>Description: ${e.description}<br>License: ${e.license}<br>Branch: ${e.branch}<br>Repository: ${e.repository}<br>Maintainer: ${e.maintainer}<br>Build Date: ${e.buildDate}`,\r\n        link: `https://pkgs.alpinelinux.org${e.packageUrl}`,\r\n        guid: `https://pkgs.alpinelinux.org${e.packageUrl}#${e.version}`,\r\n        author: e.maintainer,\r\n        pubDate: parseDate(e.buildDate),\r\n    }));\r\n    return {\r\n        title: `${name} - Alpine Linux packages`,\r\n        link,\r\n        description: 'Alpine Linux packages update',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"yXAQA,MAAaA,EAAe,CACxB,KAAM,WACN,WAAY,CAAC,kBACb,YAAa,CAAC,gBACd,KAAM,4BACN,WAAY,CAAE,KAAM,gBAAiB,YAAa,8FAClD,QAAS,2BACT,YAAa,+BACb,UACA,MAAO,CACH,CACI,OAAQ,CAAC,yCACT,QAAS,EAAQ,IAAQ,CACrB,IAAM,EAAe,IAAI,IAAI,GAAK,aAC5B,EAAO,EAAa,IAAI,QAC9B,EAAa,OAAO,QACpB,IAAM,EAAc,EAAa,WACjC,MAAO,qBAAqB,EAAK,GAAG,OAIhD,GAAI,CACA,KAAM,MACN,YAAa,uBAkBrB,SAAS,EAAiB,EAAmB,CACzC,IAAM,EAAI,EAAK,GACTC,EAAkB,EAAE,YACrB,UACA,IAAK,IAAS,CACX,QAAS,EAAE,GAAK,KAAK,cAAc,OAAO,OAC1C,WAAY,EAAE,GAAK,KAAK,cAAc,KAAK,SAAS,OACpD,YAAa,EAAE,GAAK,KAAK,cAAc,KAAK,eAAe,OAC3D,QAAS,EAAE,GAAK,KAAK,YAAY,OAAO,OACxC,QAAS,EAAE,GAAK,KAAK,UAAU,KAAK,SAAS,OAC7C,QAAS,EAAE,GAAK,KAAK,YAAY,OAAO,OACxC,OAAQ,EAAE,GAAK,KAAK,WAAW,OAAO,OACtC,WAAY,EAAE,GAAK,KAAK,WAAW,OAAO,OAC1C,aAAc,EAAE,GAAK,KAAK,WAAW,OAAO,OAC5C,WAAY,EAAE,GAAK,KAAK,iBAAiB,OAAO,OAChD,UAAW,EAAE,GAAK,KAAK,UAAU,OAAO,UAGhD,OAAO,EAGX,eAAe,EAAQ,EAA6B,CAChD,GAAM,CAAE,OAAM,eAAgB,EAAI,IAAI,QAChC,EAAQ,IAAI,gBAAgB,GAClC,EAAM,OAAO,OAAQ,GACrB,IAAM,EAAO,yCAAyC,EAAM,aACtD,EAAM,wBAAwB,EAAM,aACpC,EAAW,MAAMC,EAAM,OACzB,EACA,SAAY,CACR,IAAM,EAAW,MAAMC,EAAI,CACvB,IAAK,IAEH,EAAO,EAAS,KACtB,OAAO,EAAiB,IAE5B,EAAO,MAAM,YACb,IAGE,EAAQ,EAAQ,IAAK,IAAO,CAC9B,MAAO,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,eACtC,YAAa,YAAY,EAAE,QAAQ,eAAe,EAAE,QAAQ,mBAAmB,EAAE,YAAY,eAAe,EAAE,QAAQ,cAAc,EAAE,OAAO,kBAAkB,EAAE,WAAW,kBAAkB,EAAE,WAAW,kBAAkB,EAAE,YAC/N,KAAM,+BAA+B,EAAE,aACvC,KAAM,+BAA+B,EAAE,WAAW,GAAG,EAAE,UACvD,OAAQ,EAAE,WACV,QAAS,EAAU,EAAE,cAEzB,MAAO,CACH,MAAO,GAAG,EAAK,0BACf,OACA,YAAa,+BACb,KAAM"}