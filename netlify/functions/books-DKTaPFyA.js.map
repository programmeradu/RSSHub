{"version":3,"file":"books-DKTaPFyA.js","names":[],"sources":["../../lib/routes/jimmyspa/books.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { art } from '@/utils/render';\r\nimport cache from '@/utils/cache';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/books/:language',\r\n    categories: ['design'],\r\n    view: ViewType.Articles,\r\n    example: '/jimmyspa/books/tw',\r\n    parameters: {\r\n        language: {\r\n            description: '语言',\r\n            options: [\r\n                { value: 'tw', label: '臺灣正體' },\r\n                { value: 'en', label: 'English' },\r\n                { value: 'jp', label: '日本語' },\r\n            ],\r\n        },\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.jimmyspa.com/:language/Books'],\r\n        },\r\n    ],\r\n    name: 'Books',\r\n    description: `\r\n| language | Description |\r\n| ---   | ---   |\r\n| tw | 臺灣正體 |\r\n| en | English |\r\n| jp | 日本語 |\r\n    `,\r\n    maintainers: ['Cedaric'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const language = ctx.req.param('language');\r\n    const baseUrl = 'https://www.jimmyspa.com';\r\n    const booksListUrl = new URL(`/${language}/Books/Ajax/changeList?year=&keyword=&categoryId=0&page=1`, baseUrl).href;\r\n\r\n    const listResponse = await got(booksListUrl);\r\n    const listPage = load(listResponse.data.view);\r\n\r\n    const bookItems = listPage('ul#appendWork li.work_block')\r\n        .toArray()\r\n        .map(async (bookElement) => {\r\n            const bookContent = load(bookElement);\r\n            const bookTitle = bookContent('p.tit').text();\r\n            const bookImageRelative = bookContent('div.work_img img').prop('src') || '';\r\n            const bookImageUrl = bookImageRelative ? baseUrl + bookImageRelative : '';\r\n            const bookDetailUrl = bookContent('li.work_block').prop('data-route');\r\n\r\n            const { renderedDescription, publishDate } = (await cache.tryGet(bookDetailUrl, async () => {\r\n                const detailResponse = await got(bookDetailUrl);\r\n                const detailPage = load(detailResponse.data);\r\n                const bookDescription = detailPage('article.intro_cont').html() || '';\r\n                const bookInfoWrap = detailPage('div.info_wrap').html() || '';\r\n\r\n                const processedDescription = bookDescription.replaceAll(/<img\\b[^>]*>/g, (imgTag) =>\r\n                    imgTag.replaceAll(/\\b(src|data-src)=\"(?!http|https|\\/\\/)([^\"]*)\"/g, (_, attrName, relativePath) => {\r\n                        const absoluteImageUrl = new URL(relativePath, baseUrl).href;\r\n                        return `${attrName}=\"${absoluteImageUrl}\"`;\r\n                    })\r\n                );\r\n\r\n                const publishDateMatch = bookInfoWrap.match(/<span>(首次出版|First Published|初版)<\\/span>\\s*<span class=\"num\">([^<]+)<\\/span>/);\r\n                const publishDate = publishDateMatch ? parseDate(publishDateMatch[2] + '-02') : '';\r\n\r\n                const renderedDescription = art(path.join(__dirname, 'templates/description.art'), {\r\n                    images: bookImageUrl\r\n                        ? [\r\n                              {\r\n                                  src: bookImageUrl,\r\n                                  alt: bookTitle,\r\n                              },\r\n                          ]\r\n                        : undefined,\r\n                    description: processedDescription,\r\n                });\r\n\r\n                return {\r\n                    renderedDescription,\r\n                    publishDate,\r\n                };\r\n            })) as { renderedDescription: string; publishDate: string };\r\n\r\n            return {\r\n                title: bookTitle,\r\n                link: bookDetailUrl,\r\n                description: renderedDescription,\r\n                pubDate: publishDate,\r\n                content: {\r\n                    html: renderedDescription,\r\n                    text: bookTitle,\r\n                },\r\n            };\r\n        });\r\n\r\n    return {\r\n        title: `幾米 - 幾米創作(${language})`,\r\n        link: `${baseUrl}/${language}/Books`,\r\n        allowEmpty: true,\r\n        item: await Promise.all(bookItems),\r\n    };\r\n}\r\n"],"mappings":"ugBAQA,MAAa,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,UACb,KAAM,EAAS,SACf,QAAS,qBACT,WAAY,CACR,SAAU,CACN,YAAa,KACb,QAAS,CACL,CAAE,MAAO,KAAM,MAAO,QACtB,CAAE,MAAO,KAAM,MAAO,WACtB,CAAE,MAAO,KAAM,MAAO,UAIlC,MAAO,CACH,CACI,OAAQ,CAAC,sCAGjB,KAAM,QACN,YAAa;;;;;;MAOb,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,YACzB,EAAU,2BACV,EAAe,IAAI,IAAI,IAAI,EAAS,2DAA4D,GAAS,KAEzG,EAAe,MAAM,EAAI,GACzB,EAAW,EAAK,EAAa,KAAK,MAElC,EAAY,EAAS,+BACtB,UACA,IAAI,KAAO,IAAgB,CACxB,IAAM,EAAc,EAAK,GACnB,EAAY,EAAY,SAAS,OACjC,EAAoB,EAAY,oBAAoB,KAAK,QAAU,GACnE,EAAe,EAAoB,EAAU,EAAoB,GACjE,EAAgB,EAAY,iBAAiB,KAAK,cAElD,CAAE,sBAAqB,eAAiB,MAAM,EAAM,OAAO,EAAe,SAAY,CACxF,IAAM,EAAiB,MAAM,EAAI,GAC3B,EAAa,EAAK,EAAe,MACjC,EAAkB,EAAW,sBAAsB,QAAU,GAC7D,EAAe,EAAW,iBAAiB,QAAU,GAErD,EAAuB,EAAgB,WAAW,gBAAkB,GACtE,EAAO,WAAW,kDAAmD,EAAG,EAAU,IAAiB,CAC/F,IAAM,EAAmB,IAAI,IAAI,EAAc,GAAS,KACxD,MAAO,GAAG,EAAS,IAAI,EAAiB,MAI1C,EAAmB,EAAa,MAAM,+EACtC,EAAc,EAAmB,EAAU,EAAiB,GAAK,OAAS,GAE1E,EAAsB,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAC/E,OAAQ,EACF,CACI,CACI,IAAK,EACL,IAAK,IAGb,IAAA,GACN,YAAa,IAGjB,MAAO,CACH,oBAAA,EACA,YAAA,KAIR,MAAO,CACH,MAAO,EACP,KAAM,EACN,YAAa,EACb,QAAS,EACT,QAAS,CACL,KAAM,EACN,KAAM,MAKtB,MAAO,CACH,MAAO,aAAa,EAAS,GAC7B,KAAM,GAAG,EAAQ,GAAG,EAAS,QAC7B,WAAY,GACZ,KAAM,MAAM,QAAQ,IAAI"}