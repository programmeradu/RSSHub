{"version":3,"file":"dynamic-eh_wKLjH.js","names":["route: Route","utils","imgUrls: string[]","got","cookie","body","body: BilibiliWebDynamicResponse","cacheIn","CaptchaError","category: string[]"],"sources":["../../lib/routes/bilibili/dynamic.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport JSONbig from 'json-bigint';\r\nimport utils, { getLiveUrl, getVideoUrl } from './utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { fallback, queryToBoolean } from '@/utils/readable-social';\r\nimport cacheIn from './cache';\r\nimport { BilibiliWebDynamicResponse, Item2, Modules } from './api-interface';\r\nimport { parseDuration } from '@/utils/helpers';\r\nimport { config } from '@/config';\r\nimport CaptchaError from '@/errors/types/captcha';\r\n\r\nexport const route: Route = {\r\n    path: '/user/dynamic/:uid/:routeParams?',\r\n    categories: ['social-media'],\r\n    view: ViewType.SocialMedia,\r\n    example: '/bilibili/user/dynamic/2267573',\r\n    parameters: {\r\n        uid: '用户 id, 可在 UP 主主页中找到',\r\n        routeParams: `\r\n| 键         | 含义                              | 接受的值       | 默认值 |\r\n| ---------- | --------------------------------- | -------------- | ------ |\r\n| showEmoji  | 显示或隐藏表情图片                | 0/1/true/false | false  |\r\n| embed      | 默认开启内嵌视频                  | 0/1/true/false |  true  |\r\n| useAvid    | 视频链接使用 AV 号 (默认为 BV 号) | 0/1/true/false | false  |\r\n| directLink | 使用内容直链                      | 0/1/true/false | false  |\r\n| hideGoods  | 隐藏带货动态                      | 0/1/true/false | false  |\r\n| offset     | 偏移状态                         | string         | \"\"  |\r\n\r\n用例：\\`/bilibili/user/dynamic/2267573/showEmoji=1&embed=0&useAvid=1\\``,\r\n    },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'BILIBILI_COOKIE_*',\r\n                optional: true,\r\n                description: `如果没有此配置，那么必须开启 puppeteer 支持；BILIBILI_COOKIE_{uid}: 用于用户关注动态系列路由，对应 uid 的 b 站用户登录后的 Cookie 值，\\`{uid}\\` 替换为 uid，如 \\`BILIBILI_COOKIE_2267573\\`，获取方式：\r\n1.  打开 [https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&type=8](https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&type=8)\r\n2.  打开控制台，切换到 Network 面板，刷新\r\n3.  点击 dynamic_new 请求，找到 Cookie\r\n4.  视频和专栏，UP 主粉丝及关注只要求 \\`SESSDATA\\` 字段，动态需复制整段 Cookie`,\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['space.bilibili.com/:uid'],\r\n            target: '/user/dynamic/:uid',\r\n        },\r\n    ],\r\n    name: 'UP 主动态',\r\n    maintainers: ['DIYgod', 'zytomorrow', 'CaoMeiYouRen', 'JimenezLi'],\r\n    handler,\r\n};\r\n\r\nconst getTitle = (data: Modules): string => {\r\n    const major = data.module_dynamic?.major;\r\n    if (!major) {\r\n        return '';\r\n    }\r\n    if (major.none) {\r\n        return major.none.tips;\r\n    }\r\n    if (major.courses) {\r\n        return `${major.courses?.title} - ${major.courses?.sub_title}`;\r\n    }\r\n    if (major.live_rcmd?.content) {\r\n        // 正在直播的动态\r\n        return JSON.parse(major.live_rcmd.content)?.live_play_info?.title;\r\n    }\r\n    const type = major.type.replace('MAJOR_TYPE_', '').toLowerCase();\r\n    return major[type]?.title;\r\n};\r\nconst getDes = (data: Modules): string => {\r\n    let desc = '';\r\n    if (data.module_dynamic?.desc?.text) {\r\n        desc += data.module_dynamic.desc.text;\r\n    }\r\n    const major = data.module_dynamic?.major;\r\n    // 普通转发\r\n    if (!major) {\r\n        return desc;\r\n    }\r\n    // 普通分享\r\n    if (major?.common?.desc) {\r\n        desc += desc ? `<br>//转发自: ${major.common.desc}` : major.common.desc;\r\n        return desc;\r\n    }\r\n    // 转发的直播间\r\n    if (major?.live) {\r\n        return `${major.live?.desc_first}<br>${major.live?.desc_second}`;\r\n    }\r\n    // 正在直播的动态\r\n    if (major.live_rcmd?.content) {\r\n        const live_play_info = JSON.parse(major.live_rcmd.content)?.live_play_info;\r\n        return `${live_play_info?.area_name}·${live_play_info?.watched_show?.text_large}`;\r\n    }\r\n    // 图文动态\r\n    if (major?.opus) {\r\n        return major?.opus?.summary?.text;\r\n    }\r\n    const type = major.type.replace('MAJOR_TYPE_', '').toLowerCase();\r\n    return major[type]?.desc;\r\n};\r\n\r\nconst getOriginTitle = (data?: Modules) => data && getTitle(data);\r\nconst getOriginDes = (data?: Modules) => data && getDes(data);\r\nconst getOriginName = (data?: Modules) => data?.module_author?.name;\r\nconst getIframe = (data?: Modules, embed: boolean = true) => {\r\n    if (!embed) {\r\n        return '';\r\n    }\r\n    const aid = data?.module_dynamic?.major?.archive?.aid;\r\n    const bvid = data?.module_dynamic?.major?.archive?.bvid;\r\n    if (aid === undefined && bvid === undefined) {\r\n        return '';\r\n    }\r\n    // 不通过 utils.renderUGCDescription 渲染 img/description 以兼容其他格式的动态\r\n    return utils.renderUGCDescription(embed, '', '', aid, undefined, bvid);\r\n};\r\n\r\nconst getImgs = (data?: Modules) => {\r\n    const imgUrls: string[] = [];\r\n    const major = data?.module_dynamic?.major;\r\n    if (!major) {\r\n        return '';\r\n    }\r\n    // 动态图片\r\n    if (major.opus?.pics?.length) {\r\n        imgUrls.push(...major.opus.pics.map((e) => e.url));\r\n    }\r\n    // 专栏封面\r\n    if (major.article?.covers?.length) {\r\n        imgUrls.push(...major.article.covers);\r\n    }\r\n    // 相簿\r\n    if (major.draw?.items?.length) {\r\n        imgUrls.push(...major.draw.items.map((e) => e.src));\r\n    }\r\n    // 正在直播的动态\r\n    if (major.live_rcmd?.content) {\r\n        imgUrls.push(JSON.parse(major.live_rcmd.content)?.live_play_info?.cover);\r\n    }\r\n    const type = major.type.replace('MAJOR_TYPE_', '').toLowerCase();\r\n    if (major[type]?.cover) {\r\n        imgUrls.push(major[type].cover);\r\n    }\r\n    return imgUrls\r\n        .filter(Boolean)\r\n        .map((url) => `<img src=\"${url}\">`)\r\n        .join('');\r\n};\r\n\r\nconst getUrl = (item?: Item2, useAvid = false) => {\r\n    const data = item?.modules;\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    let url = '';\r\n    let text = '';\r\n    let videoPageUrl;\r\n    const major = data.module_dynamic?.major;\r\n    if (!major) {\r\n        return null;\r\n    }\r\n    switch (major?.type) {\r\n        case 'MAJOR_TYPE_UGC_SEASON':\r\n            url = major?.ugc_season?.jump_url || '';\r\n            text = `合集地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_ARTICLE':\r\n            url = `https://www.bilibili.com/read/cv${major?.article?.id}`;\r\n            text = `专栏地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_ARCHIVE': {\r\n            const archive = major?.archive;\r\n            const id = useAvid ? `av${archive?.aid}` : archive?.bvid;\r\n            url = `https://www.bilibili.com/video/${id}`;\r\n            text = `视频地址：<a href=${url}>${url}</a>`;\r\n            videoPageUrl = getVideoUrl(archive?.bvid);\r\n            break;\r\n        }\r\n        case 'MAJOR_TYPE_COMMON':\r\n            url = major?.common?.jump_url || '';\r\n            text = `地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_OPUS':\r\n            if (item?.type === 'DYNAMIC_TYPE_ARTICLE') {\r\n                url = `https:${major?.opus?.jump_url}`;\r\n                text = `专栏地址：<a href=${url}>${url}</a>`;\r\n            } else if (item?.type === 'DYNAMIC_TYPE_DRAW') {\r\n                url = `https:${major?.opus?.jump_url}`;\r\n                text = `图文地址：<a href=${url}>${url}</a>`;\r\n            }\r\n            break;\r\n        case 'MAJOR_TYPE_PGC': {\r\n            const pgc = major?.pgc;\r\n            url = `https://www.bilibili.com/bangumi/play/ep${pgc?.epid}&season_id=${pgc?.season_id}`;\r\n            text = `剧集地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        }\r\n        case 'MAJOR_TYPE_COURSES':\r\n            url = `https://www.bilibili.com/cheese/play/ss${major?.courses?.id}`;\r\n            text = `课程地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_MUSIC':\r\n            url = `https://www.bilibili.com/audio/au${major?.music?.id}`;\r\n            text = `音频地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_LIVE':\r\n            url = `https://live.bilibili.com/${major?.live?.id}`;\r\n            text = `直播间地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        case 'MAJOR_TYPE_LIVE_RCMD': {\r\n            const live_play_info = JSON.parse(major.live_rcmd?.content || '{}')?.live_play_info;\r\n            url = `https://live.bilibili.com/${live_play_info?.room_id}`;\r\n            videoPageUrl = getLiveUrl(live_play_info?.room_id);\r\n            text = `直播间地址：<a href=${url}>${url}</a>`;\r\n            break;\r\n        }\r\n        default:\r\n            return null;\r\n    }\r\n    return {\r\n        url,\r\n        text,\r\n        videoPageUrl,\r\n    };\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = ctx.req.param('uid');\r\n    const routeParams = Object.fromEntries(new URLSearchParams(ctx.req.param('routeParams')));\r\n    const showEmoji = fallback(undefined, queryToBoolean(routeParams.showEmoji), false);\r\n    const embed = fallback(undefined, queryToBoolean(routeParams.embed), false);\r\n    const displayArticle = ctx.req.query('mode') === 'fulltext';\r\n    const offset = fallback(undefined, routeParams.offset, '');\r\n    const useAvid = fallback(undefined, queryToBoolean(routeParams.useAvid), false);\r\n    const directLink = fallback(undefined, queryToBoolean(routeParams.directLink), false);\r\n    const hideGoods = fallback(undefined, queryToBoolean(routeParams.hideGoods), false);\r\n\r\n    const getDynamic = async (cookie: string) => {\r\n        const params = utils.addDmVerifyInfo(`offset=${offset}&host_mid=${uid}&platform=web&features=itemOpusStyle,listOnlyfans,opusBigCover,onlyfansVote`, utils.getDmImgList());\r\n        const response = await got(`https://api.bilibili.com/x/polymer/web-dynamic/v1/feed/space?${params}`, {\r\n            headers: {\r\n                Referer: `https://space.bilibili.com/${uid}/`,\r\n                Cookie: cookie,\r\n            },\r\n        });\r\n        const body = JSONbig.parse(response.body);\r\n        return body;\r\n    };\r\n\r\n    let body: BilibiliWebDynamicResponse;\r\n\r\n    const cookie = (await cacheIn.getCookie()) as string;\r\n    body = await getDynamic(cookie);\r\n\r\n    if (body?.code === -352) {\r\n        const cookie = (await cacheIn.getCookie(true)) as string;\r\n        body = await getDynamic(cookie);\r\n\r\n        if (body?.code === -352) {\r\n            cache.set('bili-cookie', '');\r\n            throw new CaptchaError('遇到源站风控校验，请稍后再试');\r\n        }\r\n    }\r\n    const items = (body as BilibiliWebDynamicResponse)?.data?.items;\r\n\r\n    let author = items[0]?.modules?.module_author?.name;\r\n    let face = items[0]?.modules?.module_author?.face;\r\n    if (!face || !author) {\r\n        const usernameAndFace = await cacheIn.getUsernameAndFaceFromUID(uid);\r\n        author = usernameAndFace[0] || items[0]?.modules?.module_author?.name;\r\n        face = usernameAndFace[1] || items[0]?.modules?.module_author?.face;\r\n    } else {\r\n        cache.set(`bili-username-from-uid-${uid}`, author);\r\n        cache.set(`bili-userface-from-uid-${uid}`, face);\r\n    }\r\n\r\n    const rssItems = await Promise.all(\r\n        items\r\n            .filter((item) => {\r\n                if (hideGoods) {\r\n                    return item.modules.module_dynamic?.additional?.type !== 'ADDITIONAL_TYPE_GOODS';\r\n                }\r\n                return true;\r\n            })\r\n            .map(async (item) => {\r\n                // const parsed = JSONbig.parse(item.card);\r\n\r\n                const data = item.modules;\r\n                const origin = item?.orig?.modules;\r\n                const bvid = data?.module_dynamic?.major?.archive?.bvid;\r\n\r\n                // link\r\n                let link = '';\r\n                if (item.id_str) {\r\n                    link = `https://t.bilibili.com/${item.id_str}`;\r\n                }\r\n\r\n                const originalDescription = getDes(data) || '';\r\n                let description = originalDescription;\r\n                const title = getTitle(data);\r\n                const category: string[] = [];\r\n                // emoji\r\n                if (data.module_dynamic?.desc?.rich_text_nodes?.length) {\r\n                    const nodes = data.module_dynamic.desc.rich_text_nodes;\r\n                    for (const node of nodes) {\r\n                        // 处理 emoji 的情况\r\n                        if (showEmoji && node?.emoji) {\r\n                            const emoji = node.emoji;\r\n                            description = description.replaceAll(\r\n                                emoji.text,\r\n                                `<img alt=\"${emoji.text}\" src=\"${emoji.icon_url}\" style=\"margin: -1px 1px 0px; display: inline-block; width: 20px; height: 20px; vertical-align: text-bottom;\" title=\"\" referrerpolicy=\"no-referrer\">`\r\n                            );\r\n                        }\r\n                        // 处理转发带图评论的情况\r\n                        if (node?.pics?.length) {\r\n                            const { pics, text } = node;\r\n                            description = description.replaceAll(\r\n                                text,\r\n                                pics\r\n                                    .map(\r\n                                        (pic) =>\r\n                                            `<img alt=\"${text}\" src=\"${pic.src}\" style=\"margin: 0px 0px 0px; display: inline-block; width: ${pic.width}px; height: ${pic.height}px; vertical-align: text-bottom;\" title=\"\" referrerpolicy=\"no-referrer\">`\r\n                                    )\r\n                                    .join('<br>')\r\n                            );\r\n                        }\r\n                        if (node?.type === 'RICH_TEXT_NODE_TYPE_TOPIC') {\r\n                            // 将话题作为 category\r\n                            category.push(node.text.match(/#(\\S+)#/)?.[1] || '');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (data.module_dynamic?.major?.opus?.summary?.rich_text_nodes?.length) {\r\n                    const nodes = data.module_dynamic.major.opus.summary.rich_text_nodes;\r\n                    for (const node of nodes) {\r\n                        if (node?.type === 'RICH_TEXT_NODE_TYPE_TOPIC') {\r\n                            // 将话题作为 category\r\n                            category.push(node.text.match(/#(\\S+)#/)?.[1] || '');\r\n                        }\r\n                    }\r\n                }\r\n                if (data.module_dynamic?.topic?.name) {\r\n                    // 将话题作为 category\r\n                    category.push(data.module_dynamic.topic.name);\r\n                }\r\n\r\n                if (item.type === 'DYNAMIC_TYPE_ARTICLE' && displayArticle) {\r\n                    // 抓取专栏全文\r\n                    const cvid = data.module_dynamic?.major?.opus?.jump_url?.match?.(/cv(\\d+)/)?.[0];\r\n                    if (cvid) {\r\n                        description = (await cacheIn.getArticleDataFromCvid(cvid, uid)).description || '';\r\n                    }\r\n                }\r\n\r\n                const urlResult = getUrl(item, useAvid);\r\n                const urlText = urlResult?.text;\r\n                if (urlResult && directLink) {\r\n                    link = urlResult.url;\r\n                }\r\n\r\n                const originUrlResult = getUrl(item?.orig, useAvid);\r\n                const originUrlText = originUrlResult?.text;\r\n                if (originUrlResult && directLink) {\r\n                    link = originUrlResult.url;\r\n                }\r\n\r\n                let originDescription = '';\r\n                const originName = getOriginName(origin);\r\n                const originTitle = getOriginTitle(origin);\r\n                const originDes = getOriginDes(origin);\r\n                if (originName) {\r\n                    originDescription += `//转发自: @${getOriginName(origin)}: `;\r\n                }\r\n                if (originTitle) {\r\n                    originDescription += originTitle;\r\n                }\r\n                if (originDes) {\r\n                    originDescription += `<br>${originDes}`;\r\n                }\r\n\r\n                // 换行处理\r\n                description = description.replaceAll('\\r\\n', '<br>').replaceAll('\\n', '<br>');\r\n                originDescription = originDescription.replaceAll('\\r\\n', '<br>').replaceAll('\\n', '<br>');\r\n                const descriptions = [title, description, getIframe(data, embed), getImgs(data), urlText, originDescription, getIframe(origin, embed), getImgs(origin), originUrlText]\r\n                    .map((e) => e?.trim())\r\n                    .filter(Boolean)\r\n                    .join('<br>');\r\n\r\n                const subtitles = !config.bilibili.excludeSubtitles && bvid ? await cacheIn.getVideoSubtitleAttachment(bvid) : [];\r\n\r\n                return {\r\n                    title: title || originalDescription,\r\n                    description: descriptions,\r\n                    pubDate: data.module_author?.pub_ts ? parseDate(data.module_author.pub_ts, 'X') : undefined,\r\n                    link,\r\n                    author,\r\n                    category: category.length ? [...new Set(category)] : undefined,\r\n                    attachments:\r\n                        urlResult?.videoPageUrl || originUrlResult?.videoPageUrl\r\n                            ? [\r\n                                  {\r\n                                      url: urlResult?.videoPageUrl || originUrlResult?.videoPageUrl,\r\n                                      mime_type: 'text/html',\r\n                                      duration_in_seconds: data.module_dynamic?.major?.archive?.duration_text ? parseDuration(data.module_dynamic.major.archive.duration_text) : undefined,\r\n                                  },\r\n                                  ...subtitles,\r\n                              ]\r\n                            : undefined,\r\n                };\r\n            })\r\n    );\r\n\r\n    return {\r\n        title: `${author} 的 bilibili 动态`,\r\n        link: `https://space.bilibili.com/${uid}/dynamic`,\r\n        description: `${author} 的 bilibili 动态`,\r\n        image: face,\r\n        logo: face,\r\n        icon: face,\r\n        item: rssItems,\r\n    };\r\n}\r\n"],"mappings":"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"}