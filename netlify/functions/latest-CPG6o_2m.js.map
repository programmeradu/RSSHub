{"version":3,"file":"latest-CPG6o_2m.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/radio-canada/latest.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/latest/:language?',\r\n    categories: ['new-media'],\r\n    example: '/radio-canada/latest',\r\n    parameters: { language: 'Language, see below, English by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['ici.radio-canada.ca/rci/:lang', 'ici.radio-canada.ca/'],\r\n        },\r\n    ],\r\n    name: 'Latest News',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `| Français | English | Español | 简体中文 | 繁體中文 | العربية | ਪੰਜਾਬੀ | Tagalog |\r\n| -------- | ------- | ------- | -------- | -------- | ------- | --- | ------- |\r\n| fr       | en      | es      | zh-hans  | zh-hant  | ar      | pa  | tl      |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const language = ctx.req.param('language') ?? 'en';\r\n\r\n    const rootUrl = 'https://ici.radio-canada.ca';\r\n    const apiRootUrl = 'https://services.radio-canada.ca';\r\n    const currentUrl = `${apiRootUrl}/neuro/sphere/v1/rci/${language}/continuous-feed?pageSize=50`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const list = response.data.data.lineup.items.map((item) => ({\r\n        title: item.title,\r\n        category: item.kicker,\r\n        link: `${rootUrl}${item.url}`,\r\n        pubDate: parseDate(item.date),\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const $ = load(detailResponse.data);\r\n                const rcState = $('script:contains(\"window._rcState_ = \")')\r\n                    .text()\r\n                    .match(/window\\._rcState_ = (.*);/)[1];\r\n                const rcStateJson = JSON.parse(rcState);\r\n                const news = Object.values(rcStateJson.pagesV2.pages)[0];\r\n                item.description = news.data.newsStory.body.html.replaceAll(String.raw`\\n`, '<br>');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: response.data.meta.title,\r\n        link: response.data.metric.metrikContent.omniture.url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,qBACN,WAAY,CAAC,aACb,QAAS,uBACT,WAAY,CAAE,SAAU,2CACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,gCAAiC,0BAGlD,KAAM,cACN,YAAa,CAAC,WACd,UACA,YAAa;;mFAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,KAIxC,EAAa,wDAAqC,EAAS,8BAE3D,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAO,EAAS,KAAK,KAAK,OAAO,MAAM,IAAK,IAAU,CACxD,MAAO,EAAK,MACZ,SAAU,EAAK,OACf,KAAM,8BAAa,EAAK,MACxB,QAAS,EAAU,EAAK,SAGtB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAI,EAAK,EAAe,MACxB,EAAU,EAAE,0CACb,OACA,MAAM,6BAA6B,GAClC,EAAc,KAAK,MAAM,GACzB,EAAO,OAAO,OAAO,EAAY,QAAQ,OAAO,GAGtD,MAFA,GAAK,YAAc,EAAK,KAAK,UAAU,KAAK,KAAK,WAAW,OAAO,GAAG,KAAM,QAErE,MAKnB,MAAO,CACH,MAAO,EAAS,KAAK,KAAK,MAC1B,KAAM,EAAS,KAAK,OAAO,cAAc,SAAS,IAClD,KAAM"}