{"version":3,"file":"mashiro-CiZQbqNV.js","names":["namespace: Namespace","route: Route","ofetch","cache","response","$"],"sources":["../../lib/routes/mashiro/namespace.ts","../../lib/routes/mashiro/index.ts"],"sourcesContent":["import type { Namespace } from '@/types';\r\n\r\nexport const namespace: Namespace = {\r\n    name: `Mashiro's Baumkuchen`,\r\n    url: 'mashiro.best',\r\n    description: `Muen's blog posts`,\r\n\r\n    zh: {\r\n        name: '真白的年轮面包',\r\n    },\r\n};\r\n","import { Route } from '@/types';\r\nimport { namespace } from './namespace';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst baseUrl = `https://${namespace.url}`;\r\n\r\nexport const route: Route = {\r\n    path: '/:lang',\r\n    categories: ['blog'],\r\n    example: '/mashiro/en',\r\n    parameters: { lang: 'the language of the site. Can be either `en` or `zh-cn`. Default: `en`' },\r\n    radar: [\r\n        {\r\n            source: ['mashiro.best/', 'mashiro.best/:lang/'],\r\n        },\r\n    ],\r\n    name: `Blog`,\r\n    maintainers: ['MuenYu'],\r\n    handler: async (ctx) => {\r\n        const { lang = 'en' } = ctx.req.param();\r\n        const targetLink = lang === 'en' ? `${baseUrl}/archives/` : `${baseUrl}/${lang}/archives/`;\r\n        const response = await ofetch(targetLink);\r\n        const $ = load(response);\r\n        const links = $('.archives-group article')\r\n            .toArray()\r\n            .slice(0, 10)\r\n            .map((item) => {\r\n                item = $(item);\r\n                const a = item.find('a').first();\r\n\r\n                const title = a.find('.article-title').text();\r\n                const link = `${baseUrl}${a.attr('href')}`;\r\n                const pubDate = parseDate(a.find('time').attr('datetime'));\r\n\r\n                return {\r\n                    title,\r\n                    link,\r\n                    pubDate,\r\n                };\r\n            });\r\n\r\n        const items = await Promise.all(\r\n            links.map((item) =>\r\n                cache.tryGet(item.link, async () => {\r\n                    const response = await ofetch(item.link);\r\n                    const $ = load(response);\r\n                    item.description = $('.article-content').first().html();\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n\r\n        return {\r\n            title: namespace.name,\r\n            link: targetLink,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"mTAEA,MAAaA,EAAuB,CAChC,KAAM,uBACN,IAAK,eACL,YAAa,oBAEb,GAAI,CACA,KAAM,YCDR,EAAU,WAAW,EAAU,MAExBC,EAAe,CACxB,KAAM,SACN,WAAY,CAAC,QACb,QAAS,cACT,WAAY,CAAE,KAAM,0EACpB,MAAO,CACH,CACI,OAAQ,CAAC,gBAAiB,yBAGlC,KAAM,OACN,YAAa,CAAC,UACd,QAAS,KAAO,IAAQ,CACpB,GAAM,CAAE,OAAO,MAAS,EAAI,IAAI,QAC1B,EAAa,IAAS,KAAO,GAAG,EAAQ,YAAc,GAAG,EAAQ,GAAG,EAAK,YACzE,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GACT,EAAQ,EAAE,2BACX,UACA,MAAM,EAAG,IACT,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KAAK,QAEnB,EAAQ,EAAE,KAAK,kBAAkB,OACjC,EAAO,GAAG,IAAU,EAAE,KAAK,UAC3B,EAAU,EAAU,EAAE,KAAK,QAAQ,KAAK,aAE9C,MAAO,CACH,QACA,OACA,aAIN,EAAQ,MAAM,QAAQ,IACxB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAO,EAAK,MAC7BG,EAAI,EAAKD,GAEf,MADA,GAAK,YAAcC,EAAE,oBAAoB,QAAQ,OAC1C,MAKnB,MAAO,CACH,MAAO,EAAU,KACjB,KAAM,EACN,KAAM"}