{"version":3,"file":"blog-BOYXXYx1.js","names":[],"sources":["../../lib/routes/sensortower/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:language?',\r\n    categories: ['new-media'],\r\n    example: '/sensortower/blog',\r\n    parameters: { language: 'Language, see below, English by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['sensortower.com/blog', 'sensortower.com/zh-CN/blog', 'sensortower.com/ja/blog', 'sensortower.com/ko/blog', 'sensortower.com/'],\r\n            target: '/blog',\r\n        },\r\n    ],\r\n    name: 'Blog',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'sensortower.com/blog',\r\n    description: `| English | Chinese | Japanese | Korean |\r\n| ------- | ------- | -------- | ------ |\r\n|         | zh-CN   | ja       | ko     |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const language = ctx.req.param('language') ?? '';\r\n\r\n    const rootUrl = 'https://sensortower.com';\r\n    const currentUrl = `${rootUrl}${language ? `/${language}` : ''}/blog`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const data = response.data.match(/\"uri\":\"(\\/blog\\/.*?)\"/g);\r\n\r\n    let items = data.map((item) => ({\r\n        link: `${rootUrl}${language ? `/${language}` : ''}${item.match(/\"(\\/blog\\/.*?)\"/)[1]}`,\r\n    }));\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n                const detail = JSON.parse(`{${detailResponse.data.match(/(\"title\":.*?),\"body\":/)[1]}}`);\r\n\r\n                content('h1').remove();\r\n                content('h5').parent().remove();\r\n                content('div[data-testid=\"Text-embedded-entry-block\"]').remove();\r\n\r\n                content('img').each(function () {\r\n                    const image = (content(this).attr('srcset') ?? content(this).attr('src')).split('?w=')[0];\r\n\r\n                    content(this).replaceWith(\r\n                        art(path.join(__dirname, 'templates/description.art'), {\r\n                            image,\r\n                        })\r\n                    );\r\n                });\r\n\r\n                item.title = detail.title;\r\n                item.author = detail.author.name;\r\n                item.pubDate = parseDate(detail.pubDate, 'MMMM YYYY');\r\n                item.category = [...(detail.tags?.map((t) => t.title) ?? []), ...(detail.category?.map((c) => c.title) ?? [])];\r\n                item.description = art(path.join(__dirname, 'templates/description.art'), {\r\n                    header: content('header[data-csk-entry-type=\"blog\"]').html(),\r\n                    description: content('div[data-csk-entry-type=\"blog\"] div[data-testid=\"Text-root\"]').html(),\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Sensor Tower - Blog',\r\n        link: currentUrl,\r\n        item: items,\r\n        language: language || 'en-US',\r\n    };\r\n}\r\n"],"mappings":"wdASA,MAAa,EAAe,CACxB,KAAM,mBACN,WAAY,CAAC,aACb,QAAS,oBACT,WAAY,CAAE,SAAU,2CACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAAwB,6BAA8B,0BAA2B,0BAA2B,oBACrH,OAAQ,UAGhB,KAAM,OACN,YAAa,CAAC,WACd,UACA,IAAK,uBACL,YAAa;;4CAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,GAExC,EAAU,0BACV,EAAa,GAAG,IAAU,EAAW,IAAI,IAAa,GAAG,OAEzD,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAO,EAAS,KAAK,MAAM,0BAE7B,EAAQ,EAAK,IAAK,IAAU,CAC5B,KAAM,GAAG,IAAU,EAAW,IAAI,IAAa,KAAK,EAAK,MAAM,mBAAmB,QA0CtF,MAvCA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAM,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAC9B,EAAS,KAAK,MAAM,IAAI,EAAe,KAAK,MAAM,yBAAyB,GAAG,IAyBpF,OAvBA,EAAQ,MAAM,SACd,EAAQ,MAAM,SAAS,SACvB,EAAQ,gDAAgD,SAExD,EAAQ,OAAO,KAAK,UAAY,CAC5B,IAAM,GAAS,EAAQ,MAAM,KAAK,WAAa,EAAQ,MAAM,KAAK,QAAQ,MAAM,OAAO,GAEvF,EAAQ,MAAM,YACV,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACnD,aAKZ,EAAK,MAAQ,EAAO,MACpB,EAAK,OAAS,EAAO,OAAO,KAC5B,EAAK,QAAU,EAAU,EAAO,QAAS,aACzC,EAAK,SAAW,CAAC,GAAI,EAAO,MAAM,IAAK,GAAM,EAAE,QAAU,GAAK,GAAI,EAAO,UAAU,IAAK,GAAM,EAAE,QAAU,IAC1G,EAAK,YAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACtE,OAAQ,EAAQ,sCAAsC,OACtD,YAAa,EAAQ,gEAAgE,SAGlF,MAKZ,CACH,MAAO,sBACP,KAAM,EACN,KAAM,EACN,SAAU,GAAY"}