{"version":3,"file":"arithmetic-index-B-3tJyXi.js","names":[],"sources":["../../lib/routes/oceanengine/arithmetic-index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport dayjs from 'dayjs';\r\nimport { art } from '@/utils/render';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\nimport path from 'node:path';\r\nimport { config } from '@/config';\r\nimport puppeteer from '@/utils/puppeteer';\r\nimport { createDecipheriv } from 'node:crypto';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\n// Parameters\r\nconst CACHE_MAX_AGE = config.cache.contentExpire;\r\nconst DEFAULT_FETCH_DURATION_MONTH = 6; // fetch data 6 month from now\r\n\r\n// Fetch Data\r\nconst getMultiKeywordHotTrend = async (page, keyword, start_date, end_date, app_name = 'aweme') => {\r\n    const e = {\r\n        url: 'https://trendinsight.oceanengine.com/api/open/index/get_multi_keyword_hot_trend',\r\n        method: 'POST',\r\n        data: JSON.stringify({ keyword_list: [keyword], start_date, end_date, app_name }),\r\n    };\r\n\r\n    const res = await page.evaluate((e) => {\r\n        function queryData() {\r\n            const p = new Promise((resolve) => {\r\n                const req = new XMLHttpRequest();\r\n                req.open(e.method, e.url, true);\r\n                req.setRequestHeader('accept', 'application/json, text/plain, */*');\r\n                req.setRequestHeader('content-type', 'application/json;charset=UTF-8');\r\n                req.setRequestHeader('tea-uid', '7054893410171930123');\r\n                req.addEventListener('readystatechange', () => {\r\n                    if (req.readyState === 4 && req.status === 200) {\r\n                        resolve(req.responseText);\r\n                    } else {\r\n                        return;\r\n                    }\r\n                });\r\n                req.send(e.data);\r\n            });\r\n            return p;\r\n        }\r\n        return Promise.resolve(queryData()).then((result) => result);\r\n    }, e);\r\n    return res[0];\r\n};\r\n\r\n// Decrypt Data\r\nconst key = 'anN2bXA2NjYsamlh';\r\nconst iv = 'amlheW91LHFpYW53';\r\nconst algorithm = 'aes-128-cfb';\r\nconst decrypt = (rawData) => {\r\n    const encrypted = Buffer.from(rawData, 'base64').toString('hex');\r\n    const decipher = createDecipheriv(algorithm, key, iv);\r\n    const decrypted = decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\r\n    return JSON.parse(decrypted);\r\n};\r\n\r\n// Generate Feed\r\nconst searchLinkUrls = (keyword) => [\r\n    `https://tophub.today/search?e=tophub&q=${keyword}`,\r\n    `https://www.baidu.com/s?wd=${keyword}`,\r\n    `https://www.google.com/search?q=${keyword}`,\r\n    `https://m.zhihu.com/search?type=content&q=${keyword}`,\r\n    `https://s.weibo.com/weibo/${keyword}`,\r\n    `https://www.douyin.com/search/${keyword}`,\r\n    `https://so.toutiao.com/search?keyword=${keyword}`,\r\n];\r\n\r\nconst searchLinkNames = ['‰ªäÊó•ÁÉ≠Ê¶ú', 'ÁôæÂ∫¶', 'Ë∞∑Ê≠å', 'Áü•‰πé', 'ÂæÆÂçö', 'ÊäñÈü≥', 'Â§¥Êù°'];\r\n\r\nconst createContent = (keyword, queryList, queryListText) =>\r\n    art(path.join(__dirname, 'templates/content.art'), {\r\n        keyword,\r\n        queryListText,\r\n        queries: queryList.map((query) => ({\r\n            links: searchLinkUrls(encodeURIComponent(query)).map((url, index) => `<a href=\"${url}\" rel=\"noopener noreferrer\" target=\"_blank\">${searchLinkNames[index]}</a>`),\r\n            key: query,\r\n        })),\r\n    });\r\n\r\nexport const route: Route = {\r\n    path: '/index/:keyword/:channel?',\r\n    name: 'Unknown',\r\n    maintainers: ['Jkker'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const now = dayjs();\r\n    const start_date = now.subtract(DEFAULT_FETCH_DURATION_MONTH, 'month').format('YYYYMMDD');\r\n    const end_date = now.format('YYYYMMDD');\r\n    const keyword = ctx.req.param('keyword');\r\n    if (!keyword) {\r\n        throw new InvalidParameterError('Invalid keyword');\r\n    }\r\n    if (ctx.req.param('channel') && !['douyin', 'toutiao'].includes(ctx.req.param('channel'))) {\r\n        throw new InvalidParameterError('Invalid channel„ÄÇ Only support `douyin` or `toutiao`');\r\n    }\r\n\r\n    const channel = ctx.req.param('channel') === 'toutiao' ? 'toutiao' : 'aweme'; // default channel is `douyin`\r\n    const channelName = ctx.req.param('channel') === 'toutiao' ? 'Â§¥Êù°' : 'ÊäñÈü≥';\r\n\r\n    const link = `https://trendinsight.oceanengine.com/arithmetic-index/analysis?keyword=${keyword}&appName=${channel}`;\r\n\r\n    const item = await cache.tryGet(\r\n        link,\r\n        async () => {\r\n            const browser = await puppeteer();\r\n            const page = await browser.newPage();\r\n            await page.setRequestInterception(true);\r\n            page.on('request', (request) => {\r\n                request.resourceType() === 'document' || request.resourceType() === 'script' || request.resourceType() === 'xhr' ? request.continue() : request.abort();\r\n            });\r\n            await page.goto('https://trendinsight.oceanengine.com/arithmetic-index');\r\n            const res = await getMultiKeywordHotTrend(page, keyword, start_date, end_date, channel);\r\n            await browser.close();\r\n\r\n            const rawData = JSON.parse(res).data;\r\n            const data = decrypt(rawData).hot_list[0];\r\n\r\n            const searchAverage = Number.parseInt(data.average.search_average);\r\n\r\n            return data.search_top_point_list.map(({ date, query_list }) => {\r\n                const searchIndex = Number.parseInt(data.search_hot_list.find((listItem) => listItem.datetime === date).index);\r\n                const relativePercent = Math.round(((searchIndex - searchAverage) / searchAverage) * 100);\r\n                const icon = relativePercent > 0 ? 'üìà' : 'üìâ';\r\n\r\n                const uniqueQueryList = query_list.filter((query) => query !== keyword);\r\n                const uniqueQueryListStr = uniqueQueryList.join(', ');\r\n\r\n                const content = createContent(keyword, [keyword, ...uniqueQueryList], uniqueQueryListStr);\r\n\r\n                return {\r\n                    title: `${icon} ${keyword} ${relativePercent}% | ${uniqueQueryListStr}`,\r\n                    author: `Â∑®ÈáèÁÆóÊï∞ - ${channelName}ÁÆóÊï∞ÊåáÊï∞`,\r\n                    description: content,\r\n                    link,\r\n                    pubDate: timezone(parseDate(date), +8),\r\n                    guid: `Â∑®ÈáèÁÆóÊï∞ - ${channelName}ÁÆóÊï∞ÊåáÊï∞ | ${keyword} - ${date}`,\r\n                };\r\n            });\r\n        },\r\n        CACHE_MAX_AGE,\r\n        false\r\n    );\r\n\r\n    return {\r\n        title: `${keyword} - ${channelName}ÊåáÊï∞Ê≥¢Â≥∞`,\r\n        link,\r\n        description: `Â∑®ÈáèÁÆóÊï∞ - ${channelName}ÁÆóÊï∞ÊåáÊï∞ | ÂÖ≥ÈîÆËØç: ${keyword}`,\r\n        language: 'zh-cn',\r\n        item,\r\n    };\r\n}\r\n"],"mappings":"8lBAcA,MAAM,EAAgB,EAAO,MAAM,cAI7B,EAA0B,MAAO,EAAM,EAAS,EAAY,EAAU,EAAW,UAAY,CAC/F,IAAM,EAAI,CACN,IAAK,kFACL,OAAQ,OACR,KAAM,KAAK,UAAU,CAAE,aAAc,CAAC,GAAU,aAAY,WAAU,cAGpE,EAAM,MAAM,EAAK,SAAU,GAAM,CACnC,SAAS,GAAY,CACjB,IAAM,EAAI,IAAI,QAAS,GAAY,CAC/B,IAAM,EAAM,IAAI,eAChB,EAAI,KAAK,EAAE,OAAQ,EAAE,IAAK,IAC1B,EAAI,iBAAiB,SAAU,qCAC/B,EAAI,iBAAiB,eAAgB,kCACrC,EAAI,iBAAiB,UAAW,uBAChC,EAAI,iBAAiB,uBAA0B,CAC3C,GAAI,EAAI,aAAe,GAAK,EAAI,SAAW,IACvC,EAAQ,EAAI,mBAEZ,SAGR,EAAI,KAAK,EAAE,QAEf,OAAO,EAEX,OAAO,QAAQ,QAAQ,KAAa,KAAM,GAAW,IACtD,GACH,OAAO,EAAI,IAOT,EAAW,GAAY,CACzB,IAAM,EAAY,OAAO,KAAK,EAAS,UAAU,SAAS,OACpD,EAAW,EAAiB,cAAW,mBAAK,oBAC5C,EAAY,EAAS,OAAO,EAAW,MAAO,QAAU,EAAS,MAAM,QAC7E,OAAO,KAAK,MAAM,IAIhB,EAAkB,GAAY,CAChC,0CAA0C,IAC1C,8BAA8B,IAC9B,mCAAmC,IACnC,6CAA6C,IAC7C,6BAA6B,IAC7B,iCAAiC,IACjC,yCAAyC,KAGvC,EAAkB,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzD,GAAiB,EAAS,EAAW,IACvC,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAC/C,UACA,gBACA,QAAS,EAAU,IAAK,IAAW,CAC/B,MAAO,EAAe,mBAAmB,IAAQ,KAAK,EAAK,IAAU,YAAY,EAAI,8CAA8C,EAAgB,GAAO,OAC1J,IAAK,OAIJ,EAAe,CACxB,KAAM,4BACN,KAAM,UACN,YAAa,CAAC,SACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,IACN,EAAa,EAAI,SAAS,EAA8B,SAAS,OAAO,YACxE,EAAW,EAAI,OAAO,YACtB,EAAU,EAAI,IAAI,MAAM,WAC9B,GAAI,CAAC,EACD,MAAM,IAAI,EAAsB,mBAEpC,GAAI,EAAI,IAAI,MAAM,YAAc,CAAC,CAAC,SAAU,WAAW,SAAS,EAAI,IAAI,MAAM,YAC1E,MAAM,IAAI,EAAsB,uDAGpC,IAAM,EAAU,EAAI,IAAI,MAAM,aAAe,UAAY,UAAY,QAC/D,EAAc,EAAI,IAAI,MAAM,aAAe,UAAY,KAAO,KAE9D,EAAO,0EAA0E,EAAQ,WAAW,IAEpG,EAAO,MAAM,EAAM,OACrB,EACA,SAAY,CACR,IAAM,EAAU,MAAM,IAChB,EAAO,MAAM,EAAQ,UAC3B,MAAM,EAAK,uBAAuB,IAClC,EAAK,GAAG,UAAY,GAAY,CAC5B,EAAQ,iBAAmB,YAAc,EAAQ,iBAAmB,UAAY,EAAQ,iBAAmB,MAAQ,EAAQ,WAAa,EAAQ,UAEpJ,MAAM,EAAK,KAAK,yDAChB,IAAM,EAAM,MAAM,EAAwB,EAAM,EAAS,EAAY,EAAU,GAC/E,MAAM,EAAQ,QAEd,IAAM,EAAU,KAAK,MAAM,GAAK,KAC1B,EAAO,EAAQ,GAAS,SAAS,GAEjC,EAAgB,OAAO,SAAS,EAAK,QAAQ,gBAEnD,OAAO,EAAK,sBAAsB,KAAK,CAAE,OAAM,gBAAiB,CAC5D,IAAM,EAAc,OAAO,SAAS,EAAK,gBAAgB,KAAM,GAAa,EAAS,WAAa,GAAM,OAClG,EAAkB,KAAK,OAAQ,EAAc,GAAiB,EAAiB,KAC/E,EAAO,EAAkB,EAAI,KAAO,KAEpC,EAAkB,EAAW,OAAQ,GAAU,IAAU,GACzD,EAAqB,EAAgB,KAAK,MAE1C,EAAU,EAAc,EAAS,CAAC,EAAS,GAAG,GAAkB,GAEtE,MAAO,CACH,MAAO,GAAG,EAAK,GAAG,EAAQ,GAAG,EAAgB,MAAM,IACnD,OAAQ,UAAU,EAAY,MAC9B,YAAa,EACb,OACA,QAAS,EAAS,EAAU,GAAO,GACnC,KAAM,UAAU,EAAY,SAAS,EAAQ,KAAK,QAI9D,EACA,IAGJ,MAAO,CACH,MAAO,GAAG,EAAQ,KAAK,EAAY,MACnC,OACA,YAAa,UAAU,EAAY,cAAc,IACjD,SAAU,QACV"}