{"version":3,"file":"status-UU8hTIti.js","names":["route: Route","got"],"sources":["../../lib/routes/pingwest/status.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/status',\r\n    categories: ['new-media'],\r\n    example: '/pingwest/status',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['pingwest.com/status', 'pingwest.com/'],\r\n        },\r\n    ],\r\n    name: '实时要闻',\r\n    maintainers: ['sanmmm'],\r\n    handler,\r\n    url: 'pingwest.com/status',\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = 'https://www.pingwest.com';\r\n    const url = `${baseUrl}/api/state/list`;\r\n    const response = await got(url, {\r\n        searchParams: {\r\n            page: 1,\r\n        },\r\n        headers: {\r\n            Referer: baseUrl,\r\n        },\r\n    });\r\n    const $ = load(response.data.data.list);\r\n    const items = $('section.item')\r\n        .toArray()\r\n        .map((ele) => {\r\n            const timestamp = ele.attribs['data-t'];\r\n            const $item = load(ele);\r\n            const rightNode = $item('.news-info');\r\n            const tag = rightNode.find('.item-tag-list').text();\r\n            const title = rightNode.find('.title').text();\r\n            const link = rightNode.find('a').last().attr('href');\r\n            let description = rightNode.text();\r\n            const imgUrl = $item('.news-img img');\r\n            if (imgUrl.length) {\r\n                imgUrl.attr('src', imgUrl.attr('src').split('?x-')[0]);\r\n                description += `<br>${imgUrl.parent().html()}`;\r\n            }\r\n            return {\r\n                title: title || tag,\r\n                link: link.startsWith('http') ? link : `https:${link}`,\r\n                description,\r\n                pubDate: parseDate(timestamp, 'X'),\r\n                category: tag,\r\n            };\r\n        });\r\n\r\n    return {\r\n        title: '品玩 - 实时要闻',\r\n        description: '品玩 - 实时要闻',\r\n        link: `${baseUrl}/status`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"oTAKA,MAAaA,EAAe,CACxB,KAAM,UACN,WAAY,CAAC,aACb,QAAS,mBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,sBAAuB,mBAGxC,KAAM,OACN,YAAa,CAAC,UACd,UACA,IAAK,uBAGT,eAAe,GAAU,CACrB,IAAM,EAAU,2BACV,EAAM,GAAG,EAAQ,iBACjB,EAAW,MAAMC,EAAI,EAAK,CAC5B,aAAc,CACV,KAAM,GAEV,QAAS,CACL,QAAS,KAGX,EAAI,EAAK,EAAS,KAAK,KAAK,MAC5B,EAAQ,EAAE,gBACX,UACA,IAAK,GAAQ,CACV,IAAM,EAAY,EAAI,QAAQ,UACxB,EAAQ,EAAK,GACb,EAAY,EAAM,cAClB,EAAM,EAAU,KAAK,kBAAkB,OACvC,EAAQ,EAAU,KAAK,UAAU,OACjC,EAAO,EAAU,KAAK,KAAK,OAAO,KAAK,QACzC,EAAc,EAAU,OACtB,EAAS,EAAM,iBAKrB,OAJI,EAAO,SACP,EAAO,KAAK,MAAO,EAAO,KAAK,OAAO,MAAM,OAAO,IACnD,GAAe,OAAO,EAAO,SAAS,UAEnC,CACH,MAAO,GAAS,EAChB,KAAM,EAAK,WAAW,QAAU,EAAO,SAAS,IAChD,cACA,QAAS,EAAU,EAAW,KAC9B,SAAU,KAItB,MAAO,CACH,MAAO,YACP,YAAa,YACb,KAAM,GAAG,EAAQ,SACjB,KAAM"}