{"version":3,"file":"petitions-BPM6c68F.js","names":[],"sources":["../../lib/routes/parliament.uk/petitions.ts"],"sourcesContent":["import path from 'node:path';\r\n\r\nimport { type Context } from 'hono';\r\nimport { load, type CheerioAPI } from 'cheerio';\r\n\r\nimport { type DataItem, type Route, type Data, ViewType } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { state = 'all' } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '50', 10);\r\n\r\n    const rootUrl: string = 'https://petition.parliament.uk';\r\n    const targetUrl: string = new URL(`petitions?state=${state}`, rootUrl).href;\r\n    const jsonUrl: string = new URL('petitions.json', rootUrl).href;\r\n\r\n    const response = await ofetch(targetUrl);\r\n    const $: CheerioAPI = load(response);\r\n    const language: string = $('html').prop('lang') ?? 'en';\r\n\r\n    const jsonResponse = await ofetch(jsonUrl, {\r\n        query: {\r\n            page: 1,\r\n            state,\r\n        },\r\n    });\r\n\r\n    const items = jsonResponse.data.slice(0, limit).map((item): DataItem => {\r\n        const attributes = item.attributes;\r\n\r\n        const title = attributes.action;\r\n        const description = art(path.join(__dirname, 'templates/description.art'), {\r\n            intro: attributes.background,\r\n            description: attributes.additional_details,\r\n        });\r\n        const guid = `parliament.uk-petition-${item.id}`;\r\n\r\n        const author: DataItem['author'] = attributes.creator_name;\r\n\r\n        const extraLinks = attributes.departments?.map((link) => ({\r\n            url: link.url,\r\n            type: 'related',\r\n            content_html: link.name,\r\n        }));\r\n\r\n        return {\r\n            title,\r\n            description,\r\n            pubDate: parseDate(attributes.created_at),\r\n            link: new URL(`petitions/${item.id}`, rootUrl).href,\r\n            category: [...new Set([...(attributes.topics ?? []), ...(attributes.departments?.map((d) => d.name) ?? [])])].filter(Boolean),\r\n            author,\r\n            guid,\r\n            id: guid,\r\n            content: {\r\n                html: description,\r\n                text: attributes.background,\r\n            },\r\n            updated: parseDate(attributes.updated_at),\r\n            language,\r\n            _extra: {\r\n                links: extraLinks?.length ? extraLinks : undefined,\r\n            },\r\n        };\r\n    });\r\n\r\n    const feedImage = $('meta[property=\"og:image\"]').prop('content');\r\n\r\n    return {\r\n        title: $('h1.page-title').text(),\r\n        description: $('meta[property=\"twitter:description\"]').prop('content'),\r\n        link: targetUrl,\r\n        item: items,\r\n        allowEmpty: true,\r\n        image: feedImage,\r\n        author: $('meta[name=\"msapplication-tooltip\"]').prop('content'),\r\n        language,\r\n        id: $('meta[property=\"og:url\"]').prop('content'),\r\n    };\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/petitions/:state?',\r\n    name: 'Petitions',\r\n    url: 'petition.parliament.uk',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    example: '/parliament.uk/petitions/all',\r\n    parameters: {\r\n        state: 'State, `all` by default, see below',\r\n    },\r\n    description: `::: tip\r\nIf you subscribe to [Recent petitions](https://petition.parliament.uk/petitions?state=recent)ï¼Œwhere the URL is \\`https://petition.parliament.uk/petitions?state=recent\\`, use the value of \\`state\\` as the parameter to fill in. Therefore, the route will be [\\`/parliament.uk/petitions/recent\\`](https://rsshub.app/parliament.uk/petitions/recent).\r\n:::\r\n\r\n<details>\r\n<summary>More states</summary>\r\n\r\n| Name                            | ID                |\r\n| ------------------------------- | ----------------- |\r\n| All petitions                   | all               |\r\n| Open petitions                  | open              |\r\n| Recent petitions                | recent            |\r\n| Closed petitions                | closed            |\r\n| Rejected petitions              | rejected          |\r\n| Awaiting government response    | awaiting_response |\r\n| Government responses            | with_response     |\r\n| Awaiting a debate in Parliament | awaiting_debate   |\r\n| Debated in Parliament           | debated           |\r\n| Not debated in Parliament       | not_debated       |\r\n\r\n</details>\r\n    `,\r\n    categories: ['government'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: (_, url) => {\r\n                const urlObj = new URL(url);\r\n                const state = urlObj.searchParams.get('state');\r\n\r\n                return `/parliament.uk/petitions${state ? `/${state}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: 'All petitions',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/all',\r\n        },\r\n        {\r\n            title: 'Open petitions',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/open',\r\n        },\r\n        {\r\n            title: 'Recent petitions',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/recent',\r\n        },\r\n        {\r\n            title: 'Closed petitions',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/closed',\r\n        },\r\n        {\r\n            title: 'Rejected petitions',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/rejected',\r\n        },\r\n        {\r\n            title: 'Awaiting government response',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/awaiting_response',\r\n        },\r\n        {\r\n            title: 'Government responses',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/with_response',\r\n        },\r\n        {\r\n            title: 'Awaiting a debate in Parliament',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/awaiting_debate',\r\n        },\r\n        {\r\n            title: 'Debated in Parliament',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/debated',\r\n        },\r\n        {\r\n            title: 'Not debated in Parliament',\r\n            source: ['petition.parliament.uk/petitions'],\r\n            target: '/petitions/not_debated',\r\n        },\r\n    ],\r\n    view: ViewType.Articles,\r\n};\r\n"],"mappings":"8ZAUA,MAAa,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,QAAQ,OAAU,EAAI,IAAI,QAC5B,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhE,EAAkB,iCAClB,EAAoB,IAAI,IAAI,mBAAmB,IAAS,GAAS,KACjE,EAAkB,IAAI,IAAI,iBAAkB,GAAS,KAErD,EAAW,MAAM,EAAO,GACxB,EAAgB,EAAK,GACrB,EAAmB,EAAE,QAAQ,KAAK,SAAW,KAE7C,EAAe,MAAM,EAAO,EAAS,CACvC,MAAO,CACH,KAAM,EACN,WAIF,EAAQ,EAAa,KAAK,MAAM,EAAG,GAAO,IAAK,GAAmB,CACpE,IAAM,EAAa,EAAK,WAElB,EAAQ,EAAW,OACnB,EAAc,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACvE,MAAO,EAAW,WAClB,YAAa,EAAW,qBAEtB,EAAO,0BAA0B,EAAK,KAEtC,EAA6B,EAAW,aAExC,EAAa,EAAW,aAAa,IAAK,IAAU,CACtD,IAAK,EAAK,IACV,KAAM,UACN,aAAc,EAAK,QAGvB,MAAO,CACH,QACA,cACA,QAAS,EAAU,EAAW,YAC9B,KAAM,IAAI,IAAI,aAAa,EAAK,KAAM,GAAS,KAC/C,SAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAI,EAAW,QAAU,GAAK,GAAI,EAAW,aAAa,IAAK,GAAM,EAAE,OAAS,MAAO,OAAO,SACrH,SACA,OACA,GAAI,EACJ,QAAS,CACL,KAAM,EACN,KAAM,EAAW,YAErB,QAAS,EAAU,EAAW,YAC9B,WACA,OAAQ,CACJ,MAAO,GAAY,OAAS,EAAa,IAAA,OAK/C,EAAY,EAAE,6BAA6B,KAAK,WAEtD,MAAO,CACH,MAAO,EAAE,iBAAiB,OAC1B,YAAa,EAAE,wCAAwC,KAAK,WAC5D,KAAM,EACN,KAAM,EACN,WAAY,GACZ,MAAO,EACP,OAAQ,EAAE,sCAAsC,KAAK,WACrD,WACA,GAAI,EAAE,2BAA2B,KAAK,aAIjC,EAAe,CACxB,KAAM,qBACN,KAAM,YACN,IAAK,yBACL,YAAa,CAAC,WACd,UACA,QAAS,+BACT,WAAY,CACR,MAAO,sCAEX,YAAa;;;;;;;;;;;;;;;;;;;;;MAsBb,WAAY,CAAC,cACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,oCACT,QAAS,EAAG,IAAQ,CAChB,IAAM,EAAS,IAAI,IAAI,GACjB,EAAQ,EAAO,aAAa,IAAI,SAEtC,MAAO,2BAA2B,EAAQ,IAAI,IAAU,OAGhE,CACI,MAAO,gBACP,OAAQ,CAAC,oCACT,OAAQ,kBAEZ,CACI,MAAO,iBACP,OAAQ,CAAC,oCACT,OAAQ,mBAEZ,CACI,MAAO,mBACP,OAAQ,CAAC,oCACT,OAAQ,qBAEZ,CACI,MAAO,mBACP,OAAQ,CAAC,oCACT,OAAQ,qBAEZ,CACI,MAAO,qBACP,OAAQ,CAAC,oCACT,OAAQ,uBAEZ,CACI,MAAO,+BACP,OAAQ,CAAC,oCACT,OAAQ,gCAEZ,CACI,MAAO,uBACP,OAAQ,CAAC,oCACT,OAAQ,4BAEZ,CACI,MAAO,kCACP,OAAQ,CAAC,oCACT,OAAQ,8BAEZ,CACI,MAAO,wBACP,OAAQ,CAAC,oCACT,OAAQ,sBAEZ,CACI,MAAO,4BACP,OAAQ,CAAC,oCACT,OAAQ,2BAGhB,KAAM,EAAS"}