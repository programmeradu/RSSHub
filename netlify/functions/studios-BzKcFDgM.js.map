{"version":3,"file":"studios-BzKcFDgM.js","names":[],"sources":["../../lib/routes/modelscope/studios.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport MarkdownIt from 'markdown-it';\r\nconst md = MarkdownIt({\r\n    html: true,\r\n    linkify: true,\r\n});\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/studios',\r\n    categories: ['programming'],\r\n    example: '/modelscope/studios',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['modelscope.cn/studios'],\r\n        },\r\n    ],\r\n    name: '创空间',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'modelscope.cn/studios',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://modelscope.cn';\r\n    const link = `${baseUrl}/studios`;\r\n\r\n    const { data } = await got.put(`${baseUrl}/api/v1/studios`, {\r\n        json: {\r\n            PageSize: ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 36,\r\n            PageNumber: 1,\r\n            SortBy: 'gmt_modified',\r\n        },\r\n    });\r\n\r\n    const studios = data.Data.Studios.map((studio) => ({\r\n        title: studio.ChineseName || studio.Name,\r\n        description: studio.Description,\r\n        author: studio.CreatedBy,\r\n        link: `${link}/${studio.Path}/${studio.Name}`,\r\n        pubDate: parseDate(studio.CreatedTime, 'X'),\r\n        category: studio.Tags,\r\n        slug: `/${studio.Path}/${studio.Name}`,\r\n        coverImage: studio.CoverImage.startsWith('https://img.alicdn.com/') ? undefined : studio.CoverImage,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        studios.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data } = await got(`${baseUrl}/api/v1/studio${item.slug}`);\r\n\r\n                const content = data.Data.ReadMeContent;\r\n                item.description = art(path.join(__dirname, 'templates/desc.art'), {\r\n                    coverImage: item.coverImage,\r\n                    description: item.description,\r\n                    md: md.render(content),\r\n                });\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '创空间首页 · 魔搭社区',\r\n        description: 'ModelScope——汇聚各领域先进的机器学习模型，提供模型探索体验、推理、训练、部署和应用的一站式服务。在这里，共建模型开源社区，发现、学习、定制和分享心仪的模型。',\r\n        image: 'https://g.alicdn.com/sail-web/maas/0.8.10/favicon/128.ico',\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"odAKA,MAAM,EAAK,EAAW,CAClB,KAAM,GACN,QAAS,KAMA,EAAe,CACxB,KAAM,WACN,WAAY,CAAC,eACb,QAAS,sBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BAGjB,KAAM,MACN,YAAa,CAAC,UACd,UACA,IAAK,yBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,wBACV,EAAO,GAAG,EAAQ,UAElB,CAAE,QAAS,MAAM,EAAI,IAAI,GAAG,EAAQ,iBAAkB,CACxD,KAAM,CACF,SAAU,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAC7E,WAAY,EACZ,OAAQ,kBAIV,EAAU,EAAK,KAAK,QAAQ,IAAK,IAAY,CAC/C,MAAO,EAAO,aAAe,EAAO,KACpC,YAAa,EAAO,YACpB,OAAQ,EAAO,UACf,KAAM,GAAG,EAAK,GAAG,EAAO,KAAK,GAAG,EAAO,OACvC,QAAS,EAAU,EAAO,YAAa,KACvC,SAAU,EAAO,KACjB,KAAM,IAAI,EAAO,KAAK,GAAG,EAAO,OAChC,WAAY,EAAO,WAAW,WAAW,2BAA6B,IAAA,GAAY,EAAO,cAGvF,EAAQ,MAAM,QAAQ,IACxB,EAAQ,IAAK,GACT,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAA,GAAS,MAAM,EAAI,GAAG,EAAQ,gBAAgB,EAAK,QAErD,EAAU,EAAK,KAAK,cAO1B,MANA,GAAK,YAAc,EAAI,EAAA,KAAA,EAAA,+BAA4C,CAC/D,WAAY,EAAK,WACjB,YAAa,EAAK,YAClB,GAAI,EAAG,OAAO,KAGX,MAKnB,MAAO,CACH,MAAO,eACP,YAAa,uFACb,MAAO,4DACP,OACA,KAAM"}