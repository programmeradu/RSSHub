{"version":3,"file":"latest-DelTi7qk.js","names":["route: Route","ofetch","cache","response"],"sources":["../../lib/routes/newswav/latest.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/',\r\n    categories: ['new-media'],\r\n    example: '/newswav',\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['newswav.com/latest', 'newswav.com'],\r\n        },\r\n    ],\r\n    name: 'Latest',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = 'https://newswav.com';\r\n\r\n    const response = await ofetch(`https://feed-api.newswav.com/api/web/feeds/latest`, {\r\n        query: {\r\n            languages: 'en,ms,zh',\r\n        },\r\n    });\r\n\r\n    const list = response.data.content\r\n        .filter((i) => i.contentId !== 'AD')\r\n        .map((i) => ({\r\n            title: i.title,\r\n            description: i.description,\r\n            category: i.topics.map((topic) => topic.en),\r\n            link: `${baseUrl}/article/${i.permalink}`,\r\n            permalink: i.permalink,\r\n            pubDate: parseDate(i.publishedAt),\r\n            author: i.publisher.name,\r\n            image: i.thumbnailUrl,\r\n        }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(`https://api.newswav.com/v4/api/v1/web/contents/${item.permalink}`);\r\n\r\n                if (response.contentType === 'video') {\r\n                    const video = response.meta.video;\r\n                    item.description = `<video controls preload=\"metadata\" poster=\"${video.thumbnailUrl}\"><source src=\"${video.videoUrl}\" type=\"${video.mimeType}\"></video><br>${video.content}`;\r\n\r\n                    return item;\r\n                } else if (response.contentType === 'podcast') {\r\n                    const podcast = response.meta.podcast;\r\n                    item.description = `<audio controls\"><source src=\"${podcast.url}\" type=\"audio/mpeg\"></audio><br>${podcast.content}`;\r\n                    item.enclosure_type = 'audio/mpeg';\r\n\r\n                    return item;\r\n                }\r\n\r\n                const article = response.meta.article;\r\n                const $ = load(article.content);\r\n\r\n                $('*')\r\n                    .contents()\r\n                    .filter((_, element) => element.type === 'comment' && element.data.trim() === 'AD')\r\n                    .remove();\r\n\r\n                $('iframe').each((_, element) => {\r\n                    const $element = $(element);\r\n                    if ($element.attr('src')?.includes('ga4-track.html') || $element.attr('src')?.includes('ga4-v2-track.html')) {\r\n                        $element.remove();\r\n                    }\r\n                });\r\n\r\n                item.description = $.html();\r\n\r\n                const image = new URL(article.originalUrl);\r\n                item.image = image.pathname.startsWith('/1000x0,q50=/') ? image.pathname.replace('/1000x0,q50=/', '') : image.pathname;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Newswav - Malaysiaâ€™s #1 Content Aggregator | Malaysia Breaking News, World News, and Latest News',\r\n        description: 'Latest news, videos and podcasts on Politics, Lifestyle, Sports, Current Affairs, Business & Finance, Entertainment and more from Malaysia & around the world.',\r\n        link: `${baseUrl}/latest`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAMA,MAAaA,EAAe,CACxB,KAAM,IACN,WAAY,CAAC,aACb,QAAS,WACT,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qBAAsB,iBAGvC,KAAM,SACN,YAAa,CAAC,UACd,WAGJ,eAAe,GAAU,CACrB,IAAM,EAAU,sBAEV,EAAW,MAAMC,EAAO,oDAAqD,CAC/E,MAAO,CACH,UAAW,cAIb,EAAO,EAAS,KAAK,QACtB,OAAQ,GAAM,EAAE,YAAc,MAC9B,IAAK,IAAO,CACT,MAAO,EAAE,MACT,YAAa,EAAE,YACf,SAAU,EAAE,OAAO,IAAK,GAAU,EAAM,IACxC,KAAM,GAAG,EAAQ,WAAW,EAAE,YAC9B,UAAW,EAAE,UACb,QAAS,EAAU,EAAE,aACrB,OAAQ,EAAE,UAAU,KACpB,MAAO,EAAE,gBAGX,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAO,kDAAkD,EAAK,aAErF,GAAIE,EAAS,cAAgB,QAAS,CAClC,IAAM,EAAQA,EAAS,KAAK,MAG5B,MAFA,GAAK,YAAc,8CAA8C,EAAM,aAAa,iBAAiB,EAAM,SAAS,UAAU,EAAM,SAAS,gBAAgB,EAAM,UAE5J,UACAA,EAAS,cAAgB,UAAW,CAC3C,IAAM,EAAUA,EAAS,KAAK,QAI9B,MAHA,GAAK,YAAc,iCAAiC,EAAQ,IAAI,kCAAkC,EAAQ,UAC1G,EAAK,eAAiB,aAEf,EAGX,IAAM,EAAUA,EAAS,KAAK,QACxB,EAAI,EAAK,EAAQ,SAEvB,EAAE,KACG,WACA,QAAQ,EAAG,IAAY,EAAQ,OAAS,WAAa,EAAQ,KAAK,SAAW,MAC7E,SAEL,EAAE,UAAU,MAAM,EAAG,IAAY,CAC7B,IAAM,EAAW,EAAE,IACf,EAAS,KAAK,QAAQ,SAAS,mBAAqB,EAAS,KAAK,QAAQ,SAAS,uBACnF,EAAS,WAIjB,EAAK,YAAc,EAAE,OAErB,IAAM,EAAQ,IAAI,IAAI,EAAQ,aAG9B,MAFA,GAAK,MAAQ,EAAM,SAAS,WAAW,iBAAmB,EAAM,SAAS,QAAQ,gBAAiB,IAAM,EAAM,SAEvG,MAKnB,MAAO,CACH,MAAO,mGACP,YAAa,iKACb,KAAM,GAAG,EAAQ,SACjB,KAAM"}