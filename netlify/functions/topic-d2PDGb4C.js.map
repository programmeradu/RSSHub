{"version":3,"file":"topic-d2PDGb4C.js","names":["route: Route","ofetch","cache"],"sources":["../../lib/routes/taptap/topic.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { getRootUrl, X_UA, appDetail, imagePost, topicPost, videoPost } from './utils';\r\n\r\nconst typeMap = {\r\n    feed: {\r\n        zh_CN: '最新',\r\n        zh_TW: '最新',\r\n    },\r\n    official: {\r\n        zh_CN: '官方',\r\n        zh_TW: '官方',\r\n    },\r\n    elite: {\r\n        zh_CN: '精华',\r\n        zh_TW: '精華',\r\n    },\r\n    video: {\r\n        zh_CN: '影片',\r\n        zh_TW: '影片',\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/topic/:id/:type?/:sort?/:lang?',\r\n    categories: ['game'],\r\n    example: '/taptap/topic/142793/official',\r\n    parameters: {\r\n        id: '游戏 ID，游戏主页 URL 中获取',\r\n        type: '论坛版块，默认显示所有帖子，论坛版块 URL 中 `type` 参数，见下表，默认为 `feed`',\r\n        sort: '排序，见下表，默认为 `created`',\r\n        lang: '语言，`zh-CN`或`zh-TW`，默认为`zh-CN`',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['taptap.cn/app/:id/topic', 'taptap.cn/app/:id'],\r\n            target: '/topic/:id',\r\n        },\r\n    ],\r\n    name: '游戏论坛',\r\n    maintainers: ['hoilc', 'TonyRL'],\r\n    handler,\r\n    description: `| 全部 | 精华  | 官方     | 影片  |\r\n| ---- | ----- | -------- | ----- |\r\n| feed | elite | official | video |\r\n\r\n| 发布时间 | 回复时间  | 默认排序 |\r\n| -------- | --------- | ------- |\r\n| created  | commented | default |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const lang = ctx.req.param('lang') ?? 'zh_CN';\r\n    const appId = ctx.req.param('id');\r\n    const appData = await appDetail(appId, lang);\r\n    const type = ctx.req.param('type') ?? 'feed';\r\n    const sort = ctx.req.param('sort') ?? 'created';\r\n    const groupId = appData.group.id;\r\n    const appImg = appData.app.icon.original_url || appData.app.icon.url;\r\n    const appName = appData.app.title;\r\n    const url = `${getRootUrl(false)}/webapiv2/feed/v7/by-group?group_id=${groupId}&type=${type}&sort=${sort}&${X_UA(lang)}`;\r\n\r\n    const topicsList = await ofetch(url);\r\n    const list = topicsList.data.list;\r\n\r\n    const out = await Promise.all(\r\n        list.map(({ moment }) => {\r\n            const link = moment.sharing.url;\r\n\r\n            return cache.tryGet(link, async () => {\r\n                const author = moment.author.user.name;\r\n                const topicId = moment.topic.id_str;\r\n                // raw_text sometimes is \"\" so || is better than ??\r\n                const title = moment.topic.title || moment.topic.summary.split(' ')[0];\r\n                let description = moment.topic.summary || '';\r\n                if (moment.topic.pin_video) {\r\n                    description += videoPost(moment.topic.pin_video);\r\n                    if (moment.topic.footer_images?.images) {\r\n                        description += imagePost(moment.topic.footer_images.images);\r\n                    }\r\n                } else {\r\n                    description = await topicPost(appId, topicId, lang);\r\n                }\r\n\r\n                return {\r\n                    title,\r\n                    description,\r\n                    author,\r\n                    link,\r\n                    pubDate: parseDate(moment.created_time, 'X'),\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    const ret = {\r\n        title: `${appName} - ${typeMap[type][lang]} - TapTap 论坛`,\r\n        link: `${getRootUrl(false)}/app/${appId}/topic?type=${type}&sort=${sort}`,\r\n        image: appImg,\r\n        item: out.filter((item) => item !== ''),\r\n    };\r\n\r\n    ctx.set('json', {\r\n        ...ret,\r\n        appId,\r\n        groupId,\r\n        topicsList,\r\n    });\r\n    return ret;\r\n}\r\n"],"mappings":"waAMA,MAAM,EAAU,CACZ,KAAM,CACF,MAAO,KACP,MAAO,MAEX,SAAU,CACN,MAAO,KACP,MAAO,MAEX,MAAO,CACH,MAAO,KACP,MAAO,MAEX,MAAO,CACH,MAAO,KACP,MAAO,OAIFA,EAAe,CACxB,KAAM,kCACN,WAAY,CAAC,QACb,QAAS,gCACT,WAAY,CACR,GAAI,qBACJ,KAAM,oDACN,KAAM,uBACN,KAAM,iCAEV,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAA2B,qBACpC,OAAQ,eAGhB,KAAM,OACN,YAAa,CAAC,QAAS,UACvB,UACA,YAAa;;;;;;qCASjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,QAChC,EAAQ,EAAI,IAAI,MAAM,MACtB,EAAU,MAAM,EAAU,EAAO,GACjC,EAAO,EAAI,IAAI,MAAM,SAAW,OAChC,EAAO,EAAI,IAAI,MAAM,SAAW,UAChC,EAAU,EAAQ,MAAM,GACxB,EAAS,EAAQ,IAAI,KAAK,cAAgB,EAAQ,IAAI,KAAK,IAC3D,EAAU,EAAQ,IAAI,MACtB,EAAM,GAAG,EAAW,IAAO,sCAAsC,EAAQ,QAAQ,EAAK,QAAQ,EAAK,GAAG,EAAK,KAE3G,EAAa,MAAMC,EAAO,GAC1B,EAAO,EAAW,KAAK,KAEvB,EAAM,MAAM,QAAQ,IACtB,EAAK,KAAK,CAAE,YAAa,CACrB,IAAM,EAAO,EAAO,QAAQ,IAE5B,OAAOC,EAAM,OAAO,EAAM,SAAY,CAClC,IAAM,EAAS,EAAO,OAAO,KAAK,KAC5B,EAAU,EAAO,MAAM,OAEvB,EAAQ,EAAO,MAAM,OAAS,EAAO,MAAM,QAAQ,MAAM,KAAK,GAChE,EAAc,EAAO,MAAM,SAAW,GAU1C,OATI,EAAO,MAAM,WACb,GAAe,EAAU,EAAO,MAAM,WAClC,EAAO,MAAM,eAAe,SAC5B,GAAe,EAAU,EAAO,MAAM,cAAc,UAGxD,EAAc,MAAM,EAAU,EAAO,EAAS,GAG3C,CACH,QACA,cACA,SACA,OACA,QAAS,EAAU,EAAO,aAAc,WAMlD,EAAM,CACR,MAAO,GAAG,EAAQ,KAAK,EAAQ,GAAM,GAAM,cAC3C,KAAM,GAAG,EAAW,IAAO,OAAO,EAAM,cAAc,EAAK,QAAQ,IACnE,MAAO,EACP,KAAM,EAAI,OAAQ,GAAS,IAAS,KASxC,OANA,EAAI,IAAI,OAAQ,CACZ,GAAG,EACH,QACA,UACA,eAEG"}