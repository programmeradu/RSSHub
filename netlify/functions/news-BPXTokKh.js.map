{"version":3,"file":"news-BPXTokKh.js","names":[],"sources":["../../lib/routes/espn/news.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as cheerio from 'cheerio';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\n\r\nconst renderMedia = (media) =>\r\n    art(path.join(__dirname, 'templates/media.art'), {\r\n        video: {\r\n            cover: media.posterImages?.full?.href || media.posterImages?.default?.href,\r\n            src: media.links?.source.mezzanine?.href || media.links?.source.HD?.href || media.links?.source.full?.href || media.links?.source.href,\r\n            title: media.title,\r\n            description: media.description,\r\n        },\r\n        image: {\r\n            src: media.url,\r\n            alt: media.alt,\r\n            caption: media.caption,\r\n            credit: media.credit,\r\n        },\r\n    });\r\n\r\nconst junkPattern = /inline\\d+|alsosee/;\r\nconst mediaPattern = /(photo|video)(\\d+)/;\r\n\r\nexport const route: Route = {\r\n    path: '/news/:sport',\r\n    name: 'News',\r\n    maintainers: ['weijianduan0302'],\r\n    example: '/espn/news/nba',\r\n    categories: ['traditional-media'],\r\n    parameters: { sport: 'sport category, can be nba, nfl, mlb, nhl etc.' },\r\n    description: `Get the news feed of the sport you love on ESPN.\r\n| Sport                |  sport  |  Sport         |  sport  |\r\n|----------------------|---------|----------------|---------|\r\n| 🏀 NBA                | nba     | 🎾 Tennis       | tennis  |\r\n| 🏀 WNBA               | wnba    | ⛳️ Golf         | golf    |\r\n| 🏈 NFL                | nfl     | 🏏 Cricket      | cricket |\r\n| ⚾️ MLB                | mlb     | ⚽️ Soccer       | soccer  |\r\n| 🏒 NHL                | nhl     | 🏎️ F1           | f1      |\r\n| ⛹️ College Basketball | ncb      | 🥊 MMA          | mma     |\r\n| 🏟️️ College Football   | ncf     | 🏈 UFL          | ufl     |\r\n| 🏉 Rugby              | rugby   | 🃏 Poker        | poker   |`,\r\n    radar: [\r\n        {\r\n            source: ['espn.com/:sport*'],\r\n            target: '/news/:sport',\r\n        },\r\n    ],\r\n    handler: async (ctx) => {\r\n        const { sport = 'nba' } = ctx.req.param();\r\n        const response = await ofetch(`https://onefeed.fan.api.espn.com/apis/v3/cached/contentEngine/oneFeed/leagues/${sport}?offset=0`, {\r\n            headers: {\r\n                accept: 'application/json',\r\n            },\r\n        });\r\n\r\n        const handledTypes = new Set(['HeadlineNews', 'Story', 'Media', 'Shortstop']);\r\n        const list = response.feed\r\n            .filter((item) => handledTypes.has(item.data.now[0].type))\r\n            .map((item) => {\r\n                const itemDetail = item.data.now[0];\r\n                const itemType = itemDetail.type;\r\n\r\n                return {\r\n                    title: itemDetail.headline,\r\n                    link: itemDetail.links.web.href,\r\n                    author: itemDetail.byline,\r\n                    pubDate: item.date,\r\n                    // for videos and shortstops, no need to extract full text below\r\n                    description: itemType === 'Media' ? renderMedia(itemDetail.video[0]) : itemType === 'Shortstop' ? itemDetail.headline : '',\r\n                };\r\n            });\r\n\r\n        const items = await Promise.all(\r\n            list.map((item) =>\r\n                cache.tryGet(item.link, async () => {\r\n                    if (item.description === '') {\r\n                        const article = await ofetch(`${item.link}?xhr=1`, {\r\n                            headers: {\r\n                                accept: 'application/json',\r\n                            },\r\n                        });\r\n\r\n                        const $ = cheerio.load(article.content.story, null, false);\r\n                        $('*').each((_, ele) => {\r\n                            if (junkPattern.test(ele.name)) {\r\n                                $(ele).remove();\r\n                            }\r\n                            if (mediaPattern.test(ele.name)) {\r\n                                const mediaType = ele.name.match(mediaPattern)[1] === 'photo' ? 'images' : 'video';\r\n                                const mediaIndex = Number.parseInt(ele.name.match(mediaPattern)[2]) - 1;\r\n                                const media = article.content[mediaType][mediaIndex];\r\n                                if (media) {\r\n                                    $(ele).replaceWith(renderMedia(media));\r\n                                } else {\r\n                                    $(ele).remove();\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        item.description = $.html();\r\n                    }\r\n\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n\r\n        return {\r\n            title: `ESPN ${sport.toUpperCase()} News`,\r\n            link: `https://www.espn.com/espn/rss/${sport}/news`,\r\n            item: items,\r\n        };\r\n    },\r\n};\r\n"],"mappings":"yWAOA,MAAM,EAAe,GACjB,EAAI,EAAA,KAAA,EAAA,gCAA6C,CAC7C,MAAO,CACH,MAAO,EAAM,cAAc,MAAM,MAAQ,EAAM,cAAc,SAAS,KACtE,IAAK,EAAM,OAAO,OAAO,WAAW,MAAQ,EAAM,OAAO,OAAO,IAAI,MAAQ,EAAM,OAAO,OAAO,MAAM,MAAQ,EAAM,OAAO,OAAO,KAClI,MAAO,EAAM,MACb,YAAa,EAAM,aAEvB,MAAO,CACH,IAAK,EAAM,IACX,IAAK,EAAM,IACX,QAAS,EAAM,QACf,OAAQ,EAAM,UAIpB,EAAc,oBACd,EAAe,qBAER,EAAe,CACxB,KAAM,eACN,KAAM,OACN,YAAa,CAAC,mBACd,QAAS,iBACT,WAAY,CAAC,qBACb,WAAY,CAAE,MAAO,kDACrB,YAAa;;;;;;;;;;iEAWb,MAAO,CACH,CACI,OAAQ,CAAC,oBACT,OAAQ,iBAGhB,QAAS,KAAO,IAAQ,CACpB,GAAM,CAAE,QAAQ,OAAU,EAAI,IAAI,QAC5B,EAAW,MAAM,EAAO,iFAAiF,EAAM,WAAY,CAC7H,QAAS,CACL,OAAQ,sBAIV,EAAe,IAAI,IAAI,CAAC,eAAgB,QAAS,QAAS,cAC1D,EAAO,EAAS,KACjB,OAAQ,GAAS,EAAa,IAAI,EAAK,KAAK,IAAI,GAAG,OACnD,IAAK,GAAS,CACX,IAAM,EAAa,EAAK,KAAK,IAAI,GAC3B,EAAW,EAAW,KAE5B,MAAO,CACH,MAAO,EAAW,SAClB,KAAM,EAAW,MAAM,IAAI,KAC3B,OAAQ,EAAW,OACnB,QAAS,EAAK,KAEd,YAAa,IAAa,QAAU,EAAY,EAAW,MAAM,IAAM,IAAa,YAAc,EAAW,SAAW,MAI9H,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACN,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAI,EAAK,cAAgB,GAAI,CACzB,IAAM,EAAU,MAAM,EAAO,GAAG,EAAK,KAAK,QAAS,CAC/C,QAAS,CACL,OAAQ,sBAIV,EAAI,EAAQ,KAAK,EAAQ,QAAQ,MAAO,KAAM,IACpD,EAAE,KAAK,MAAM,EAAG,IAAQ,CAIpB,GAHI,EAAY,KAAK,EAAI,OACrB,EAAE,GAAK,SAEP,EAAa,KAAK,EAAI,MAAO,CAC7B,IAAM,EAAY,EAAI,KAAK,MAAM,GAAc,KAAO,QAAU,SAAW,QACrE,EAAa,OAAO,SAAS,EAAI,KAAK,MAAM,GAAc,IAAM,EAChE,EAAQ,EAAQ,QAAQ,GAAW,GACrC,EACA,EAAE,GAAK,YAAY,EAAY,IAE/B,EAAE,GAAK,YAKnB,EAAK,YAAc,EAAE,OAGzB,OAAO,MAKnB,MAAO,CACH,MAAO,QAAQ,EAAM,cAAc,OACnC,KAAM,iCAAiC,EAAM,OAC7C,KAAM"}