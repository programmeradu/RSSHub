{"version":3,"file":"ai-blog-gFW1v9Td.js","names":["route: Route","ofetch","server: ServerData"],"sources":["../../lib/routes/meta/ai-blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/ai/blog',\r\n    categories: ['programming'],\r\n    example: '/meta/ai/blog',\r\n    name: 'AI Blog',\r\n    maintainers: ['TonyRL'],\r\n    url: 'ai.meta.com/blog/',\r\n    radar: [\r\n        {\r\n            source: ['ai.meta.com/blog/', 'ai.meta.com'],\r\n        },\r\n    ],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const limit = Number.parseInt(ctx.req.query('limit') || 12, 10);\r\n    const link = 'https://ai.meta.com/blog/';\r\n\r\n    const res = await ofetch(link, {\r\n        headers: {\r\n            // All these headers are required\r\n            'sec-fetch-dest': 'document',\r\n            'sec-fetch-mode': 'navigate',\r\n            'sec-fetch-site': 'none',\r\n            'sec-fetch-user': '?1',\r\n        },\r\n    });\r\n    const $ = load(res);\r\n    const script = $('script:contains(\"DTSGInitialData\"):first').text();\r\n    const serverJs = JSON.parse(script.match(/\\(new ServerJS\\(\\)\\)\\.handle\\((\\{[\\s\\S]*?\\})\\);/)?.[1] || '{}');\r\n\r\n    type ServerData = {\r\n        LSD: { token: string };\r\n        SiteData: {\r\n            haste_session: string;\r\n            hsi: string;\r\n            __spin_r: number;\r\n            __spin_b: string;\r\n            __spin_t: number;\r\n        };\r\n    };\r\n\r\n    const server: ServerData = {\r\n        LSD: { token: '' },\r\n        SiteData: {\r\n            haste_session: '',\r\n            hsi: '',\r\n            __spin_r: 0,\r\n            __spin_b: 'trunk',\r\n            __spin_t: Date.now(),\r\n        },\r\n    };\r\n\r\n    for (const obj of serverJs.define) {\r\n        const key = obj[0];\r\n        const value = obj[2];\r\n        server[key as keyof ServerData] = value;\r\n    }\r\n\r\n    const data = await ofetch('https://ai.meta.com/api/graphql/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n            'sec-fetch-dest': 'empty',\r\n            'sec-fetch-mode': 'cors',\r\n            'sec-fetch-site': 'same-origin',\r\n            'x-asbd-id': '359341',\r\n            'x-fb-friendly-name': 'MetaAIBlogRecentPostSearchQuery',\r\n            'x-fb-lsd': server.LSD.token,\r\n        },\r\n        body: new URLSearchParams({\r\n            av: '0',\r\n            __user: '0',\r\n            __a: '1',\r\n            __req: '1',\r\n            // __hs: server.SiteData.haste_session || '',\r\n            dpr: '1',\r\n            __ccg: 'EXCELLENT',\r\n            __rev: String(server.SiteData.__spin_r || ''),\r\n            // __s: '',\r\n            // __hsi: server.SiteData.hsi || '',\r\n            // __dyn: '',\r\n            // __hsdp: '',\r\n            // __hblp: '',\r\n            lsd: server.LSD.token,\r\n            // jazoest: '',\r\n            __spin_r: String(server.SiteData.__spin_r || ''),\r\n            __spin_b: String(server.SiteData.__spin_b || 'trunk'),\r\n            __spin_t: String(server.SiteData.__spin_t || Date.now()),\r\n            fb_api_caller_class: 'RelayModern',\r\n            fb_api_req_friendly_name: 'MetaAIBlogRecentPostSearchQuery',\r\n            variables: JSON.stringify({ input: { query: '', from: 0, limit, tags: [], excludeObjectIDs: ['27568536916124137'] } }),\r\n            server_timestamps: 'true',\r\n            doc_id: '9516719638450392',\r\n        }),\r\n        parseResponse: JSON.parse,\r\n    });\r\n\r\n    const items = data.data.query.map((item) => ({\r\n        title: item.title,\r\n        description: item.description,\r\n        link: item.href,\r\n        pubDate: parseDate(item.date),\r\n        category: [item.research_area],\r\n        image: item.image,\r\n    }));\r\n\r\n    return {\r\n        title: $('#pageTitle').text(),\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        image: $('link[rel=\"icon\"]').attr('href'),\r\n        link,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"+PAKA,MAAaA,EAAe,CACxB,KAAM,WACN,WAAY,CAAC,eACb,QAAS,gBACT,KAAM,UACN,YAAa,CAAC,UACd,IAAK,oBACL,MAAO,CACH,CACI,OAAQ,CAAC,oBAAqB,iBAGtC,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAAI,IACtD,EAAO,4BAEP,EAAM,MAAMC,EAAO,EAAM,CAC3B,QAAS,CAEL,iBAAkB,WAClB,iBAAkB,WAClB,iBAAkB,OAClB,iBAAkB,QAGpB,EAAI,EAAK,GACT,EAAS,EAAE,4CAA4C,OACvD,EAAW,KAAK,MAAM,EAAO,MAAM,qDAAqD,IAAM,MAa9FC,EAAqB,CACvB,IAAK,CAAE,MAAO,IACd,SAAU,CACN,cAAe,GACf,IAAK,GACL,SAAU,EACV,SAAU,QACV,SAAU,KAAK,QAIvB,IAAK,IAAM,KAAO,EAAS,OAAQ,CAC/B,IAAM,EAAM,EAAI,GACV,EAAQ,EAAI,GAClB,EAAO,GAA2B,EAGtC,IAAM,EAAO,MAAMD,EAAO,mCAAoC,CAC1D,OAAQ,OACR,QAAS,CACL,eAAgB,oCAChB,iBAAkB,QAClB,iBAAkB,OAClB,iBAAkB,cAClB,YAAa,SACb,qBAAsB,kCACtB,WAAY,EAAO,IAAI,OAE3B,KAAM,IAAI,gBAAgB,CACtB,GAAI,IACJ,OAAQ,IACR,IAAK,IACL,MAAO,IAEP,IAAK,IACL,MAAO,YACP,MAAO,OAAO,EAAO,SAAS,UAAY,IAM1C,IAAK,EAAO,IAAI,MAEhB,SAAU,OAAO,EAAO,SAAS,UAAY,IAC7C,SAAU,OAAO,EAAO,SAAS,UAAY,SAC7C,SAAU,OAAO,EAAO,SAAS,UAAY,KAAK,OAClD,oBAAqB,cACrB,yBAA0B,kCAC1B,UAAW,KAAK,UAAU,CAAE,MAAO,CAAE,MAAO,GAAI,KAAM,EAAG,QAAO,KAAM,GAAI,iBAAkB,CAAC,wBAC7F,kBAAmB,OACnB,OAAQ,qBAEZ,cAAe,KAAK,QAGlB,EAAQ,EAAK,KAAK,MAAM,IAAK,IAAU,CACzC,MAAO,EAAK,MACZ,YAAa,EAAK,YAClB,KAAM,EAAK,KACX,QAAS,EAAU,EAAK,MACxB,SAAU,CAAC,EAAK,eAChB,MAAO,EAAK,SAGhB,MAAO,CACH,MAAO,EAAE,cAAc,OACvB,YAAa,EAAE,4BAA4B,KAAK,WAChD,MAAO,EAAE,oBAAoB,KAAK,QAClC,OACA,KAAM"}