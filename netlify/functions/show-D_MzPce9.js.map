{"version":3,"file":"show-D_MzPce9.js","names":["route: Route","utils","ofetch"],"sources":["../../lib/routes/spotify/show.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport utils from './utils';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/show/:id',\r\n    categories: ['multimedia'],\r\n    view: ViewType.Audios,\r\n    example: '/spotify/show/5CfCWKI5pZ28U0uOzXkDHe',\r\n    parameters: { id: 'Show ID' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'SPOTIFY_CLIENT_ID',\r\n                description: '',\r\n            },\r\n            {\r\n                name: 'SPOTIFY_CLIENT_SECRET',\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['open.spotify.com/show/:id'],\r\n        },\r\n    ],\r\n    name: 'Show/Podcasts',\r\n    maintainers: ['caiohsramos', 'pseudoyu'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const token = await utils.getPublicToken();\r\n    const id = ctx.req.param('id');\r\n\r\n    const meta = await ofetch(`https://api.spotify.com/v1/shows/${id}?market=US`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    });\r\n\r\n    const episodes = meta.episodes.items;\r\n\r\n    return {\r\n        title: meta.name,\r\n        description: meta.description,\r\n        link: meta.external_urls.spotify,\r\n        language: meta.languages[0],\r\n        itunes_author: meta.publisher,\r\n        itunes_category: meta.type,\r\n        itunes_explicit: meta.explicit,\r\n        allowEmpty: true,\r\n        item: episodes.filter(Boolean).map((x) => ({\r\n            title: x.name,\r\n            description: x.html_description,\r\n            pubDate: parseDate(x.release_date),\r\n            link: x.external_urls.spotify,\r\n            itunes_item_image: x.images[0].url,\r\n            itunes_duration: x.duration_ms / 1000,\r\n            enclosure_url: x.audio_preview_url,\r\n            enclosure_type: 'audio/mpeg',\r\n        })),\r\n        image: meta.images.length ? meta.images[0].url : undefined,\r\n    };\r\n}\r\n"],"mappings":"0WAKA,MAAaA,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,cACb,KAAM,EAAS,OACf,QAAS,uCACT,WAAY,CAAE,GAAI,WAClB,SAAU,CACN,cAAe,CACX,CACI,KAAM,oBACN,YAAa,IAEjB,CACI,KAAM,wBACN,YAAa,KAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,+BAGjB,KAAM,gBACN,YAAa,CAAC,cAAe,YAC7B,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAQ,MAAMC,EAAM,iBACpB,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAO,MAAMC,EAAO,oCAAoC,EAAG,YAAa,CAC1E,OAAQ,MACR,QAAS,CACL,cAAe,UAAU,OAI3B,EAAW,EAAK,SAAS,MAE/B,MAAO,CACH,MAAO,EAAK,KACZ,YAAa,EAAK,YAClB,KAAM,EAAK,cAAc,QACzB,SAAU,EAAK,UAAU,GACzB,cAAe,EAAK,UACpB,gBAAiB,EAAK,KACtB,gBAAiB,EAAK,SACtB,WAAY,GACZ,KAAM,EAAS,OAAO,SAAS,IAAK,IAAO,CACvC,MAAO,EAAE,KACT,YAAa,EAAE,iBACf,QAAS,EAAU,EAAE,cACrB,KAAM,EAAE,cAAc,QACtB,kBAAmB,EAAE,OAAO,GAAG,IAC/B,gBAAiB,EAAE,YAAc,IACjC,cAAe,EAAE,kBACjB,eAAgB,gBAEpB,MAAO,EAAK,OAAO,OAAS,EAAK,OAAO,GAAG,IAAM,IAAA"}