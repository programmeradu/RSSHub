{"version":3,"file":"rss-xgZqIDaB.js","names":["route: Route","parser"],"sources":["../../lib/routes/inoreader/rss.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport parser from '@/utils/rss-parser';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/rss/:user/:tag',\r\n    categories: ['reading'],\r\n    view: ViewType.Articles,\r\n    example: '/inoreader/rss/1005137674/user-favorites',\r\n    parameters: { user: 'user id, the interger after user/ in the example URL', tag: 'tag, the string after tag/ in the example URL' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'RSS',\r\n    maintainers: ['EthanWng97'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const user = ctx.req.param('user');\r\n    const tag = ctx.req.param('tag');\r\n    const rootUrl = 'https://www.inoreader.com/stream';\r\n    const rssUrl = `${rootUrl}/user/${user}/tag/${tag}`;\r\n    const feed = await parser.parseURL(rssUrl);\r\n    feed.items = feed.items.map((item) => {\r\n        if (item && item.enclosure && item.enclosure.type.includes('audio')) {\r\n            // output podcast rss\r\n            // get first image in content\r\n            let firstImgSrc = '';\r\n            if (item.content !== null) {\r\n                const $ = load(item.content);\r\n                firstImgSrc = $('img').first().attr('src');\r\n            }\r\n            return {\r\n                title: item.title,\r\n                pubDate: item.pubDate,\r\n                link: item.link,\r\n                description: item.content,\r\n                category: item.categories,\r\n                itunes_item_image: firstImgSrc,\r\n                enclosure_url: item.enclosure.url,\r\n                enclosure_length: item.enclosure.length,\r\n                enclosure_type: item.enclosure.type,\r\n            };\r\n        }\r\n        return {\r\n            title: item?.title ?? '',\r\n            pubDate: item?.pubDate ?? '',\r\n            link: item?.link ?? '',\r\n            description: item?.content ?? '',\r\n            category: item?.categories ?? [],\r\n        };\r\n    });\r\n    return {\r\n        title: feed.title,\r\n        itunes_author: 'Inoreader',\r\n        image: 'https://www.inoreader.com/brand/img/ino_app_icon.png',\r\n        link: feed.link,\r\n        description: feed.description,\r\n        item: feed.items,\r\n    };\r\n}\r\n"],"mappings":"yKAIA,MAAaA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,WACb,KAAM,EAAS,SACf,QAAS,2CACT,WAAY,CAAE,KAAM,uDAAwD,IAAK,iDACjF,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,MACN,YAAa,CAAC,cACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAM,EAAI,IAAI,MAAM,OAEpB,EAAS,yCAAmB,EAAK,OAAO,IACxC,EAAO,MAAMC,EAAO,SAAS,GA8BnC,MA7BA,GAAK,MAAQ,EAAK,MAAM,IAAK,GAAS,CAClC,GAAI,GAAQ,EAAK,WAAa,EAAK,UAAU,KAAK,SAAS,SAAU,CAGjE,IAAI,EAAc,GAClB,GAAI,EAAK,UAAY,KAAM,CACvB,IAAM,EAAI,EAAK,EAAK,SACpB,EAAc,EAAE,OAAO,QAAQ,KAAK,OAExC,MAAO,CACH,MAAO,EAAK,MACZ,QAAS,EAAK,QACd,KAAM,EAAK,KACX,YAAa,EAAK,QAClB,SAAU,EAAK,WACf,kBAAmB,EACnB,cAAe,EAAK,UAAU,IAC9B,iBAAkB,EAAK,UAAU,OACjC,eAAgB,EAAK,UAAU,MAGvC,MAAO,CACH,MAAO,GAAM,OAAS,GACtB,QAAS,GAAM,SAAW,GAC1B,KAAM,GAAM,MAAQ,GACpB,YAAa,GAAM,SAAW,GAC9B,SAAU,GAAM,YAAc,MAG/B,CACH,MAAO,EAAK,MACZ,cAAe,YACf,MAAO,uDACP,KAAM,EAAK,KACX,YAAa,EAAK,YAClB,KAAM,EAAK"}