{"version":3,"file":"publish-Bvj6HIs2.js","names":["route: Route","ofetch","preloadCacheResponse: Record<string, { frontmatter?: Record<string, string> }>","items: DataItem[]","item: DataItem"],"sources":["../../lib/routes/obsidian/utils.ts","../../lib/routes/obsidian/publish.ts"],"sourcesContent":["const regex = /([^/]+)\\.md$/;\r\n\r\nconst getTitle = (path: string): string => {\r\n    const match = path.match(regex);\r\n    return match ? match[1] : '';\r\n};\r\n\r\nexport { getTitle };\r\n","import { Route, DataItem } from '@/types';\r\nimport { load } from 'cheerio';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { getTitle } from './utils';\r\nimport { config } from '@/config';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/publish/:id',\r\n    categories: ['blog'],\r\n    example: '/obsidian/publish/marshallontheroad',\r\n    parameters: { id: '网站 id，由Publish持有者自定义' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['publish.obsidian.md/'],\r\n        },\r\n    ],\r\n    name: 'Publish',\r\n    maintainers: ['Xy2002'],\r\n    handler,\r\n    url: 'publish.obsidian.md/',\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const items = await fetchPage(id);\r\n\r\n    return {\r\n        title: 'Obsidian Publish',\r\n        language: 'en-us',\r\n        item: items,\r\n        link: 'https://publish.obsidian.md/',\r\n    };\r\n}\r\n\r\nasync function fetchPage(id: string) {\r\n    const baseUrl = `https://publish.obsidian.md/${id}`;\r\n    const response = await ofetch(baseUrl);\r\n    const $ = load(response);\r\n    const preloadCacheUrl =\r\n        $('script:contains(\"preloadCache\")')\r\n            .text()\r\n            .match(/preloadCache\\s*=\\s*f\\(\"([^\"]+)\"\\);/)?.[1] || '';\r\n\r\n    let preloadCacheResponse: Record<string, { frontmatter?: Record<string, string> }>;\r\n    try {\r\n        preloadCacheResponse = await ofetch(preloadCacheUrl, {\r\n            headers: {\r\n                'User-Agent': config.trueUA,\r\n                Referer: 'https://publish.obsidian.md/',\r\n                Origin: 'https://publish.obsidian.m/',\r\n            },\r\n        });\r\n    } catch {\r\n        preloadCacheResponse = {};\r\n    }\r\n\r\n    const items: DataItem[] = Object.entries(preloadCacheResponse)\r\n        .map(([postKey, post]) => {\r\n            if (!post) {\r\n                return null;\r\n            }\r\n            const item: DataItem = {\r\n                title: post.frontmatter?.title || getTitle(postKey),\r\n                link: `${baseUrl}/${postKey.replaceAll(' ', '+').split('.md')[0]}`,\r\n                pubDate: post.frontmatter?.['date created'] ? parseDate(post.frontmatter['date created']) : undefined,\r\n                ...post.frontmatter,\r\n            };\r\n\r\n            return item;\r\n        })\r\n        .filter(Boolean) as DataItem[];\r\n\r\n    return items;\r\n}\r\n"],"mappings":"gRAAA,MAAM,EAAQ,eAER,EAAY,GAAyB,CACvC,IAAM,EAAQ,EAAK,MAAM,GACzB,OAAO,EAAQ,EAAM,GAAK,ICGjBA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,QACb,QAAS,sCACT,WAAY,CAAE,GAAI,wBAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,UACN,YAAa,CAAC,UACd,UACA,IAAK,wBAGT,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAQ,MAAM,EAAU,GAE9B,MAAO,CACH,MAAO,mBACP,SAAU,QACV,KAAM,EACN,KAAM,gCAId,eAAe,EAAU,EAAY,CACjC,IAAM,EAAU,+BAA+B,IACzC,EAAW,MAAMC,EAAO,GACxB,EAAI,EAAK,GACT,EACF,EAAE,mCACG,OACA,MAAM,wCAAwC,IAAM,GAEzDC,EACJ,GAAI,CACA,EAAuB,MAAMD,EAAO,EAAiB,CACjD,QAAS,CACL,aAAc,EAAO,OACrB,QAAS,+BACT,OAAQ,sCAGZ,CACJ,EAAuB,GAG3B,IAAME,EAAoB,OAAO,QAAQ,GACpC,KAAK,CAAC,EAAS,KAAU,CACtB,GAAI,CAAC,EACD,OAAO,KAEX,IAAMC,EAAiB,CACnB,MAAO,EAAK,aAAa,OAAS,EAAS,GAC3C,KAAM,GAAG,EAAQ,GAAG,EAAQ,WAAW,IAAK,KAAK,MAAM,OAAO,KAC9D,QAAS,EAAK,cAAc,gBAAkB,EAAU,EAAK,YAAY,iBAAmB,IAAA,GAC5F,GAAG,EAAK,aAGZ,OAAO,IAEV,OAAO,SAEZ,OAAO"}