{"version":3,"file":"subhd-COS4FEf2.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/subhd/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst config = {\r\n    sub: {\r\n        title: '字幕',\r\n        category: 'new',\r\n    },\r\n    zu: {\r\n        title: '字幕组',\r\n        category: '14',\r\n    },\r\n    newest: {\r\n        category: 'for backwards compatibility',\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:type?/:category?',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type') ?? 'sub';\r\n    const category = ctx.req.param('category') ?? config[type].category;\r\n\r\n    const rootUrl = 'https://subhd.tv';\r\n    const currentUrl = `${rootUrl}/${type === 'newest' ? 'sub/new' : `${type}/${category}${type === 'zu' ? '/l' : ''}`}`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    $('.align-middle').each(function () {\r\n        $(this).removeClass('link-dark');\r\n    });\r\n\r\n    let items = $('.link-dark')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const pubDate = item.parent().parent().find('.align-text-top').last().text();\r\n            const today = `${new Date().getFullYear()}-${new Date().getMonth()}-${new Date().getDate()}`;\r\n\r\n            return {\r\n                link: `${rootUrl}${item.attr('href')}`,\r\n                author: item.parent().parent().find('.text-dark').last().text(),\r\n                pubDate: timezone(parseDate(pubDate.includes('-') ? pubDate : `${today} ${pubDate}`), +8),\r\n                title: `${item.parent().parent().find('.align-middle').text()} ${item.text().replace(/ - SubHD/, '')}`,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                content('.rounded-circle').remove();\r\n                content('.view-text').last().remove();\r\n\r\n                item.description = content('.view-text').html() + content('.bg-white').first().html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"0ZAOA,MAAM,EAAS,CACX,IAAK,CACD,MAAO,KACP,SAAU,OAEd,GAAI,CACA,MAAO,MACP,SAAU,MAEd,OAAQ,CACJ,SAAU,gCAILA,EAAe,CACxB,KAAM,qBACN,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,MAChC,EAAW,EAAI,IAAI,MAAM,aAAe,EAAO,GAAM,SAErD,EAAU,mBACV,EAAa,GAAG,EAAQ,GAAG,IAAS,SAAW,UAAY,GAAG,EAAK,GAAG,IAAW,IAAS,KAAO,KAAO,OAExG,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAExB,EAAE,iBAAiB,KAAK,UAAY,CAChC,EAAE,MAAM,YAAY,eAGxB,IAAI,EAAQ,EAAE,cACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAU,EAAK,SAAS,SAAS,KAAK,mBAAmB,OAAO,OAChE,EAAQ,GAAG,IAAI,OAAO,cAAc,GAAG,IAAI,OAAO,WAAW,GAAG,IAAI,OAAO,YAEjF,MAAO,CACH,KAAM,GAAG,IAAU,EAAK,KAAK,UAC7B,OAAQ,EAAK,SAAS,SAAS,KAAK,cAAc,OAAO,OACzD,QAAS,EAAS,EAAU,EAAQ,SAAS,KAAO,EAAU,GAAG,EAAM,GAAG,KAAY,GACtF,MAAO,GAAG,EAAK,SAAS,SAAS,KAAK,iBAAiB,OAAO,GAAG,EAAK,OAAO,QAAQ,WAAY,SAwB7G,MApBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAU,EAAK,EAAe,MAOpC,OALA,EAAQ,mBAAmB,SAC3B,EAAQ,cAAc,OAAO,SAE7B,EAAK,YAAc,EAAQ,cAAc,OAAS,EAAQ,aAAa,QAAQ,OAExE,MAKZ,CACH,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,KAAM"}