{"version":3,"file":"news-B9yWrjDk.js","names":["lowerCaseKeys: string[]","route: Route","payload: Map<string, any>","ofetch","cache","response","payload"],"sources":["../../lib/routes/jingzhengu/utils.ts","../../lib/routes/jingzhengu/news.ts"],"sourcesContent":["import md5 from '@/utils/md5';\r\n\r\nfunction link(str: string, ...args: string[]): string {\r\n    let result = args.map((arg) => arg + str).join('');\r\n    if (result.search('-')) {\r\n        result = result.slice(0, Math.max(0, result.length - 1));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction replaceCharAt(str: string, index: number, replacement: string) {\r\n    return index < 0 || index >= str.length ? str : str.slice(0, index) + replacement + str.slice(index + 1);\r\n}\r\n\r\nexport function sign(payload: Map<string, any>) {\r\n    const map = new Map();\r\n    const lowerCaseKeys: string[] = [];\r\n\r\n    for (const [key, value] of payload.entries()) {\r\n        const lowerCaseKey = key.toLowerCase();\r\n        lowerCaseKeys.push(lowerCaseKey);\r\n        map.set(lowerCaseKey, typeof value === 'string' ? value.toLowerCase() : value);\r\n    }\r\n\r\n    const sortedString = lowerCaseKeys\r\n        .sort()\r\n        .map((key) => key + '=' + map.get(key))\r\n        .join('');\r\n    const linkedString = link('--'.slice(0, 1), '#CEAIWER', '892F', 'KB97', 'JKB6', 'HJ7OC7C8', 'GJZG');\r\n    const lastSeparatorIndex = linkedString.lastIndexOf('--'.slice(0, 1)); // 32\r\n    const replacedString = replaceCharAt(linkedString, lastSeparatorIndex, ''); // #CEAIWER-892F-KB97-JKB6-HJ7OC7C8GJZG\r\n    const finalString = (sortedString + replacedString).toLowerCase();\r\n\r\n    return md5(finalString);\r\n}\r\n","import { Route } from '@/types';\r\nimport { NewsInfo, NewsDetail } from './types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\nimport { sign } from './utils';\r\n\r\nexport const route: Route = {\r\n    path: '/news',\r\n    categories: ['other'],\r\n    example: '/jingzhengu/news',\r\n    radar: [\r\n        {\r\n            source: ['www.jingzhengu.com'],\r\n        },\r\n    ],\r\n    name: '资讯',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'www.jingzhengu.com',\r\n};\r\n\r\nasync function handler() {\r\n    const baseUrl = 'https://www.jingzhengu.com';\r\n\r\n    const payload: Map<string, any> = new Map([\r\n        ['pageNo', 1],\r\n        ['middleware', String(Date.now())],\r\n    ]);\r\n    const response = await ofetch<NewsInfo>(`${baseUrl}/news/makeNewsInfo`, {\r\n        method: 'POST',\r\n        body: {\r\n            ...Object.fromEntries(payload),\r\n            sign: sign(payload),\r\n        },\r\n    });\r\n\r\n    const list = response.data.articles.map((item) => ({\r\n        title: item.title,\r\n        description: item.summary,\r\n        link: `${baseUrl}/#/cn/Details_${item.addDate.split(' ')[0].replaceAll('-', '')}${item.id}.html`,\r\n        pubDate: timezone(parseDate(item.addDate, 'YYYY-MM-DD HH:mm:ss'), 8),\r\n        author: item.author,\r\n        id: item.id,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const payload: Map<string, any> = new Map([\r\n                    ['id', item.id],\r\n                    ['middleware', String(Date.now())],\r\n                ]);\r\n\r\n                const response = await ofetch<NewsDetail>(`${baseUrl}/news/makeNewsDetail`, {\r\n                    method: 'POST',\r\n                    body: {\r\n                        ...Object.fromEntries(payload),\r\n                        sign: sign(payload),\r\n                    },\r\n                });\r\n\r\n                item.description = response.data.content;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '精真估 > 资讯',\r\n        link: `${baseUrl}/#/index/boot`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"8WAEA,SAAS,EAAK,EAAa,GAAG,EAAwB,CAClD,IAAI,EAAS,EAAK,IAAK,GAAQ,EAAM,GAAK,KAAK,IAI/C,OAHI,EAAO,OAAO,OACd,EAAS,EAAO,MAAM,EAAG,KAAK,IAAI,EAAG,EAAO,OAAS,KAElD,EAGX,SAAS,EAAc,EAAa,EAAe,EAAqB,CACpE,OAAO,EAAQ,GAAK,GAAS,EAAI,OAAS,EAAM,EAAI,MAAM,EAAG,GAAS,EAAc,EAAI,MAAM,EAAQ,GAG1G,SAAgB,EAAK,EAA2B,CAC5C,IAAM,EAAM,IAAI,IACVA,EAA0B,GAEhC,IAAK,GAAM,CAAC,EAAK,KAAU,EAAQ,UAAW,CAC1C,IAAM,EAAe,EAAI,cACzB,EAAc,KAAK,GACnB,EAAI,IAAI,EAAc,OAAO,GAAU,SAAW,EAAM,cAAgB,GAG5E,IAAM,EAAe,EAChB,OACA,IAAK,GAAQ,EAAM,IAAM,EAAI,IAAI,IACjC,KAAK,IACJ,EAAe,EAAK,IAAkB,WAAY,OAAQ,OAAQ,OAAQ,WAAY,QACtF,EAAqB,EAAa,YAAY,KAC9C,EAAiB,EAAc,EAAc,EAAoB,IACjE,GAAe,EAAe,GAAgB,cAEpD,OAAO,EAAI,GCxBf,MAAaC,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,SACb,QAAS,mBACT,MAAO,CACH,CACI,OAAQ,CAAC,wBAGjB,KAAM,KACN,YAAa,CAAC,UACd,UACA,IAAK,sBAGT,eAAe,GAAU,CACrB,IAAM,EAAU,6BAEVC,EAA4B,IAAI,IAAI,CACtC,CAAC,SAAU,GACX,CAAC,aAAc,OAAO,KAAK,UAEzB,EAAW,MAAMC,EAAiB,GAAG,EAAQ,oBAAqB,CACpE,OAAQ,OACR,KAAM,CACF,GAAG,OAAO,YAAY,GACtB,KAAM,EAAK,MAIb,EAAO,EAAS,KAAK,SAAS,IAAK,IAAU,CAC/C,MAAO,EAAK,MACZ,YAAa,EAAK,QAClB,KAAM,GAAG,EAAQ,gBAAgB,EAAK,QAAQ,MAAM,KAAK,GAAG,WAAW,IAAK,MAAM,EAAK,GAAG,OAC1F,QAAS,EAAS,EAAU,EAAK,QAAS,uBAAwB,GAClE,OAAQ,EAAK,OACb,GAAI,EAAK,MAGP,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMF,EAA4B,IAAI,IAAI,CACtC,CAAC,KAAM,EAAK,IACZ,CAAC,aAAc,OAAO,KAAK,UAGzBG,EAAW,MAAMF,EAAmB,GAAG,EAAQ,sBAAuB,CACxE,OAAQ,OACR,KAAM,CACF,GAAG,OAAO,YAAYG,GACtB,KAAM,EAAKA,MAMnB,MAFA,GAAK,YAAcD,EAAS,KAAK,QAE1B,MAKnB,MAAO,CACH,MAAO,WACP,KAAM,GAAG,EAAQ,eACjB,KAAM"}