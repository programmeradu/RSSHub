{"version":3,"file":"models-DUGMChCY.js","names":["route: Route","ofetch"],"sources":["../../lib/routes/ollama/models.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseRelativeDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/library',\r\n    categories: ['programming'],\r\n    example: '/ollama/library',\r\n    radar: [\r\n        {\r\n            source: ['ollama.com/library'],\r\n        },\r\n    ],\r\n    name: 'Models',\r\n    maintainers: ['Nick22nd', 'gavrilov'],\r\n    handler,\r\n};\r\nasync function handler() {\r\n    const response = await ofetch('https://ollama.com/library?sort=newest');\r\n    const $ = load(response);\r\n    const items = $('#repo > ul > li > a')\r\n        .toArray()\r\n        .map((item) => {\r\n            const name = $(item).find('h2 span').first();\r\n            const link = $(item).attr('href');\r\n            const description = $(item).find('div p.break-words').first();\r\n            const pubDate = $(item).find('span:contains(\"Updated\")').first();\r\n\r\n            return {\r\n                title: name.text(),\r\n                link,\r\n                description: description.text(),\r\n                pubDate: parseRelativeDate(pubDate.text()),\r\n            };\r\n        });\r\n    return {\r\n        title: 'ollama library',\r\n        link: 'https://ollama.com/library',\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"uQAKA,MAAaA,EAAe,CACxB,KAAM,WACN,WAAY,CAAC,eACb,QAAS,kBACT,MAAO,CACH,CACI,OAAQ,CAAC,wBAGjB,KAAM,SACN,YAAa,CAAC,WAAY,YAC1B,WAEJ,eAAe,GAAU,CACrB,IAAM,EAAW,MAAMC,EAAO,0CACxB,EAAI,EAAK,GACT,EAAQ,EAAE,uBACX,UACA,IAAK,GAAS,CACX,IAAM,EAAO,EAAE,GAAM,KAAK,WAAW,QAC/B,EAAO,EAAE,GAAM,KAAK,QACpB,EAAc,EAAE,GAAM,KAAK,qBAAqB,QAChD,EAAU,EAAE,GAAM,KAAK,4BAA4B,QAEzD,MAAO,CACH,MAAO,EAAK,OACZ,OACA,YAAa,EAAY,OACzB,QAAS,EAAkB,EAAQ,WAG/C,MAAO,CACH,MAAO,iBACP,KAAM,6BACN,KAAM"}