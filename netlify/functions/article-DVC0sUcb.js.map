{"version":3,"file":"article-DVC0sUcb.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/yyets/article.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nconst baseURL = 'https://yysub.net';\r\n\r\nexport const route: Route = {\r\n    path: '/article/:type?',\r\n    categories: ['multimedia'],\r\n    view: ViewType.Articles,\r\n    example: '/yyets/article',\r\n    parameters: {\r\n        type: {\r\n            description: '类型',\r\n            options: [\r\n                { value: 'all', label: '全部' },\r\n                { value: 'news', label: '影视资讯' },\r\n                { value: 'report', label: '收视快报' },\r\n                { value: 'm_review', label: '人人影评' },\r\n                { value: 't_review', label: '人人剧评' },\r\n                { value: 'new_review', label: '新剧评测' },\r\n                { value: 'recom', label: '片单推荐' },\r\n            ],\r\n            default: 'all',\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '影视资讯',\r\n    maintainers: ['wb121017405'],\r\n    handler,\r\n    description: `| 全部 | 影视资讯 | 收视快报 | 人人影评  | 人人剧评  | 新剧评测    | 片单推荐 |\r\n| ---- | -------- | -------- | --------- | --------- | ----------- | -------- |\r\n|      | news     | report   | m\\_review | t\\_review | new\\_review | recom    |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type') ?? '';\r\n    const url = `${baseURL}/article${type ? '?type=' + type : ''}`;\r\n\r\n    const response = await got(url);\r\n    const $ = load(response.data);\r\n\r\n    let items = $('.article-list li .fl-info')\r\n        .toArray()\r\n        .map((e) => {\r\n            e = $(e);\r\n            return {\r\n                title: e.find('h3 a').text(),\r\n                link: `${baseURL}${e.find('h3 a').attr('href')}`,\r\n                author: e.find('p a').text(),\r\n                pubDate: timezone(parseDate(e.find('p').eq(2).text()), +8),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got(item.link);\r\n                const content = load(detailResponse.data);\r\n\r\n                item.description = content('.information-desc').html();\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `${$('title').text()} - 人人影视`,\r\n        description: $('meta[name=\"description\"]').attr('content'),\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"ycAOA,MAAM,EAAU,oBAEHA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,cACb,KAAM,EAAS,SACf,QAAS,iBACT,WAAY,CACR,KAAM,CACF,YAAa,KACb,QAAS,CACL,CAAE,MAAO,MAAO,MAAO,MACvB,CAAE,MAAO,OAAQ,MAAO,QACxB,CAAE,MAAO,SAAU,MAAO,QAC1B,CAAE,MAAO,WAAY,MAAO,QAC5B,CAAE,MAAO,WAAY,MAAO,QAC5B,CAAE,MAAO,aAAc,MAAO,QAC9B,CAAE,MAAO,QAAS,MAAO,SAE7B,QAAS,QAGjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,eACd,UACA,YAAa;;+EAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,GAChC,EAAM,GAAG,EAAQ,UAAU,EAAO,SAAW,EAAO,KAEpD,EAAW,MAAMC,EAAI,GACrB,EAAI,EAAK,EAAS,MAEpB,EAAQ,EAAE,6BACT,UACA,IAAK,IACF,EAAI,EAAE,GACC,CACH,MAAO,EAAE,KAAK,QAAQ,OACtB,KAAM,GAAG,IAAU,EAAE,KAAK,QAAQ,KAAK,UACvC,OAAQ,EAAE,KAAK,OAAO,OACtB,QAAS,EAAS,EAAU,EAAE,KAAK,KAAK,GAAG,GAAG,QAAS,MAgBnE,MAZA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,EAAK,MAChC,EAAU,EAAK,EAAe,MAGpC,MADA,GAAK,YAAc,EAAQ,qBAAqB,OACzC,MAKZ,CACH,MAAO,GAAG,EAAE,SAAS,OAAO,SAC5B,YAAa,EAAE,4BAA4B,KAAK,WAChD,KAAM,EACN,KAAM"}