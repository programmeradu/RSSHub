{"version":3,"file":"artist-DSx3XFmJ.js","names":[],"sources":["../../lib/routes/163/music/artist.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/music/artist/:id',\r\n    categories: ['multimedia'],\r\n    example: '/163/music/artist/2116',\r\n    parameters: { id: '歌手 id, 可在歌手详情页 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '歌手专辑',\r\n    maintainers: ['metowolf'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n\r\n    const response = await got(`https://music.163.com/api/artist/albums/${id}`, {\r\n        headers: {\r\n            Referer: 'https://music.163.com/',\r\n        },\r\n    });\r\n\r\n    const data = response.data;\r\n\r\n    return {\r\n        title: data.artist.name,\r\n        link: `https://music.163.com/#/artist/album?id=${id}`,\r\n        description: `网易云音乐歌手专辑 - ${data.artist.name}`,\r\n        image: data.artist.img1v1Url || data.artist.picUrl,\r\n        item: data.hotAlbums.map((item) => {\r\n            const singer = item.artists.length === 1 ? item.artists[0].name : item.artists.reduce((prev, cur) => (prev.name || prev) + '/' + cur.name);\r\n            return {\r\n                title: `${item.name} - ${singer}`,\r\n                description: art(path.join(__dirname, '../templates/music/playlist.art'), {\r\n                    singer,\r\n                    album: item.name,\r\n                    date: new Date(item.publishTime).toLocaleDateString(),\r\n                    picUrl: item.picUrl,\r\n                }),\r\n                link: `https://music.163.com/#/album?id=${item.id}`,\r\n                pubDate: new Date(item.publishTime),\r\n                published: new Date(item.publishTime),\r\n                category: item.subType,\r\n                author: singer,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"gVAMA,MAAa,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,cACb,QAAS,yBACT,WAAY,CAAE,GAAI,0BAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,YACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAW,MAAM,EAAI,2CAA2C,IAAM,CACxE,QAAS,CACL,QAAS,4BAIX,EAAO,EAAS,KAEtB,MAAO,CACH,MAAO,EAAK,OAAO,KACnB,KAAM,2CAA2C,IACjD,YAAa,eAAe,EAAK,OAAO,OACxC,MAAO,EAAK,OAAO,WAAa,EAAK,OAAO,OAC5C,KAAM,EAAK,UAAU,IAAK,GAAS,CAC/B,IAAM,EAAS,EAAK,QAAQ,SAAW,EAAI,EAAK,QAAQ,GAAG,KAAO,EAAK,QAAQ,QAAQ,EAAM,KAAS,EAAK,MAAQ,GAAQ,IAAM,EAAI,MACrI,MAAO,CACH,MAAO,GAAG,EAAK,KAAK,KAAK,IACzB,YAAa,EAAI,EAAA,KAAA,EAAA,mCAAyD,CACtE,SACA,MAAO,EAAK,KACZ,KAAM,IAAI,KAAK,EAAK,aAAa,qBACjC,OAAQ,EAAK,SAEjB,KAAM,oCAAoC,EAAK,KAC/C,QAAS,IAAI,KAAK,EAAK,aACvB,UAAW,IAAI,KAAK,EAAK,aACzB,SAAU,EAAK,QACf,OAAQ"}