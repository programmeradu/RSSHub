{"version":3,"file":"feed-CnNbpJsv.js","names":[],"sources":["../../lib/routes/patreon/feed.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { CreatorData, MediaRelation, PostData } from './types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as cheerio from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\nimport { config } from '@/config';\r\n\r\nexport const route: Route = {\r\n    path: '/:creator',\r\n    categories: ['new-media'],\r\n    example: '/patreon/straightupsisters',\r\n    parameters: { creator: 'Patreon creator id, can be found in the url' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'PATREON_SESSION_ID',\r\n                optional: true,\r\n                description: 'The value of the session_id cookie after logging in to Patreon, required to access paid posts',\r\n            },\r\n        ],\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['patreon.com/:creator'],\r\n        },\r\n    ],\r\n    name: 'Home',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { creator } = ctx.req.param();\r\n\r\n    const baseUrl = 'https://www.patreon.com';\r\n    const link = `${baseUrl}/${creator}`;\r\n\r\n    const creatorData = (await cache.tryGet(`patreon:creator:${creator}`, async () => {\r\n        const response = await ofetch(link);\r\n\r\n        const $ = cheerio.load(response);\r\n        const nextData = JSON.parse($('#__NEXT_DATA__').text());\r\n        const bootstrapEnvelope = nextData.props.pageProps.bootstrapEnvelope;\r\n\r\n        return {\r\n            meta: bootstrapEnvelope.meta,\r\n            id: bootstrapEnvelope.pageBootstrap.campaign.data.id,\r\n            attributes: bootstrapEnvelope.pageBootstrap.campaign.data.attributes,\r\n        };\r\n    })) as CreatorData;\r\n\r\n    if (!creatorData.id) {\r\n        throw new Error('Creator not found');\r\n    }\r\n\r\n    let headers = {};\r\n    if (config.patreon?.sessionId) {\r\n        headers = {\r\n            Cookie: `session_id=${config.patreon.sessionId}`,\r\n        };\r\n    }\r\n\r\n    const posts = await ofetch<PostData>('https://www.patreon.com/api/posts', {\r\n        headers,\r\n        query: {\r\n            include:\r\n                'campaign,access_rules,access_rules.tier.null,attachments_media,audio,audio_preview.null,drop,images,media,native_video_insights,poll.choices,poll.current_user_responses.user,poll.current_user_responses.choice,poll.current_user_responses.poll,user,user_defined_tags,ti_checks,video.null,content_unlock_options.product_variant.null',\r\n            'fields[campaign]': 'currency,show_audio_post_download_links,avatar_photo_url,avatar_photo_image_urls,earnings_visibility,is_nsfw,is_monthly,name,url',\r\n            'fields[post]':\r\n                'change_visibility_at,comment_count,commenter_count,content,created_at,current_user_can_comment,current_user_can_delete,current_user_can_report,current_user_can_view,current_user_comment_disallowed_reason,current_user_has_liked,embed,image,insights_last_updated_at,is_paid,like_count,meta_image_url,min_cents_pledged_to_view,monetization_ineligibility_reason,post_file,post_metadata,published_at,patreon_url,post_type,pledge_url,preview_asset_type,thumbnail,thumbnail_url,teaser_text,title,upgrade_url,url,was_posted_by_campaign_owner,has_ti_violation,moderation_status,post_level_suspension_removal_date,pls_one_liners_by_category,video,video_preview,view_count,content_unlock_options,is_new_to_current_user,watch_state',\r\n            'fields[post_tag]': 'tag_type,value',\r\n            'fields[user]': 'image_url,full_name,url',\r\n            'fields[access_rule]': 'access_rule_type,amount_cents',\r\n            'fields[media]': 'id,image_urls,display,download_url,metadata,file_name',\r\n            'fields[native_video_insights]': 'average_view_duration,average_view_pct,has_preview,id,last_updated_at,num_views,preview_views,video_duration',\r\n            'fields[content-unlock-option]': 'content_unlock_type',\r\n            'fields[product-variant]': 'price_cents,currency_code,checkout_url,is_hidden,published_at_datetime,content_type,orders_count,access_metadata',\r\n            'filter[campaign_id]': creatorData.id,\r\n            'filter[contains_exclusive_posts]': true,\r\n            'filter[is_draft]': false,\r\n            sort: '-published_at',\r\n            'json-api-use-default-includes': false,\r\n            'json-api-version': '1.0',\r\n        },\r\n    });\r\n\r\n    const items = posts.data.map(({ attributes, relationships }) => {\r\n        for (const [key, value] of Object.entries(relationships)) {\r\n            if (value.data) {\r\n                relationships[key] = Array.isArray(value.data) ? value.data.map((item) => posts.included.find((i) => i.id === item.id)) : posts.included.find((i) => i.id === value.data.id);\r\n            }\r\n        }\r\n        if (attributes.video_preview) {\r\n            relationships.video_preview = posts.included.find((i) => Number.parseInt(i.id) === attributes.video_preview?.media_id) as unknown as MediaRelation;\r\n        }\r\n\r\n        return {\r\n            title: attributes.title,\r\n            description: art(path.join(__dirname, 'templates/description.art'), {\r\n                attributes,\r\n                relationships,\r\n                included: posts.included,\r\n            }),\r\n            link: attributes.url,\r\n            pubDate: parseDate(attributes.published_at),\r\n            image: attributes.thumbnail?.url ?? attributes.image?.url,\r\n            category: relationships.user_defined_tags?.map((tag) => tag.attributes.value),\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: creatorData.meta.title,\r\n        description: creatorData.meta.desc,\r\n        link,\r\n        image: creatorData.attributes.avatar_photo_url,\r\n        item: items,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"+aAWA,MAAa,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,aACb,QAAS,6BACT,WAAY,CAAE,QAAS,+CACvB,SAAU,CACN,cAAe,CACX,CACI,KAAM,qBACN,SAAU,GACV,YAAa,mGAIzB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,OACN,YAAa,CAAC,UACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAY,EAAI,IAAI,QAGtB,EAAO,2BAAc,IAErB,EAAe,MAAM,EAAM,OAAO,mBAAmB,IAAW,SAAY,CAC9E,IAAM,EAAW,MAAM,EAAO,GAExB,EAAI,EAAQ,KAAK,GACjB,EAAW,KAAK,MAAM,EAAE,kBAAkB,QAC1C,EAAoB,EAAS,MAAM,UAAU,kBAEnD,MAAO,CACH,KAAM,EAAkB,KACxB,GAAI,EAAkB,cAAc,SAAS,KAAK,GAClD,WAAY,EAAkB,cAAc,SAAS,KAAK,cAIlE,GAAI,CAAC,EAAY,GACb,MAAU,MAAM,qBAGpB,IAAI,EAAU,GACV,EAAO,SAAS,YAChB,EAAU,CACN,OAAQ,cAAc,EAAO,QAAQ,cAI7C,IAAM,EAAQ,MAAM,EAAiB,oCAAqC,CACtE,UACA,MAAO,CACH,QACI,4UACJ,mBAAoB,mIACpB,eACI,ktBACJ,mBAAoB,iBACpB,eAAgB,0BAChB,sBAAuB,gCACvB,gBAAiB,wDACjB,gCAAiC,+GACjC,gCAAiC,sBACjC,0BAA2B,mHAC3B,sBAAuB,EAAY,GACnC,mCAAoC,GACpC,mBAAoB,GACpB,KAAM,gBACN,gCAAiC,GACjC,mBAAoB,SAItB,EAAQ,EAAM,KAAK,KAAK,CAAE,aAAY,mBAAoB,CAC5D,IAAK,GAAM,CAAC,EAAK,KAAU,OAAO,QAAQ,GAClC,EAAM,OACN,EAAc,GAAO,MAAM,QAAQ,EAAM,MAAQ,EAAM,KAAK,IAAK,GAAS,EAAM,SAAS,KAAM,GAAM,EAAE,KAAO,EAAK,KAAO,EAAM,SAAS,KAAM,GAAM,EAAE,KAAO,EAAM,KAAK,KAOjL,OAJI,EAAW,gBACX,EAAc,cAAgB,EAAM,SAAS,KAAM,GAAM,OAAO,SAAS,EAAE,MAAQ,EAAW,eAAe,WAG1G,CACH,MAAO,EAAW,MAClB,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,aACA,gBACA,SAAU,EAAM,WAEpB,KAAM,EAAW,IACjB,QAAS,EAAU,EAAW,cAC9B,MAAO,EAAW,WAAW,KAAO,EAAW,OAAO,IACtD,SAAU,EAAc,mBAAmB,IAAK,GAAQ,EAAI,WAAW,UAI/E,MAAO,CACH,MAAO,EAAY,KAAK,MACxB,YAAa,EAAY,KAAK,KAC9B,OACA,MAAO,EAAY,WAAW,iBAC9B,KAAM,EACN,WAAY"}