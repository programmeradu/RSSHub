{"version":3,"file":"live-DBDuWgtV.js","names":[],"sources":["../../lib/routes/yoasobi-music/live.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport got from '@/utils/got';\r\nimport { parseJSONP } from './jsonp-helper';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/live',\r\n    categories: ['live'],\r\n    example: '/yoasobi-music/live',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.yoasobi-music.jp/', 'www.yoasobi-music.jp/live'],\r\n        },\r\n    ],\r\n    name: 'Live',\r\n    maintainers: ['Kiotlin'],\r\n    handler,\r\n    url: 'www.yoasobi-music.jp/',\r\n};\r\n\r\nasync function handler() {\r\n    const ARTIST = 'YOASOBI',\r\n        SONYJPURL = 'https://www.sonymusic.co.jp',\r\n        BASEURL = 'https://www.sonymusic.co.jp/json/v2/artist',\r\n        POSTFIX = 'start/0/count/-1';\r\n\r\n    const api = `${BASEURL}/${ARTIST}/live/${POSTFIX}`;\r\n    const officialUrl = 'https://www.yoasobi-music.jp/live';\r\n    const title = 'LATEST LIVE';\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: api,\r\n    });\r\n\r\n    const data = parseJSONP(response.data).items.map((item) => ({\r\n        title: item.tourName,\r\n        imageLink: item.tourImage === '' ? null : `${SONYJPURL}${item.tourImage}`,\r\n        link: `${officialUrl}/${item.link.split('/').pop()}`,\r\n        description: item.tourInfo,\r\n        // @param {Array} liveItem - An array contains all the sessions\r\n        sessions: item.liveItem,\r\n    }));\r\n\r\n    return {\r\n        // the source title\r\n        title,\r\n        // the source url\r\n        link: officialUrl,\r\n        // the source description\r\n        description: \"YOASOBI's Latest Live\",\r\n        // iterate through all leaf objects\r\n        item: data.map((item) => ({\r\n            // the article title\r\n            title: item.title,\r\n            // the article content\r\n            description: art(path.join(__dirname, 'templates/live.art'), {\r\n                image: item.imageLink,\r\n                description: item.description,\r\n                sessions: item.sessions,\r\n            }),\r\n            // no pubDate\r\n            // the article link\r\n            link: item.link,\r\n        })),\r\n    };\r\n}\r\n"],"mappings":"wYAOA,MAAa,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,sBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBAAyB,+BAG1C,KAAM,OACN,YAAa,CAAC,WACd,UACA,IAAK,yBAGT,eAAe,GAAU,CACrB,IAMM,EAAc,oCAGd,EAAW,MAAM,EAAI,CACvB,OAAQ,MACR,IAAK,6EAGH,EAAO,EAAW,EAAS,MAAM,MAAM,IAAK,IAAU,CACxD,MAAO,EAAK,SACZ,UAAW,EAAK,YAAc,GAAK,KAAO,8BAAe,EAAK,YAC9D,KAAM,GAAG,EAAY,GAAG,EAAK,KAAK,MAAM,KAAK,QAC7C,YAAa,EAAK,SAElB,SAAU,EAAK,YAGnB,MAAO,CAEH,oBAEA,KAAM,EAEN,YAAa,wBAEb,KAAM,EAAK,IAAK,IAAU,CAEtB,MAAO,EAAK,MAEZ,YAAa,EAAI,EAAA,KAAA,EAAA,+BAA4C,CACzD,MAAO,EAAK,UACZ,YAAa,EAAK,YAClB,SAAU,EAAK,WAInB,KAAM,EAAK"}