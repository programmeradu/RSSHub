{"version":3,"file":"utils-B7dT-_AV.js","names":["ofetch","cache","dataItem: DataItem"],"sources":["../../lib/routes/cara/constant.ts","../../lib/routes/cara/utils.ts"],"sourcesContent":["export const HOST = 'https://cara.app';\r\n\r\nexport const API_HOST = `${HOST}/api`;\r\n\r\nexport const CDN_HOST = 'https://cdn.cara.app';\r\n","import { config } from '@/config';\r\nimport ofetch from '@/utils/ofetch';\r\nimport type { FetchOptions, FetchRequest, ResponseType } from 'ofetch';\r\nimport type { PortfolioDetailResponse, PortfolioResponse, UserNextData } from './types';\r\nimport type { DataItem } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { API_HOST, CDN_HOST, HOST } from './constant';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\n\r\nexport function customFetch<T = any, R extends ResponseType = 'json'>(request: FetchRequest, options?: FetchOptions<R>) {\r\n    return ofetch<T, R>(request, {\r\n        ...options,\r\n        headers: {\r\n            'user-agent': config.trueUA,\r\n        },\r\n    });\r\n}\r\n\r\nexport async function parseUserData(user: string) {\r\n    const buildId = await cache.tryGet(\r\n        `${HOST}:buildId`,\r\n        async () => {\r\n            const res = await customFetch(`${HOST}/explore`);\r\n            const $ = load(res);\r\n            return JSON.parse($('#__NEXT_DATA__')?.text() ?? '{}').buildId;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n    return (await cache.tryGet(`${HOST}:${user}`, async () => {\r\n        const data = await customFetch<UserNextData>(`${HOST}/_next/data/${buildId}/${user}.json`);\r\n        return data.pageProps.user;\r\n    })) as Promise<UserNextData['pageProps']['user']>;\r\n}\r\n\r\nexport async function fetchPortfolioItem(item: PortfolioResponse['data'][number]) {\r\n    const res = await customFetch<PortfolioDetailResponse>(`${API_HOST}/posts/${item.postId}`);\r\n\r\n    const description = res.data.images\r\n        .filter((i) => !i.isCoverImg)\r\n        .map((image) => `<img src=\"${CDN_HOST}/${image.src}\" />`)\r\n        .join('<br />');\r\n\r\n    const dataItem: DataItem = {\r\n        title: res.data.title || res.data.content,\r\n        pubDate: parseDate(res.data.createdAt),\r\n        link: `${HOST}/post/${item.postId}`,\r\n        description,\r\n    };\r\n\r\n    return dataItem;\r\n}\r\n"],"mappings":"4OAAA,MAAa,EAAO,mBAEP,EAAW,GAAG,EAAK,MAEnB,EAAW,uBCMxB,SAAgB,EAAsD,EAAuB,EAA2B,CACpH,OAAOA,EAAa,EAAS,CACzB,GAAG,EACH,QAAS,CACL,aAAc,EAAO,UAKjC,eAAsB,EAAc,EAAc,CAC9C,IAAM,EAAU,MAAMC,EAAM,OACxB,GAAG,EAAK,UACR,SAAY,CACR,IAAM,EAAM,MAAM,EAAY,GAAG,EAAK,WAChC,EAAI,EAAK,GACf,OAAO,KAAK,MAAM,EAAE,mBAAmB,QAAU,MAAM,SAE3D,EAAO,MAAM,YACb,IAEJ,OAAQ,MAAMA,EAAM,OAAO,GAAG,EAAK,GAAG,IAAQ,SAAY,CACtD,IAAM,EAAO,MAAM,EAA0B,GAAG,EAAK,cAAc,EAAQ,GAAG,EAAK,QACnF,OAAO,EAAK,UAAU,OAI9B,eAAsB,EAAmB,EAAyC,CAC9E,IAAM,EAAM,MAAM,EAAqC,GAAG,EAAS,SAAS,EAAK,UAE3E,EAAc,EAAI,KAAK,OACxB,OAAQ,GAAM,CAAC,EAAE,YACjB,IAAK,GAAU,aAAa,EAAS,GAAG,EAAM,IAAI,OAClD,KAAK,UAEJC,EAAqB,CACvB,MAAO,EAAI,KAAK,OAAS,EAAI,KAAK,QAClC,QAAS,EAAU,EAAI,KAAK,WAC5B,KAAM,GAAG,EAAK,QAAQ,EAAK,SAC3B,eAGJ,OAAO"}