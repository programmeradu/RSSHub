import"./esm-shims-Dqvxr0BZ.js";import{config as e}from"./config-Dl8a1sIg.js";import{logger_default as t}from"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import{cache_default as n}from"./cache-kimkMTWJ.js";import{parseDate as r}from"./parse-date-Bgabdhlb.js";import"./ofetch-Bzt0BXUH.js";import{got_default as i}from"./got-CdvI2yKX.js";import{config_not_found_default as a}from"./config-not-found-BVqhRP9D.js";import{fallback as o,queryToInteger as s}from"./readable-social-D7TWDGpz.js";const c=async()=>{let e=await n.get(`tumblr:accessToken`,!1);if(!e)try{let t=await f();t&&(e=t)}catch(e){t.error(`Failed to refresh Tumblr token, using only client id as fallback`,e)}return e},l=async()=>{let e=await c();return e?{Authorization:`Bearer ${e}`}:{}},u=()=>({apiKey:e.tumblr.clientId}),d=e=>{let t=``;switch(e.type){case`text`:t=e.body;break;case`photo`:for(let n of e.photos??[])t+=`<img src="${n.original_size.url}"/><br/>`;break;case`link`:t=e.url;break;case`audio`:t=e.embed;break;default:break}return{id:e.id_string,title:e.summary??`New post from ${e.blog_name}`,link:e.post_url,pubDate:r(e.timestamp*1e3),category:e.tags,description:t}};let f=()=>Promise.resolve(null);e.tumblr&&e.tumblr.clientId&&e.tumblr.clientSecret&&e.tumblr.refreshToken&&(f=async()=>{let t=e.tumblr.refreshToken,r=await n.get(`tumblr:refreshToken`,!1);if(r){let e=JSON.parse(r);e.startToken===t&&(t=e.currentToken)}let a=await i.post(`https://api.tumblr.com/v2/oauth2/token`,{form:{grant_type:`refresh_token`,client_id:e.tumblr.clientId,client_secret:e.tumblr.clientSecret,refresh_token:t}});if(!a.data?.access_token||!a.data?.refresh_token)return null;let o=a.data.access_token,s=a.data.refresh_token,c=a.data.expires_in;await n.set(`tumblr:accessToken`,o,(c??2520)-30);let l={startToken:e.tumblr.refreshToken,currentToken:s};return await n.set(`tumblr:refreshToken`,JSON.stringify(l),31536e3),o});var p={processPost:d,generateAuthParams:u,generateAuthHeaders:l};const m={path:`/posts/:blog`,categories:[`blog`],example:`/tumblr/posts/biketouring-nearby`,parameters:{blog:"Blog identifier (see `https://www.tumblr.com/docs/en/api/v2#blog-identifiers`)"},radar:[],features:{requireConfig:[{name:`TUMBLR_CLIENT_ID`,description:`Please see above for details.`},{name:`TUMBLR_CLIENT_SECRET`,description:`Please see above for details.`},{name:`TUMBLR_REFRESH_TOKEN`,description:`Please see above for details.`}],requirePuppeteer:!1,antiCrawler:!1,supportBT:!1,supportPodcast:!1,supportScihub:!1},name:`Posts`,maintainers:[`Rakambda`],description:`::: tip
Tumblr provides official RSS feeds for non "dashboard only" blogs, for instance [https://biketouring-nearby.tumblr.com](https://biketouring-nearby.tumblr.com/rss).
:::`,handler:h};async function h(t){if(!e.tumblr||!e.tumblr.clientId)throw new a(`Tumblr RSS is disabled due to the lack of <a href="https://docs.rsshub.app/deploy/config#route-specific-configurations">relevant config</a>`);let n=t.req.param(`blog`),r=o(void 0,s(t.req.query(`limit`)),20),c=await i.get(`https://api.tumblr.com/v2/blog/${n}/posts`,{searchParams:{...p.generateAuthParams(),limit:r},headers:await p.generateAuthHeaders()}),l=c.data.response.blog,u=c.data.response.posts.map(e=>p.processPost(e));return{title:`Tumblr - ${n} - Posts`,author:l?.name,link:l?.url??`https://${n}/`,item:u,allowEmpty:!0,image:l?.avatar?.slice(-1)?.url,description:l?.description}}export{m as route};
//# sourceMappingURL=posts-B_NhFpJR.js.map