{"version":3,"file":"commits-C7-J0Ohf.js","names":["MarkdownIt","route: Route","searchParams: Record<string, any>","got"],"sources":["../../lib/routes/gitcode/repos/commits.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport MarkdownIt from 'markdown-it';\r\n\r\nconst md = MarkdownIt({\r\n    html: true,\r\n});\r\n\r\nexport const route: Route = {\r\n    path: '/commits/:owner/:repo/:branch?',\r\n    categories: ['programming'],\r\n    example: '/gitcode/commits/openharmony-sig/flutter_flutter',\r\n    parameters: { owner: '用户名/组织名', repo: '仓库名', branch: '分支名，可选，默认为主分支' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['gitcode.com/:owner/:repo/commits', 'gitcode.com/:owner/:repo/commits/:branch'],\r\n            target: (params) => `/gitcode/commits/${params.owner}/${params.repo}${params.branch ? `/${params.branch}` : ''}`,\r\n        },\r\n    ],\r\n    name: '仓库提交',\r\n    maintainers: ['JiZhi-Error'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { owner, repo, branch } = ctx.req.param();\r\n    // API路径\r\n    const apiUrl = `https://web-api.gitcode.com/api/v2/projects/${encodeURIComponent(`${owner}/${repo}`)}/repository/commits`;\r\n\r\n    const searchParams: Record<string, any> = {\r\n        per_page: ctx.req.query('limit') ? Number(ctx.req.query('limit')) : 100,\r\n        ref_name: branch,\r\n    };\r\n\r\n    const { data: response } = await got(apiUrl, {\r\n        searchParams,\r\n    });\r\n\r\n    if (!response || !response.content) {\r\n        throw new Error('无法获取提交数据');\r\n    }\r\n\r\n    const items = response.content.map((item) => ({\r\n        title: md.renderInline(item.title),\r\n        description: md.render(item.message),\r\n        author: item.author_name,\r\n        pubDate: parseDate(item.committed_date),\r\n        guid: item.id,\r\n        link: `https://gitcode.com/${owner}/${repo}/commit/${item.id}`,\r\n    }));\r\n\r\n    const branchText = branch ? ` (${branch})` : '';\r\n    return {\r\n        title: `${owner}/${repo}/${branchText} - 提交记录`,\r\n        link: `https://gitcode.com/${owner}/${repo}/commits/${branch || ''}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"gTAKA,MAAM,EAAKA,EAAW,CAClB,KAAM,KAGGC,EAAe,CACxB,KAAM,iCACN,WAAY,CAAC,eACb,QAAS,mDACT,WAAY,CAAE,MAAO,UAAW,KAAM,MAAO,OAAQ,iBACrD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,mCAAoC,4CAC7C,OAAS,GAAW,oBAAoB,EAAO,MAAM,GAAG,EAAO,OAAO,EAAO,OAAS,IAAI,EAAO,SAAW,OAGpH,KAAM,OACN,YAAa,CAAC,eACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,QAAO,OAAM,UAAW,EAAI,IAAI,QAElC,EAAS,+CAA+C,mBAAmB,GAAG,EAAM,GAAG,KAAQ,qBAE/FC,EAAoC,CACtC,SAAU,EAAI,IAAI,MAAM,SAAW,OAAO,EAAI,IAAI,MAAM,UAAY,IACpE,SAAU,GAGR,CAAE,KAAM,GAAa,MAAMC,EAAI,EAAQ,CACzC,iBAGJ,GAAI,CAAC,GAAY,CAAC,EAAS,QACvB,MAAU,MAAM,YAGpB,IAAM,EAAQ,EAAS,QAAQ,IAAK,IAAU,CAC1C,MAAO,EAAG,aAAa,EAAK,OAC5B,YAAa,EAAG,OAAO,EAAK,SAC5B,OAAQ,EAAK,YACb,QAAS,EAAU,EAAK,gBACxB,KAAM,EAAK,GACX,KAAM,uBAAuB,EAAM,GAAG,EAAK,UAAU,EAAK,QAGxD,EAAa,EAAS,KAAK,EAAO,GAAK,GAC7C,MAAO,CACH,MAAO,GAAG,EAAM,GAAG,EAAK,GAAG,EAAW,SACtC,KAAM,uBAAuB,EAAM,GAAG,EAAK,WAAW,GAAU,KAChE,KAAM"}