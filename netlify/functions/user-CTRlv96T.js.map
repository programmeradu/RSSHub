{"version":3,"file":"user-CTRlv96T.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/qq/kg/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { JSDOM } from 'jsdom';\r\nimport cache from './cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/kg/:userId',\r\n    categories: ['social-media'],\r\n    example: '/qq/kg/639a9a86272c308e33',\r\n    parameters: { userId: '用户 ID, 可在对应页面的 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: true,\r\n        supportScihub: false,\r\n    },\r\n    name: '用户作品列表',\r\n    maintainers: ['zhangxiang012'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const userId = ctx.req.param('userId');\r\n    const url = `https://node.kg.qq.com/personal?uid=${userId}`;\r\n    const response = await got(url);\r\n\r\n    const { window } = new JSDOM(response.data, {\r\n        runScripts: 'dangerously',\r\n    });\r\n    const data = window.__DATA__;\r\n    const author = data.data.nickname;\r\n    const authorimg = data.data.head_img_url;\r\n    const ugcList = data.data.ugclist;\r\n\r\n    const items = await Promise.all(\r\n        ugcList.map(async (item) => {\r\n            const link = `https://node.kg.qq.com/play?s=${item.shareid}`;\r\n            const item_info = await cache.getPlayInfo(ctx, item.shareid, item.ksong_mid);\r\n\r\n            const single = {\r\n                title: item.title || '',\r\n                description: item_info.description,\r\n                link,\r\n                guid: `ksong:${item.ksong_mid}`,\r\n                author,\r\n                pubDate: parseDate(item_info.ctime * 1000) || parseDate(item.ctime, 'X'),\r\n                itunes_item_image: item_info.itunes_item_image || item.avatar,\r\n                enclosure_url: item_info.enclosure_url,\r\n                enclosure_type: 'audio/x-m4a',\r\n            };\r\n\r\n            return single;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `${author} - 全民K歌`,\r\n        link: url,\r\n        description: data.share.content,\r\n        allowEmpty: true,\r\n        item: items,\r\n        image: authorimg,\r\n        itunes_author: author,\r\n        itunes_category: '全民K歌',\r\n    };\r\n}\r\n"],"mappings":"mYAMA,MAAaA,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,gBACb,QAAS,4BACT,WAAY,CAAE,OAAQ,0BACtB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,iBACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAS,EAAI,IAAI,MAAM,UACvB,EAAM,uCAAuC,IAC7C,EAAW,MAAMC,EAAI,GAErB,CAAE,UAAW,IAAI,EAAM,EAAS,KAAM,CACxC,WAAY,gBAEV,EAAO,EAAO,SACd,EAAS,EAAK,KAAK,SACnB,EAAY,EAAK,KAAK,aACtB,EAAU,EAAK,KAAK,QAEpB,EAAQ,MAAM,QAAQ,IACxB,EAAQ,IAAI,KAAO,IAAS,CACxB,IAAM,EAAO,iCAAiC,EAAK,UAC7C,EAAY,MAAMC,EAAM,YAAY,EAAK,EAAK,QAAS,EAAK,WAE5D,EAAS,CACX,MAAO,EAAK,OAAS,GACrB,YAAa,EAAU,YACvB,OACA,KAAM,SAAS,EAAK,YACpB,SACA,QAAS,EAAU,EAAU,MAAQ,MAAS,EAAU,EAAK,MAAO,KACpE,kBAAmB,EAAU,mBAAqB,EAAK,OACvD,cAAe,EAAU,cACzB,eAAgB,eAGpB,OAAO,KAIf,MAAO,CACH,MAAO,GAAG,EAAO,SACjB,KAAM,EACN,YAAa,EAAK,MAAM,QACxB,WAAY,GACZ,KAAM,EACN,MAAO,EACP,cAAe,EACf,gBAAiB"}