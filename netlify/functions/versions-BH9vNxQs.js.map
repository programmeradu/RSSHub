{"version":3,"file":"versions-BH9vNxQs.js","names":[],"sources":["../../lib/routes/modrinth/versions.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport { config } from '@/config';\r\nimport _ofetch from '@/utils/ofetch';\r\nimport MarkdownIt from 'markdown-it';\r\nimport type { Author, Project, Version } from '@/routes/modrinth/api';\r\nimport type { Context } from 'hono';\r\n\r\nconst ofetch = _ofetch.create({\r\n    headers: {\r\n        // https://docs.modrinth.com/#section/User-Agents\r\n        'user-agent': config.trueUA,\r\n    },\r\n});\r\n\r\nconst md = MarkdownIt({\r\n    html: true,\r\n});\r\n\r\nexport const route: Route = {\r\n    path: '/project/:id/versions/:routeParams?',\r\n    categories: ['game'],\r\n    example: '/modrinth/project/sodium/versions',\r\n    parameters: {\r\n        id: 'Id or slug of the Modrinth project',\r\n        routeParams: 'Extra route params. See the table below for options',\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: [\r\n                'modrinth.com/mod/:id/*',\r\n                'modrinth.com/plugin/:id/*',\r\n                'modrinth.com/datapack/:id/*',\r\n                'modrinth.com/shader/:id/*',\r\n                'modrinth.com/resourcepack/:id/*',\r\n                'modrinth.com/modpack/:id/*',\r\n                'modrinth.com/mod/:id',\r\n                'modrinth.com/plugin/:id',\r\n                'modrinth.com/datapack/:id',\r\n                'modrinth.com/shader/:id',\r\n                'modrinth.com/resourcepack/:id',\r\n                'modrinth.com/modpack/:id',\r\n            ],\r\n            target: '/project/:id/versions',\r\n        },\r\n    ],\r\n    name: 'Project versions',\r\n    maintainers: ['SettingDust'],\r\n    handler,\r\n    description: `| Name           | Example                                      |\r\n| -------------- | -------------------------------------------- |\r\n| loaders        | loaders=fabric&loaders=quilt&loaders=forge |\r\n| game_versions | game_versions=1.20.1&game_versions=1.20.2 |\r\n| featured       | featured=true                                |`,\r\n};\r\n\r\nasync function handler(ctx: Context) {\r\n    const { id, routeParams } = <\r\n        {\r\n            id: string;\r\n            routeParams?: string;\r\n        }\r\n    >ctx.req.param();\r\n\r\n    /**\r\n     * /@type {{\r\n     *   loaders: string | string[] | undefined\r\n     *   game_versions: string | string[] | undefined\r\n     *   featured: string | undefined\r\n     * }}\r\n     */\r\n    const parsedQuery = new URLSearchParams(routeParams);\r\n\r\n    try {\r\n        const project = await ofetch<Project>(`https://api.modrinth.com/v2/project/${id}`);\r\n        const versions = await ofetch<Version[]>(`https://api.modrinth.com/v2/project/${id}/version`, {\r\n            query: {\r\n                loaders: parsedQuery.has('loaders') ? JSON.stringify(parsedQuery.getAll('loaders')) : '',\r\n                game_versions: parsedQuery.has('game_versions') ? JSON.stringify(parsedQuery.getAll('game_versions')) : '',\r\n            },\r\n        });\r\n        const authors = await ofetch<Author[]>(`https://api.modrinth.com/v2/users`, {\r\n            query: {\r\n                ids: JSON.stringify([...new Set(versions.map((it) => it.author_id))]),\r\n            },\r\n        });\r\n        const groupedAuthors = <Record<string, Author>>{};\r\n        for (const author of authors) {\r\n            groupedAuthors[author.id] = author;\r\n        }\r\n\r\n        return {\r\n            title: `${project.title} Modrinth versions`,\r\n            description: project.description,\r\n            link: `https://modrinth.com/project/${id}`,\r\n            item: versions.map((it) => ({\r\n                title: `${it.name} for ${it.loaders.join('/')} on ${[...new Set([it.game_versions[0], it.game_versions.at(-1)])].join('-')}`,\r\n                link: `https://modrinth.com/project/${id}/version/${it.version_number}`,\r\n                pubDate: parseDate(it.date_published),\r\n                description: art(path.join(__dirname, 'templates/version.art'), {\r\n                    ...it,\r\n                    changelog: md.render(it.changelog),\r\n                }),\r\n                guid: it.id,\r\n                author: groupedAuthors[it.author_id].username,\r\n            })),\r\n        };\r\n    } catch (error: any) {\r\n        if (error?.response?.statusCode === 404) {\r\n            throw new Error(`${error.message}: Project ${id} not found`);\r\n        }\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"4XAUA,MAAM,EAAS,EAAQ,OAAO,CAC1B,QAAS,CAEL,aAAc,EAAO,UAIvB,EAAK,EAAW,CAClB,KAAM,KAGG,EAAe,CACxB,KAAM,sCACN,WAAY,CAAC,QACb,QAAS,oCACT,WAAY,CACR,GAAI,qCACJ,YAAa,uDAEjB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CACJ,yBACA,4BACA,8BACA,4BACA,kCACA,6BACA,uBACA,0BACA,4BACA,0BACA,gCACA,4BAEJ,OAAQ,0BAGhB,KAAM,mBACN,YAAa,CAAC,eACd,UACA,YAAa;;;;oEAOjB,eAAe,EAAQ,EAAc,CACjC,GAAM,CAAE,KAAI,eAKX,EAAI,IAAI,QASH,EAAc,IAAI,gBAAgB,GAExC,GAAI,CACA,IAAM,EAAU,MAAM,EAAgB,uCAAuC,KACvE,EAAW,MAAM,EAAkB,uCAAuC,EAAG,UAAW,CAC1F,MAAO,CACH,QAAS,EAAY,IAAI,WAAa,KAAK,UAAU,EAAY,OAAO,YAAc,GACtF,cAAe,EAAY,IAAI,iBAAmB,KAAK,UAAU,EAAY,OAAO,kBAAoB,MAG1G,EAAU,MAAM,EAAiB,oCAAqC,CACxE,MAAO,CACH,IAAK,KAAK,UAAU,CAAC,GAAG,IAAI,IAAI,EAAS,IAAK,GAAO,EAAG,iBAG1D,EAAyC,GAC/C,IAAK,IAAM,KAAU,EACjB,EAAe,EAAO,IAAM,EAGhC,MAAO,CACH,MAAO,GAAG,EAAQ,MAAM,oBACxB,YAAa,EAAQ,YACrB,KAAM,gCAAgC,IACtC,KAAM,EAAS,IAAK,IAAQ,CACxB,MAAO,GAAG,EAAG,KAAK,OAAO,EAAG,QAAQ,KAAK,KAAK,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,EAAG,cAAc,GAAI,EAAG,cAAc,GAAG,OAAO,KAAK,OACtH,KAAM,gCAAgC,EAAG,WAAW,EAAG,iBACvD,QAAS,EAAU,EAAG,gBACtB,YAAa,EAAI,EAAA,KAAA,EAAA,kCAA+C,CAC5D,GAAG,EACH,UAAW,EAAG,OAAO,EAAG,aAE5B,KAAM,EAAG,GACT,OAAQ,EAAe,EAAG,WAAW,mBAGxC,EAAY,CAIjB,MAHI,GAAO,UAAU,aAAe,IACtB,MAAM,GAAG,EAAM,QAAQ,YAAY,EAAG,aAE9C"}