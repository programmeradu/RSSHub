{"version":3,"file":"cryptoslate-DwH7zT1n.js","names":["route: Route","parser","error: any"],"sources":["../../lib/routes/cryptoslate/index.ts"],"sourcesContent":["import { Route, Data } from '@/types';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport logger from '@/utils/logger';\r\nimport parser from '@/utils/rss-parser';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/',\r\n    categories: ['finance'],\r\n    example: '/cryptoslate',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'News',\r\n    maintainers: ['pseudoyu'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            source: ['cryptoslate.com/'],\r\n            target: '/',\r\n        },\r\n    ],\r\n    description: 'Get latest news from CryptoSlate.',\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20;\r\n    const rssUrl = 'https://cryptoslate.com/feed/';\r\n\r\n    const feed = await parser.parseURL(rssUrl);\r\n\r\n    const items = feed.items\r\n        .filter((item) => !item.link?.includes('/feed') && !item.link?.includes('#respond'))\r\n        .slice(0, limit)\r\n        .map((item) => {\r\n            if (!item.link) {\r\n                return {};\r\n            }\r\n\r\n            try {\r\n                // Clean URL by removing query parameters\r\n                const cleanUrl = item.link.split('?')[0];\r\n\r\n                return {\r\n                    title: item.title || 'Untitled',\r\n                    link: cleanUrl,\r\n                    pubDate: item.pubDate ? parseDate(item.pubDate) : undefined,\r\n                    description: extractFullTextFromRSS(item),\r\n                    author: item.creator || 'CryptoSlate',\r\n                    category: item.categories || [],\r\n                    guid: item.guid || item.link,\r\n                    image: item.enclosure?.url,\r\n                };\r\n            } catch (error: any) {\r\n                logger.warn(`Couldn't process article from CryptoSlate: ${item.link}: ${error.message}`);\r\n                return {};\r\n            }\r\n        });\r\n\r\n    // Filter out empty items\r\n    const filteredItems = items.filter((item) => item && Object.keys(item).length > 0);\r\n\r\n    return {\r\n        title: feed.title || 'CryptoSlate',\r\n        link: feed.link || 'https://cryptoslate.com',\r\n        description: feed.description || 'Latest news from CryptoSlate',\r\n        item: filteredItems,\r\n        language: feed.language || 'en',\r\n        image: feed.image?.url,\r\n    } as Data;\r\n}\r\n\r\nfunction extractFullTextFromRSS(entry: any): string | null {\r\n    try {\r\n        const contentEncoded = entry['content:encoded'] || entry['content:encodedSnippet'] || entry.content || entry.contentSnippet;\r\n\r\n        if (!contentEncoded) {\r\n            return null;\r\n        }\r\n\r\n        const $ = load(contentEncoded);\r\n\r\n        // Remove unwanted elements\r\n        $('img').remove();\r\n        $('figure').remove();\r\n\r\n        return $.html() || null;\r\n    } catch (error) {\r\n        logger.error(`Error extracting full text from RSS: ${error}`);\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"qOAMA,MAAaA,EAAe,CACxB,KAAM,IACN,WAAY,CAAC,WACb,QAAS,eACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,YACd,UACA,MAAO,CACH,CACI,OAAQ,CAAC,oBACT,OAAQ,MAGhB,YAAa,qCAGjB,eAAe,EAAQ,EAAoB,CACvC,IAAM,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAG3E,EAAO,MAAMC,EAAO,SAAS,iCAE7B,EAAQ,EAAK,MACd,OAAQ,GAAS,CAAC,EAAK,MAAM,SAAS,UAAY,CAAC,EAAK,MAAM,SAAS,aACvE,MAAM,EAAG,GACT,IAAK,GAAS,CACX,GAAI,CAAC,EAAK,KACN,MAAO,GAGX,GAAI,CAEA,IAAM,EAAW,EAAK,KAAK,MAAM,KAAK,GAEtC,MAAO,CACH,MAAO,EAAK,OAAS,WACrB,KAAM,EACN,QAAS,EAAK,QAAU,EAAU,EAAK,SAAW,IAAA,GAClD,YAAa,EAAuB,GACpC,OAAQ,EAAK,SAAW,cACxB,SAAU,EAAK,YAAc,GAC7B,KAAM,EAAK,MAAQ,EAAK,KACxB,MAAO,EAAK,WAAW,WAEtBC,EAAY,CAEjB,OADA,EAAO,KAAK,8CAA8C,EAAK,KAAK,IAAI,EAAM,WACvE,MAKb,EAAgB,EAAM,OAAQ,GAAS,GAAQ,OAAO,KAAK,GAAM,OAAS,GAEhF,MAAO,CACH,MAAO,EAAK,OAAS,cACrB,KAAM,EAAK,MAAQ,0BACnB,YAAa,EAAK,aAAe,+BACjC,KAAM,EACN,SAAU,EAAK,UAAY,KAC3B,MAAO,EAAK,OAAO,KAI3B,SAAS,EAAuB,EAA2B,CACvD,GAAI,CACA,IAAM,EAAiB,EAAM,oBAAsB,EAAM,2BAA6B,EAAM,SAAW,EAAM,eAE7G,GAAI,CAAC,EACD,OAAO,KAGX,IAAM,EAAI,EAAK,GAMf,OAHA,EAAE,OAAO,SACT,EAAE,UAAU,SAEL,EAAE,QAAU,WACd,EAAO,CAEZ,OADA,EAAO,MAAM,wCAAwC,KAC9C"}