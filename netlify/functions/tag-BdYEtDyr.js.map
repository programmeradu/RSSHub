{"version":3,"file":"tag-BdYEtDyr.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/ithome/tag.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst rootUrl = 'https://www.ithome.com/';\r\n\r\nexport const route: Route = {\r\n    path: '/tag/:name',\r\n    categories: ['new-media'],\r\n    example: '/ithome/tag/win11',\r\n    parameters: { name: '标签名称，可从网址链接中获取' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['ithome.com/tag/:name'],\r\n        },\r\n    ],\r\n    name: '标签',\r\n    maintainers: ['Fatpandac'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const name = ctx.req.param('name');\r\n    const url = `${rootUrl}tag/${name}`;\r\n\r\n    const response = await got(url);\r\n    const $ = load(response.data);\r\n    const list = $('ul.bl > li')\r\n        .toArray()\r\n        .map((item) => ({\r\n            title: $(item).find('h2 > a').text(),\r\n            link: $(item).find('h2 > a').attr('href'),\r\n            pubDate: timezone(parseDate($(item).find('div.c').attr('data-ot')), +8),\r\n        }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                let detailResponse;\r\n\r\n                // handle 404 errors for some article URLs\r\n                try {\r\n                    detailResponse = await got(item.link);\r\n                } catch {\r\n                    // empty\r\n                }\r\n                if (!detailResponse) {\r\n                    return;\r\n                }\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                const article = content('div.post_content');\r\n                article.find('img[data-original]').each((_, ele) => {\r\n                    ele = $(ele);\r\n                    ele.attr('src', ele.attr('data-original'));\r\n                    ele.removeAttr('class');\r\n                    ele.removeAttr('data-original');\r\n                });\r\n                item.description = article.html();\r\n                item.author = content('span.author_baidu > strong').text();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `IT之家 - ${name}标签`,\r\n        link: url,\r\n        item: items.filter(Boolean),\r\n    };\r\n}\r\n"],"mappings":"0ZAOA,MAEaA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,aACb,QAAS,oBACT,WAAY,CAAE,KAAM,kBACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,KACN,YAAa,CAAC,aACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAM,8BAAiB,IAEvB,EAAW,MAAMC,EAAI,GACrB,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,cACV,UACA,IAAK,IAAU,CACZ,MAAO,EAAE,GAAM,KAAK,UAAU,OAC9B,KAAM,EAAE,GAAM,KAAK,UAAU,KAAK,QAClC,QAAS,EAAS,EAAU,EAAE,GAAM,KAAK,SAAS,KAAK,YAAa,MAGtE,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAI,EAGJ,GAAI,CACA,EAAiB,MAAMD,EAAI,EAAK,WAC5B,EAGR,GAAI,CAAC,EACD,OAGJ,IAAM,EAAU,EAAK,EAAe,MAE9B,EAAU,EAAQ,oBAUxB,OATA,EAAQ,KAAK,sBAAsB,MAAM,EAAG,IAAQ,CAChD,EAAM,EAAE,GACR,EAAI,KAAK,MAAO,EAAI,KAAK,kBACzB,EAAI,WAAW,SACf,EAAI,WAAW,mBAEnB,EAAK,YAAc,EAAQ,OAC3B,EAAK,OAAS,EAAQ,8BAA8B,OAE7C,MAKnB,MAAO,CACH,MAAO,UAAU,EAAK,IACtB,KAAM,EACN,KAAM,EAAM,OAAO"}