{"version":3,"file":"article-BeP2DNYj.js","names":["route: Route","got","type","cache"],"sources":["../../lib/routes/ymgal/article.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst host = 'https://www.ymgal.games';\r\n\r\nconst types = {\r\n    news: '?type=NEWS&page=1',\r\n    column: '?type=COLUMN&page=1',\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/article/:type?',\r\n    categories: ['anime'],\r\n    example: '/ymgal/article',\r\n    parameters: { type: '文章类型' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '文章',\r\n    maintainers: ['SunBK201'],\r\n    handler,\r\n    description: `| 全部文章 | 资讯 | 专栏   |\r\n| -------- | ---- | ------ |\r\n| all      | news | column |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const type = ctx.req.param('type') || 'all';\r\n\r\n    const link = `${host}/co/topic/list` + types[type];\r\n    let data = [];\r\n    if (type === 'all') {\r\n        await Promise.all(\r\n            Object.values(types).map(async (type) => {\r\n                const response = await got(`${host}/co/topic/list${type}`);\r\n                data.push(...response.data.data);\r\n            })\r\n        );\r\n        data = data.sort((a, b) => b.publishTime - a.publishTime).slice(0, 10);\r\n    } else {\r\n        const response = await got(link);\r\n        data = response.data.data;\r\n    }\r\n\r\n    const items = await Promise.all(\r\n        data.map((item) => {\r\n            const itemUrl = host + '/co/article/' + item.topicId;\r\n            return cache.tryGet(itemUrl, async () => {\r\n                const result = await got(itemUrl);\r\n                const $ = load(result.data);\r\n                const description = $('article').html().trim();\r\n                return {\r\n                    title: item.title,\r\n                    link: itemUrl,\r\n                    pubDate: timezone(parseDate(item.publishTime), 8),\r\n                    description,\r\n                };\r\n            });\r\n        })\r\n    );\r\n\r\n    let info = '全部文章';\r\n    if (type === 'news') {\r\n        info = '资讯';\r\n    } else if (type === 'column') {\r\n        info = '专栏';\r\n    }\r\n\r\n    return {\r\n        title: `月幕 Galgame - ${info}`,\r\n        link: `${host}/co/article`,\r\n        description: `月幕 Galgame - ${info}`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"0ZAOA,MAAM,EAAO,0BAEP,EAAQ,CACV,KAAM,oBACN,OAAQ,uBAGCA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,SACb,QAAS,iBACT,WAAY,CAAE,KAAM,QACpB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,KACN,YAAa,CAAC,YACd,UACA,YAAa;;+BAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,SAAW,MAEhC,EAAO,GAAG,EAAK,gBAAkB,EAAM,GACzC,EAAO,GACX,GAAI,IAAS,MACT,MAAM,QAAQ,IACV,OAAO,OAAO,GAAO,IAAI,KAAO,IAAS,CACrC,IAAM,EAAW,MAAMC,EAAI,GAAG,EAAK,gBAAgBC,KACnD,EAAK,KAAK,GAAG,EAAS,KAAK,SAGnC,EAAO,EAAK,MAAM,EAAG,IAAM,EAAE,YAAc,EAAE,aAAa,MAAM,EAAG,QAChE,CACH,IAAM,EAAW,MAAMD,EAAI,GAC3B,EAAO,EAAS,KAAK,KAGzB,IAAM,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GAAS,CACf,IAAM,EAAU,EAAO,eAAiB,EAAK,QAC7C,OAAOE,EAAM,OAAO,EAAS,SAAY,CACrC,IAAM,EAAS,MAAMF,EAAI,GACnB,EAAI,EAAK,EAAO,MAChB,EAAc,EAAE,WAAW,OAAO,OACxC,MAAO,CACH,MAAO,EAAK,MACZ,KAAM,EACN,QAAS,EAAS,EAAU,EAAK,aAAc,GAC/C,oBAMZ,EAAO,OAOX,OANI,IAAS,OACT,EAAO,KACA,IAAS,WAChB,EAAO,MAGJ,CACH,MAAO,gBAAgB,IACvB,KAAM,GAAG,EAAK,aACd,YAAa,gBAAgB,IAC7B,KAAM"}