{"version":3,"file":"discord-api-CK6egpHN.js","names":["cache","ofetch"],"sources":["../../lib/routes/discord/discord-api.ts"],"sourcesContent":["import { APIMessage } from 'discord-api-types/v10';\r\nimport { RESTGetAPIGuildResult, RESTGetAPIGuildChannelsResult, RESTGetAPIChannelResult, RESTGetAPIChannelMessagesQuery, RESTGetAPIChannelMessagesResult } from 'discord-api-types/rest/v10';\r\n\r\nimport { config } from '@/config';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\n\r\nexport const baseUrl = 'https://discord.com';\r\nconst apiUrl = `${baseUrl}/api/v10`;\r\n\r\nexport const getGuild = (guildId, authorization) =>\r\n    cache.tryGet(`discord:guilds:${guildId}`, () =>\r\n        ofetch(`${apiUrl}/guilds/${guildId}`, {\r\n            headers: {\r\n                authorization,\r\n            },\r\n        })\r\n    ) as Promise<RESTGetAPIGuildResult>;\r\n\r\nexport const getGuildChannels = (guildId, authorization) =>\r\n    cache.tryGet(`discord:guilds:${guildId}:channels`, () =>\r\n        ofetch(`${apiUrl}/guilds/${guildId}/channels`, {\r\n            headers: {\r\n                authorization,\r\n            },\r\n        })\r\n    ) as Promise<RESTGetAPIGuildChannelsResult>;\r\n\r\nexport const getChannel = (channelId, authorization) =>\r\n    cache.tryGet(`discord:channels:${channelId}`, () =>\r\n        ofetch(`${apiUrl}/channels/${channelId}`, {\r\n            headers: {\r\n                authorization,\r\n            },\r\n        })\r\n    ) as Promise<RESTGetAPIChannelResult>;\r\n\r\nexport const getChannelMessages = (channelId, authorization, limit = 100) =>\r\n    cache.tryGet(\r\n        `discord:channels:${channelId}:messages`,\r\n        () =>\r\n            ofetch(`${apiUrl}/channels/${channelId}/messages`, {\r\n                headers: {\r\n                    authorization,\r\n                },\r\n                query: {\r\n                    limit,\r\n                } as RESTGetAPIChannelMessagesQuery,\r\n            }),\r\n        config.cache.routeExpire,\r\n        false\r\n    ) as Promise<RESTGetAPIChannelMessagesResult>;\r\n\r\ninterface SearchGuildMessagesResult {\r\n    analytics_id: string;\r\n    doing_deep_historical_index: boolean;\r\n    total_results: number;\r\n    messages: APIMessage[][];\r\n}\r\n\r\nexport const VALID_HAS_TYPES = new Set(['link', 'embed', 'poll', 'file', 'video', 'image', 'sound', 'sticker', 'snapshot'] as const);\r\n\r\nexport type HasType = typeof VALID_HAS_TYPES extends Set<infer T> ? T : never;\r\n\r\nexport interface SearchGuildMessagesParams {\r\n    content?: string;\r\n    author_id?: string;\r\n    mentions?: string;\r\n    has?: HasType[];\r\n    max_id?: string;\r\n    min_id?: string;\r\n    channel_id?: string;\r\n    pinned?: boolean;\r\n}\r\n\r\nexport const searchGuildMessages = (guildId: string, authorization: string, params: SearchGuildMessagesParams) =>\r\n    cache.tryGet(\r\n        `discord:guilds:${guildId}:search:${JSON.stringify(params)}`,\r\n        () => {\r\n            const queryParams = {\r\n                ...params,\r\n                has: params.has?.length ? params.has : undefined,\r\n            };\r\n\r\n            return ofetch(`${apiUrl}/guilds/${guildId}/messages/search`, {\r\n                headers: { authorization },\r\n                query: queryParams,\r\n            });\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    ) as Promise<SearchGuildMessagesResult>;\r\n"],"mappings":"wJAOA,MAAa,EAAU,sBACjB,EAAS,GAAG,EAAQ,UAEb,GAAY,EAAS,IAC9BA,EAAM,OAAO,kBAAkB,QAC3BC,EAAO,GAAG,EAAO,UAAU,IAAW,CAClC,QAAS,CACL,oBAcH,GAAc,EAAW,IAClCD,EAAM,OAAO,oBAAoB,QAC7BC,EAAO,GAAG,EAAO,YAAY,IAAa,CACtC,QAAS,CACL,oBAKH,GAAsB,EAAW,EAAe,EAAQ,MACjED,EAAM,OACF,oBAAoB,EAAU,eAE1BC,EAAO,GAAG,EAAO,YAAY,EAAU,WAAY,CAC/C,QAAS,CACL,iBAEJ,MAAO,CACH,WAGZ,EAAO,MAAM,YACb,IAUK,EAAkB,IAAI,IAAI,CAAC,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,QAAS,UAAW,aAelG,GAAuB,EAAiB,EAAuB,IACxED,EAAM,OACF,kBAAkB,EAAQ,UAAU,KAAK,UAAU,SAC7C,CACF,IAAM,EAAc,CAChB,GAAG,EACH,IAAK,EAAO,KAAK,OAAS,EAAO,IAAM,IAAA,IAG3C,OAAOC,EAAO,GAAG,EAAO,UAAU,EAAQ,kBAAmB,CACzD,QAAS,CAAE,iBACX,MAAO,KAGf,EAAO,MAAM,YACb"}