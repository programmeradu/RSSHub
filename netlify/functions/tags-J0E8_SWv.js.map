{"version":3,"file":"tags-J0E8_SWv.js","names":["viewType: ViewType","limit: number","targetUrl: string","apiUrl: string","route: Route","urlObj: URL","id: string","tab: string | undefined"],"sources":["../../lib/routes/gcores/tags.ts"],"sourcesContent":["import { type Data, type Route, ViewType } from '@/types';\r\n\r\nimport { type Context } from 'hono';\r\n\r\nimport { baseUrl, processItems } from './util';\r\n\r\nlet viewType: ViewType = ViewType.Articles;\r\n\r\nexport const handler = async (ctx: Context): Promise<Data> => {\r\n    const { id, tab } = ctx.req.param();\r\n    const limit: number = Number.parseInt(ctx.req.query('limit') ?? '30', 10);\r\n\r\n    const targetUrl: string = new URL(`tags/${id}/originals${tab ? `?tab=${tab}` : ''}`, baseUrl).href;\r\n    const apiUrl: string = new URL(`gapi/v1/tags/${id}/${tab ?? 'originals'}`, baseUrl).href;\r\n\r\n    const query = {\r\n        'page[limit]': limit,\r\n        sort: '-published-at',\r\n        include: 'category,user,media',\r\n        'filter[list-all]': 1,\r\n        'filter[is-news]': tab === 'news' ? 1 : 0,\r\n    };\r\n\r\n    if (tab === 'radios') {\r\n        viewType = ViewType.Audios;\r\n    } else if (tab === 'videos') {\r\n        viewType = ViewType.Videos;\r\n    }\r\n\r\n    return await processItems(limit, query, apiUrl, targetUrl);\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/tags/:id/:tab?',\r\n    name: '标签',\r\n    url: 'www.gcores.com',\r\n    maintainers: ['StevenRCE0', 'nczitzk'],\r\n    handler,\r\n    example: '/gcores/tags/1/articles',\r\n    parameters: {\r\n        id: {\r\n            description: '标签 ID，可在对应标签页 URL 中找到',\r\n        },\r\n        tab: {\r\n            description: '类型，默认为空，即全部，可在对应标签页 URL 中找到',\r\n            options: [\r\n                {\r\n                    label: '全部',\r\n                    value: '',\r\n                },\r\n                {\r\n                    label: '播客',\r\n                    value: 'radios',\r\n                },\r\n                {\r\n                    label: '文章',\r\n                    value: 'articles',\r\n                },\r\n                {\r\n                    label: '资讯',\r\n                    value: 'news',\r\n                },\r\n                {\r\n                    label: '视频',\r\n                    value: 'videos',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    description: `:::tip\r\n若订阅 [美国 - 文章](https://www.gcores.com/tags/1/originals?tab=articles)，网址为 \\`https://www.gcores.com/tags/1/originals?tab=articles\\`，请截取 \\`https://www.gcores.com/tags/\\` 到末尾 \\`/originals\\` 的部分 \\`1\\` 作为 \\`id\\` 参数填入，截取 \\`articles\\` 作为 \\`tab\\` 参数填入，此时目标路由为 [\\`/gcores/tags/1/articles\\`](https://rsshub.app/gcores/tags/1/articles)。\r\n:::\r\n\r\n| 全部 | 播客   | 文章     | 资讯 | 视频   |\r\n| ---- | ------ | -------- | ---- | ------ |\r\n|      | radios | articles | news | videos |\r\n`,\r\n    categories: ['game'],\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportRadar: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: (params, url) => {\r\n                const urlObj: URL = new URL(url);\r\n                const id: string = params.id;\r\n                const tab: string | undefined = urlObj.searchParams.get('tab') ?? undefined;\r\n\r\n                return `/gcores/tags/${id}/${tab ? `/${tab}` : ''}`;\r\n            },\r\n        },\r\n        {\r\n            title: '全部',\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: '/gcores/tags/:id',\r\n        },\r\n        {\r\n            title: '播客',\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: '/gcores/tags/:id/radios',\r\n        },\r\n        {\r\n            title: '文章',\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: '/gcores/tags/:id/articles',\r\n        },\r\n        {\r\n            title: '资讯',\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: '/gcores/tags/:id/news',\r\n        },\r\n        {\r\n            title: '视频',\r\n            source: ['www.gcores.com/tags/:id/originals'],\r\n            target: '/gcores/tags/:id/videos',\r\n        },\r\n    ],\r\n    view: viewType,\r\n};\r\n"],"mappings":"8TAMA,IAAIA,EAAqB,EAAS,SAElC,MAAa,EAAU,KAAO,IAAgC,CAC1D,GAAM,CAAE,KAAI,OAAQ,EAAI,IAAI,QACtBC,EAAgB,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,KAAM,IAEhEC,EAAoB,IAAI,IAAI,QAAQ,EAAG,YAAY,EAAM,QAAQ,IAAQ,KAAM,GAAS,KACxFC,EAAiB,IAAI,IAAI,gBAAgB,EAAG,GAAG,GAAO,cAAe,GAAS,KAE9E,EAAQ,CACV,cAAe,EACf,KAAM,gBACN,QAAS,sBACT,mBAAoB,EACpB,kBAAmB,IAAQ,OAAS,EAAI,GAS5C,OANI,IAAQ,SACR,EAAW,EAAS,OACb,IAAQ,WACf,EAAW,EAAS,QAGjB,MAAM,EAAa,EAAO,EAAO,EAAQ,IAGvCC,EAAe,CACxB,KAAM,kBACN,KAAM,KACN,IAAK,iBACL,YAAa,CAAC,aAAc,WAC5B,UACA,QAAS,0BACT,WAAY,CACR,GAAI,CACA,YAAa,yBAEjB,IAAK,CACD,YAAa,8BACb,QAAS,CACL,CACI,MAAO,KACP,MAAO,IAEX,CACI,MAAO,KACP,MAAO,UAEX,CACI,MAAO,KACP,MAAO,YAEX,CACI,MAAO,KACP,MAAO,QAEX,CACI,MAAO,KACP,MAAO,aAKvB,YAAa,ucAQb,WAAY,CAAC,QACb,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,aAAc,GACd,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,qCACT,QAAS,EAAQ,IAAQ,CACrB,IAAMC,EAAc,IAAI,IAAI,GACtBC,EAAa,EAAO,GACpBC,EAA0B,EAAO,aAAa,IAAI,QAAU,IAAA,GAElE,MAAO,gBAAgB,EAAG,GAAG,EAAM,IAAI,IAAQ,OAGvD,CACI,MAAO,KACP,OAAQ,CAAC,qCACT,OAAQ,oBAEZ,CACI,MAAO,KACP,OAAQ,CAAC,qCACT,OAAQ,2BAEZ,CACI,MAAO,KACP,OAAQ,CAAC,qCACT,OAAQ,6BAEZ,CACI,MAAO,KACP,OAAQ,CAAC,qCACT,OAAQ,yBAEZ,CACI,MAAO,KACP,OAAQ,CAAC,qCACT,OAAQ,4BAGhB,KAAM"}