{"version":3,"file":"common-CpycXa0M.js","names":["got","got","cache"],"sources":["../../lib/routes/cnbeta/utils.ts","../../lib/routes/cnbeta/common.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst rootUrl = 'https://www.cnbeta.com.tw';\r\n\r\nconst ProcessItems = (items, limit, tryGet) =>\r\n    Promise.all(\r\n        items.slice(0, limit ? Number.parseInt(limit) : 60).map((item) =>\r\n            tryGet(item.link, async () => {\r\n                const detailResponse = await got(item.link);\r\n\r\n                const content = load(detailResponse.data);\r\n\r\n                content('.topic, .article-topic, .article-global').remove();\r\n\r\n                item.description = content('.article-summary').html() + content('.article-content').html();\r\n                item.author = content('header.title div.meta span.source').text();\r\n                item.pubDate ??= timezone(parseDate(content('.meta span').first().text(), 'YYYY年MM月DD日 HH:mm'), +8);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\nexport { rootUrl, ProcessItems };\r\n","import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nimport { rootUrl, ProcessItems } from './utils';\r\n\r\nexport async function handler(ctx) {\r\n    const { type, id } = ctx.req.param();\r\n\r\n    const currentUrl = type ? `${rootUrl}/${type}/${id}.htm` : rootUrl;\r\n\r\n    let response = await got(currentUrl);\r\n\r\n    const $ = load(response.data);\r\n\r\n    const token = encodeURI($('meta[name=\"csrf-token\"]').attr('content'));\r\n    const apiUrl = `${rootUrl}/home/more?&type=${$('div[data-type]').data('type')}&page=1&_csrf=${token}&_=${Date.now()}`;\r\n\r\n    response = await got(apiUrl);\r\n\r\n    const items = type\r\n        ? response.data.result.list.map((item) => ({\r\n              title: item.title,\r\n              description: item.hometext,\r\n              author: item.source.split('@http')[0],\r\n              pubDate: timezone(parseDate(item.inputtime), +8),\r\n              link: item.url_show.startsWith('//') ? `https:${item.url_show}` : item.url_show.replace('http:', 'https:'),\r\n              category: item.label.name,\r\n          }))\r\n        : response.data.result.map((item) => ({\r\n              title: item.title,\r\n              link: item.url_show.startsWith('//') ? `https:${item.url_show}` : item.url_show.replace('http:', 'https:'),\r\n              category: item.label.name,\r\n          }));\r\n\r\n    return {\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        item: await ProcessItems(items, ctx.req.query('limit'), cache.tryGet),\r\n    };\r\n}\r\n"],"mappings":"0OAKA,MAAM,EAAU,4BAEV,GAAgB,EAAO,EAAO,IAChC,QAAQ,IACJ,EAAM,MAAM,EAAG,EAAQ,OAAO,SAAS,GAAS,IAAI,IAAK,GACrD,EAAO,EAAK,KAAM,SAAY,CAC1B,IAAM,EAAiB,MAAMC,EAAI,EAAK,MAEhC,EAAU,EAAK,EAAe,MAQpC,OANA,EAAQ,2CAA2C,SAEnD,EAAK,YAAc,EAAQ,oBAAoB,OAAS,EAAQ,oBAAoB,OACpF,EAAK,OAAS,EAAQ,qCAAqC,OAC3D,EAAK,UAAY,EAAS,EAAU,EAAQ,cAAc,QAAQ,OAAQ,qBAAsB,GAEzF,MCbvB,eAAsB,EAAQ,EAAK,CAC/B,GAAM,CAAE,OAAM,MAAO,EAAI,IAAI,QAEvB,EAAa,EAAO,GAAG,EAAQ,GAAG,EAAK,GAAG,EAAG,MAAQ,EAEvD,EAAW,MAAMA,EAAI,GAEnB,EAAI,EAAK,EAAS,MAElB,EAAQ,UAAU,EAAE,2BAA2B,KAAK,YACpD,EAAS,GAAG,EAAQ,mBAAmB,EAAE,kBAAkB,KAAK,QAAQ,gBAAgB,EAAM,KAAK,KAAK,QAE9G,EAAW,MAAMA,EAAI,GAErB,IAAM,EAAQ,EACR,EAAS,KAAK,OAAO,KAAK,IAAK,IAAU,CACrC,MAAO,EAAK,MACZ,YAAa,EAAK,SAClB,OAAQ,EAAK,OAAO,MAAM,SAAS,GACnC,QAAS,EAAS,EAAU,EAAK,WAAY,GAC7C,KAAM,EAAK,SAAS,WAAW,MAAQ,SAAS,EAAK,WAAa,EAAK,SAAS,QAAQ,QAAS,UACjG,SAAU,EAAK,MAAM,QAEzB,EAAS,KAAK,OAAO,IAAK,IAAU,CAChC,MAAO,EAAK,MACZ,KAAM,EAAK,SAAS,WAAW,MAAQ,SAAS,EAAK,WAAa,EAAK,SAAS,QAAQ,QAAS,UACjG,SAAU,EAAK,MAAM,QAG/B,MAAO,CACH,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,KAAM,MAAM,EAAa,EAAO,EAAI,IAAI,MAAM,SAAUC,EAAM"}