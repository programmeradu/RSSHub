{"version":3,"file":"toodaylab-CmnQRgPs.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/toodaylab/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate, parseRelativeDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/:params{.+}?',\r\n    name: 'Unknown',\r\n    maintainers: [],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { params = 'posts' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 30;\r\n\r\n    const isHot = params === 'hot';\r\n\r\n    const rootUrl = 'https://www.toodaylab.com';\r\n    const currentUrl = new URL(isHot ? 'posts' : params, rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    let items = isHot\r\n        ? $('div.hot-list a')\r\n              .slice(0, limit)\r\n              .toArray()\r\n              .map((item) => {\r\n                  item = $(item);\r\n\r\n                  return {\r\n                      title: item.find('div.hot-item p').text(),\r\n                      link: new URL(item.prop('href'), rootUrl).href,\r\n                  };\r\n              })\r\n        : $('div.single-post')\r\n              .slice(0, limit)\r\n              .toArray()\r\n              .map((item) => {\r\n                  item = $(item);\r\n\r\n                  const a = item.find('p.title a');\r\n\r\n                  const pubDate = item\r\n                      .find('div.left-infos p')\r\n                      .text()\r\n                      .trim()\r\n                      .split(/\\/\\/\\s/)\r\n                      .pop();\r\n\r\n                  return {\r\n                      title: a.text(),\r\n                      link: new URL(a.prop('href'), rootUrl).href,\r\n                      description: item.find('p.excerpt').html(),\r\n                      author: item.find('div.left-infos p a').text().trim(),\r\n                      pubDate: timezone(/[年日月]/.test(pubDate) ? parseDate(pubDate, ['YYYY年M月D日 HH:mm', 'M月D日 HH:mm']) : parseRelativeDate(pubDate), +8),\r\n                  };\r\n              });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const content = load(detailResponse);\r\n\r\n                const pubDate = content('div.left-infos p')\r\n                    .text()\r\n                    .trim()\r\n                    .split(/\\/\\/\\s/)\r\n                    .pop();\r\n\r\n                item.title = content('h1').text() || item.title;\r\n                item.description = content('div.post-content').html() ?? item.description;\r\n                item.author = content('div.left-infos p a').text().trim() ?? item.author;\r\n                item.category = content('div.right-infos a')\r\n                    .slice(1)\r\n                    .toArray()\r\n                    .map((c) => content(c).text().replace(/#/, ''));\r\n                item.pubDate = item.pubDate ?? timezone(/[年日月]/.test(pubDate) ? parseDate(pubDate, ['YYYY年M月D日 HH:mm', 'M月D日 HH:mm']) : parseRelativeDate(pubDate), +8);\r\n                item.upvotes = content('#like_count').text() ? Number.parseInt(content('#like_count').text(), 10) : 0;\r\n                item.comments = Number.parseInt(content('div.right-infos a').first().text(), 10) || 0;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const title = $('title').text().split(/\\s-/)[0];\r\n    const icon = $('link[rel=\"apple-touch-icon\"]').last().prop('href');\r\n\r\n    return {\r\n        item: items,\r\n        title: isHot ? title.replace(/[^|]+/, '最热 ') : title,\r\n        link: currentUrl,\r\n        description: $('meta[name=\"description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        image: $('h3.logo a img').prop('src'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('meta[name=\"keywords\"]').prop('content'),\r\n        author: $('h3.logo a img').prop('alt'),\r\n    };\r\n}\r\n"],"mappings":"ibAOA,MAAaA,EAAe,CACxB,KAAM,gBACN,KAAM,UACN,YAAa,GACb,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,SAAS,SAAY,EAAI,IAAI,QAC/B,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAQ,IAAW,MAEnB,EAAU,4BACV,EAAa,IAAI,IAAI,EAAQ,QAAU,EAAQ,GAAS,KAExD,CAAE,KAAM,GAAa,MAAMC,EAAI,GAE/B,EAAI,EAAK,GAEX,EAAQ,EACN,EAAE,kBACG,MAAM,EAAG,GACT,UACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,KAAK,kBAAkB,OACnC,KAAM,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,QAGtD,EAAE,mBACG,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAI,EAAK,KAAK,aAEd,EAAU,EACX,KAAK,oBACL,OACA,OACA,MAAM,UACN,MAEL,MAAO,CACH,MAAO,EAAE,OACT,KAAM,IAAI,IAAI,EAAE,KAAK,QAAS,GAAS,KACvC,YAAa,EAAK,KAAK,aAAa,OACpC,OAAQ,EAAK,KAAK,sBAAsB,OAAO,OAC/C,QAAS,EAAS,QAAQ,KAAK,GAAW,EAAU,EAAS,CAAC,kBAAmB,eAAiB,EAAkB,GAAU,MAIhJ,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAMD,EAAI,EAAK,MAE1C,EAAU,EAAK,GAEf,EAAU,EAAQ,oBACnB,OACA,OACA,MAAM,UACN,MAaL,MAXA,GAAK,MAAQ,EAAQ,MAAM,QAAU,EAAK,MAC1C,EAAK,YAAc,EAAQ,oBAAoB,QAAU,EAAK,YAC9D,EAAK,OAAS,EAAQ,sBAAsB,OAAO,QAAU,EAAK,OAClE,EAAK,SAAW,EAAQ,qBACnB,MAAM,GACN,UACA,IAAK,GAAM,EAAQ,GAAG,OAAO,QAAQ,IAAK,KAC/C,EAAK,QAAU,EAAK,SAAW,EAAS,QAAQ,KAAK,GAAW,EAAU,EAAS,CAAC,kBAAmB,eAAiB,EAAkB,GAAU,GACpJ,EAAK,QAAU,EAAQ,eAAe,OAAS,OAAO,SAAS,EAAQ,eAAe,OAAQ,IAAM,EACpG,EAAK,SAAW,OAAO,SAAS,EAAQ,qBAAqB,QAAQ,OAAQ,KAAO,EAE7E,MAKnB,IAAM,EAAQ,EAAE,SAAS,OAAO,MAAM,OAAO,GACvC,EAAO,EAAE,gCAAgC,OAAO,KAAK,QAE3D,MAAO,CACH,KAAM,EACN,MAAO,EAAQ,EAAM,QAAQ,QAAS,OAAS,EAC/C,KAAM,EACN,YAAa,EAAE,4BAA4B,KAAK,WAChD,SAAU,EAAE,QAAQ,KAAK,QACzB,MAAO,EAAE,iBAAiB,KAAK,OAC/B,OACA,KAAM,EACN,SAAU,EAAE,yBAAyB,KAAK,WAC1C,OAAQ,EAAE,iBAAiB,KAAK"}