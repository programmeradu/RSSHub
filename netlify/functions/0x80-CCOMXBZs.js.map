{"version":3,"file":"0x80-CCOMXBZs.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/0x80/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/blog',\r\n    categories: ['blog'],\r\n    example: '/0x80/blog',\r\n    url: '0x80.pl/notesen.html',\r\n    name: 'Articles',\r\n    maintainers: ['xnum'],\r\n    handler,\r\n};\r\n\r\nfunction extractDateFromURL(url: string) {\r\n    const regex = /\\d{4}-\\d{2}-\\d{2}/;\r\n    const match = url.match(regex);\r\n\r\n    return match ? match[0] : null;\r\n}\r\n\r\nasync function handler() {\r\n    // The TLS cert is invalid, we are limited to use HTTP unfortunately.\r\n    const baseUrl = 'http://0x80.pl/';\r\n    const targetUrl = `${baseUrl}notesen.html`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: targetUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    const alist = $('a.reference.external');\r\n\r\n    const list = alist\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const link = item.attr('href') || '';\r\n            const title = item.text() || '';\r\n            const pubDate = extractDateFromURL(link);\r\n\r\n            return {\r\n                title,\r\n                link,\r\n                pubDate,\r\n                category: 'Uncategoried',\r\n            };\r\n        })\r\n        .filter((item) => item.link.startsWith('notesen'));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const articleUrl = `${baseUrl}${item.link}`;\r\n                const response = await got({\r\n                    method: 'get',\r\n                    url: articleUrl,\r\n                });\r\n\r\n                const $ = load(response.data);\r\n\r\n                const author = $('tr.author.field td.field-body').text();\r\n                const articlePubDate = $('tr.added-on.field td.field-body').text();\r\n\r\n                item.author = author;\r\n                // Some articles might be missing the added-on field.\r\n                // As a safeguard, if the date from url is null, fallbacks to the article one.\r\n                item.pubDate = parseDate(item.pubDate || articlePubDate);\r\n                item.description = $('div.document').first().html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: '0x80.pl articles',\r\n        link: targetUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAOA,MAAaA,EAAe,CACxB,KAAM,QACN,WAAY,CAAC,QACb,QAAS,aACT,IAAK,uBACL,KAAM,WACN,YAAa,CAAC,QACd,WAGJ,SAAS,EAAmB,EAAa,CACrC,IAAM,EAAQ,oBACR,EAAQ,EAAI,MAAM,GAExB,OAAO,EAAQ,EAAM,GAAK,KAG9B,eAAe,GAAU,CAErB,IAAM,EAAU,kBACV,EAAY,GAAG,EAAQ,cAEvB,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAElB,EAAQ,EAAE,wBAEV,EAAO,EACR,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAO,EAAK,KAAK,SAAW,GAC5B,EAAQ,EAAK,QAAU,GACvB,EAAU,EAAmB,GAEnC,MAAO,CACH,QACA,OACA,UACA,SAAU,kBAGjB,OAAQ,GAAS,EAAK,KAAK,WAAW,YAErC,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAa,GAAG,IAAU,EAAK,OAC/BC,EAAW,MAAMF,EAAI,CACvB,OAAQ,MACR,IAAK,IAGHG,EAAI,EAAKD,EAAS,MAElB,EAASC,EAAE,iCAAiC,OAC5C,EAAiBA,EAAE,mCAAmC,OAQ5D,MANA,GAAK,OAAS,EAGd,EAAK,QAAU,EAAU,EAAK,SAAW,GACzC,EAAK,YAAcA,EAAE,gBAAgB,QAAQ,OAEtC,MAKnB,MAAO,CACH,MAAO,mBACP,KAAM,EACN,KAAM"}