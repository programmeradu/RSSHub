{"version":3,"file":"blog-DP1YgYXe.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/harvard/health/blog.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/health/blog',\r\n    categories: ['new-media'],\r\n    example: '/harvard/health/blog',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.health.harvard.edu/blog'],\r\n        },\r\n    ],\r\n    name: 'Health Blog',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    url: 'www.health.harvard.edu/blog',\r\n};\r\n\r\nasync function handler() {\r\n    const rootUrl = 'https://www.health.harvard.edu';\r\n    const currentUrl = `${rootUrl}/blog`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    const list = $(String.raw`.lg\\:text-2xl`)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item).parent();\r\n\r\n            return {\r\n                title: item.text(),\r\n                link: item.attr('href'),\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n                const content = load(detailResponse.data);\r\n\r\n                const ldJson = JSON.parse(content('script[type=\"application/ld+json\"]').text())['@graph'].find((i) => i['@type'] === 'Article');\r\n\r\n                item.description = content('.content-repository-content').html();\r\n                item.pubDate = parseDate(ldJson.datePublished);\r\n                item.author = ldJson.author.name;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Harvard Health Blog',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAaA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,aACb,QAAS,uBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,iCAGjB,KAAM,cACN,YAAa,CAAC,WACd,UACA,IAAK,+BAGT,eAAe,GAAU,CACrB,IACM,EAAa,sCAEb,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAElB,EAAO,EAAE,OAAO,GAAG,iBACpB,UACA,IAAK,IACF,EAAO,EAAE,GAAM,SAER,CACH,MAAO,EAAK,OACZ,KAAM,EAAK,KAAK,WAItB,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAER,EAAU,EAAK,EAAe,MAE9B,EAAS,KAAK,MAAM,EAAQ,sCAAsC,QAAQ,UAAU,KAAM,GAAM,EAAE,WAAa,WAMrH,MAJA,GAAK,YAAc,EAAQ,+BAA+B,OAC1D,EAAK,QAAU,EAAU,EAAO,eAChC,EAAK,OAAS,EAAO,OAAO,KAErB,MAKnB,MAAO,CACH,MAAO,sBACP,KAAM,EACN,KAAM"}