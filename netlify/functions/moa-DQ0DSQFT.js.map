{"version":3,"file":"moa-DQ0DSQFT.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/gov/moa/moa.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseRelativeDate } from '@/utils/parse-date';\r\n\r\nconst hostUrl = 'http://www.moa.gov.cn/';\r\nconst hostUrlObj = new URL(hostUrl); // 用于在下面判断 host\r\n\r\nexport const route: Route = {\r\n    path: '/moa/suburl/:suburl{.+}',\r\n    categories: ['government'],\r\n    example: '/gov/moa/suburl/gk/zcjd/',\r\n    radar: [\r\n        {\r\n            source: ['moa.gov.cn/'],\r\n            target: '/moa/suburl/:suburl',\r\n        },\r\n    ],\r\n    parameters: { suburl: '下级目录，请使用最下级的目录' },\r\n    name: '中华人民共和国农业农村部 - 新闻',\r\n    maintainers: ['Origami404', 'lyqluis'],\r\n    handler,\r\n    url: 'moa.gov.cn/',\r\n    description: `更多例子：\r\n  -   \\`农业农村部动态\\`的网页链接是\\`http://www.moa.gov.cn/xw/zwdt/\\`, 对应的\\`suburl\\`是\\`xw/zwdt\\`\r\n  -   \\`财务公开\\`的网页链接是\\`http://www.moa.gov.cn/gk/cwgk_1/\\`, 对应的\\`suburl\\`是\\`gk/cwgk_1\\`\r\n  -   像[政策法规](http://www.moa.gov.cn/gk/zcfg/)这种页面(\\`http://www.moa.gov.cn/gk/zcfg/\\`), 它**不是**一个合法的分类目录，它是\\`法律\\`, \\`行政法规\\`, \\`部门规章\\`等一堆栏目的集合，这时候请点开对应栏目的\\`更多 >>\\`进入栏目的最下级目录，再根据上面的规则提取\\`suburl\\`\r\n  -   特别地，\\`图片新闻\\`对应的\\`suburl\\`为\\`xw/tpxw/\\`, \\`最新公开\\`对应的\\`suburl\\`为\\`govpublic\\`, \\`数据>最新发布\\`对应的\\`suburl\\`为\\`sj/zxfb\\``,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const rawSuburl = ctx.req.param('suburl');\r\n    const suburl = rawSuburl.slice(-1) === '/' ? rawSuburl : rawSuburl + '/';\r\n    // 特殊处理两个，其他的栏目都可以找到那种一个列表下去的目录\r\n    if (suburl === 'xw/tpxw/') {\r\n        // 图片新闻\r\n        return await dealChannel(suburl, {\r\n            channelTitleSelector: '.pub-media2-head',\r\n            listSelector: '.tupian_list li',\r\n            titleSelector: 'a[class=\"block w_fill ellipsis adc ahc\"]',\r\n            dateSelector: 'span',\r\n        });\r\n    } else if (suburl.startsWith('sj/zxfb')) {\r\n        // 数据 - 最新发布\r\n        return await dealLatestDataChannel();\r\n    } else if (suburl.startsWith('gk')) {\r\n        // 公开\r\n        return await dealChannel(suburl, {\r\n            channelTitleSelector: 'title',\r\n            listSelector: '.commonlist li',\r\n            titleSelector: 'a',\r\n            dateSelector: 'span',\r\n        });\r\n    } else if (suburl.startsWith('govpublic')) {\r\n        // 最新公开\r\n        return await dealChannel('govpublic/1/index.htm', {\r\n            channelTitleText: '最新公开',\r\n            listSelector: '.commonlist li',\r\n            titleSelector: 'a',\r\n            dateSelector: 'span',\r\n        });\r\n    } else {\r\n        return await dealChannel(suburl, {\r\n            channelTitleSelector: '.pub-media1-head-title',\r\n            listSelector: '.ztlb',\r\n            titleSelector: 'a',\r\n            dateSelector: 'span',\r\n        });\r\n    }\r\n}\r\n\r\n// 处理文章列表，从那里获得一堆要爬取的页面，然后爬取\r\nasync function dealChannel(suburl, selectors) {\r\n    const { channelTitleSelector, listSelector, titleSelector, dateSelector, channelTitleText } = selectors;\r\n\r\n    // 为了与下面解析相对链接的 dealLink 配合，这里末尾必须保证有一条斜杠\r\n    const url = suburl.startsWith('http') ? suburl : hostUrl + suburl;\r\n    const response = await got.get(url);\r\n    const $ = load(response.data);\r\n\r\n    const channelTitle = channelTitleText ?? $(channelTitleSelector).text();\r\n\r\n    const pageInfos = $(listSelector)\r\n        .toArray()\r\n        .map((e) => {\r\n            const element = $(e);\r\n            const titleElement = element.find(titleSelector);\r\n\r\n            const title = titleElement.text();\r\n            const [link, pageType] = dealLink(titleElement, url);\r\n            const dateraw = element.find(dateSelector).text().trim();\r\n\r\n            return {\r\n                pageType,\r\n                title,\r\n                link,\r\n                // 先在这里获取一个精确到日的时间\r\n                // 如果是正常文章的话可以在那里提取更精确的时间\r\n                // 如果是公示文章或者站外文章的话只能用这个保底了\r\n                pubDate: parseRelativeDate(dateraw),\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        pageInfos.map(async (item) => {\r\n            const link = item.link;\r\n\r\n            const cacheIn = await cache.get(link);\r\n            if (cacheIn) {\r\n                return JSON.parse(cacheIn);\r\n            }\r\n\r\n            if (item.pageType === 'normal') {\r\n                // 正常文章\r\n                item = await dealNormalPage(link, item);\r\n            } else if (item.pageType === 'govpublic') {\r\n                // 公示文章\r\n                item = await dealGovpublicPage(link, item);\r\n            } else {\r\n                // 外部文章\r\n                item.description = `外部链接：${item.link}`;\r\n            }\r\n\r\n            cache.set(link, JSON.stringify(item));\r\n            return item;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: `中华人民共和国农业农村部 - ${channelTitle}`,\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n\r\n// 处理正常文章，例子：http://www.moa.gov.cn/xw/zwdt/202309/t20230915_6436615.htm\r\nasync function dealNormalPage(link, item) {\r\n    const response = await got.get(link);\r\n    const $ = load(response.data);\r\n\r\n    // 互动-直播访谈\r\n    if (link.includes('zbft')) {\r\n        const pageHeader = $('.nybzb').html() ?? '';\r\n        const pics = $('.tpsl').html() ?? '';\r\n        const content = $('.wzsl').html() ?? '';\r\n\r\n        item.description = pageHeader + pics + content;\r\n        return item;\r\n    }\r\n\r\n    // normal news\r\n    const metaElements = $('.bjjMAuthorBox span.dc_2').toArray();\r\n\r\n    // 政府网站变动不频繁，写死第几个应该没有多大关系\r\n    const author = $(metaElements[1]).text();\r\n    const source = $(metaElements[2]).text();\r\n    item.author = `${author} ${source}`;\r\n\r\n    // 对于这个网站内的链接，能提供更精确的时间\r\n    // 这个的日期跟时间之间的空格数量好像会乱变的\r\n    const exactTime = $(metaElements[0]).text();\r\n    const dateMatch = /\\d{4}-\\d{2}-\\d{2}/.exec(exactTime);\r\n    const timeMatch = /\\d{2}:\\d{2}/.exec(exactTime);\r\n    item.pubDate = parseRelativeDate(`${dateMatch[0]} ${timeMatch[0]}`);\r\n\r\n    item.description = $('.arc_body').html();\r\n\r\n    return item;\r\n}\r\n\r\n// 处理那种带索引号的公示文章，例子：http://www.moa.gov.cn/gk/zcjd/202402/t20240219_6448654.htm\r\nasync function dealGovpublicPage(link, item) {\r\n    if (item.link.endsWith('.pdf')) {\r\n        return item;\r\n    }\r\n    const response = await got.get(link);\r\n    const $ = load(response.data);\r\n\r\n    const body = $('.gsj_htmlcon_bot');\r\n    const [, year, month, date] = $('.pubtime')\r\n        .text()\r\n        .match(/：(\\d{4})[|年-](\\d{1,2})[|月-](\\d{1,2})日?/);\r\n    const [, author] = $('.pubtime.source')\r\n        ?.text()\r\n        ?.match(/：(.+)/) ?? [null, ''];\r\n\r\n    if (year && month && date) {\r\n        item.pubDate = `${year}-${month}-${date}`;\r\n    }\r\n    item.author = author;\r\n    item.description = body.html();\r\n    return item;\r\n}\r\n\r\nasync function dealLatestDataChannel() {\r\n    const res = await got({\r\n        url: 'http://zdscxx.moa.gov.cn:8080/nyb/getMessages',\r\n        method: 'post',\r\n        json: {\r\n            page: 1,\r\n            rows: 20,\r\n            type: '最新发布',\r\n            isLatestMessage: true,\r\n        },\r\n    });\r\n    const items = await Promise.all(\r\n        res.data.result.table.map((item) => {\r\n            const { date, id } = item;\r\n            item.pubDate = date;\r\n            const link = (item.link = `http://zdscxx.moa.gov.cn:8080/nyb/pc/messageView.jsp?id=${id}`);\r\n\r\n            return cache.tryGet(link, async () => {\r\n                const { content, source } = await getLatestDataArticleDetail(id);\r\n\r\n                item.description = content;\r\n                item.author = source;\r\n\r\n                return item;\r\n            });\r\n        })\r\n    );\r\n    return {\r\n        title: `中华人民共和国农业农村部 - 数据 - 最新发布`,\r\n        link: 'http://zdscxx.moa.gov.cn:8080/nyb/pc/messageList.jsp',\r\n        item: items,\r\n    };\r\n}\r\n\r\nasync function getLatestDataArticleDetail(id) {\r\n    const res = await got({\r\n        url: 'http://zdscxx.moa.gov.cn:8080/nyb/getMessagesById',\r\n        method: 'post',\r\n        form: {\r\n            id,\r\n        },\r\n    });\r\n    return res.data.result;\r\n}\r\n\r\n// 处理相对 url 和 按链接对文章类型进行分类\r\nfunction dealLink(element, url) {\r\n    const rawLink = element.attr('href');\r\n    const { host, href } = new URL(rawLink, url);\r\n\r\n    // host 不同的是外部文章，outside\r\n    // url 里带 govpublic 的都是公示文章，govpublic\r\n    // 其他的都算普通文章，normal\r\n    let pageType = null;\r\n    if (host === hostUrlObj.host) {\r\n        pageType = href.includes('gk') || href.includes('govpublic') ? 'govpublic' : 'normal';\r\n    } else {\r\n        pageType = 'outside';\r\n    }\r\n\r\n    return [href, pageType];\r\n}\r\n"],"mappings":"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"}