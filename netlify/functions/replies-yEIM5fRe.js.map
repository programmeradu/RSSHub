{"version":3,"file":"replies-yEIM5fRe.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/douban/other/replies.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/replies/:uid',\r\n    categories: ['social-media'],\r\n    example: '/douban/replies/xiaoyaxiaoya',\r\n    parameters: { uid: '用户id，可在用户日记页 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: '日记最新回应',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const currentUrl = `https://www.douban.com/people/${ctx.req.param('uid')}/notes`;\r\n    const response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n    const list = $('div.recent-replies-mod ul.comment-list li')\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n            const p = item.find('p');\r\n            const match = p\r\n                .find('a')\r\n                .attr('href')\r\n                .match(/%2Fnote%2F(.*?)%2F%23(.*?)&type=note/);\r\n            const nid = match[1];\r\n            const cid = match[2];\r\n            p.remove();\r\n            return {\r\n                link: `https://www.douban.com/note/${nid}/#${cid}`,\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                });\r\n\r\n                const comments = JSON.parse(detailResponse.data.match(/'comments':(.*)}],/)[1] + '}]');\r\n\r\n                for (const c of comments) {\r\n                    if (c.id === item.link.split('#')[1]) {\r\n                        return {\r\n                            link: item.link,\r\n                            title: `${c.author.name} 于 ${c.create_time} 的回应`,\r\n                            pubDate: new Date(c.create_time + ' GMT+8').toUTCString(),\r\n                            description: c.text,\r\n                            author: c.author.name,\r\n                        };\r\n                    } else if (c.replies.length > 0) {\r\n                        comments.push(...c.replies);\r\n                    }\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: $('title').text() + ' - 最新回应',\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"mTAKA,MAAaA,EAAe,CACxB,KAAM,gBACN,WAAY,CAAC,gBACb,QAAS,+BACT,WAAY,CAAE,IAAK,wBACnB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,SACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAa,iCAAiC,EAAI,IAAI,MAAM,OAAO,QACnE,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,IAAK,IAGH,EAAI,EAAK,EAAS,MAClB,EAAO,EAAE,6CACV,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GACT,IAAM,EAAI,EAAK,KAAK,KACd,EAAQ,EACT,KAAK,KACL,KAAK,QACL,MAAM,wCACL,EAAM,EAAM,GACZ,EAAM,EAAM,GAElB,OADA,EAAE,SACK,CACH,KAAM,+BAA+B,EAAI,IAAI,OAInD,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,OAGR,EAAW,KAAK,MAAM,EAAe,KAAK,MAAM,sBAAsB,GAAK,MAEjF,IAAK,IAAM,KAAK,EACZ,GAAI,EAAE,KAAO,EAAK,KAAK,MAAM,KAAK,GAC9B,MAAO,CACH,KAAM,EAAK,KACX,MAAO,GAAG,EAAE,OAAO,KAAK,KAAK,EAAE,YAAY,MAC3C,QAAS,IAAI,KAAK,EAAE,YAAc,UAAU,cAC5C,YAAa,EAAE,KACf,OAAQ,EAAE,OAAO,WAEd,EAAE,QAAQ,OAAS,GAC1B,EAAS,KAAK,GAAG,EAAE,aAOvC,MAAO,CACH,MAAO,EAAE,SAAS,OAAS,UAC3B,KAAM,EACN,KAAM"}