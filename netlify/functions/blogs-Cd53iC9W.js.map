{"version":3,"file":"blogs-Cd53iC9W.js","names":["route: Route","searchParams: {\r\n        per_page: number;\r\n        _embed: number;\r\n        _fields: string;\r\n        categories_exclude?: string;\r\n        categories?: number;\r\n    }","got"],"sources":["../../lib/routes/geocaching/blogs.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/blogs/:language?',\r\n    categories: ['blog'],\r\n    example: '/geocaching/blogs/en',\r\n    parameters: {\r\n        language: {\r\n            description: 'language',\r\n            default: 'en',\r\n            options: [\r\n                { value: 'en', label: 'English' },\r\n                { value: 'de', label: 'Deutsch' },\r\n                { value: 'fr', label: 'Français' },\r\n                { value: 'es', label: 'Español' },\r\n                { value: 'nl', label: 'Nederlands' },\r\n                { value: 'cs', label: 'Čeština' },\r\n                { value: 'all', label: 'Not Specified' },\r\n            ],\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['geocaching.com/blog/', 'geocaching.com/'],\r\n        },\r\n    ],\r\n    name: 'Official Blogs',\r\n    maintainers: ['HankChow', 'Konano'],\r\n    handler,\r\n    url: 'geocaching.com/blog/',\r\n};\r\n\r\nconst languageToCategory = { de: 140, fr: 138, es: 702, nl: 737, cs: 1404 };\r\nconst languageToLabel = { de: 'Deutsch', fr: 'Français', es: 'Español', nl: 'Nederlands', cs: 'Čeština' };\r\n\r\nasync function handler(ctx) {\r\n    const baseUrl = 'https://www.geocaching.com';\r\n    const language = ctx.req.param('language') ?? 'en';\r\n    const searchParams: {\r\n        per_page: number;\r\n        _embed: number;\r\n        _fields: string;\r\n        categories_exclude?: string;\r\n        categories?: number;\r\n    } = {\r\n        per_page: ctx.req.query('limit') ?? 20,\r\n        _embed: 1,\r\n        _fields: ['id', 'title', 'link', 'guid', 'content', 'date_gmt', 'modified_gmt', '_embedded', '_links'].join(','),\r\n    };\r\n\r\n    if (language === 'en') {\r\n        searchParams.categories_exclude = Object.values(languageToCategory).join(',');\r\n    } else if (language in languageToCategory) {\r\n        searchParams.categories = languageToCategory[language];\r\n    } else if (language === 'all') {\r\n        // do nothing\r\n    } else {\r\n        throw new Error(`Unsupported language: ${language}`);\r\n    }\r\n\r\n    // console.log(searchParams);\r\n\r\n    const { data: response } = await got(`${baseUrl}/blog/wp-json/wp/v2/posts`, { searchParams });\r\n    const items = response.map((item) => {\r\n        const media = item._embedded['wp:featuredmedia'][0];\r\n        const mediaDetails = media?.media_details;\r\n        const mediaSize = mediaDetails?.sizes.large || mediaDetails?.sizes.full;\r\n        return {\r\n            title: item.title.rendered.trim(),\r\n            link: item.link,\r\n            guid: item.guid.rendered,\r\n            description: item.content.rendered,\r\n            pubDate: parseDate(item.date_gmt),\r\n            updated: parseDate(item.modified_gmt),\r\n            author: item._embedded.author[0].name,\r\n            category: item._embedded['wp:term'][0].map((category) => category.name.trim()),\r\n            media: mediaSize\r\n                ? {\r\n                      content: {\r\n                          url: media.source_url,\r\n                          type: media.mime_type,\r\n                          height: mediaDetails.height,\r\n                          width: mediaDetails.width,\r\n                          fileSize: mediaDetails.filesize,\r\n                      },\r\n                      thumbnail: {\r\n                          url: mediaSize.source_url,\r\n                          height: mediaSize.height,\r\n                          width: mediaSize.width,\r\n                      },\r\n                  }\r\n                : undefined,\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: language in languageToLabel ? `Geocaching Blog - ${languageToLabel[language]}` : 'Geocaching Blog',\r\n        link: `${baseUrl}/blog/`,\r\n        language: language in languageToCategory ? language : 'en',\r\n        image: 'https://i.ytimg.com/vi_webp/G28VxvBoSLQ/maxresdefault.webp',\r\n        icon: `${baseUrl}/blog/favicon.ico`,\r\n        logo: `${baseUrl}/blog/favicon.ico`,\r\n        description: 'Geocaching Official Blog',\r\n        item: items,\r\n        allowEmpty: true,\r\n    };\r\n}\r\n"],"mappings":"qRAIA,MAAaA,EAAe,CACxB,KAAM,oBACN,WAAY,CAAC,QACb,QAAS,uBACT,WAAY,CACR,SAAU,CACN,YAAa,WACb,QAAS,KACT,QAAS,CACL,CAAE,MAAO,KAAM,MAAO,WACtB,CAAE,MAAO,KAAM,MAAO,WACtB,CAAE,MAAO,KAAM,MAAO,YACtB,CAAE,MAAO,KAAM,MAAO,WACtB,CAAE,MAAO,KAAM,MAAO,cACtB,CAAE,MAAO,KAAM,MAAO,WACtB,CAAE,MAAO,MAAO,MAAO,oBAInC,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,uBAAwB,qBAGzC,KAAM,iBACN,YAAa,CAAC,WAAY,UAC1B,UACA,IAAK,wBAGH,EAAqB,CAAE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAC/D,EAAkB,CAAE,GAAI,UAAW,GAAI,WAAY,GAAI,UAAW,GAAI,aAAc,GAAI,WAE9F,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAU,6BACV,EAAW,EAAI,IAAI,MAAM,aAAe,KACxCC,EAMF,CACA,SAAU,EAAI,IAAI,MAAM,UAAY,GACpC,OAAQ,EACR,QAAS,CAAC,KAAM,QAAS,OAAQ,OAAQ,UAAW,WAAY,eAAgB,YAAa,UAAU,KAAK,MAGhH,GAAI,IAAa,KACb,EAAa,mBAAqB,OAAO,OAAO,GAAoB,KAAK,aAClE,KAAY,EACnB,EAAa,WAAa,EAAmB,WACtC,IAAa,MAGpB,MAAU,MAAM,yBAAyB,KAK7C,GAAM,CAAE,KAAM,GAAa,MAAMC,EAAI,GAAG,EAAQ,2BAA4B,CAAE,iBACxE,EAAQ,EAAS,IAAK,GAAS,CACjC,IAAM,EAAQ,EAAK,UAAU,oBAAoB,GAC3C,EAAe,GAAO,cACtB,EAAY,GAAc,MAAM,OAAS,GAAc,MAAM,KACnE,MAAO,CACH,MAAO,EAAK,MAAM,SAAS,OAC3B,KAAM,EAAK,KACX,KAAM,EAAK,KAAK,SAChB,YAAa,EAAK,QAAQ,SAC1B,QAAS,EAAU,EAAK,UACxB,QAAS,EAAU,EAAK,cACxB,OAAQ,EAAK,UAAU,OAAO,GAAG,KACjC,SAAU,EAAK,UAAU,WAAW,GAAG,IAAK,GAAa,EAAS,KAAK,QACvE,MAAO,EACD,CACI,QAAS,CACL,IAAK,EAAM,WACX,KAAM,EAAM,UACZ,OAAQ,EAAa,OACrB,MAAO,EAAa,MACpB,SAAU,EAAa,UAE3B,UAAW,CACP,IAAK,EAAU,WACf,OAAQ,EAAU,OAClB,MAAO,EAAU,QAGzB,IAAA,MAId,MAAO,CACH,MAAO,KAAY,EAAkB,qBAAqB,EAAgB,KAAc,kBACxF,KAAM,GAAG,EAAQ,QACjB,SAAU,KAAY,EAAqB,EAAW,KACtD,MAAO,6DACP,KAAM,GAAG,EAAQ,mBACjB,KAAM,GAAG,EAAQ,mBACjB,YAAa,2BACb,KAAM,EACN,WAAY"}