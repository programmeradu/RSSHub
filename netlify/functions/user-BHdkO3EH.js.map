{"version":3,"file":"user-BHdkO3EH.js","names":["route: Route","got","cache"],"sources":["../../lib/routes/sciencenet/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport iconv from 'iconv-lite';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:id',\r\n    categories: ['new-media'],\r\n    example: '/sciencenet/user/tony8310',\r\n    parameters: { id: '用户 id，可在对用户博客页 URL 中找到' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['blog.sciencenet.cn/u/:id', 'blog.sciencenet.cn/'],\r\n        },\r\n    ],\r\n    name: '用户博客',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 50;\r\n\r\n    const rootUrl = 'https://blog.sciencenet.cn';\r\n    const currentUrl = `${rootUrl}/u/${id}`;\r\n\r\n    let response = await got({\r\n        method: 'get',\r\n        url: currentUrl,\r\n        responseType: 'buffer',\r\n    });\r\n\r\n    let $ = load(iconv.decode(response.data, 'gbk'));\r\n\r\n    response = await got({\r\n        method: 'get',\r\n        url: $('.xg1 a').eq(1).attr('href'),\r\n    });\r\n\r\n    $ = load(response.data);\r\n\r\n    let items = $('item')\r\n        .slice(-limit)\r\n        .toArray()\r\n        .toReversed()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            return {\r\n                title: item.find('title').text(),\r\n                link: item.find('guid').text(),\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const detailResponse = await got({\r\n                    method: 'get',\r\n                    url: item.link,\r\n                    responseType: 'buffer',\r\n                });\r\n\r\n                const content = load(iconv.decode(detailResponse.data, 'gbk'));\r\n\r\n                item.author = content('.xs2').text();\r\n                item.description = content('#blog_article').html();\r\n                item.pubDate = timezone(parseDate(content('.xg1').eq(5).text()), +8);\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `科学网 - ${items[0].author}的博文`,\r\n        link: currentUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"obAQA,MAAaA,EAAe,CACxB,KAAM,YACN,WAAY,CAAC,aACb,QAAS,4BACT,WAAY,CAAE,GAAI,0BAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BAA4B,yBAG7C,KAAM,OACN,YAAa,CAAC,WACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAG3E,EAAa,gCAAgB,IAE/B,EAAW,MAAMC,EAAI,CACrB,OAAQ,MACR,IAAK,EACL,aAAc,WAGd,EAAI,EAAK,EAAM,OAAO,EAAS,KAAM,QAEzC,EAAW,MAAMA,EAAI,CACjB,OAAQ,MACR,IAAK,EAAE,UAAU,GAAG,GAAG,KAAK,UAGhC,EAAI,EAAK,EAAS,MAElB,IAAI,EAAQ,EAAE,QACT,MAAM,CAAC,GACP,UACA,aACA,IAAK,IACF,EAAO,EAAE,GAEF,CACH,MAAO,EAAK,KAAK,SAAS,OAC1B,KAAM,EAAK,KAAK,QAAQ,UAwBpC,MApBA,GAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACPC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAM,EAAiB,MAAMD,EAAI,CAC7B,OAAQ,MACR,IAAK,EAAK,KACV,aAAc,WAGZ,EAAU,EAAK,EAAM,OAAO,EAAe,KAAM,QAMvD,MAJA,GAAK,OAAS,EAAQ,QAAQ,OAC9B,EAAK,YAAc,EAAQ,iBAAiB,OAC5C,EAAK,QAAU,EAAS,EAAU,EAAQ,QAAQ,GAAG,GAAG,QAAS,GAE1D,MAKZ,CACH,MAAO,SAAS,EAAM,GAAG,OAAO,KAChC,KAAM,EACN,KAAM"}