{"version":3,"file":"latest-44zh7t8g.js","names":["route: Route","ofetch","cache","response","$"],"sources":["../../lib/routes/vertikal/latest.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport * as cheerio from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\n\r\nexport const route: Route = {\r\n    path: '/latest',\r\n    categories: ['new-media'],\r\n    example: '/vertikal/latest',\r\n    radar: [\r\n        {\r\n            source: ['vertikal.net/en/news', 'vertikal.net'],\r\n        },\r\n    ],\r\n    name: 'News Archive',\r\n    maintainers: ['TonyRL'],\r\n    handler,\r\n    url: 'vertikal.net/en/news',\r\n};\r\n\r\nconst baseUrl = 'https://vertikal.net';\r\n\r\nasync function handler() {\r\n    const response = await ofetch(`${baseUrl}/en/homepage/async-news-loader`, {\r\n        query: {\r\n            perPage: 24,\r\n            page: 1,\r\n        },\r\n    });\r\n    const $ = cheerio.load(response);\r\n\r\n    const list = $('.grid__column')\r\n        .toArray()\r\n        .map((item) => {\r\n            const $item = $(item);\r\n            return {\r\n                title: $item.find('.news-teaser__title').text(),\r\n                link: `${baseUrl}${$item.find('.news-teaser').attr('href')}`,\r\n                pubDate: parseDate($item.find('.news-teaser__date').text(), 'DD.MM.YYYY'),\r\n                description: $item.find('.news-teaser__text').text(),\r\n            };\r\n        });\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await ofetch(item.link);\r\n                const $ = cheerio.load(response);\r\n\r\n                const content = $('.newsentry');\r\n\r\n                item.category = content\r\n                    .find('.newsentry__tags a')\r\n                    .toArray()\r\n                    .map((tag) => $(tag).text().trim());\r\n\r\n                content.find('.newsentry__date, .newsentry__title, .lazyimage-placeholder, .newsentry__tags, .newsentry__share, .newsentry__comments, .newsentry__write-comment').remove();\r\n\r\n                item.description = content.html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'News Archive | Vertikal.net',\r\n        link: `${baseUrl}/en/news`,\r\n        image: `${baseUrl}/apple-touch-icon-152x152.png`,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"8SAMA,MAAaA,EAAe,CACxB,KAAM,UACN,WAAY,CAAC,aACb,QAAS,mBACT,MAAO,CACH,CACI,OAAQ,CAAC,uBAAwB,kBAGzC,KAAM,eACN,YAAa,CAAC,UACd,UACA,IAAK,wBAGH,EAAU,uBAEhB,eAAe,GAAU,CACrB,IAAM,EAAW,MAAMC,EAAO,GAAG,EAAQ,gCAAiC,CACtE,MAAO,CACH,QAAS,GACT,KAAM,KAGR,EAAI,EAAQ,KAAK,GAEjB,EAAO,EAAE,iBACV,UACA,IAAK,GAAS,CACX,IAAM,EAAQ,EAAE,GAChB,MAAO,CACH,MAAO,EAAM,KAAK,uBAAuB,OACzC,KAAM,GAAG,IAAU,EAAM,KAAK,gBAAgB,KAAK,UACnD,QAAS,EAAU,EAAM,KAAK,sBAAsB,OAAQ,cAC5D,YAAa,EAAM,KAAK,sBAAsB,UAIpD,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAO,EAAK,MAC7BG,EAAI,EAAQ,KAAKD,GAEjB,EAAUC,EAAE,cAWlB,MATA,GAAK,SAAW,EACX,KAAK,sBACL,UACA,IAAK,GAAQA,EAAE,GAAK,OAAO,QAEhC,EAAQ,KAAK,qJAAqJ,SAElK,EAAK,YAAc,EAAQ,OAEpB,MAKnB,MAAO,CACH,MAAO,8BACP,KAAM,GAAG,EAAQ,UACjB,MAAO,GAAG,EAAQ,+BAClB,KAAM"}