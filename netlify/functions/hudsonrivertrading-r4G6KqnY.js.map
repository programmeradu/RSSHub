{"version":3,"file":"hudsonrivertrading-r4G6KqnY.js","names":["SECTION_LABELS: Record<string, string>","SECTION_CATEGORY_IDS: Record<string, number>","route: Route","categoriesQuery: { include?: number; exclude?: number[] } | undefined","InvalidParameterError","searchParams: string[]","ofetch"],"sources":["../../lib/routes/hudsonrivertrading/index.ts"],"sourcesContent":["import { Route, type Data } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\n\r\ntype WordpressPost = {\r\n    id: number;\r\n    date: string;\r\n    date_gmt?: string;\r\n    link: string;\r\n    title?: { rendered?: string };\r\n    excerpt?: { rendered?: string };\r\n    content?: { rendered?: string };\r\n    _embedded?: {\r\n        author?: Array<{ name?: string }>;\r\n        'wp:term'?: Array<Array<{ name?: string }>>;\r\n    };\r\n};\r\n\r\nconst ROOT_URL = 'https://www.hudsonrivertrading.com';\r\n\r\nconst SECTION_LABELS: Record<string, string> = {\r\n    algo: 'Algorithm',\r\n    engineers: 'Engineering',\r\n    interns: 'Intern Spotlight',\r\n    more: 'Hardware, Systems & More',\r\n};\r\n\r\n// Find the category IDs at https://www.hudsonrivertrading.com/wp-json/wp/v2/categories\r\nconst SECTION_CATEGORY_IDS: Record<string, number> = {\r\n    algo: 7,\r\n    engineers: 11,\r\n    interns: 16,\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/blog/:section?',\r\n    categories: ['blog'],\r\n    example: '/hudsonrivertrading/blog',\r\n    parameters: {\r\n        section: {\r\n            description: 'Optional section filter',\r\n            options: Object.entries(SECTION_LABELS).map(([value, label]) => ({ label, value })),\r\n        },\r\n    },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.hudsonrivertrading.com/hrtbeat/'],\r\n        },\r\n    ],\r\n    name: 'Tech Blog',\r\n    maintainers: ['johan456789'],\r\n    handler,\r\n    description: `HRT (Hudson River Trading) Tech Blog\r\n\r\n| Route | Section |\r\n| ----- | ------- |\r\n| /hudsonrivertrading/blog | All Posts |\r\n${Object.entries(SECTION_LABELS)\r\n    .map(([key, label]) => `| /hudsonrivertrading/blog/${key} | ${label} |`)\r\n    .join('\\n')}`,\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const sectionParam = (ctx.req.param('section') ?? '').toLowerCase();\r\n    const apiBase = `${ROOT_URL}/wp-json/wp/v2`;\r\n\r\n    // Build query using fixed category IDs\r\n    let categoriesQuery: { include?: number; exclude?: number[] } | undefined;\r\n    if (sectionParam) {\r\n        if (Object.hasOwn(SECTION_CATEGORY_IDS, sectionParam)) {\r\n            categoriesQuery = { include: SECTION_CATEGORY_IDS[sectionParam] };\r\n        } else if (sectionParam === 'more') {\r\n            categoriesQuery = { exclude: Object.values(SECTION_CATEGORY_IDS) };\r\n        } else {\r\n            throw new InvalidParameterError(`Invalid section: ${sectionParam}. Valid sections are: ${Object.keys(SECTION_LABELS).join(', ')}`);\r\n        }\r\n    }\r\n    // If sectionParam is empty/undefined, categoriesQuery remains undefined = all posts\r\n\r\n    const searchParams: string[] = ['per_page=20', '_embed=author,wp:term'];\r\n    if (categoriesQuery?.include) {\r\n        searchParams.push(`categories=${categoriesQuery.include}`);\r\n    }\r\n    if (categoriesQuery?.exclude?.length) {\r\n        searchParams.push(`categories_exclude=${categoriesQuery.exclude.join(',')}`);\r\n    }\r\n\r\n    const apiUrl = `${apiBase}/posts?${searchParams.join('&')}`;\r\n    const data = await ofetch<WordpressPost[]>(apiUrl);\r\n\r\n    const items = data.map((post) => ({\r\n        title: post.title?.rendered,\r\n        description: post.content?.rendered ?? post.excerpt?.rendered ?? '',\r\n        link: post.link,\r\n        pubDate: parseDate(post.date_gmt ?? post.date),\r\n        author: post._embedded?.author?.[0]?.name,\r\n        category: Array.isArray(post._embedded?.['wp:term'])\r\n            ? post._embedded['wp:term']\r\n                  .flat()\r\n                  .map((term: any) => term?.name)\r\n                  .filter(Boolean)\r\n            : undefined,\r\n    }));\r\n\r\n    const sectionLabel = sectionParam && SECTION_LABELS[sectionParam] ? ` - ${SECTION_LABELS[sectionParam]}` : '';\r\n\r\n    return {\r\n        title: `Hudson River Trading${sectionLabel}`,\r\n        link: `${ROOT_URL}/hrtbeat/#${sectionParam}`,\r\n        language: 'en',\r\n        item: items,\r\n    } as Data;\r\n}\r\n"],"mappings":"4SAmBA,MAAM,EAAW,qCAEXA,EAAyC,CAC3C,KAAM,YACN,UAAW,cACX,QAAS,mBACT,KAAM,4BAIJC,EAA+C,CACjD,KAAM,EACN,UAAW,GACX,QAAS,IAGAC,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,QACb,QAAS,2BACT,WAAY,CACR,QAAS,CACL,YAAa,0BACb,QAAS,OAAO,QAAQ,GAAgB,KAAK,CAAC,EAAO,MAAY,CAAE,QAAO,aAGlF,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,yCAGjB,KAAM,YACN,YAAa,CAAC,eACd,UACA,YAAa;;;;;EAKf,OAAO,QAAQ,GACZ,KAAK,CAAC,EAAK,KAAW,8BAA8B,EAAI,KAAK,EAAM,KACnE,KAAK;MAGV,eAAe,EAAQ,EAAoB,CACvC,IAAM,GAAgB,EAAI,IAAI,MAAM,YAAc,IAAI,cAChD,EAAU,GAAG,EAAS,gBAGxBC,EACJ,GAAI,EACA,GAAI,OAAO,OAAO,EAAsB,GACpC,EAAkB,CAAE,QAAS,EAAqB,YAC3C,IAAiB,OACxB,EAAkB,CAAE,QAAS,OAAO,OAAO,SAE3C,MAAM,IAAIC,EAAsB,oBAAoB,EAAa,wBAAwB,OAAO,KAAK,GAAgB,KAAK,SAKlI,IAAMC,EAAyB,CAAC,cAAe,yBAC3C,GAAiB,SACjB,EAAa,KAAK,cAAc,EAAgB,WAEhD,GAAiB,SAAS,QAC1B,EAAa,KAAK,sBAAsB,EAAgB,QAAQ,KAAK,QAGzE,IAAM,EAAS,GAAG,EAAQ,SAAS,EAAa,KAAK,OAC/C,EAAO,MAAMC,EAAwB,GAErC,EAAQ,EAAK,IAAK,IAAU,CAC9B,MAAO,EAAK,OAAO,SACnB,YAAa,EAAK,SAAS,UAAY,EAAK,SAAS,UAAY,GACjE,KAAM,EAAK,KACX,QAAS,EAAU,EAAK,UAAY,EAAK,MACzC,OAAQ,EAAK,WAAW,SAAS,IAAI,KACrC,SAAU,MAAM,QAAQ,EAAK,YAAY,YACnC,EAAK,UAAU,WACV,OACA,IAAK,GAAc,GAAM,MACzB,OAAO,SACZ,IAAA,MAGJ,EAAe,GAAgB,EAAe,GAAgB,MAAM,EAAe,KAAkB,GAE3G,MAAO,CACH,MAAO,uBAAuB,IAC9B,KAAM,GAAG,EAAS,YAAY,IAC9B,SAAU,KACV,KAAM"}