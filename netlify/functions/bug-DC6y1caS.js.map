{"version":3,"file":"bug-DC6y1caS.js","names":["InvalidParameterError","ofetch","$","route: Route"],"sources":["../../lib/routes/bugzilla/bug.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport { Context } from 'hono';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport { Data, DataItem, Route } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst INSTANCES = new Map([\r\n    ['apache', 'bz.apache.org/bugzilla'],\r\n    ['apache.ooo', 'bz.apache.org/ooo'], // Apache OpenOffice\r\n    ['apache.SpamAssassin', 'bz.apache.org/SpamAssassin'],\r\n    ['kernel', 'bugzilla.kernel.org'],\r\n    ['mozilla', 'bugzilla.mozilla.org'],\r\n    ['webkit', 'bugs.webkit.org'],\r\n]);\r\n\r\nasync function handler(ctx: Context): Promise<Data> {\r\n    const { site, bugId } = ctx.req.param();\r\n    if (!INSTANCES.has(site)) {\r\n        throw new InvalidParameterError(`unknown site: ${site}`);\r\n    }\r\n    const link = `https://${INSTANCES.get(site)}/show_bug.cgi?id=${bugId}`;\r\n    const $ = load(await ofetch(`${link}&ctype=xml`));\r\n    const items = $('long_desc').map((index, rawItem) => {\r\n        const $ = load(rawItem, null, false);\r\n        return {\r\n            title: `comment #${$('commentid').text()}`,\r\n            link: `${link}#c${index}`,\r\n            description: $('thetext').text(),\r\n            pubDate: parseDate($('bug_when').text()),\r\n            author: $('who').attr('name'),\r\n        } as DataItem;\r\n    });\r\n    return { title: $('short_desc').text(), link, item: items.toArray() };\r\n}\r\n\r\nfunction markdownFrom(instances: Map<string, string>, separator: string = ', '): string {\r\n    return [...instances.entries()].map(([k, v]) => `[\\`${k}\\`](https://${v})`).join(separator);\r\n}\r\n\r\nexport const route: Route = {\r\n    path: '/bug/:site/:bugId',\r\n    name: 'bugs',\r\n    maintainers: ['FranklinYu'],\r\n    handler,\r\n    example: '/bugzilla/bug/webkit/251528',\r\n    parameters: {\r\n        site: 'site identifier',\r\n        bugId: 'numeric identifier of the bug in the site',\r\n    },\r\n    description: `Supported site identifiers: ${markdownFrom(INSTANCES)}.`,\r\n    categories: ['programming'],\r\n\r\n    // Radar is infeasible, because it needs access to URL parameters.\r\n    zh: {\r\n        name: 'bugs',\r\n        description: `支持的站点标识符：${markdownFrom(INSTANCES, '、')}。`,\r\n    },\r\n};\r\n"],"mappings":"2UAOA,MAAM,EAAY,IAAI,IAAI,CACtB,CAAC,SAAU,0BACX,CAAC,aAAc,qBACf,CAAC,sBAAuB,8BACxB,CAAC,SAAU,uBACX,CAAC,UAAW,wBACZ,CAAC,SAAU,qBAGf,eAAe,EAAQ,EAA6B,CAChD,GAAM,CAAE,OAAM,SAAU,EAAI,IAAI,QAChC,GAAI,CAAC,EAAU,IAAI,GACf,MAAM,IAAIA,EAAsB,iBAAiB,KAErD,IAAM,EAAO,WAAW,EAAU,IAAI,GAAM,mBAAmB,IACzD,EAAI,EAAK,MAAMC,EAAO,GAAG,EAAK,cAC9B,EAAQ,EAAE,aAAa,KAAK,EAAO,IAAY,CACjD,IAAMC,EAAI,EAAK,EAAS,KAAM,IAC9B,MAAO,CACH,MAAO,YAAYA,EAAE,aAAa,SAClC,KAAM,GAAG,EAAK,IAAI,IAClB,YAAaA,EAAE,WAAW,OAC1B,QAAS,EAAUA,EAAE,YAAY,QACjC,OAAQA,EAAE,OAAO,KAAK,WAG9B,MAAO,CAAE,MAAO,EAAE,cAAc,OAAQ,OAAM,KAAM,EAAM,WAG9D,SAAS,EAAa,EAAgC,EAAoB,KAAc,CACpF,MAAO,CAAC,GAAG,EAAU,WAAW,KAAK,CAAC,EAAG,KAAO,MAAM,EAAE,cAAc,EAAE,IAAI,KAAK,GAGrF,MAAaC,EAAe,CACxB,KAAM,oBACN,KAAM,OACN,YAAa,CAAC,cACd,UACA,QAAS,8BACT,WAAY,CACR,KAAM,kBACN,MAAO,6CAEX,YAAa,+BAA+B,EAAa,GAAW,GACpE,WAAY,CAAC,eAGb,GAAI,CACA,KAAM,OACN,YAAa,YAAY,EAAa,EAAW,KAAK"}