{"version":3,"file":"citations-DyPwox13.js","names":["route: Route","got","$"],"sources":["../../lib/routes/google/citations.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\n\r\nexport const route: Route = {\r\n    path: '/citations/:id',\r\n    categories: ['journal'],\r\n    example: '/google/citations/mlmE4JMAAAAJ',\r\n    parameters: { id: 'N' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Scholar Author Citations',\r\n    maintainers: ['KellyHwong', 'const7'],\r\n    handler,\r\n    description: `The parameter id in the route is the id in the URL of the user's Google Scholar reference page, for example \\`https://scholar.google.com/citations?user=mlmE4JMAAAAJ\\` to \\`mlmE4JMAAAAJ\\`.\r\n\r\n  Query parameters are also supported here, for example \\`https://scholar.google.com/citations?user=mlmE4JMAAAAJ&sortby=pubdate\\` to \\`mlmE4JMAAAAJ&sortby=pubdate\\`. Please make sure that the user id (\\`mlmE4JMAAAAJ\\` in this case) should be the first parameter in the query string.`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const BASE_URL = `https://scholar.google.com`;\r\n    const url = `https://scholar.google.com/citations?user=${id}`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n    });\r\n\r\n    const $ = load(response.data);\r\n\r\n    const profile = $('#gsc_prf .gsc_prf_il').eq(0).text();\r\n    const homePage = $('#gsc_prf_ivh a').attr('href');\r\n    const name = $('#gsc_prf_in').text();\r\n    const description = `Google Scholar Citation Monitor: ${name}; Profile: ${profile}; HomePage: ${homePage}`;\r\n\r\n    const list = $('#gsc_a_b .gsc_a_tr').toArray();\r\n\r\n    const out = list.map((item) => {\r\n        const $ = load(item);\r\n\r\n        const itemUrl = BASE_URL + $('.gsc_a_t a').attr('href');\r\n\r\n        const author = $('.gsc_a_t div').eq(0).text();\r\n        const publication = $('.gsc_a_t div').eq(1).text();\r\n        return {\r\n            title: $('.gsc_a_t a').text(),\r\n            author,\r\n            description: `Author: ${author}; Publication: ${publication}`,\r\n            link: itemUrl,\r\n            guid: itemUrl,\r\n        };\r\n    });\r\n    return {\r\n        title: `Google Scholar: ${name}`,\r\n        link: url,\r\n        description,\r\n        item: out,\r\n    };\r\n}\r\n"],"mappings":"+PAIA,MAAaA,EAAe,CACxB,KAAM,iBACN,WAAY,CAAC,WACb,QAAS,iCACT,WAAY,CAAE,GAAI,KAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,2BACN,YAAa,CAAC,aAAc,UAC5B,UACA,YAAa,mdAKjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAM,6CAA6C,IAEnD,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,QAGE,EAAI,EAAK,EAAS,MAElB,EAAU,EAAE,wBAAwB,GAAG,GAAG,OAC1C,EAAW,EAAE,kBAAkB,KAAK,QACpC,EAAO,EAAE,eAAe,OACxB,EAAc,oCAAoC,EAAK,aAAa,EAAQ,cAAc,IAE1F,EAAO,EAAE,sBAAsB,UAE/B,EAAM,EAAK,IAAK,GAAS,CAC3B,IAAMC,EAAI,EAAK,GAET,EAAU,6BAAWA,EAAE,cAAc,KAAK,QAE1C,EAASA,EAAE,gBAAgB,GAAG,GAAG,OACjC,EAAcA,EAAE,gBAAgB,GAAG,GAAG,OAC5C,MAAO,CACH,MAAOA,EAAE,cAAc,OACvB,SACA,YAAa,WAAW,EAAO,iBAAiB,IAChD,KAAM,EACN,KAAM,KAGd,MAAO,CACH,MAAO,mBAAmB,IAC1B,KAAM,EACN,cACA,KAAM"}