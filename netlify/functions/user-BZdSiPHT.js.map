{"version":3,"file":"user-BZdSiPHT.js","names":["route: Route","InvalidParameterError","cache","puppeteer"],"sources":["../../lib/routes/douyin/user.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport { config } from '@/config';\r\nimport { fallback, queryToBoolean } from '@/utils/readable-social';\r\nimport { templates, resolveUrl, proxyVideo, getOriginAvatar } from './utils';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter';\r\nimport puppeteer from '@/utils/puppeteer';\r\nimport logger from '@/utils/logger';\r\nimport { PostData } from './types';\r\n\r\nexport const route: Route = {\r\n    path: '/user/:uid/:routeParams?',\r\n    categories: ['social-media'],\r\n    example: '/douyin/user/MS4wLjABAAAARcAHmmF9mAG3JEixq_CdP72APhBlGlLVbN-1eBcPqao',\r\n    parameters: { uid: 'uid，可在用户页面 URL 中找到', routeParams: '额外参数，query string 格式，请参阅上面的表格' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: true,\r\n        antiCrawler: true,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['douyin.com/user/:uid'],\r\n            target: '/user/:uid',\r\n        },\r\n    ],\r\n    name: '博主',\r\n    maintainers: ['Max-Tortoise', 'Rongronggg9'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const uid = ctx.req.param('uid');\r\n    if (!uid.startsWith('MS4wLjABAAAA')) {\r\n        throw new InvalidParameterError('Invalid UID. UID should start with <b>MS4wLjABAAAA</b>.');\r\n    }\r\n    const routeParams = Object.fromEntries(new URLSearchParams(ctx.req.param('routeParams')));\r\n    const embed = fallback(undefined, queryToBoolean(routeParams.embed), false); // embed video\r\n    const iframe = fallback(undefined, queryToBoolean(routeParams.iframe), false); // embed video in iframe\r\n    const relay = resolveUrl(routeParams.relay, true, true); // embed video behind a reverse proxy\r\n\r\n    const pageUrl = `https://www.douyin.com/user/${uid}`;\r\n\r\n    const pageData = (await cache.tryGet(\r\n        `douyin:user:${uid}`,\r\n        async () => {\r\n            let postData;\r\n            const browser = await puppeteer();\r\n            const page = await browser.newPage();\r\n            await page.setRequestInterception(true);\r\n\r\n            page.on('request', (request) => {\r\n                request.resourceType() === 'document' || request.resourceType() === 'script' || request.resourceType() === 'xhr' ? request.continue() : request.abort();\r\n            });\r\n            page.on('response', async (response) => {\r\n                const request = response.request();\r\n                if (request.url().includes('/web/aweme/post') && !postData) {\r\n                    postData = await response.json();\r\n                }\r\n            });\r\n\r\n            logger.http(`Requesting ${pageUrl}`);\r\n            await page.goto(pageUrl, {\r\n                waitUntil: 'networkidle2',\r\n            });\r\n\r\n            await browser.close();\r\n\r\n            if (!postData) {\r\n                throw new Error('Empty post data. The request may be filtered by WAF.');\r\n            }\r\n\r\n            return postData;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    )) as PostData;\r\n\r\n    if (!pageData.aweme_list?.length) {\r\n        throw new Error('Empty post data. The request may be filtered by WAF.');\r\n    }\r\n    const userInfo = pageData.aweme_list[0].author;\r\n    const userNickName = userInfo.nickname;\r\n    // const userDescription = userInfo.desc;\r\n    const userAvatar = getOriginAvatar(userInfo.avatar_thumb.url_list.at(-1));\r\n\r\n    const items = pageData.aweme_list.map((post) => {\r\n        // parse video\r\n        let videoList = post.video?.bit_rate?.map((item) => resolveUrl(item.play_addr.url_list.at(-1)));\r\n        if (relay) {\r\n            videoList = videoList.map((item) => proxyVideo(item, relay));\r\n        }\r\n        let duration = post.video?.duration;\r\n        duration = duration && duration / 1000;\r\n        let img;\r\n        // if (!embed) {\r\n        //     img = post.video && post.video.dynamicCover; // dynamic cover (webp)\r\n        // }\r\n        img =\r\n            img ||\r\n            post.video?.cover?.url_list.at(-1) || // HD\r\n            post.video?.origin_cover?.url_list.at(-1); // LD\r\n        img = img && resolveUrl(img);\r\n\r\n        // render description\r\n        const desc = post.desc?.replaceAll('\\n', '<br>');\r\n        let media = art(embed && videoList ? templates.embed : templates.cover, { img, videoList, duration });\r\n        media = embed && videoList && iframe ? art(templates.iframe, { content: media }) : media; // warp in iframe\r\n        const description = art(templates.desc, { desc, media });\r\n\r\n        return {\r\n            title: post.desc.split('\\n')[0],\r\n            description,\r\n            link: `https://www.douyin.com/video/${post.aweme_id}`,\r\n            pubDate: parseDate(post.create_time * 1000),\r\n            category: post.video_tag.map((t) => t.tag_name),\r\n        };\r\n    });\r\n\r\n    return {\r\n        title: userNickName,\r\n        // description: userDescription,\r\n        image: userAvatar,\r\n        link: pageUrl,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"8mBAYA,MAAaA,EAAe,CACxB,KAAM,2BACN,WAAY,CAAC,gBACb,QAAS,uEACT,WAAY,CAAE,IAAK,qBAAsB,YAAa,iCACtD,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,wBACT,OAAQ,eAGhB,KAAM,KACN,YAAa,CAAC,eAAgB,eAC9B,WAGJ,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAM,EAAI,IAAI,MAAM,OAC1B,GAAI,CAAC,EAAI,WAAW,gBAChB,MAAM,IAAIC,EAAsB,2DAEpC,IAAM,EAAc,OAAO,YAAY,IAAI,gBAAgB,EAAI,IAAI,MAAM,iBACnE,EAAQ,EAAS,IAAA,GAAW,EAAe,EAAY,OAAQ,IAC/D,EAAS,EAAS,IAAA,GAAW,EAAe,EAAY,QAAS,IACjE,EAAQ,EAAW,EAAY,MAAO,GAAM,IAE5C,EAAU,+BAA+B,IAEzC,EAAY,MAAMC,EAAM,OAC1B,eAAe,IACf,SAAY,CACR,IAAI,EACE,EAAU,MAAMC,IAChB,EAAO,MAAM,EAAQ,UAoB3B,GAnBA,MAAM,EAAK,uBAAuB,IAElC,EAAK,GAAG,UAAY,GAAY,CAC5B,EAAQ,iBAAmB,YAAc,EAAQ,iBAAmB,UAAY,EAAQ,iBAAmB,MAAQ,EAAQ,WAAa,EAAQ,UAEpJ,EAAK,GAAG,WAAY,KAAO,IAAa,CACpC,IAAM,EAAU,EAAS,UACrB,EAAQ,MAAM,SAAS,oBAAsB,CAAC,IAC9C,EAAW,MAAM,EAAS,UAIlC,EAAO,KAAK,cAAc,KAC1B,MAAM,EAAK,KAAK,EAAS,CACrB,UAAW,iBAGf,MAAM,EAAQ,QAEV,CAAC,EACD,MAAU,MAAM,wDAGpB,OAAO,GAEX,EAAO,MAAM,YACb,IAGJ,GAAI,CAAC,EAAS,YAAY,OACtB,MAAU,MAAM,wDAEpB,IAAM,EAAW,EAAS,WAAW,GAAG,OAClC,EAAe,EAAS,SAExB,EAAa,EAAgB,EAAS,aAAa,SAAS,GAAG,KAE/D,EAAQ,EAAS,WAAW,IAAK,GAAS,CAE5C,IAAI,EAAY,EAAK,OAAO,UAAU,IAAK,GAAS,EAAW,EAAK,UAAU,SAAS,GAAG,MACtF,IACA,EAAY,EAAU,IAAK,GAAS,EAAW,EAAM,KAEzD,IAAI,EAAW,EAAK,OAAO,SAC3B,EAAW,GAAY,EAAW,IAClC,IAAI,EAIJ,EACI,GACA,EAAK,OAAO,OAAO,SAAS,GAAG,KAC/B,EAAK,OAAO,cAAc,SAAS,GAAG,IAC1C,EAAM,GAAO,EAAW,GAGxB,IAAM,EAAO,EAAK,MAAM,WAAW;EAAM,QACrC,EAAQ,EAAI,GAAS,EAAY,EAAU,MAAQ,EAAU,MAAO,CAAE,MAAK,YAAW,aAC1F,EAAQ,GAAS,GAAa,EAAS,EAAI,EAAU,OAAQ,CAAE,QAAS,IAAW,EACnF,IAAM,EAAc,EAAI,EAAU,KAAM,CAAE,OAAM,UAEhD,MAAO,CACH,MAAO,EAAK,KAAK,MAAM;GAAM,GAC7B,cACA,KAAM,gCAAgC,EAAK,WAC3C,QAAS,EAAU,EAAK,YAAc,KACtC,SAAU,EAAK,UAAU,IAAK,GAAM,EAAE,aAI9C,MAAO,CACH,MAAO,EAEP,MAAO,EACP,KAAM,EACN,KAAM"}