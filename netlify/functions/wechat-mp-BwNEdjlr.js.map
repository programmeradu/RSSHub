{"version":3,"file":"wechat-mp-BwNEdjlr.js","names":["logger","error","values: string[]","metadataExtracted: Record<string, string | string[]>","ofetch","page: Record<string, any>","pageText: string","pageTextShort: string","cache"],"sources":["../../lib/utils/wechat-mp.ts"],"sourcesContent":["/**\r\n * Author: @Rongronggg9\r\n *\r\n * There are at least three folders which are relevant with WeChat MP (Official Account Platform / Media Platform):\r\n * lib/routes/wechat\r\n * lib/routes/gov/npma\r\n * lib/routes/gzh360\r\n * lib/routes/pku/nsd/gd\r\n * lib/routes/sdu/cs\r\n * lib/routes/nua/utils\r\n * lib/routes/hrbeu\r\n * lib/routes/freewechat\r\n *\r\n * If your new route is not in the above folders, please add it to the list.\r\n *\r\n * If your route needs to fetch MP articles from mp.weixin.qq.com, you SHOULD use `finishArticleItem`.\r\n * However, if your route need to determine some metadata by itself, you MAY use `fetchArticle`.\r\n * If you find more metadata on the webpage, consider modifying `fetchArticle` to include them.\r\n * NEVER fetch MP articles from mp.weixin.qq.com in your route in order to avoid cache key collision.\r\n * NO NEED TO use cache if you are using `finishArticleItem` or `fetchArticle`, they will handle cache for you.\r\n *\r\n * If your route fetches MP articles from other websites, you SHOULD use `fixArticleContent` to fix the content format.\r\n * If you find more fixes that should be applied, consider modifying `fixArticleContent` to include them.\r\n *\r\n * For more details of these functions, please refer to the jsDoc in the source code.\r\n */\r\n\r\nimport ofetch from '@/utils/ofetch';\r\nimport { type Cheerio, type CheerioAPI, load } from 'cheerio';\r\nimport type { Element } from 'domhandler';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport cache from '@/utils/cache';\r\nimport logger from '@/utils/logger';\r\n\r\nclass WeChatMpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = 'WeChatMpError';\r\n    }\r\n}\r\n\r\nconst MAINTAINERS = ['@Rongronggg9'];\r\n\r\nconst formatLogNoMention = (...params: string[]): string => `wechat-mp: ${params.join(': ')}`;\r\nconst formatLog = (...params: string[]): string => `${formatLogNoMention(...params)}\r\nConsider raise an issue (mentioning ${MAINTAINERS.join(', ')}) with the article URL for further investigation`;\r\nlet warn = (...params: string[]) => logger.warn(formatLog(...params));\r\nconst error = (...params: string[]): never => {\r\n    const msg = formatLog(...params);\r\n    logger.error(msg);\r\n    throw new WeChatMpError(msg);\r\n};\r\nconst errorNoMention = (...params: string[]): never => {\r\n    const msg = formatLogNoMention(...params);\r\n    logger.error(msg);\r\n    throw new WeChatMpError(msg);\r\n};\r\nconst toggleWerror = (() => {\r\n    const onFunc = (...params: string[]) => error('WarningAsError', ...params);\r\n    const offFunc = warn;\r\n    return (on: boolean) => {\r\n        warn = on ? onFunc : offFunc;\r\n    };\r\n})();\r\n\r\nconst replaceReturnNewline = (() => {\r\n    const returnRegExp = /\\r|\\\\(r|x0d)/g;\r\n    const newlineRegExp = /\\n|\\\\(n|x0a)/g;\r\n    return (text: string, replaceReturnWith = '', replaceNewlineWith = '<br>') => text.replaceAll(returnRegExp, replaceReturnWith).replaceAll(newlineRegExp, replaceNewlineWith);\r\n})();\r\nconst fixUrl = (() => {\r\n    const ampRegExp = /(&|\\\\x26)amp;/g;\r\n    return (text: string) => text.replaceAll(ampRegExp, '&');\r\n})();\r\n\r\nclass LoopContinue extends Error {\r\n    constructor() {\r\n        super('');\r\n        this.name = 'LoopContinue';\r\n    }\r\n}\r\n\r\nclass LoopReturn extends Error {\r\n    to_return: any;\r\n\r\n    constructor(to_return: any) {\r\n        super('');\r\n        this.name = 'LoopReturn';\r\n        this.to_return = to_return;\r\n    }\r\n}\r\n\r\nconst forEachScript = ($: CheerioAPI | string, callback: (script) => void, defaultReturn: any = null, selector = 'script[nonce][type=\"text/javascript\"]') => {\r\n    const scripts = typeof $ === 'string' ? [$] : $(selector).toArray();\r\n    for (const script of scripts) {\r\n        try {\r\n            callback(script);\r\n        } catch (error) {\r\n            if (error instanceof LoopReturn) {\r\n                return error.to_return;\r\n            } else if (error instanceof LoopContinue) {\r\n                continue;\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    return defaultReturn;\r\n};\r\n\r\n// view-source a *_SHARE_PAGE type article and search for `ITEM_SHOW_TYPE_MAP`\r\n// Please update the comments below if you find new types or new examples\r\nconst showTypeMap = {\r\n    // \"Article\".\r\n    // May be combined with media, but type won't change\r\n    // Combined with audio and iframe: https://mp.weixin.qq.com/s/FnjcMXZ1xdS-d6n-pUUyyw\r\n    APP_MSG_PAGE: '0',\r\n    // https://mp.weixin.qq.com/s?__biz=Mzg4NTA1MTkwNA==&mid=2247532942&idx=1&sn=a84e4adbe49fdb39e4d4c1b5c12a4c3f\r\n    VIDEO_SHARE_PAGE: '5',\r\n    MUSIC_SHARE_PAGE: '6',\r\n    // https://mp.weixin.qq.com/s/FY6yQC_e4NMAxK0FBr6jwQ\r\n    AUDIO_SHARE_PAGE: '7',\r\n    // https://mp.weixin.qq.com/s/4p5YmYuASiQSYFiy7KqydQ\r\n    // https://mp.weixin.qq.com/s?__biz=Mzg4NTA1MTkwNA==&mid=2247532936&idx=4&sn=624054c20ded6ee85c6632f419c6f758\r\n    IMG_SHARE_PAGE: '8',\r\n    TEXT_SHARE_PAGE: '10',\r\n    SHORT_CONTENT_PAGE: '17',\r\n};\r\nconst showTypeMapReverse = Object.fromEntries(Object.entries(showTypeMap).map(([k, v]) => [v, k]));\r\n\r\nclass ExtractMetadata {\r\n    private static genAssignmentRegExp = (varName: string, valuePattern: string, assignPattern: string) => new RegExp(`\\\\b${varName}\\\\s*${assignPattern}\\\\s*(?<quote>[\"'])(?<value>${valuePattern})\\\\k<quote>`, 'mg');\r\n\r\n    private static genExtractFunc = (\r\n        varName: string,\r\n        {\r\n            valuePattern = String.raw`\\w+`,\r\n            assignPattern = '=',\r\n            allowNotFound = false,\r\n            multiple = false,\r\n        }: {\r\n            valuePattern?: string;\r\n            assignPattern?: string;\r\n            allowNotFound?: boolean;\r\n            multiple?: boolean;\r\n        }\r\n    ) => {\r\n        const regExp = this.genAssignmentRegExp(varName, valuePattern, assignPattern);\r\n        return (str: string) => {\r\n            const values: string[] = [];\r\n            for (const match of str.matchAll(regExp)) {\r\n                const value = <string>match.groups?.value;\r\n                if (!multiple) {\r\n                    return value;\r\n                }\r\n                values.push(value);\r\n            }\r\n            if (!allowNotFound && values.length === 0) {\r\n                throw new LoopContinue();\r\n            }\r\n            return multiple ? values : null;\r\n        };\r\n    };\r\n\r\n    private static doExtract = (metadataToBeExtracted: Record<string, (str: string) => string | string[] | null | undefined>, scriptText: string) => {\r\n        const metadataExtracted: Record<string, string | string[]> = {};\r\n        for (const [key, extractFunc] of Object.entries(metadataToBeExtracted)) {\r\n            metadataExtracted[key] = <string>extractFunc(scriptText);\r\n        }\r\n        metadataExtracted._extractedFrom = scriptText;\r\n        return metadataExtracted;\r\n    };\r\n\r\n    private static commonMetadataToBeExtracted = {\r\n        showType: this.genExtractFunc('item_show_type', { valuePattern: String.raw`\\d+` }),\r\n        realShowType: this.genExtractFunc('real_item_show_type', { valuePattern: String.raw`\\d+` }),\r\n        createTime: this.genExtractFunc('ct', { valuePattern: String.raw`\\d+`, allowNotFound: true }),\r\n        sourceUrl: this.genExtractFunc('msg_source_url', { valuePattern: `https?://[^'\"]*`, allowNotFound: true }),\r\n    };\r\n\r\n    static common = ($: CheerioAPI) =>\r\n        forEachScript(\r\n            $,\r\n            (script) => {\r\n                const scriptText = $(script).text();\r\n                const metadataExtracted = <Record<string, string>> this.doExtract(this.commonMetadataToBeExtracted, scriptText);\r\n                const showType = showTypeMapReverse[metadataExtracted.showType];\r\n                const realShowType = showTypeMapReverse[metadataExtracted.realShowType];\r\n                metadataExtracted.sourceUrl = metadataExtracted.sourceUrl && fixUrl(metadataExtracted.sourceUrl);\r\n                if (showType) {\r\n                    metadataExtracted.showType = showType;\r\n                } else {\r\n                    warn('showType not found', `item_show_type=${metadataExtracted.showType}`);\r\n                }\r\n                if (realShowType) {\r\n                    metadataExtracted.realShowType = realShowType;\r\n                } else {\r\n                    warn('realShowType not found', `real_item_show_type=${metadataExtracted.realShowType}`);\r\n                }\r\n                if (metadataExtracted.showType !== metadataExtracted.realShowType) {\r\n                    // never seen this happen, waiting for examples\r\n                    warn('showType mismatch', `item_show_type=${metadataExtracted.showType}, real_item_show_type=${metadataExtracted.realShowType}`);\r\n                }\r\n                throw new LoopReturn(metadataExtracted);\r\n            },\r\n            {},\r\n            'script[nonce][type=\"text/javascript\"]:contains(\"real_item_show_type\")'\r\n        );\r\n\r\n    private static audioMetadataToBeExtracted = {\r\n        voiceId: this.genExtractFunc('voiceid', { assignPattern: ':' }),\r\n        duration: this.genExtractFunc('duration', { valuePattern: String.raw`\\d*`, assignPattern: ':', allowNotFound: true }),\r\n    };\r\n\r\n    // never seen a audio article containing multiple audio, waiting for examples\r\n    static audio = ($: CheerioAPI) =>\r\n        forEachScript(\r\n            $,\r\n            (script) => {\r\n                const scriptText = $(script).text();\r\n                const metadataExtracted = <Record<string, string>> this.doExtract(this.audioMetadataToBeExtracted, scriptText);\r\n                throw new LoopReturn(metadataExtracted);\r\n            },\r\n            {},\r\n            'script[nonce][type=\"text/javascript\"]:contains(\"voiceid\")'\r\n        );\r\n\r\n    private static imgMetadataToBeExtracted = {\r\n        imgUrls: this.genExtractFunc('cdn_url', { valuePattern: `https?://[^'\"]*`, assignPattern: ':', multiple: true }),\r\n    };\r\n\r\n    static img = ($: CheerioAPI) =>\r\n        forEachScript(\r\n            $,\r\n            (script) => {\r\n                const scriptText = $(script).text();\r\n                const metadataExtracted = <Record<string, string[]>> this.doExtract(this.imgMetadataToBeExtracted, scriptText);\r\n                if (Array.isArray(metadataExtracted.imgUrls)) {\r\n                    metadataExtracted.imgUrls = metadataExtracted.imgUrls.map((url) => fixUrl(url));\r\n                }\r\n                throw new LoopReturn(metadataExtracted);\r\n            },\r\n            {},\r\n            'script[nonce][type=\"text/javascript\"]:contains(\"picture_page_info_list\")'\r\n        );\r\n\r\n    private static locationMetadataToBeExtracted = {\r\n        countryName: this.genExtractFunc('countryName', { valuePattern: `[^'\"]*`, assignPattern: ':' }),\r\n        provinceName: this.genExtractFunc('provinceName', { valuePattern: `[^'\"]*`, assignPattern: ':' }),\r\n        cityName: this.genExtractFunc('cityName', { valuePattern: `[^'\"]*`, assignPattern: ':' }),\r\n    };\r\n\r\n    static location = ($: CheerioAPI) =>\r\n        forEachScript(\r\n            $,\r\n            (script) => {\r\n                const scriptText = $(script).text();\r\n                const metadataExtracted = this.doExtract(this.locationMetadataToBeExtracted, scriptText);\r\n                throw new LoopReturn(metadataExtracted);\r\n            },\r\n            {},\r\n            'script[nonce][type=\"text/javascript\"]:contains(\"countryName\")'\r\n        );\r\n}\r\n\r\nconst replaceTag = ($, oldTag, newTagName) => {\r\n    oldTag = $(oldTag);\r\n    const NewTag = $($(`<${newTagName} />`));\r\n    const oldTagAttr = oldTag.attr();\r\n    for (const key in oldTagAttr) {\r\n        NewTag.attr(key, oldTagAttr[key]);\r\n    }\r\n    NewTag.append(oldTag.contents());\r\n    oldTag.replaceWith(NewTag);\r\n};\r\n\r\nconst detectOriginalArticleUrl = ($) => {\r\n    // No article content get, try the original url\r\n    // example: https://mp.weixin.qq.com/s/f6sKObaZZhADTYU2Jl5Bnw\r\n    if (!$('#js_content').text()) {\r\n        return $('#js_share_source').attr('data-url');\r\n    }\r\n    // Article content is too short, try the first link\r\n    // example: https://mp.weixin.qq.com/s/9saVB4KaolRyJfpajzeFRg\r\n    if ($('#js_content').text().length < 80) {\r\n        return $('#js_content a').attr('href');\r\n    }\r\n    return null;\r\n};\r\n\r\nconst genAudioSrc = (voiceId: string) => `https://res.wx.qq.com/voice/getvoice?mediaid=${voiceId}`;\r\nconst genAudioTag = (src: string, title: string) => `<audio controls src=\"${src}\" title=\"${title}\" style=\"width:100%\"/>`;\r\nconst genVideoSrc = (videoId: string) => {\r\n    const newSearchParams = new URLSearchParams({\r\n        origin: 'https://mp.weixin.qq.com',\r\n        containerId: 'js_tx_video_container_0.3863487104715233',\r\n        vid: videoId,\r\n        width: '677',\r\n        height: '380.8125',\r\n        autoplay: 'false',\r\n        allowFullScreen: 'true',\r\n        chid: '17',\r\n        full: 'true',\r\n        show1080p: 'false',\r\n        isDebugIframe: 'false',\r\n    });\r\n    return `https://v.qq.com/txp/iframe/player.html?${newSearchParams.toString()}`;\r\n};\r\n\r\n/**\r\n * Articles from WeChat MP have weird formats, this function is used to fix them.\r\n *\r\n * Even though your content are not directly fetched from WeChat MP, you SHOULD still call this function.\r\n * Calling this function is safe in most situations.\r\n *\r\n * Example usage: item.description = fixArticleContent($('div#js_content.rich_media_content'));\r\n * @param {*} html - The html to be fixed, a string or a cheerio object.\r\n * @param {boolean} skipImg - Whether to skip fixing images.\r\n * @return {string} - The fixed html, a string.\r\n */\r\nconst fixArticleContent = (html?: string | Cheerio<Element>, skipImg = false) => {\r\n    let htmlResult = '';\r\n    if (typeof html === 'string') {\r\n        htmlResult = html;\r\n    } else if (html?.html) {\r\n        htmlResult = html.html() || '';\r\n    }\r\n    if (!htmlResult) {\r\n        return '';\r\n    }\r\n    const $ = load(htmlResult, undefined, false);\r\n    if (!skipImg) {\r\n        // fix img lazy loading\r\n        $('img[data-src]').each((_, img) => {\r\n            const $img = $(img);\r\n            const realSrc = $img.attr('data-src');\r\n            if (realSrc) {\r\n                $img.attr('src', realSrc);\r\n                $img.removeAttr('data-src');\r\n            }\r\n        });\r\n    }\r\n    // fix audio: https://mp.weixin.qq.com/s/FnjcMXZ1xdS-d6n-pUUyyw\r\n    $('mpvoice[voice_encode_fileid]').each((_, voice) => {\r\n        const $voice = $(voice);\r\n        const voiceId = $voice.attr('voice_encode_fileid');\r\n        if (voiceId) {\r\n            const title = $voice.attr('name') || 'Audio';\r\n            $voice.replaceWith(genAudioTag(genAudioSrc(voiceId), title));\r\n        }\r\n    });\r\n    // fix iframe: https://mp.weixin.qq.com/s/FnjcMXZ1xdS-d6n-pUUyyw\r\n    $('iframe.video_iframe[data-src]').each((_, iframe) => {\r\n        const $iframe = $(iframe);\r\n        const dataSrc = <string>$iframe.attr('data-src');\r\n        const srcUrlObj = new URL(dataSrc);\r\n        if (srcUrlObj.host === 'v.qq.com' && srcUrlObj.searchParams.has('vid')) {\r\n            const newSrc = genVideoSrc(<string>srcUrlObj.searchParams.get('vid'));\r\n            $iframe.attr('src', newSrc);\r\n            $iframe.removeAttr('data-src');\r\n            const width = $iframe.attr('data-w');\r\n            const ratio = $iframe.attr('data-ratio');\r\n            if (width && ratio) {\r\n                const width_ = Math.min(Number.parseInt(width), 677);\r\n                $iframe.attr('width', width_.toString());\r\n                $iframe.attr('height', (width_ / Number.parseFloat(ratio)).toString());\r\n            }\r\n        } // else {} FIXME: https://mp.weixin.qq.com/s?__biz=Mzg5Mjk3MzE4OQ==&mid=2247549515&idx=2&sn=a608fca597f0589c1aebd6d0b82ff6e9\r\n    });\r\n    // fix section\r\n    $('section').each((_, section) => {\r\n        const $section = $(section);\r\n        const p_count = $section.find('p').length;\r\n        const div_count = $section.find('div').length;\r\n        const section_count = $section.find('section').length;\r\n        if (p_count + div_count + section_count === 0) {\r\n            // make it a p\r\n            replaceTag($, section, 'p');\r\n        } else {\r\n            // make it a div\r\n            replaceTag($, section, 'div');\r\n        }\r\n    });\r\n\r\n    // add breaks in code section\r\n    $('code').each((_, code) => {\r\n        $('<br>').insertAfter(code);\r\n    });\r\n\r\n    // clear line index tags in code section\r\n    $('.code-snippet__line-index').remove();\r\n\r\n    // clean scripts\r\n    $('script').remove();\r\n    return $.html();\r\n};\r\n\r\n// Ref:\r\n// https://soaked.in/2020/08/wechat-platform-url/\r\n// Known params (permanent long link):\r\n// __biz (essential), mid (essential), idx (essential), sn (essential), chksm, mpshare, scene, ascene, subscene, srcid,\r\n// lang, sharer_sharetime, sharer_shareid, version, exportkey, pass_ticket, clicktime, enterid, devicetype, nettype,\r\n// abtest_cookie, wx_header\r\n// Known params (temporary link):\r\n// src, timestamp, ver, signature, new (unessential)\r\nconst normalizeUrl = (url: string, bypassHostCheck = false) => {\r\n    const oriUrl = url;\r\n    // already seen some weird urls with `&` escaped as `&amp;`, so fix it\r\n    // calling fixUrl should always be safe since having `&amp;` or `\\x26` in a URL is meaningless\r\n    url = fixUrl(url);\r\n    const urlObj = new URL(url);\r\n    if (!bypassHostCheck && urlObj.host !== 'mp.weixin.qq.com') {\r\n        error('URL host must be \"mp.weixin.qq.com\"', url);\r\n    }\r\n    urlObj.protocol = 'https:';\r\n    urlObj.hash = ''; // remove hash\r\n    if (urlObj.pathname.startsWith('/s/')) {\r\n        // a short link, just remove all the params\r\n        urlObj.search = '';\r\n    } else if (urlObj.pathname === '/s') {\r\n        const biz = urlObj.searchParams.get('__biz');\r\n        const mid = urlObj.searchParams.get('mid') || urlObj.searchParams.get('appmsgid');\r\n        const idx = urlObj.searchParams.get('idx') || urlObj.searchParams.get('itemidx');\r\n        const sn = urlObj.searchParams.get('sn') || urlObj.searchParams.get('sign');\r\n        if (biz && mid && idx && sn) {\r\n            // a permanent long link, remove all unessential params\r\n            // no need to escape anything so no need to use `new URLSearchParams({...}).toString()`\r\n            urlObj.search = `?__biz=${biz}&mid=${mid}&idx=${idx}&sn=${sn}`;\r\n        } else {\r\n            const src = urlObj.searchParams.get('src');\r\n            const timestamp = urlObj.searchParams.get('timestamp');\r\n            const ver = urlObj.searchParams.get('ver');\r\n            const signature = urlObj.searchParams.get('signature');\r\n            if (src && timestamp && ver && signature) {\r\n                // a temporary link, remove all unessential params\r\n                urlObj.search = `?src=${src}&timestamp=${timestamp}&ver=${ver}&signature=${signature}`;\r\n            } else {\r\n                warn('unknown URL search parameters', oriUrl);\r\n            }\r\n        }\r\n    } else {\r\n        warn('unknown URL path', oriUrl);\r\n    }\r\n    return urlObj.href;\r\n};\r\n\r\nclass PageParsers {\r\n    private static common = ($: CheerioAPI, commonMetadata: Record<string, string>) => {\r\n        const title = replaceReturnNewline($('meta[property=\"og:title\"]').attr('content') || '', '', ' ');\r\n        const author = replaceReturnNewline($('meta[name=author]').attr('content') || '', '', ' ');\r\n        const pubDate = commonMetadata.createTime ? parseDate(Number.parseInt(commonMetadata.createTime) * 1000) : undefined;\r\n        const mpName = $('.wx_follow_nickname').first().text()?.trim();\r\n\r\n        let summary = replaceReturnNewline($('meta[name=description]').attr('content') || '');\r\n        const description = summary;\r\n        summary = summary.replaceAll('<br>', ' ') === title ? '' : summary;\r\n\r\n        return { title, author, description, summary, pubDate, mpName } as {\r\n            title: string;\r\n            author: string;\r\n            description: string;\r\n            summary: string;\r\n            pubDate?: Date;\r\n            mpName?: string;\r\n            enclosure_url?: string;\r\n            itunes_duration?: string | number;\r\n            enclosure_type?: string;\r\n        };\r\n    };\r\n    private static appMsg = async ($: CheerioAPI, commonMetadata: Record<string, string>) => {\r\n        const page = PageParsers.common($, commonMetadata);\r\n        page.description = fixArticleContent($('#js_content'));\r\n        const originalArticleUrl = detectOriginalArticleUrl($);\r\n        if (originalArticleUrl) {\r\n            // No article or article is too short, try to fetch the description from the original article\r\n            const data = await ofetch(normalizeUrl(originalArticleUrl));\r\n            const original$ = load(data);\r\n            page.description += fixArticleContent(original$('#js_content'));\r\n        }\r\n        return page;\r\n    };\r\n    private static img = ($: CheerioAPI, commonMetadata: Record<string, string>) => {\r\n        const page = PageParsers.common($, commonMetadata);\r\n        const imgUrls = ExtractMetadata.img($)?.imgUrls;\r\n        let imgHtml = '';\r\n        if (Array.isArray(imgUrls) && imgUrls.length > 0) {\r\n            for (const imgUrl of imgUrls) {\r\n                imgHtml += `<br><br><img src=\"${imgUrl}\" />`;\r\n            }\r\n        }\r\n        page.description += imgHtml;\r\n        return page;\r\n    };\r\n    private static audio = ($: CheerioAPI, commonMetadata: Record<string, string>) => {\r\n        const page = PageParsers.common($, commonMetadata);\r\n        const audioMetadata = ExtractMetadata.audio($);\r\n        const audioUrl = genAudioSrc(audioMetadata.voiceId);\r\n        page.enclosure_url = audioUrl;\r\n        page.itunes_duration = audioMetadata.duration;\r\n        page.enclosure_type = 'audio/mp3'; // FIXME: may it be other types?\r\n        page.description += '<br><br>' + genAudioTag(audioUrl, page.title);\r\n        return page;\r\n    };\r\n    private static fallback = ($: CheerioAPI, commonMetadata: Record<string, string>) => {\r\n        const page = PageParsers.common($, commonMetadata);\r\n        const image = $('meta[property=\"og:image\"]').attr('content');\r\n        if (image) {\r\n            page.description += `<br><br><img src=\"${image}\" />`;\r\n        }\r\n        return page;\r\n    };\r\n    static dispatch = async (html: string, url: string) => {\r\n        const $ = load(html);\r\n        const commonMetadata = ExtractMetadata.common($);\r\n        let page: Record<string, any>;\r\n        let pageText: string, pageTextShort: string;\r\n        switch (commonMetadata.showType) {\r\n            case 'APP_MSG_PAGE':\r\n                page = await PageParsers.appMsg($, commonMetadata);\r\n                break;\r\n            case 'AUDIO_SHARE_PAGE':\r\n                page = PageParsers.audio($, commonMetadata);\r\n                break;\r\n            case 'IMG_SHARE_PAGE':\r\n                page = PageParsers.img($, commonMetadata);\r\n                break;\r\n            case 'VIDEO_SHARE_PAGE':\r\n                page = PageParsers.fallback($, commonMetadata);\r\n                break;\r\n            case undefined:\r\n                $('script, style').remove();\r\n                pageText = $('title, body').text().replaceAll(/\\s+/g, ' ').trim();\r\n                pageTextShort = pageText.slice(0, 25);\r\n                if (pageText.length >= 25 + '...'.length) {\r\n                    pageTextShort = pageText.slice(0, 25);\r\n                    pageTextShort += '...';\r\n                }\r\n                if (pageText.includes('已被发布者删除')) {\r\n                    errorNoMention('deleted by author', pageTextShort, url);\r\n                } else if (new URL(url).pathname.includes('captcha') || pageText.includes('环境异常')) {\r\n                    errorNoMention('request blocked by WAF', pageTextShort, url);\r\n                } else {\r\n                    error('unknown page, probably due to WAF', pageTextShort, url);\r\n                }\r\n                return {}; // just to make TypeScript happy, actually UNREACHABLE\r\n            default:\r\n                warn('new showType, trying fallback method', `showType=${commonMetadata.showType}`, url);\r\n                page = PageParsers.fallback($, commonMetadata);\r\n        }\r\n        const locationMetadata = ExtractMetadata.location($);\r\n        let location = '';\r\n        for (const loc of [locationMetadata.countryName, locationMetadata.provinceName, locationMetadata.cityName]) {\r\n            if (loc) {\r\n                location += loc + ' ';\r\n            }\r\n        }\r\n        location = location.trim();\r\n        if (location) {\r\n            page.description += `<p>📍发表于：${location}</p>`;\r\n        }\r\n        if (commonMetadata.sourceUrl) {\r\n            page.description += `<p><a href=\"${commonMetadata.sourceUrl}\">🔗️ 阅读原文</a></p>`;\r\n        }\r\n        return page;\r\n    };\r\n}\r\n\r\nconst redirectHelper = async (url: string, maxRedirects: number = 5) => {\r\n    maxRedirects--;\r\n    const raw = await ofetch.raw(url);\r\n    if ([301, 302, 303, 307, 308].includes(raw.status)) {\r\n        if (!raw.headers.has('location')) {\r\n            error('redirect without location', url);\r\n        } else if (maxRedirects <= 0) {\r\n            error('too many redirects', url);\r\n        }\r\n        return await redirectHelper(<string>raw.headers.get('location'), maxRedirects);\r\n    }\r\n    return raw;\r\n};\r\n\r\n/**\r\n * Fetch article and its metadata from WeChat MP (mp.weixin.qq.com).\r\n *\r\n * If you use this function, no need to call `fixArticleContent`\r\n * @param url - The url of the article.\r\n * @param bypassHostCheck - Whether to bypass host check.\r\n * @return - An object containing the article and its metadata.\r\n */\r\nconst fetchArticle = (url: string, bypassHostCheck: boolean = false) => {\r\n    url = normalizeUrl(url, bypassHostCheck);\r\n    return cache.tryGet(url, async () => {\r\n        const raw = await redirectHelper(url);\r\n        // pass the redirected URL to dispatcher for better error logging\r\n        const page = await PageParsers.dispatch(raw._data, raw.url);\r\n        return { ...page, link: url };\r\n    }) as Promise<{\r\n        title: string;\r\n        author: string;\r\n        description: string;\r\n        summary: string;\r\n        pubDate?: Date;\r\n        mpName?: string;\r\n        link: string;\r\n        enclosure_type?: string;\r\n        enclosure_url?: string;\r\n        itunes_duration?: string | number;\r\n    }>;\r\n};\r\n\r\n/**\r\n * Fetch article and its metadata from WeChat MP (mp.weixin.qq.com), then fill the `item` object with the result.\r\n *\r\n * If you use this function, no need to call `fetchArticle` or `fixArticleContent`\r\n *\r\n * A new route SHOULD use this function instead of manually calling the above functions\r\n *\r\n * An existing route adopting this function SHOULD either:\r\n * - set `skipLink` to true (not recommended)\r\n * - set `item.guid` to `item.link` BEFORE calling this function\r\n * @param {object} ctx - The context object.\r\n * @param {object} item - The item object to be filled.\r\n * @param {boolean} setMpNameAsAuthor - If `true`, `author` will be the MP itself, otherwise the real author of the article.\r\n * @param {boolean} skipLink - Whether to skip overriding `item.link` with the normalized url.\r\n * @return {Promise<object>} - The incoming `item` object, with the article and its metadata filled in.\r\n */\r\nconst finishArticleItem = async (item, setMpNameAsAuthor = false, skipLink = false) => {\r\n    if (item.link) {\r\n        const fetchedItem = await fetchArticle(item.link);\r\n        for (const key in fetchedItem) {\r\n            switch (key) {\r\n                case 'author':\r\n                    item.author = setMpNameAsAuthor\r\n                        ? fetchedItem.mpName || item.author // the Official Account itself. if your route return articles from different accounts, you may want to use this\r\n                        : fetchedItem.author || item.author; // the real author of the article. if your route return articles from a certain account, use this\r\n                    break;\r\n                case 'link':\r\n                    item.link = skipLink ? item.link : fetchedItem.link || item.link;\r\n                    break;\r\n                default:\r\n                    item[key] = item[key] || fetchedItem[key];\r\n            }\r\n        }\r\n    }\r\n    return item;\r\n};\r\n\r\nconst exportedForTestingOnly = { toggleWerror, ExtractMetadata, showTypeMapReverse };\r\nexport { exportedForTestingOnly, WeChatMpError, fixArticleContent, fetchArticle, finishArticleItem, normalizeUrl };\r\n"],"mappings":"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"}