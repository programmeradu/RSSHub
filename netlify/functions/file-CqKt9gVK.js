import"./esm-shims-Dqvxr0BZ.js";import{config as e}from"./config-Dl8a1sIg.js";import"./logger-CWOoofbD.js";import"./dist-IvUHtNe1.js";import"./helpers-DzX-lcQO.js";import"./ofetch-Bzt0BXUH.js";import{got_default as t}from"./got-CdvI2yKX.js";import n from"query-string";const r={path:`/file/:user/:repo/:branch/:filepath{.+}`,example:`/github/file/DIYgod/RSSHub/master/README.md`,parameters:{user:`GitHub user or org name`,repo:`repository name`,branch:`branch name`,filepath:`path of target file`},radar:[{source:[`github.com/:user/:repo/blob/:branch/*filepath`],target:`/file/:user/:repo/:branch/:filepath`}],name:`File Commits`,maintainers:[`zengxs`],handler:i};async function i(r){let i=r.req.param(`user`),a=r.req.param(`repo`),o=r.req.param(`branch`),s=r.req.param(`filepath`),c=`https://github.com/${i}/${a}/commits/${o}/${s}`,l={};e.github&&e.github.access_token&&(l.Authorization=`token ${e.github.access_token}`);let u=await t.get(`https://api.github.com/repos/${i}/${a}/commits`,{searchParams:n.stringify({sha:o,path:s}),headers:l}),d=u.data,f=[];for(let e=0;e<Math.min(d.length,10);e++)f.push(e);let p=f.map(e=>{let t=d[e];return{title:t.commit.message.split(`
`)[0],description:`<pre>${t.commit.message}</pre>`,link:t.html_url,author:t.commit.author.name,pubDate:new Date(t.commit.committer.date).toUTCString()}});return{title:`GitHub File - ${i}/${a}/${o}/${s}`,link:c,item:p}}export{r as route};
//# sourceMappingURL=file-CqKt9gVK.js.map