{"version":3,"file":"util-BUhLyohA.js","names":["page","CaptchaError","puppeteer","data: Array<{\r\n        title: string;\r\n        link: string;\r\n        description: string;\r\n        author: string;\r\n        guid: string;\r\n        pubDate: Date;\r\n        updated: Date;\r\n    }>","cache","ofetch","videoUrls: string[]","script"],"sources":["../../lib/routes/xiaohongshu/util.ts"],"sourcesContent":["import { config } from '@/config';\r\nimport logger from '@/utils/logger';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport puppeteer, { getPuppeteerPage } from '@/utils/puppeteer';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport cache from '@/utils/cache';\r\nimport CaptchaError from '@/errors/types/captcha';\r\n\r\n// Common headers for requests\r\nconst getHeaders = (cookie?: string) => ({\r\n    Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n    'Accept-Language': 'en-US,en;q=0.9',\r\n    'Cache-Control': 'no-cache',\r\n    Connection: 'keep-alive',\r\n    Host: 'www.xiaohongshu.com',\r\n    Pragma: 'no-cache',\r\n    'Sec-Ch-Ua': '\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\"',\r\n    'Sec-Ch-Ua-Mobile': '?0',\r\n    'Sec-Ch-Ua-Platform': '\"Windows\"',\r\n    'Sec-Fetch-Dest': 'document',\r\n    'Sec-Fetch-Mode': 'navigate',\r\n    'Sec-Fetch-Site': 'none',\r\n    'Sec-Fetch-User': '?1',\r\n    'Upgrade-Insecure-Requests': '1',\r\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\r\n    ...(cookie ? { Cookie: cookie } : {}),\r\n});\r\n\r\nconst getUser = (url, cache) =>\r\n    cache.tryGet(\r\n        url,\r\n        async () => {\r\n            const { page, destory } = await getPuppeteerPage(url, {\r\n                onBeforeLoad: async (page) => {\r\n                    await page.setRequestInterception(true);\r\n                    page.on('request', (request) => {\r\n                        request.resourceType() === 'document' || request.resourceType() === 'script' || request.resourceType() === 'xhr' || request.resourceType() === 'other' ? request.continue() : request.abort();\r\n                    });\r\n                },\r\n            });\r\n            try {\r\n                let collect = '';\r\n                logger.http(`Requesting ${url}`);\r\n                await page.goto(url, {\r\n                    waitUntil: 'domcontentloaded',\r\n                });\r\n                await page.waitForSelector('div.reds-tab-item:nth-child(2), #red-captcha');\r\n\r\n                if (await page.$('#red-captcha')) {\r\n                    throw new CaptchaError('小红书风控校验，请稍后再试');\r\n                }\r\n\r\n                const initialState = await page.evaluate(() => (window as any).__INITIAL_STATE__);\r\n\r\n                if (!(await page.$('.lock-icon'))) {\r\n                    await page.click('div.reds-tab-item:nth-child(2)');\r\n                    try {\r\n                        const response = await page.waitForResponse(\r\n                            (res) => {\r\n                                const req = res.request();\r\n                                return req.url().includes('/api/sns/web/v2/note/collect/page') && req.method() === 'GET' && req.resourceType() === 'xhr';\r\n                            },\r\n                            { timeout: 5000 }\r\n                        );\r\n                        collect = await response.json();\r\n                    } catch {\r\n                        //\r\n                    }\r\n                }\r\n\r\n                let { userPageData, notes } = initialState.user;\r\n                userPageData = userPageData._rawValue || userPageData;\r\n                notes = notes._rawValue || notes;\r\n\r\n                return { userPageData, notes, collect };\r\n            } finally {\r\n                await destory();\r\n            }\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst getBoard = (url, cache) =>\r\n    cache.tryGet(\r\n        url,\r\n        async () => {\r\n            const browser = await puppeteer();\r\n            try {\r\n                const page = await browser.newPage();\r\n                await page.setRequestInterception(true);\r\n                page.on('request', (request) => {\r\n                    request.resourceType() === 'document' || request.resourceType() === 'script' || request.resourceType() === 'xhr' ? request.continue() : request.abort();\r\n                });\r\n                logger.http(`Requesting ${url}`);\r\n                await page.goto(url);\r\n                await page.waitForSelector('.pc-container');\r\n                const initialSsrState = await page.evaluate(() => (window as any).__INITIAL_SSR_STATE__);\r\n                return initialSsrState.Main;\r\n            } finally {\r\n                await browser.close();\r\n            }\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\nconst formatText = (text) => text.replaceAll(/(\\r\\n|\\r|\\n)/g, '<br>').replaceAll('\\t', '&emsp;');\r\n\r\n// tag_list.id has nothing to do with its url\r\nconst formatTagList = (tagList) => tagList.reduce((acc, item) => acc + `#${item.name} `, ``);\r\n\r\nconst formatImageList = (imageList) => imageList.reduce((acc, item) => acc + `<img src=\"${item.url}\"><br>`, ``);\r\n\r\nconst formatNote = (url, note) => ({\r\n    title: note.title,\r\n    link: url + '/' + note.noteId,\r\n    description: formatText(note.desc) + '<br><br>' + formatTagList(note.tagList) + '<br><br>' + formatImageList(note.imageList),\r\n    author: note.user.nickname,\r\n    pubDate: parseDate(note.time, 'x'),\r\n    updated: parseDate(note.lastUpdateTime, 'x'),\r\n});\r\n\r\nasync function renderNotesFulltext(notes, urlPrex, displayLivePhoto) {\r\n    const data: Array<{\r\n        title: string;\r\n        link: string;\r\n        description: string;\r\n        author: string;\r\n        guid: string;\r\n        pubDate: Date;\r\n        updated: Date;\r\n    }> = [];\r\n    const promises = notes.flatMap((note) =>\r\n        note.map(async ({ noteCard, id }) => {\r\n            const link = `${urlPrex}/${id}`;\r\n            const guid = `${urlPrex}/${noteCard.noteId}`;\r\n            const { title, description, pubDate, updated } = await getFullNote(link, displayLivePhoto);\r\n            return {\r\n                title,\r\n                link,\r\n                description,\r\n                author: noteCard.user.nickName,\r\n                guid,\r\n                pubDate,\r\n                updated,\r\n            };\r\n        })\r\n    );\r\n    data.push(...(await Promise.all(promises)));\r\n    return data;\r\n}\r\n\r\nasync function getFullNote(link, displayLivePhoto) {\r\n    const data = (await cache.tryGet(link, async () => {\r\n        const res = await ofetch(link, {\r\n            headers: getHeaders(config.xiaohongshu.cookie),\r\n        });\r\n        const $ = load(res);\r\n        const script = extractInitialState($);\r\n        const state = JSON.parse(script);\r\n        const note = state.note.noteDetailMap[state.note.firstNoteId].note;\r\n        const title = note.title;\r\n        let desc = note.desc;\r\n        desc = desc.replaceAll(/\\[.*?\\]/g, '');\r\n        desc = desc.replaceAll(/#(.*?)#/g, '#$1');\r\n        desc = desc.replaceAll('\\n', '<br>');\r\n        const pubDate = parseDate(note.time, 'x');\r\n        const updated = parseDate(note.lastUpdateTime, 'x');\r\n\r\n        let mediaContent = '';\r\n        if (note.type === 'video') {\r\n            const originVideoKey = note.video?.consumer?.originVideoKey;\r\n            const videoUrls: string[] = [];\r\n\r\n            if (originVideoKey) {\r\n                videoUrls.push(`http://sns-video-al.xhscdn.com/${originVideoKey}`);\r\n            }\r\n\r\n            const streamTypes = ['av1', 'h264', 'h265', 'h266'];\r\n            for (const type of streamTypes) {\r\n                const streams = note.video?.media?.stream?.[type];\r\n                if (streams?.length > 0) {\r\n                    const stream = streams[0];\r\n                    if (stream.masterUrl) {\r\n                        videoUrls.push(stream.masterUrl);\r\n                    }\r\n                    if (stream.backupUrls?.length) {\r\n                        videoUrls.push(...stream.backupUrls);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const posterUrl = note.imageList?.[0]?.urlDefault;\r\n\r\n            if (videoUrls.length > 0) {\r\n                mediaContent = `<video controls ${posterUrl ? `poster=\"${posterUrl}\"` : ''}>\r\n                    ${videoUrls.map((url) => `<source src=\"${url}\" type=\"video/mp4\">`).join('\\n')}\r\n                </video><br>`;\r\n            }\r\n        } else {\r\n            mediaContent = note.imageList\r\n                .map((image) => {\r\n                    if (image.livePhoto && displayLivePhoto) {\r\n                        const videoUrls: string[] = [];\r\n\r\n                        const streamTypes = ['av1', 'h264', 'h265', 'h266'];\r\n                        for (const type of streamTypes) {\r\n                            const streams = image.stream?.[type];\r\n                            if (streams?.length > 0) {\r\n                                if (streams[0].masterUrl) {\r\n                                    videoUrls.push(streams[0].masterUrl);\r\n                                }\r\n                                if (streams[0].backupUrls?.length) {\r\n                                    videoUrls.push(...streams[0].backupUrls);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (videoUrls.length > 0) {\r\n                            return `<video controls poster=\"${image.urlDefault}\">\r\n                            ${videoUrls.map((url) => `<source src=\"${url}\" type=\"video/mp4\">`).join('\\n')}\r\n                        </video>`;\r\n                        }\r\n                    }\r\n                    return `<img src=\"${image.urlDefault}\">`;\r\n                })\r\n                .join('<br>');\r\n        }\r\n\r\n        const description = `${mediaContent}<br>${desc}`;\r\n        return {\r\n            title: title || note.desc,\r\n            description,\r\n            pubDate,\r\n            updated,\r\n        };\r\n    })) as Promise<{ title: string; description: string; pubDate: Date; updated: Date }>;\r\n    return data;\r\n}\r\n\r\nasync function getUserWithCookie(url: string) {\r\n    const cookie = config.xiaohongshu.cookie;\r\n    const res = await ofetch(url, {\r\n        headers: getHeaders(cookie),\r\n    });\r\n    const $ = load(res);\r\n    const paths = $('#userPostedFeeds > section > div > a.cover.ld.mask').map((i, item) => item.attributes[3].value);\r\n    const script = extractInitialState($);\r\n    const state = JSON.parse(script);\r\n    let index = 0;\r\n    for (const item of state.user.notes.flat()) {\r\n        const path = paths[index];\r\n        if (path && path.includes('?')) {\r\n            item.id = item.id + path?.slice(path.indexOf('?'));\r\n        }\r\n        index = index + 1;\r\n    }\r\n    return state.user;\r\n}\r\n\r\n// Add helper function to extract initial state\r\nfunction extractInitialState($) {\r\n    let script = $('script')\r\n        .filter((i, script) => {\r\n            const text = script.children[0]?.data;\r\n            return text?.startsWith('window.__INITIAL_STATE__=');\r\n        })\r\n        .text();\r\n    script = script.slice('window.__INITIAL_STATE__='.length);\r\n    script = script.replaceAll('undefined', 'null');\r\n    return script;\r\n}\r\n\r\nasync function checkCookie() {\r\n    const cookie = config.xiaohongshu.cookie;\r\n    const res = await ofetch('https://edith.xiaohongshu.com/api/sns/web/v2/user/me', {\r\n        headers: getHeaders(cookie),\r\n    });\r\n    return res.code === 0 && !!res.data.user_id;\r\n}\r\n\r\nexport { getUser, getBoard, formatText, formatNote, renderNotesFulltext, getFullNote, getUserWithCookie, checkCookie };\r\n"],"mappings":"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"}