{"version":3,"file":"review-DiSwGKVN.js","names":["ofetch"],"sources":["../../lib/routes/taptap/common/review.ts"],"sourcesContent":["import ofetch from '@/utils/ofetch';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { getRootUrl, appDetail, X_UA } from '../utils';\r\n\r\n/*\r\nconst sortMap = {\r\n    default: {\r\n        en_US: 'Default',\r\n        zh_CN: '预设',\r\n        zh_TW: '預設',\r\n    },\r\n    recent: {\r\n        en_US: 'Latest',\r\n        zh_CN: '最新',\r\n        zh_TW: '最新',\r\n    },\r\n    hot: {\r\n        en_US: 'Popular',\r\n        zh_CN: '热门',\r\n        zh_TW: '熱門',\r\n    },\r\n    spent: {\r\n        en_US: 'Play Time',\r\n        zh_CN: '游戏时长',\r\n        zh_TW: '遊戲時長',\r\n    },\r\n};\r\n\r\nconst intlSortMap = {\r\n    helpful: {\r\n        en_US: 'Most Helpful',\r\n        zh_TW: '最有幫助',\r\n        ja_JP: '最も役立つ',\r\n        ko_KR: '가장 도움이 된',\r\n    },\r\n    recent: {\r\n        en_US: 'Most Recent',\r\n        zh_TW: '最新',\r\n        ja_JP: '最も最近',\r\n        ko_KR: '최근순',\r\n    },\r\n};\r\n*/\r\n\r\nconst makeSortParam = (isIntl: boolean, order: string) => {\r\n    if (isIntl) {\r\n        if (order === 'helpful' || order === 'recent') {\r\n            return `type=${order}`;\r\n        }\r\n        return 'type=helpful';\r\n    } else {\r\n        if (order === 'new' || order === 'hot') {\r\n            return `sort=${order}`;\r\n        }\r\n        return 'sort=hot';\r\n    }\r\n};\r\n\r\nconst fetchMainlandItems = async (params) => {\r\n    const id = params.id;\r\n    const order = params.order ?? 'hot';\r\n    const lang = params.lang ?? 'zh_CN';\r\n\r\n    let url = `${getRootUrl(false)}/webapiv2/review/v2/list-by-app?app_id=${id}&limit=10`;\r\n    url += `&${makeSortParam(false, order)}`;\r\n    url += `&${X_UA(lang)}`;\r\n\r\n    const reviewListResponse = await ofetch(url);\r\n\r\n    return reviewListResponse.data.list.map((review) => {\r\n        const author = review.moment.author.user.name;\r\n        const score = review.moment.review.score;\r\n        return {\r\n            title: `${author} - ${score}星`,\r\n            author,\r\n            description: review.moment.review.contents.text + (review.moment.review.contents.images ? review.moment.review.contents.images.map((img) => `<img src=\"${img.original_url}\">`).join('') : ''),\r\n            link: `${getRootUrl(false)}/review/${review.moment.review.id}`,\r\n            pubDate: parseDate(review.moment.publish_time, 'X'),\r\n        };\r\n    });\r\n};\r\n\r\nconst fetchIntlItems = async (params) => {\r\n    const id = params.id;\r\n    const order = params.order ?? 'helpful';\r\n    const lang = params.lang ?? 'en_US';\r\n\r\n    let url = `${getRootUrl(true)}/webapiv2/feeds/v3/by-app?app_id=${id}&limit=10`;\r\n    url += `&${makeSortParam(true, order)}`;\r\n    url += `&${X_UA(lang)}`;\r\n\r\n    const reviewListResponse = await ofetch(url);\r\n\r\n    return reviewListResponse.data.list.map((review) => {\r\n        const author = review.post.user.name;\r\n        const score = review.post.list_fields.app_ratings[id].score;\r\n        return {\r\n            title: `${author} - ${'★'.repeat(score)}`,\r\n            author,\r\n            description: review.post.list_fields.summary || review.post.list_fields.title,\r\n            link: `${getRootUrl(true)}/post/${review.post.id_str}`,\r\n            pubDate: parseDate(review.post.published_time, 'X'),\r\n        };\r\n    });\r\n};\r\n\r\nexport async function handler(ctx) {\r\n    const requestPath = ctx.req.path.replace('/taptap', '');\r\n    const isIntl = requestPath.startsWith('/intl/');\r\n    const id = ctx.req.param('id');\r\n    const order = ctx.req.param('order') ?? 'default';\r\n    const lang = ctx.req.param('lang') ?? (isIntl ? 'en_US' : 'zh_CN');\r\n\r\n    const detail = await appDetail(id, lang, isIntl);\r\n    const appImg = detail.app.icon.original_url;\r\n    const appName = detail.app.title;\r\n\r\n    const items = isIntl ? await fetchIntlItems({ id, order, lang }) : await fetchMainlandItems({ id, order, lang });\r\n\r\n    return {\r\n        title: `TapTap 评价 ${appName}`,\r\n        link: `${getRootUrl(isIntl)}/app/${id}/review?${makeSortParam(isIntl, order)}`,\r\n        image: appImg,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"qLA4CA,MAAM,GAAiB,EAAiB,IAChC,EACI,IAAU,WAAa,IAAU,SAC1B,QAAQ,IAEZ,eAEH,IAAU,OAAS,IAAU,MACtB,QAAQ,IAEZ,WAIT,EAAqB,KAAO,IAAW,CACzC,IAAM,EAAK,EAAO,GACZ,EAAQ,EAAO,OAAS,MACxB,EAAO,EAAO,MAAQ,QAExB,EAAM,GAAG,EAAW,IAAO,yCAAyC,EAAG,WAC3E,GAAO,IAAI,EAAc,GAAO,KAChC,GAAO,IAAI,EAAK,KAEhB,IAAM,EAAqB,MAAMA,EAAO,GAExC,OAAO,EAAmB,KAAK,KAAK,IAAK,GAAW,CAChD,IAAM,EAAS,EAAO,OAAO,OAAO,KAAK,KACnC,EAAQ,EAAO,OAAO,OAAO,MACnC,MAAO,CACH,MAAO,GAAG,EAAO,KAAK,EAAM,GAC5B,SACA,YAAa,EAAO,OAAO,OAAO,SAAS,MAAQ,EAAO,OAAO,OAAO,SAAS,OAAS,EAAO,OAAO,OAAO,SAAS,OAAO,IAAK,GAAQ,aAAa,EAAI,aAAa,KAAK,KAAK,IAAM,IAC1L,KAAM,GAAG,EAAW,IAAO,UAAU,EAAO,OAAO,OAAO,KAC1D,QAAS,EAAU,EAAO,OAAO,aAAc,SAKrD,EAAiB,KAAO,IAAW,CACrC,IAAM,EAAK,EAAO,GACZ,EAAQ,EAAO,OAAS,UACxB,EAAO,EAAO,MAAQ,QAExB,EAAM,GAAG,EAAW,IAAM,mCAAmC,EAAG,WACpE,GAAO,IAAI,EAAc,GAAM,KAC/B,GAAO,IAAI,EAAK,KAEhB,IAAM,EAAqB,MAAMA,EAAO,GAExC,OAAO,EAAmB,KAAK,KAAK,IAAK,GAAW,CAChD,IAAM,EAAS,EAAO,KAAK,KAAK,KAC1B,EAAQ,EAAO,KAAK,YAAY,YAAY,GAAI,MACtD,MAAO,CACH,MAAO,GAAG,EAAO,KAAK,IAAI,OAAO,KACjC,SACA,YAAa,EAAO,KAAK,YAAY,SAAW,EAAO,KAAK,YAAY,MACxE,KAAM,GAAG,EAAW,IAAM,QAAQ,EAAO,KAAK,SAC9C,QAAS,EAAU,EAAO,KAAK,eAAgB,SAK3D,eAAsB,EAAQ,EAAK,CAC/B,IAAM,EAAc,EAAI,IAAI,KAAK,QAAQ,UAAW,IAC9C,EAAS,EAAY,WAAW,UAChC,EAAK,EAAI,IAAI,MAAM,MACnB,EAAQ,EAAI,IAAI,MAAM,UAAY,UAClC,EAAO,EAAI,IAAI,MAAM,UAAY,EAAS,QAAU,SAEpD,EAAS,MAAM,EAAU,EAAI,EAAM,GACnC,EAAS,EAAO,IAAI,KAAK,aACzB,EAAU,EAAO,IAAI,MAErB,EAAQ,EAAS,MAAM,EAAe,CAAE,KAAI,QAAO,SAAU,MAAM,EAAmB,CAAE,KAAI,QAAO,SAEzG,MAAO,CACH,MAAO,aAAa,IACpB,KAAM,GAAG,EAAW,GAAQ,OAAO,EAAG,UAAU,EAAc,EAAQ,KACtE,MAAO,EACP,KAAM"}