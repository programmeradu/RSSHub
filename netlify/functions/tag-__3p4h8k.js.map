{"version":3,"file":"tag-__3p4h8k.js","names":["route: Route","ConfigNotFoundError"],"sources":["../../lib/routes/medium/tag.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { config } from '@/config';\r\n\r\nimport parseArticle from './parse-article.js';\r\nimport { getWebInlineTopicFeedQuery } from './graphql.js';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found.js';\r\n\r\nexport const route: Route = {\r\n    path: '/tag/:user/:tag',\r\n    categories: ['blog'],\r\n    example: '/medium/tag/imsingee/cybersecurity',\r\n    parameters: { user: 'Username', tag: 'Subscribed Tag' },\r\n    features: {\r\n        requireConfig: [\r\n            {\r\n                name: 'MEDIUM_COOKIE_*',\r\n                description: '',\r\n            },\r\n        ],\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Personalized Recommendations - Tag',\r\n    maintainers: ['ImSingee'],\r\n    handler,\r\n    description: `There are many tags, which can be obtained by clicking on a tag from the homepage and looking at the URL. For example, if the URL is \\`https://medium.com/?tag=web3\\`, then the tag is \\`web3\\`.\r\n\r\n::: warning\r\n  Personalized recommendations require the cookie value after logging in, so only self-hosting is supported. See the configuration module on the deployment page for details.\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const user = ctx.req.param('user');\r\n    const tag = ctx.req.param('tag');\r\n\r\n    const cookie = config.medium.cookies[user];\r\n    if (cookie === undefined) {\r\n        throw new ConfigNotFoundError(`缺少 Medium 用户 ${user} 登录后的 Cookie 值`);\r\n    }\r\n\r\n    const posts = await getWebInlineTopicFeedQuery(user, tag, cookie);\r\n    ctx.set('json', posts);\r\n\r\n    if (!posts) {\r\n        // login failed\r\n        throw new ConfigNotFoundError(`Medium 用户 ${user} 的 Cookie 无效或已过期`);\r\n    }\r\n\r\n    const urls = posts.items.map((data) => data.post.mediumUrl);\r\n\r\n    const parsedArticles = await Promise.all(urls.map((url) => parseArticle(ctx, url)));\r\n\r\n    return {\r\n        title: `${user} Medium Following Tag ${tag}`,\r\n        link: `https://medium.com/?tag=${tag}`,\r\n        item: parsedArticles,\r\n    };\r\n}\r\n"],"mappings":"sZAOA,MAAaA,EAAe,CACxB,KAAM,kBACN,WAAY,CAAC,QACb,QAAS,qCACT,WAAY,CAAE,KAAM,WAAY,IAAK,kBACrC,SAAU,CACN,cAAe,CACX,CACI,KAAM,kBACN,YAAa,KAGrB,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,qCACN,YAAa,CAAC,YACd,UACA,YAAa;;;;MAOjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAM,EAAI,IAAI,MAAM,OAEpB,EAAS,EAAO,OAAO,QAAQ,GACrC,GAAI,IAAW,IAAA,GACX,MAAM,IAAIC,EAAoB,gBAAgB,EAAK,iBAGvD,IAAM,EAAQ,MAAM,EAA2B,EAAM,EAAK,GAG1D,GAFA,EAAI,IAAI,OAAQ,GAEZ,CAAC,EAED,MAAM,IAAIA,EAAoB,aAAa,EAAK,mBAGpD,IAAM,EAAO,EAAM,MAAM,IAAK,GAAS,EAAK,KAAK,WAE3C,EAAiB,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAQ,EAAa,EAAK,KAE7E,MAAO,CACH,MAAO,GAAG,EAAK,wBAAwB,IACvC,KAAM,2BAA2B,IACjC,KAAM"}