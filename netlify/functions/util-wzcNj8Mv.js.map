{"version":3,"file":"util-wzcNj8Mv.js","names":[],"sources":["../../lib/routes/nhentai/util.ts"],"sourcesContent":["import { load } from 'cheerio';\r\nimport got from '@/utils/got';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { config } from '@/config';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nconst baseUrl = 'https://nhentai.net';\r\n\r\nconst getCookie = async (username, password, cache) => {\r\n    const loginUrl = 'https://nhentai.net/login/';\r\n    const cacheKey = 'nhentai:cookie';\r\n\r\n    const cachedCookie = await cache.get(cacheKey);\r\n    if (cachedCookie) {\r\n        const { cookie, time } = JSON.parse(cachedCookie);\r\n        const now = Date.now();\r\n        if (now - time < 86400 * 3 * 1000) {\r\n            // 不考虑缓存过期的话，有效期最多允许3天\r\n            return cookie;\r\n        }\r\n    }\r\n\r\n    const { data, headers } = await got(loginUrl);\r\n    const csrfTokenMiddleware = data.match(/name=\"csrfmiddlewaretoken\" value=\"(.*?)\"/)[1];\r\n    const csrfTokenCookie = headers['set-cookie'].map((c) => c.split(';')[0]).join('; ');\r\n\r\n    const login = await got.post(loginUrl, {\r\n        headers: {\r\n            referer: loginUrl,\r\n            cookie: csrfTokenCookie,\r\n        },\r\n        form: {\r\n            csrfmiddlewaretoken: csrfTokenMiddleware,\r\n            username_or_email: username,\r\n            password,\r\n            next: '',\r\n        },\r\n        followRedirect: false,\r\n    });\r\n\r\n    if (login.statusCode !== 302) {\r\n        cache.set(\r\n            cacheKey,\r\n            JSON.stringify({\r\n                cookie: '',\r\n                time: Date.now(),\r\n            })\r\n        );\r\n        return '';\r\n    }\r\n\r\n    const userTokenCookie = login.headers['set-cookie'].map((c) => c.split(';')[0]).join('; ');\r\n\r\n    cache.set(\r\n        cacheKey,\r\n        JSON.stringify({\r\n            cookie: userTokenCookie,\r\n            time: Date.now(),\r\n        })\r\n    );\r\n\r\n    return userTokenCookie;\r\n};\r\n\r\nconst oFetch = (url, ...options) =>\r\n    ofetch(url, {\r\n        ...options,\r\n        headers: {\r\n            host: 'nhentai.net',\r\n        },\r\n    });\r\n\r\nconst getSimple = async (url) => {\r\n    const data = await oFetch(url);\r\n    const $ = load(data);\r\n\r\n    return $('.gallery a.cover')\r\n        .toArray()\r\n        .map((ele) => parseSimpleDetail($(ele)));\r\n};\r\n\r\nconst getDetails = (cache, simples, limit) => Promise.all(simples.slice(0, limit).map((simple) => cache.tryGet(simple.link, () => getDetail(simple))));\r\n\r\nconst getTorrents = async (cache, simples, limit) => {\r\n    if (!config.nhentai || !config.nhentai.username || !config.nhentai.password) {\r\n        throw new ConfigNotFoundError('nhentai RSS with torrents is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n    const cookie = await getCookie(config.nhentai.username, config.nhentai.password, cache);\r\n    if (!cookie) {\r\n        throw new ConfigNotFoundError('Invalid username (or email) or password for nhentai torrent download');\r\n    }\r\n    return getTorrentWithCookie(cache, simples, cookie, limit);\r\n};\r\nconst getTorrentWithCookie = (cache, simples, cookie, limit) => Promise.all(simples.slice(0, limit).map((simple) => cache.tryGet(simple.link + 'download', () => getTorrent(simple, cookie))));\r\n\r\nconst parseSimpleDetail = ($ele) => {\r\n    const link = new URL($ele.attr('href'), baseUrl).href;\r\n    const thumb = $ele.children('img');\r\n    const thumbSrc = thumb.attr('data-src') || thumb.attr('src');\r\n    const highResoThumbSrc = thumbSrc\r\n        .replace('thumb', '1')\r\n        .replace(/t(\\d+)\\.nhentai\\.net/, 'i$1.nhentai.net')\r\n        .replace('.webp.webp', '.webp');\r\n    return {\r\n        title: $ele.children('.caption').text(),\r\n        link,\r\n        description: `<img src=\"${highResoThumbSrc}\">`,\r\n    };\r\n};\r\n\r\nconst getTorrent = async (simple, cookie) => {\r\n    const { link } = simple;\r\n    const response = await oFetch(link + 'download', { followRedirect: false, responseType: 'buffer', headers: { Cookie: cookie } });\r\n    return {\r\n        ...simple,\r\n        enclosure_url: response,\r\n        enclosure_type: 'application/x-bittorrent',\r\n    };\r\n};\r\n\r\nconst getDetail = async (simple) => {\r\n    const { link } = simple;\r\n    const data = await oFetch(link);\r\n    const $ = load(data);\r\n\r\n    const galleryImgs = $('.gallerythumb img')\r\n        .toArray()\r\n        .map((ele) => new URL($(ele).attr('data-src'), baseUrl).href)\r\n        .map((src) => src.replace(/(.+)(\\d+)t\\.(.+)/, (_, p1, p2, p3) => `${p1}${p2}.${p3}`)) // thumb to high-quality\r\n        .map((src) => src.replace(/t(\\d+)\\.nhentai\\.net/, 'i$1.nhentai.net'))\r\n        .map((src) => src.replace(/\\.(jpg|png|gif)\\.webp$/, '.$1')) // 移除重複的.webp後綴\r\n        .map((src) => src.replace(/\\.webp\\.webp$/, '.webp')); // 處理.webp.webp的情況\r\n\r\n    return {\r\n        ...simple,\r\n        title: $('div#info > h2').text() || $('div#info > h1').text(),\r\n        pubDate: parseDate($('time').attr('datetime')),\r\n        description: art(path.join(__dirname, 'templates/desc.art'), {\r\n            length: galleryImgs.length,\r\n            images: galleryImgs,\r\n        }),\r\n    };\r\n};\r\n\r\nexport { baseUrl, getSimple, getDetails, getTorrents };\r\n"],"mappings":"kcASA,MAAM,EAAU,sBAEV,EAAY,MAAO,EAAU,EAAU,IAAU,CACnD,IAAM,EAAW,6BACX,EAAW,iBAEX,EAAe,MAAM,EAAM,IAAI,GACrC,GAAI,EAAc,CACd,GAAM,CAAE,SAAQ,QAAS,KAAK,MAAM,GAC9B,EAAM,KAAK,MACjB,GAAI,EAAM,EAAO,MAAQ,EAAI,IAEzB,OAAO,EAIf,GAAM,CAAE,OAAM,WAAY,MAAM,EAAI,GAC9B,EAAsB,EAAK,MAAM,4CAA4C,GAC7E,EAAkB,EAAQ,cAAc,IAAK,GAAM,EAAE,MAAM,KAAK,IAAI,KAAK,MAEzE,EAAQ,MAAM,EAAI,KAAK,EAAU,CACnC,QAAS,CACL,QAAS,EACT,OAAQ,GAEZ,KAAM,CACF,oBAAqB,EACrB,kBAAmB,EACnB,WACA,KAAM,IAEV,eAAgB,KAGpB,GAAI,EAAM,aAAe,IAQrB,OAPA,EAAM,IACF,EACA,KAAK,UAAU,CACX,OAAQ,GACR,KAAM,KAAK,SAGZ,GAGX,IAAM,EAAkB,EAAM,QAAQ,cAAc,IAAK,GAAM,EAAE,MAAM,KAAK,IAAI,KAAK,MAUrF,OARA,EAAM,IACF,EACA,KAAK,UAAU,CACX,OAAQ,EACR,KAAM,KAAK,SAIZ,GAGL,GAAU,EAAK,GAAG,IACpB,EAAO,EAAK,CACR,GAAG,EACH,QAAS,CACL,KAAM,iBAIZ,EAAY,KAAO,IAAQ,CAC7B,IAAM,EAAO,MAAM,EAAO,GACpB,EAAI,EAAK,GAEf,OAAO,EAAE,oBACJ,UACA,IAAK,GAAQ,EAAkB,EAAE,MAGpC,GAAc,EAAO,EAAS,IAAU,QAAQ,IAAI,EAAQ,MAAM,EAAG,GAAO,IAAK,GAAW,EAAM,OAAO,EAAO,SAAY,EAAU,MAEtI,EAAc,MAAO,EAAO,EAAS,IAAU,CACjD,GAAI,CAAC,EAAO,SAAW,CAAC,EAAO,QAAQ,UAAY,CAAC,EAAO,QAAQ,SAC/D,MAAM,IAAI,EAAoB,8JAElC,IAAM,EAAS,MAAM,EAAU,EAAO,QAAQ,SAAU,EAAO,QAAQ,SAAU,GACjF,GAAI,CAAC,EACD,MAAM,IAAI,EAAoB,wEAElC,OAAO,EAAqB,EAAO,EAAS,EAAQ,IAElD,GAAwB,EAAO,EAAS,EAAQ,IAAU,QAAQ,IAAI,EAAQ,MAAM,EAAG,GAAO,IAAK,GAAW,EAAM,OAAO,EAAO,KAAO,eAAkB,EAAW,EAAQ,MAE9K,EAAqB,GAAS,CAChC,IAAM,EAAO,IAAI,IAAI,EAAK,KAAK,QAAS,GAAS,KAC3C,EAAQ,EAAK,SAAS,OACtB,EAAW,EAAM,KAAK,aAAe,EAAM,KAAK,OAChD,EAAmB,EACpB,QAAQ,QAAS,KACjB,QAAQ,uBAAwB,mBAChC,QAAQ,aAAc,SAC3B,MAAO,CACH,MAAO,EAAK,SAAS,YAAY,OACjC,OACA,YAAa,aAAa,EAAiB,MAI7C,EAAa,MAAO,EAAQ,IAAW,CACzC,GAAM,CAAE,QAAS,EACX,EAAW,MAAM,EAAO,EAAO,WAAY,CAAE,eAAgB,GAAO,aAAc,SAAU,QAAS,CAAE,OAAQ,KACrH,MAAO,CACH,GAAG,EACH,cAAe,EACf,eAAgB,6BAIlB,EAAY,KAAO,IAAW,CAChC,GAAM,CAAE,QAAS,EACX,EAAO,MAAM,EAAO,GACpB,EAAI,EAAK,GAET,EAAc,EAAE,qBACjB,UACA,IAAK,GAAQ,IAAI,IAAI,EAAE,GAAK,KAAK,YAAa,GAAS,MACvD,IAAK,GAAQ,EAAI,QAAQ,oBAAqB,EAAG,EAAI,EAAI,IAAO,GAAG,IAAK,EAAG,GAAG,MAC9E,IAAK,GAAQ,EAAI,QAAQ,uBAAwB,oBACjD,IAAK,GAAQ,EAAI,QAAQ,yBAA0B,QACnD,IAAK,GAAQ,EAAI,QAAQ,gBAAiB,UAE/C,MAAO,CACH,GAAG,EACH,MAAO,EAAE,iBAAiB,QAAU,EAAE,iBAAiB,OACvD,QAAS,EAAU,EAAE,QAAQ,KAAK,aAClC,YAAa,EAAI,EAAA,KAAA,EAAA,+BAA4C,CACzD,OAAQ,EAAY,OACpB,OAAQ"}