{"version":3,"file":"list-yCWGZkYx.js","names":["route: Route","ConfigNotFoundError","InvalidParameterError"],"sources":["../../lib/routes/medium/list.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport { config } from '@/config';\r\n\r\nimport parseArticle from './parse-article.js';\r\nimport { getUserCatalogMainContentQuery } from './graphql.js';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found.js';\r\nimport InvalidParameterError from '@/errors/types/invalid-parameter.js';\r\n\r\nexport const route: Route = {\r\n    path: '/list/:user/:catalogId',\r\n    categories: ['blog'],\r\n    example: '/medium/list/imsingee/f2d8d48096a9',\r\n    parameters: { user: 'Username', catalogId: 'List ID' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'List',\r\n    maintainers: ['ImSingee'],\r\n    handler,\r\n    description: `The List ID is the last part of the URL after \\`-\\`, for example, the username in [https://medium.com/@imsingee/list/collection-7e67004f23f9](https://medium.com/@imsingee/list/collection-7e67004f23f9) is \\`imsingee\\`, and the ID is \\`7e67004f23f9\\`.\r\n\r\n::: warning\r\n  To access private lists, only self-hosting is supported.\r\n:::`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const user = ctx.req.param('user');\r\n    const catalogId = ctx.req.param('catalogId');\r\n\r\n    const cookie = config.medium.cookies[user];\r\n\r\n    const catalog = await getUserCatalogMainContentQuery(user, catalogId, cookie);\r\n    ctx.set('json', catalog);\r\n\r\n    if (catalog && catalog.__typename === 'Forbidden') {\r\n        throw new ConfigNotFoundError(`无权访问 id 为 ${catalogId} 的 List（可能是未设置 Cookie 或 Cookie 已过期）`);\r\n    }\r\n    if (!catalog || !catalog.itemsConnection) {\r\n        throw new InvalidParameterError(`id 为 ${catalogId} 的 List 不存在`);\r\n    }\r\n\r\n    const name = catalog.name;\r\n    const urls = catalog.itemsConnection.items.map((item) => item.entity.mediumUrl);\r\n\r\n    const parsedArticles = await Promise.all(urls.map((url) => parseArticle(ctx, url)));\r\n\r\n    return {\r\n        title: `List: ${name}`,\r\n        link: `https://medium.com/@${user}/list/${catalogId}`,\r\n        item: parsedArticles,\r\n    };\r\n}\r\n"],"mappings":"seAQA,MAAaA,EAAe,CACxB,KAAM,yBACN,WAAY,CAAC,QACb,QAAS,qCACT,WAAY,CAAE,KAAM,WAAY,UAAW,WAC3C,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,YACd,UACA,YAAa,uUAOjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAO,EAAI,IAAI,MAAM,QACrB,EAAY,EAAI,IAAI,MAAM,aAE1B,EAAS,EAAO,OAAO,QAAQ,GAE/B,EAAU,MAAM,EAA+B,EAAM,EAAW,GAGtE,GAFA,EAAI,IAAI,OAAQ,GAEZ,GAAW,EAAQ,aAAe,YAClC,MAAM,IAAIC,EAAoB,aAAa,EAAU,sCAEzD,GAAI,CAAC,GAAW,CAAC,EAAQ,gBACrB,MAAM,IAAIC,EAAsB,QAAQ,EAAU,cAGtD,IAAM,EAAO,EAAQ,KACf,EAAO,EAAQ,gBAAgB,MAAM,IAAK,GAAS,EAAK,OAAO,WAE/D,EAAiB,MAAM,QAAQ,IAAI,EAAK,IAAK,GAAQ,EAAa,EAAK,KAE7E,MAAO,CACH,MAAO,SAAS,IAChB,KAAM,uBAAuB,EAAK,QAAQ,IAC1C,KAAM"}