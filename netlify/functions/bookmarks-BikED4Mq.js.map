{"version":3,"file":"bookmarks-BikED4Mq.js","names":["got","got","route: Route","ConfigNotFoundError","cache","pixivUtils"],"sources":["../../lib/routes/pixiv/api/get-bookmarks.ts","../../lib/routes/pixiv/api/get-user-detail.ts","../../lib/routes/pixiv/bookmarks.ts"],"sourcesContent":["import got from '../pixiv-got';\r\nimport { maskHeader } from '../constants';\r\nimport queryString from 'query-string';\r\n\r\n/**\r\n * 获取用户的收藏\r\n *\r\n * @param {string} user_id 目标用户id\r\n * @param {string} token pixiv oauth token\r\n * @returns {Promise<got.AxiosResponse<{illusts: illust[]}>>}\r\n */\r\nexport default function getBookmarks(user_id, token) {\r\n    return got('https://app-api.pixiv.net/v1/user/bookmarks/illust', {\r\n        headers: {\r\n            ...maskHeader,\r\n            Authorization: 'Bearer ' + token,\r\n        },\r\n        searchParams: queryString.stringify({\r\n            user_id,\r\n            restrict: 'public',\r\n        }),\r\n    });\r\n}\r\n","import got from '../pixiv-got';\r\nimport { maskHeader } from '../constants';\r\nimport queryString from 'query-string';\r\n\r\n/**\r\n * pixiv 用户\r\n * @typedef {{user: {id: number, name: string, account: string, profile_image_urls: any, comment: string}, profile: any} userDetail\r\n */\r\n\r\n/**\r\n * 获取用户信息\r\n *\r\n * @param {string} user_id 目标用户id\r\n * @param {string} token pixiv oauth token\r\n * @returns {Promise<got.AxiosResponse<userDetail>>}\r\n */\r\nexport default function getUserDetail(user_id, token) {\r\n    return got('https://app-api.pixiv.net/v1/user/detail', {\r\n        headers: {\r\n            ...maskHeader,\r\n            Authorization: 'Bearer ' + token,\r\n        },\r\n        searchParams: queryString.stringify({\r\n            user_id,\r\n        }),\r\n    });\r\n}\r\n","import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport { getToken } from './token';\r\nimport getBookmarks from './api/get-bookmarks';\r\nimport getUserDetail from './api/get-user-detail';\r\nimport { config } from '@/config';\r\nimport pixivUtils from './utils';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport ConfigNotFoundError from '@/errors/types/config-not-found';\r\n\r\nexport const route: Route = {\r\n    path: '/user/bookmarks/:id',\r\n    categories: ['social-media'],\r\n    example: '/pixiv/user/bookmarks/15288095',\r\n    parameters: { id: \"user id, available in user's homepage URL\" },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['www.pixiv.net/users/:id/bookmarks/artworks', 'www.pixiv.net/en/users/:id/bookmarks/artworks'],\r\n        },\r\n    ],\r\n    name: 'User Bookmark',\r\n    maintainers: ['EYHN'],\r\n    handler,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    if (!config.pixiv || !config.pixiv.refreshToken) {\r\n        throw new ConfigNotFoundError('pixiv RSS is disabled due to the lack of <a href=\"https://docs.rsshub.app/deploy/config#route-specific-configurations\">relevant config</a>');\r\n    }\r\n\r\n    const id = ctx.req.param('id');\r\n\r\n    const token = await getToken(cache.tryGet);\r\n    if (!token) {\r\n        throw new ConfigNotFoundError('pixiv not login');\r\n    }\r\n\r\n    const [bookmarksResponse, userDetailResponse] = await Promise.all([getBookmarks(id, token), getUserDetail(id, token)]);\r\n\r\n    const illusts = bookmarksResponse.data.illusts;\r\n    const username = userDetailResponse.data.user.name;\r\n\r\n    return {\r\n        title: `${username} 的收藏`,\r\n        link: `https://www.pixiv.net/users/${id}/bookmarks/artworks`,\r\n        description: `${username} 的 pixiv 最新收藏`,\r\n        item: illusts.map((illust) => {\r\n            const images = pixivUtils.getImgs(illust);\r\n            return {\r\n                title: illust.title,\r\n                author: illust.user.name,\r\n                pubDate: parseDate(illust.create_date),\r\n                description: `${illust.caption}<br><p>画师：${illust.user.name} - 阅览数：${illust.total_view} - 收藏数：${illust.total_bookmarks}</p>${images.join('')}`,\r\n                link: `https://www.pixiv.net/artworks/${illust.id}`,\r\n            };\r\n        }),\r\n    };\r\n}\r\n"],"mappings":"mhBAWA,SAAwB,EAAa,EAAS,EAAO,CACjD,OAAOC,EAAI,qDAAsD,CAC7D,QAAS,CACL,GAAG,EACH,cAAe,UAAY,GAE/B,aAAc,EAAY,UAAU,CAChC,UACA,SAAU,aCHtB,SAAwB,EAAc,EAAS,EAAO,CAClD,OAAOA,EAAI,2CAA4C,CACnD,QAAS,CACL,GAAG,EACH,cAAe,UAAY,GAE/B,aAAc,EAAY,UAAU,CAChC,cCbZ,MAAaC,EAAe,CACxB,KAAM,sBACN,WAAY,CAAC,gBACb,QAAS,iCACT,WAAY,CAAE,GAAI,6CAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,6CAA8C,mDAG/D,KAAM,gBACN,YAAa,CAAC,QACd,WAGJ,eAAe,EAAQ,EAAK,CACxB,GAAI,CAAC,EAAO,OAAS,CAAC,EAAO,MAAM,aAC/B,MAAM,IAAIC,EAAoB,8IAGlC,IAAM,EAAK,EAAI,IAAI,MAAM,MAEnB,EAAQ,MAAM,EAASC,EAAM,QACnC,GAAI,CAAC,EACD,MAAM,IAAID,EAAoB,mBAGlC,GAAM,CAAC,EAAmB,GAAsB,MAAM,QAAQ,IAAI,CAAC,EAAa,EAAI,GAAQ,EAAc,EAAI,KAExG,EAAU,EAAkB,KAAK,QACjC,EAAW,EAAmB,KAAK,KAAK,KAE9C,MAAO,CACH,MAAO,GAAG,EAAS,MACnB,KAAM,+BAA+B,EAAG,qBACxC,YAAa,GAAG,EAAS,eACzB,KAAM,EAAQ,IAAK,GAAW,CAC1B,IAAM,EAASE,EAAW,QAAQ,GAClC,MAAO,CACH,MAAO,EAAO,MACd,OAAQ,EAAO,KAAK,KACpB,QAAS,EAAU,EAAO,aAC1B,YAAa,GAAG,EAAO,QAAQ,YAAY,EAAO,KAAK,KAAK,SAAS,EAAO,WAAW,SAAS,EAAO,gBAAgB,MAAM,EAAO,KAAK,MACzI,KAAM,kCAAkC,EAAO"}