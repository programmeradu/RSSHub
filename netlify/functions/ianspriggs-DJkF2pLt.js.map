{"version":3,"file":"ianspriggs-DJkF2pLt.js","names":[],"sources":["../../lib/routes/ianspriggs/index.ts"],"sourcesContent":["import { Route } from '@/types';\r\n\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport { art } from '@/utils/render';\r\nimport path from 'node:path';\r\n\r\nexport const route: Route = {\r\n    path: '/:category?',\r\n    categories: ['blog'],\r\n    example: '/ianspriggs/portraits',\r\n    parameters: { category: 'Category, see below, 3D PORTRAITS by default' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Category',\r\n    maintainers: ['nczitzk'],\r\n    handler,\r\n    description: `| 3D PORTRAITS | CHARACTERS |\r\n| ------------ | ---------- |\r\n| portraits    | characters |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { category = 'portraits' } = ctx.req.param();\r\n    const limit = ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit'), 10) : 30;\r\n\r\n    const author = 'Ian Spriggs';\r\n    const rootUrl = 'https://ianspriggs.com';\r\n    const currentUrl = new URL(category, rootUrl).href;\r\n\r\n    const { data: response } = await got(currentUrl);\r\n\r\n    const $ = load(response);\r\n\r\n    let items = $('div.work-item')\r\n        .slice(0, limit)\r\n        .toArray()\r\n        .map((item) => {\r\n            item = $(item);\r\n\r\n            const image = item.find('img').first();\r\n\r\n            return {\r\n                title: item.find('div.work-info').text(),\r\n                link: item.find('a').prop('href'),\r\n                description: art(path.join(__dirname, 'templates/description.art'), {\r\n                    images: image?.prop('src')\r\n                        ? [\r\n                              {\r\n                                  src: image.prop('src').replace(/_thumbnail\\./, '.'),\r\n                                  alt: image.prop('alt'),\r\n                              },\r\n                          ]\r\n                        : undefined,\r\n                }),\r\n                author,\r\n                pubDate: parseDate(item.find('div.work-info p').last(), 'YYYY'),\r\n                enclosure_url: image?.prop('src') ?? undefined,\r\n                enclosure_type: image?.prop('src') ? 'image/jpeg' : undefined,\r\n            };\r\n        });\r\n\r\n    items = await Promise.all(\r\n        items.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const { data: detailResponse } = await got(item.link);\r\n\r\n                const content = load(detailResponse);\r\n\r\n                const images = content('div.work-item img')\r\n                    .toArray()\r\n                    .map((item) => {\r\n                        item = content(item);\r\n\r\n                        return {\r\n                            src: item.prop('src').replace(/-\\d+x\\d+\\./, '.'),\r\n                            alt: item.prop('alt'),\r\n                        };\r\n                    });\r\n\r\n                item.title = content('div.project-title').text();\r\n                item.description += art(path.join(__dirname, 'templates/description.art'), {\r\n                    images,\r\n                    description: content('div.nectar-fancy-ul').html(),\r\n                });\r\n                item.pubDate = parseDate(content('span.subheader').last().text(), 'YYYY');\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    const icon = new URL('favicon.ico', rootUrl).href;\r\n\r\n    return {\r\n        item: items,\r\n        title: $('title').text(),\r\n        link: currentUrl,\r\n        description: $('meta[property=\"og:description\"]').prop('content'),\r\n        language: $('html').prop('lang'),\r\n        icon,\r\n        logo: icon,\r\n        subtitle: $('a[aria-current=\"page\"] span.menu-title-text').text(),\r\n        author,\r\n    };\r\n}\r\n"],"mappings":"wdASA,MAAa,EAAe,CACxB,KAAM,cACN,WAAY,CAAC,QACb,QAAS,wBACT,WAAY,CAAE,SAAU,gDACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,WACN,YAAa,CAAC,WACd,UACA,YAAa;;gCAKjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,WAAW,aAAgB,EAAI,IAAI,QACrC,EAAQ,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,SAAU,IAAM,GAE/E,EAAS,cACT,EAAU,yBACV,EAAa,IAAI,IAAI,EAAU,GAAS,KAExC,CAAE,KAAM,GAAa,MAAM,EAAI,GAE/B,EAAI,EAAK,GAEX,EAAQ,EAAE,iBACT,MAAM,EAAG,GACT,UACA,IAAK,GAAS,CACX,EAAO,EAAE,GAET,IAAM,EAAQ,EAAK,KAAK,OAAO,QAE/B,MAAO,CACH,MAAO,EAAK,KAAK,iBAAiB,OAClC,KAAM,EAAK,KAAK,KAAK,KAAK,QAC1B,YAAa,EAAI,EAAA,KAAA,EAAA,sCAAmD,CAChE,OAAQ,GAAO,KAAK,OACd,CACI,CACI,IAAK,EAAM,KAAK,OAAO,QAAQ,eAAgB,KAC/C,IAAK,EAAM,KAAK,SAGxB,IAAA,KAEV,SACA,QAAS,EAAU,EAAK,KAAK,mBAAmB,OAAQ,QACxD,cAAe,GAAO,KAAK,QAAU,IAAA,GACrC,eAAgB,GAAO,KAAK,OAAS,aAAe,IAAA,MAIhE,EAAQ,MAAM,QAAQ,IAClB,EAAM,IAAK,GACP,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,GAAM,CAAE,KAAM,GAAmB,MAAM,EAAI,EAAK,MAE1C,EAAU,EAAK,GAEf,EAAS,EAAQ,qBAClB,UACA,IAAK,IACF,EAAO,EAAQ,GAER,CACH,IAAK,EAAK,KAAK,OAAO,QAAQ,aAAc,KAC5C,IAAK,EAAK,KAAK,UAW3B,MAPA,GAAK,MAAQ,EAAQ,qBAAqB,OAC1C,EAAK,aAAe,EAAI,EAAA,KAAA,EAAA,sCAAmD,CACvE,SACA,YAAa,EAAQ,uBAAuB,SAEhD,EAAK,QAAU,EAAU,EAAQ,kBAAkB,OAAO,OAAQ,QAE3D,MAKnB,IAAM,EAAO,IAAI,IAAI,cAAe,GAAS,KAE7C,MAAO,CACH,KAAM,EACN,MAAO,EAAE,SAAS,OAClB,KAAM,EACN,YAAa,EAAE,mCAAmC,KAAK,WACvD,SAAU,EAAE,QAAQ,KAAK,QACzB,OACA,KAAM,EACN,SAAU,EAAE,+CAA+C,OAC3D"}