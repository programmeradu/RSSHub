{"version":3,"file":"category-B8EiVcUb.js","names":["got","url","got","data","cache","randUserAgent","got","cache","url","data","route: Route","getMzzlbg","xinwen1j1","getXWLB","getNews"],"sources":["../../lib/routes/cctv/utils/mzzlbg.ts","../../lib/routes/cctv/utils/xinwen1j1.ts","../../lib/routes/cctv/utils/news.ts","../../lib/routes/cctv/category.ts"],"sourcesContent":["import got from '@/utils/got';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\n\r\nconst getMzzlbg = async () => {\r\n    const url = 'https://api.cntv.cn/video/videolistById?serviceId=cbox&vsid=C10354&em=01&p=1&n=50';\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n    });\r\n\r\n    const data = response.data;\r\n\r\n    const resultItem = await Promise.all(\r\n        data.video.map(async (video) => {\r\n            const url = `https://vdn.apps.cntv.cn/api/getHttpVideoInfo.do?pid=${video.vid}`;\r\n            const item = {\r\n                title: video.t,\r\n                description: video.desc,\r\n                link: video.url,\r\n                pubDate: timezone(parseDate(video.ptime), +8),\r\n            };\r\n            const { data: videoDetail } = await got({\r\n                method: 'get',\r\n                url,\r\n            });\r\n\r\n            item.description += `<br><video src=\"${videoDetail.hls_url}\" controls=\"controls\" poster=\"${video.img.replaceAll(/\\?.+/g, '')}\" style=\"width: 100%\"></video>`;\r\n            return item;\r\n        })\r\n    );\r\n\r\n    return {\r\n        title: '每周质量报告',\r\n        link: 'https://tv.cctv.com/lm/mzzlbg/videoset/index.shtml',\r\n        description:\r\n            '《每周质量报告》是CCTV-新闻频道一档以消费者为核心收视人群的新闻专题栏目。创办于2003年，始终致力于产品质量和食品安全领域的调查报道，以打假除劣扶优，推动质量进步为第一诉求，是我国电视新闻界质量新闻领域的旗帜性节目。首播时间：CCTV-新闻周日12:35—12:55。',\r\n        item: resultItem,\r\n    };\r\n};\r\nexport default getMzzlbg;\r\n","import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n//\r\n// 测试http://localhost:1200/cctv/xinwen1j1\r\n\r\n// 完整文章页\r\nasync function loadContent(link) {\r\n    const res = await got({ method: 'get', url: link });\r\n    const $ = load(res.data);\r\n    // console.log($('div.image').toArray().text())\r\n    // console.log('********')\r\n    const js_txt = '' + $('script');\r\n\r\n    const guid = js_txt.split('guid_Ad_VideoCode = \"')[1].split('\";')[0];\r\n    // console.log(guid+' js_txt********')\r\n    const { data: videoDetail } = await got({\r\n        method: 'get',\r\n        url: `http://vdn.apps.cntv.cn/api/getHttpVideoInfo.do?pid=${guid}`,\r\n    });\r\n\r\n    // poster=\"?\" 以后再弄\r\n    // <video src=\"${videoDetail.hls_url}\" controls=\"controls\"  poster=\"?\"  style=\"width: 100%\"></video>\r\n    const description = `${$('meta[name=description]').attr('content')}<br><video src=\"${videoDetail.hls_url}\" controls=\"controls\"  style=\"width: 100%\"></video>`;\r\n\r\n    // 提取内容\r\n    return { description };\r\n}\r\n\r\n// 同步 列表\r\nconst ProcessFeed = (data) =>\r\n    Promise.all(\r\n        data.list.map(async (data) => {\r\n            const title = data.title;\r\n            const itemUrl = data.url;\r\n            const itemDate = parseDate(data.focus_date);\r\n\r\n            // 列表上提取到的信息\r\n            const single = {\r\n                title,\r\n                link: itemUrl,\r\n                author: '央视新闻',\r\n                guid: itemUrl,\r\n                pubDate: itemDate,\r\n            };\r\n\r\n            // 使用tryGet方法从缓存获取内容。\r\n            // 当缓存中无法获取到链接内容的时候，则使用load方法加载文章内容。\r\n            const other = await cache.tryGet(itemUrl, () => loadContent(itemUrl));\r\n\r\n            // 合并解析后的结果集作为该篇文章最终的输出结果\r\n            return { ...single, ...other };\r\n        })\r\n    );\r\nconst xinwen1j1 = async () => {\r\n    const baseUrl = 'https://api.cntv.cn/NewVideo/getVideoListByColumn?id=TOPC1451559066181661&n=20&sort=desc&p=1&mode=0&serviceId=tvcctv';\r\n    // 获取要处理的页面\r\n    const res = await got({\r\n        method: 'get',\r\n        url: baseUrl,\r\n        headers: {\r\n            Referer: 'https://tv.cctv.com/lm/xinwen1j1/videoset/index.shtml#&Type=0',\r\n        },\r\n    });\r\n\r\n    const data = res.data.data;\r\n\r\n    // $('div.image').slice(0,3).find('img').attr('src')\r\n    // $('div.image').slice(0,3).find('a').attr('href').split('?')[0]\r\n\r\n    // 处理所有的页面\r\n    const result = await ProcessFeed(data);\r\n\r\n    return {\r\n        title: '《新闻1+1》- 中央电视台新闻频道',\r\n        link: baseUrl,\r\n        description:\r\n            '《新闻1+1》是中央电视台新闻频道的一档访谈类栏目。周一至周五，从时事政策、公共话题、突发事件等大型选题中选取当天最新、最热、最快的新闻话题，还原新闻全貌、解读事件真相，力求以精度、纯度和锐度为新闻导向，呈现最质朴的新闻。首播：CCTV-新闻：周一至周五21:30—21:55；重播：次日01:30，04:30。',\r\n        item: result,\r\n    };\r\n};\r\nexport default xinwen1j1;\r\n","import cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport path from 'node:path';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport timezone from '@/utils/timezone';\r\nimport randUserAgent from '@/utils/rand-user-agent';\r\n\r\nconst UA = randUserAgent({ browser: 'mobile safari', os: 'ios', device: 'mobile' });\r\n\r\nconst getNews = async (category) => {\r\n    const url = `https://news.cctv.com/2019/07/gaiban/cmsdatainterface/page/${category}_1.jsonp`;\r\n\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n        headers: {\r\n            Referer: `http://news.cctv.com/${category}`,\r\n            'User-Agent': UA,\r\n        },\r\n    });\r\n\r\n    const data = JSON.parse(response.data.slice(category.length + 1, -1));\r\n    const list = data.data.list;\r\n    const resultItem = await Promise.all(\r\n        list.map(({ title, url, focus_date, image }) =>\r\n            cache.tryGet(`cctv-news: ${url}`, async () => {\r\n                const item = {\r\n                    title,\r\n                    link: url,\r\n                    pubDate: timezone(parseDate(focus_date), +8),\r\n                };\r\n                const id = path.parse(url).name;\r\n                const unknownTip = '未知类型，请点击<a href=\"https://github.com/DIYgod/RSSHub/issues\">链接</a>提交issue';\r\n                let description;\r\n                let api;\r\n                let type;\r\n                let author;\r\n\r\n                if (id.startsWith('ART')) {\r\n                    // 普通新闻\r\n                    api = `https://api.cntv.cn/Article/getXinwenNextArticleInfo?serviceId=sjnews&id=${id}&t=json`;\r\n                    type = 'ART';\r\n                } else if (id.startsWith('PHO')) {\r\n                    // 图片\r\n                    api = `https://api.cntv.cn/Article/contentinfo?id=${id}&serviceId=sjnews&t=json`;\r\n                    type = 'PHO';\r\n                } else if (id.startsWith('VIDE')) {\r\n                    // 视频\r\n                    const vid = path.parse(image).name.split('-')[0];\r\n                    api = `https://vdn.apps.cntv.cn/api/getHttpVideoInfo.do?pid=${vid}`;\r\n                    type = 'VIDE';\r\n                } else {\r\n                    // 未识别\r\n                    description = unknownTip;\r\n                }\r\n\r\n                if (api) {\r\n                    const { data } = await got({\r\n                        method: 'get',\r\n                        url: api,\r\n                        headers: {\r\n                            'User-Agent': UA,\r\n                        },\r\n                    });\r\n\r\n                    switch (type) {\r\n                        case 'ART':\r\n                            description = data.article_content;\r\n                            author = data.article_source;\r\n                            break;\r\n\r\n                        case 'PHO':\r\n                            description = '';\r\n                            for (const { photo_url, photo_name, photo_brief } of data.photo_album_list) {\r\n                                description += `\r\n                                    <img src=${photo_url} /><br>\r\n                                    <strong>${photo_name}</strong><br>\r\n                                    ${photo_brief}<br>\r\n                                `;\r\n                            }\r\n                            author = data.source;\r\n                            break;\r\n\r\n                        case 'VIDE':\r\n                            description = `<video src=\"${data.hls_url}\" controls=\"controls\" poster=\"${image}\" style=\"width: 100%\"></video>`;\r\n                            author = data.article_source;\r\n                            break;\r\n\r\n                        default:\r\n                            description = unknownTip;\r\n                    }\r\n                }\r\n\r\n                item.description = description;\r\n                item.author = author;\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: `央视新闻 ${category}`,\r\n        link: `https://news.cctv.com/${category}`,\r\n        description: `央视新闻 ${category}`,\r\n        item: resultItem,\r\n    };\r\n};\r\nexport default getNews;\r\n","import { Route } from '@/types';\r\nimport getMzzlbg from './utils/mzzlbg';\r\nimport xinwen1j1 from './utils/xinwen1j1';\r\nimport getNews from './utils/news';\r\nimport getXWLB from './xwlb';\r\n\r\nexport const route: Route = {\r\n    path: '/:category',\r\n    categories: ['traditional-media'],\r\n    example: '/cctv/world',\r\n    parameters: { category: '分类名' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['news.cctv.com/:category'],\r\n        },\r\n    ],\r\n    name: '专题',\r\n    maintainers: ['idealclover', 'xyqfer'],\r\n    handler,\r\n    description: `| 新闻 | 国内  | 国际  | 社会    | 法治 | 文娱 | 科技 | 生活 | 教育 | 每周质量报告 | 新闻 1+1  |\r\n| ---- | ----- | ----- | ------- | ---- | ---- | ---- | ---- | ---- | ------------ | --------- |\r\n| news | china | world | society | law  | ent  | tech | life | edu  | mzzlbg       | xinwen1j1 |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const category = ctx.req.param('category');\r\n\r\n    switch (category) {\r\n        case 'mzzlbg':\r\n            // 每周质量报告\r\n            return await getMzzlbg();\r\n\r\n        case 'xinwen1j1':\r\n            // 新闻1+1\r\n            return await xinwen1j1();\r\n\r\n        case 'xwlb':\r\n            return await getXWLB();\r\n\r\n        default:\r\n            // 央视新闻\r\n            return await getNews(category);\r\n    }\r\n}\r\n"],"mappings":"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"}