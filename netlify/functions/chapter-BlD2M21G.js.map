{"version":3,"file":"chapter-BlD2M21G.js","names":["route: Route","cache","got"],"sources":["../../lib/routes/hameln/chapter.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport timezone from '@/utils/timezone';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nexport const route: Route = {\r\n    path: '/chapter/:id',\r\n    categories: ['reading'],\r\n    example: '/hameln/chapter/264928',\r\n    parameters: { id: 'Novel id, can be found in URL' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['syosetu.org/novel/:id'],\r\n        },\r\n    ],\r\n    name: 'chapter',\r\n    maintainers: ['huangliangshusheng'],\r\n    handler,\r\n    description: `Eg: [https://syosetu.org/novel/264928](https://syosetu.org/novel/264928)`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const id = ctx.req.param('id');\r\n    const limit = Number.parseInt(ctx.req.query('limit')) || 5;\r\n    const link = `https://syosetu.org/novel/${id}`;\r\n    const $ = load(await get(link));\r\n\r\n    const title = $('span[itemprop=\"name\"]').text();\r\n    const description = $('div.ss:nth-child(2)').text();\r\n\r\n    const chapter_list = $('tr[bgcolor]')\r\n        .toArray()\r\n        .map((chapter) => {\r\n            const $_chapter = $(chapter);\r\n            const chapter_link = $_chapter.find('a');\r\n            return {\r\n                title: chapter_link.text(),\r\n                link: chapter_link.attr('href'),\r\n                pubDate: timezone(parseDate($_chapter.find('nobr').text(), 'YYYYMMDD HH:mm'), +9),\r\n            };\r\n        })\r\n        .sort((a, b) => (a.pubDate <= b.pubDate ? 1 : -1))\r\n        .slice(0, limit);\r\n\r\n    const item_list = await Promise.all(\r\n        chapter_list.map((chapter) => {\r\n            chapter.link = `${link}/${chapter.link}`;\r\n            return cache.tryGet(chapter.link, async () => {\r\n                const content = load(await get(chapter.link));\r\n                chapter.description = content('#honbun').html();\r\n                return chapter;\r\n            });\r\n        })\r\n    );\r\n\r\n    return {\r\n        title,\r\n        description,\r\n        link,\r\n        language: 'ja',\r\n        item: item_list,\r\n    };\r\n}\r\n\r\nconst get = async (url) => {\r\n    const response = await got({\r\n        method: 'get',\r\n        url,\r\n        headers: {\r\n            cookie: 'over18=off',\r\n        },\r\n    });\r\n\r\n    return response.data;\r\n};\r\n"],"mappings":"0ZAOA,MAAaA,EAAe,CACxB,KAAM,eACN,WAAY,CAAC,WACb,QAAS,yBACT,WAAY,CAAE,GAAI,iCAClB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,2BAGjB,KAAM,UACN,YAAa,CAAC,sBACd,UACA,YAAa,4EAGjB,eAAe,EAAQ,EAAK,CACxB,IAAM,EAAK,EAAI,IAAI,MAAM,MACnB,EAAQ,OAAO,SAAS,EAAI,IAAI,MAAM,WAAa,EACnD,EAAO,6BAA6B,IACpC,EAAI,EAAK,MAAM,EAAI,IAEnB,EAAQ,EAAE,yBAAyB,OACnC,EAAc,EAAE,uBAAuB,OAEvC,EAAe,EAAE,eAClB,UACA,IAAK,GAAY,CACd,IAAM,EAAY,EAAE,GACd,EAAe,EAAU,KAAK,KACpC,MAAO,CACH,MAAO,EAAa,OACpB,KAAM,EAAa,KAAK,QACxB,QAAS,EAAS,EAAU,EAAU,KAAK,QAAQ,OAAQ,kBAAmB,MAGrF,MAAM,EAAG,IAAO,EAAE,SAAW,EAAE,QAAU,EAAI,IAC7C,MAAM,EAAG,GAER,EAAY,MAAM,QAAQ,IAC5B,EAAa,IAAK,IACd,EAAQ,KAAO,GAAG,EAAK,GAAG,EAAQ,OAC3BC,EAAM,OAAO,EAAQ,KAAM,SAAY,CAC1C,IAAM,EAAU,EAAK,MAAM,EAAI,EAAQ,OAEvC,MADA,GAAQ,YAAc,EAAQ,WAAW,OAClC,OAKnB,MAAO,CACH,QACA,cACA,OACA,SAAU,KACV,KAAM,GAId,MAAM,EAAM,KAAO,IAAQ,CACvB,IAAM,EAAW,MAAMC,EAAI,CACvB,OAAQ,MACR,MACA,QAAS,CACL,OAAQ,gBAIhB,OAAO,EAAS"}