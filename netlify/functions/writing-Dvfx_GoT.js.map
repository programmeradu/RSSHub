{"version":3,"file":"writing-Dvfx_GoT.js","names":["route: Route","got","cache","response","$"],"sources":["../../lib/routes/paradigm/writing.ts"],"sourcesContent":["import { Route } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport got from '@/utils/got';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\n\r\nconst baseUrl = 'https://www.paradigm.xyz';\r\n\r\nexport const route: Route = {\r\n    path: '/writing',\r\n    categories: ['finance'],\r\n    example: '/paradigm/writing',\r\n    parameters: {},\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    radar: [\r\n        {\r\n            source: ['paradigm.xyz/writing'],\r\n        },\r\n    ],\r\n    name: 'Writing',\r\n    maintainers: ['Fatpandac'],\r\n    handler,\r\n    url: 'paradigm.xyz/writing',\r\n};\r\n\r\nasync function handler() {\r\n    const url = `${baseUrl}/writing`;\r\n\r\n    const response = await got(url);\r\n    const $ = load(response.data);\r\n\r\n    const nextData = JSON.parse($('#__NEXT_DATA__').text());\r\n    const buildId = nextData.buildId;\r\n    const list = nextData.props.pageProps.posts.map((item) => ({\r\n        title: item.title,\r\n        link: `${baseUrl}${item.slug}`,\r\n        api: `${baseUrl}/_next/data/${buildId}${item.slug}.json`,\r\n        author: item.authors.map((author) => author.name).join(', '),\r\n        pubDate: parseDate(item.originalDate),\r\n        category: item.tags,\r\n    }));\r\n\r\n    const items = await Promise.all(\r\n        list.map((item) =>\r\n            cache.tryGet(item.link, async () => {\r\n                const response = await got(item.api);\r\n                const $ = load(response.data.pageProps.content, null, false);\r\n\r\n                // Remove the TOC\r\n                $('.toc').remove();\r\n                item.description = $.html();\r\n\r\n                return item;\r\n            })\r\n        )\r\n    );\r\n\r\n    return {\r\n        title: 'Paradigm - Writing',\r\n        link: url,\r\n        item: items,\r\n    };\r\n}\r\n"],"mappings":"wWAMA,MAAM,EAAU,2BAEHA,EAAe,CACxB,KAAM,WACN,WAAY,CAAC,WACb,QAAS,oBACT,WAAY,GACZ,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,MAAO,CACH,CACI,OAAQ,CAAC,0BAGjB,KAAM,UACN,YAAa,CAAC,aACd,UACA,IAAK,wBAGT,eAAe,GAAU,CACrB,IAAM,EAAM,GAAG,EAAQ,UAEjB,EAAW,MAAMC,EAAI,GACrB,EAAI,EAAK,EAAS,MAElB,EAAW,KAAK,MAAM,EAAE,kBAAkB,QAC1C,EAAU,EAAS,QACnB,EAAO,EAAS,MAAM,UAAU,MAAM,IAAK,IAAU,CACvD,MAAO,EAAK,MACZ,KAAM,GAAG,IAAU,EAAK,OACxB,IAAK,GAAG,EAAQ,cAAc,IAAU,EAAK,KAAK,OAClD,OAAQ,EAAK,QAAQ,IAAK,GAAW,EAAO,MAAM,KAAK,MACvD,QAAS,EAAU,EAAK,cACxB,SAAU,EAAK,QAGb,EAAQ,MAAM,QAAQ,IACxB,EAAK,IAAK,GACNC,EAAM,OAAO,EAAK,KAAM,SAAY,CAChC,IAAMC,EAAW,MAAMF,EAAI,EAAK,KAC1BG,EAAI,EAAKD,EAAS,KAAK,UAAU,QAAS,KAAM,IAMtD,OAHA,EAAE,QAAQ,SACV,EAAK,YAAcC,EAAE,OAEd,MAKnB,MAAO,CACH,MAAO,qBACP,KAAM,EACN,KAAM"}