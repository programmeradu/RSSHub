{"version":3,"file":"skeb-Bi2uKdur.js","names":["route: Route","cache","ofetch"],"sources":["../../lib/routes/skeb/index.ts"],"sourcesContent":["import { Route, Data, DataItem } from '@/types';\r\nimport ofetch from '@/utils/ofetch';\r\nimport cache from '@/utils/cache';\r\nimport { baseUrl, processWork, processCreator } from './utils';\r\nimport { config } from '@/config';\r\n\r\nconst categoryMap = {\r\n    // Works categories\r\n    new_art_works: '新着作品 (Illust)',\r\n    new_voice_works: '新着作品 (Voice)',\r\n    new_novel_works: '新着作品 (Novel)',\r\n    new_video_works: '新着作品 (Video)',\r\n    new_music_works: '新着作品 (Music)',\r\n    new_correction_works: '新着作品 (Advice)',\r\n    new_comic_works: '新着作品 (Comic)',\r\n    popular_works: '人気の作品 (Popular)',\r\n    // Creators categories\r\n    popular_creators: '人気クリエイター',\r\n    new_creators: '新着クリエイター',\r\n};\r\n\r\nconst workCategories = new Set(['new_art_works', 'new_voice_works', 'new_novel_works', 'new_video_works', 'new_music_works', 'new_correction_works', 'new_comic_works', 'popular_works']);\r\n\r\nexport const route: Route = {\r\n    path: '/:category',\r\n    categories: ['picture'],\r\n    example: '/skeb/new_art_works',\r\n    parameters: { category: 'Category, the div id of the section title on the homepage.' },\r\n    features: {\r\n        requireConfig: false,\r\n        requirePuppeteer: false,\r\n        antiCrawler: false,\r\n        supportBT: false,\r\n        supportPodcast: false,\r\n        supportScihub: false,\r\n    },\r\n    name: 'Skeb',\r\n    maintainers: ['SnowAgar25'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            title: '新着作品 (Illust)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_art_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Voice)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_voice_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Novel)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_novel_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Video)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_video_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Music)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_music_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Advice)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_correction_works',\r\n        },\r\n        {\r\n            title: '新着作品 (Comic)',\r\n            source: ['skeb.jp'],\r\n            target: '/new_comic_works',\r\n        },\r\n        {\r\n            title: '人気の作品 (Popular)',\r\n            source: ['skeb.jp'],\r\n            target: '/popular_works',\r\n        },\r\n        {\r\n            title: '人気クリエイター',\r\n            source: ['skeb.jp'],\r\n            target: '/popular_creators',\r\n        },\r\n        {\r\n            title: '新着クリエイター',\r\n            source: ['skeb.jp'],\r\n            target: '/new_creators',\r\n        },\r\n    ],\r\n};\r\n\r\nasync function handler(ctx): Promise<Data> {\r\n    const category = ctx.req.param('category') || 'new_art_works';\r\n\r\n    if (!(category in categoryMap)) {\r\n        throw new Error('Invalid category');\r\n    }\r\n\r\n    const url = `${baseUrl}/api`;\r\n\r\n    const apiData = await cache.tryGet(\r\n        url,\r\n        async () => {\r\n            const data = await ofetch(url);\r\n            return data;\r\n        },\r\n        config.cache.routeExpire,\r\n        false\r\n    );\r\n\r\n    if (!apiData || typeof apiData !== 'object') {\r\n        throw new Error('Invalid data received from API');\r\n    }\r\n\r\n    const items = await cache.tryGet(category, async () => {\r\n        if (!(category in apiData) || !Array.isArray(apiData[category])) {\r\n            return [];\r\n        }\r\n\r\n        const processItem = workCategories.has(category) ? processWork : processCreator;\r\n        return (await Promise.all(apiData[category].map(async (item) => await processItem(item)).filter(Boolean))) as DataItem[];\r\n    });\r\n\r\n    return {\r\n        title: `Skeb - ${categoryMap[category]}`,\r\n        link: `${baseUrl}/#${category}`,\r\n        item: items as DataItem[],\r\n    };\r\n}\r\n"],"mappings":"gWAMA,MAAM,EAAc,CAEhB,cAAe,gBACf,gBAAiB,eACjB,gBAAiB,eACjB,gBAAiB,eACjB,gBAAiB,eACjB,qBAAsB,gBACtB,gBAAiB,eACjB,cAAe,kBAEf,iBAAkB,WAClB,aAAc,YAGZ,EAAiB,IAAI,IAAI,CAAC,gBAAiB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,uBAAwB,kBAAmB,kBAE3JA,EAAe,CACxB,KAAM,aACN,WAAY,CAAC,WACb,QAAS,sBACT,WAAY,CAAE,SAAU,8DACxB,SAAU,CACN,cAAe,GACf,iBAAkB,GAClB,YAAa,GACb,UAAW,GACX,eAAgB,GAChB,cAAe,IAEnB,KAAM,OACN,YAAa,CAAC,cACd,UACA,MAAO,CACH,CACI,MAAO,gBACP,OAAQ,CAAC,WACT,OAAQ,kBAEZ,CACI,MAAO,eACP,OAAQ,CAAC,WACT,OAAQ,oBAEZ,CACI,MAAO,eACP,OAAQ,CAAC,WACT,OAAQ,oBAEZ,CACI,MAAO,eACP,OAAQ,CAAC,WACT,OAAQ,oBAEZ,CACI,MAAO,eACP,OAAQ,CAAC,WACT,OAAQ,oBAEZ,CACI,MAAO,gBACP,OAAQ,CAAC,WACT,OAAQ,yBAEZ,CACI,MAAO,eACP,OAAQ,CAAC,WACT,OAAQ,oBAEZ,CACI,MAAO,kBACP,OAAQ,CAAC,WACT,OAAQ,kBAEZ,CACI,MAAO,WACP,OAAQ,CAAC,WACT,OAAQ,qBAEZ,CACI,MAAO,WACP,OAAQ,CAAC,WACT,OAAQ,mBAKpB,eAAe,EAAQ,EAAoB,CACvC,IAAM,EAAW,EAAI,IAAI,MAAM,aAAe,gBAE9C,GAAI,EAAE,KAAY,GACd,MAAU,MAAM,oBAGpB,IAAM,EAAM,GAAG,EAAQ,MAEjB,EAAU,MAAMC,EAAM,OACxB,EACA,SAAY,CACR,IAAM,EAAO,MAAMC,EAAO,GAC1B,OAAO,GAEX,EAAO,MAAM,YACb,IAGJ,GAAI,CAAC,GAAW,OAAO,GAAY,SAC/B,MAAU,MAAM,kCAGpB,IAAM,EAAQ,MAAMD,EAAM,OAAO,EAAU,SAAY,CACnD,GAAI,EAAE,KAAY,IAAY,CAAC,MAAM,QAAQ,EAAQ,IACjD,MAAO,GAGX,IAAM,EAAc,EAAe,IAAI,GAAY,EAAc,EACjE,OAAQ,MAAM,QAAQ,IAAI,EAAQ,GAAU,IAAI,KAAO,IAAS,MAAM,EAAY,IAAO,OAAO,YAGpG,MAAO,CACH,MAAO,UAAU,EAAY,KAC7B,KAAM,GAAG,EAAQ,IAAI,IACrB,KAAM"}