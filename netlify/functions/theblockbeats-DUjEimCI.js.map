{"version":3,"file":"theblockbeats-DUjEimCI.js","names":[],"sources":["../../lib/routes/theblockbeats/index.ts"],"sourcesContent":["import { Route, ViewType } from '@/types';\r\nimport cache from '@/utils/cache';\r\nimport ofetch from '@/utils/ofetch';\r\nimport { load } from 'cheerio';\r\nimport { parseDate } from '@/utils/parse-date';\r\nimport path from 'node:path';\r\nimport { art } from '@/utils/render';\r\n\r\nconst domain = 'theblockbeats.info';\r\nconst rootUrl = `https://www.${domain}`;\r\nconst apiBase = `https://api.blockbeats.cn`;\r\n\r\nconst render = (data) => {\r\n    const html = art(path.join(__dirname, 'templates/description.art'), data);\r\n    const $ = load(html, null, false);\r\n\r\n    $('img').each((_, e) => {\r\n        const $e = $(e);\r\n        const src = $e.attr('src');\r\n        $e.attr('src', src?.split('?')[0]);\r\n    });\r\n\r\n    return $.html();\r\n};\r\n\r\nconst channelMap = {\r\n    newsflash: {\r\n        title: '快讯',\r\n        link: `${rootUrl}/newsflash`,\r\n        api: `${apiBase}/v2/newsflash/list`,\r\n    },\r\n    article: {\r\n        title: '文章',\r\n        link: `${rootUrl}/article`,\r\n        api: `${apiBase}/v2/article/list`,\r\n    },\r\n};\r\n\r\nexport const route: Route = {\r\n    path: '/:channel?/:original?',\r\n    categories: ['finance'],\r\n    view: ViewType.Articles,\r\n    example: '/theblockbeats/newsflash',\r\n    parameters: {\r\n        channel: {\r\n            description: '类型',\r\n            options: [\r\n                { value: 'newsflash', label: '快讯' },\r\n                { value: 'article', label: '文章' },\r\n            ],\r\n            default: 'newsflash',\r\n        },\r\n        original: {\r\n            description: '文章类型，仅 `channel` 为 `article` 时有效',\r\n            options: [\r\n                { value: '0', label: '全部' },\r\n                { value: '1', label: '深度' },\r\n                { value: '2', label: '精选' },\r\n                { value: '3', label: '热点追踪' },\r\n            ],\r\n            default: '0',\r\n        },\r\n    },\r\n    name: '新闻快讯',\r\n    maintainers: ['Fatpandac', 'jameshih', 'DIYgod'],\r\n    handler,\r\n    radar: [\r\n        {\r\n            title: '文章',\r\n            source: ['www.theblockbeats.info/article'],\r\n            target: '/article',\r\n        },\r\n        {\r\n            title: '快讯',\r\n            source: ['www.theblockbeats.info/newsflash'],\r\n            target: '/newsflash',\r\n        },\r\n    ],\r\n    description: `|    快讯   |   文章  |\r\n| :-------: | :-----: |\r\n| newsflash | article |\r\n\r\n| 全部 | 深度 | 精选 | 热点追踪 |\r\n| :--: | :--: | :--: | :---: |\r\n|     | -2  | 1    |  2     |`,\r\n};\r\n\r\nasync function handler(ctx) {\r\n    const { channel = 'newsflash', original } = ctx.req.param();\r\n\r\n    const response = await ofetch(channelMap[channel].api, {\r\n        query: {\r\n            limit: ctx.req.query('limit') ? Number.parseInt(ctx.req.query('limit')) : 20,\r\n            original: channel === 'article' ? original : undefined,\r\n        },\r\n    });\r\n\r\n    let list = response.data.list.map((item) => ({\r\n        title: item.title,\r\n        link: `${rootUrl}/${channel === 'newsflash' ? 'flash' : 'news'}/${item.article_id}`,\r\n        description: item.content ?? item.abstract,\r\n        pubDate: parseDate(item.add_time, 'X'),\r\n        author: item.author?.nickname,\r\n        category: item.tag_list,\r\n        imgUrl: item.img_url,\r\n    }));\r\n\r\n    if (channel !== 'newsflash') {\r\n        list = await Promise.all(\r\n            list.map((item) =>\r\n                cache.tryGet(`theblockbeats:${item.link}`, async () => {\r\n                    const response = await ofetch(item.link);\r\n                    const $ = load(response);\r\n                    item.description = render({\r\n                        image: item.imgUrl,\r\n                        description: $('div.news-content').html(),\r\n                    });\r\n                    return item;\r\n                })\r\n            )\r\n        );\r\n    }\r\n\r\n    return {\r\n        title: `TheBlockBeats - ${channelMap[channel].title}`,\r\n        link: channelMap[channel].link,\r\n        item: list,\r\n    };\r\n}\r\n"],"mappings":"kdAQA,MACM,EAAU,iCACV,EAAU,4BAEV,EAAU,GAAS,CACrB,IAAM,EAAO,EAAI,EAAA,KAAA,EAAA,sCAAmD,GAC9D,EAAI,EAAK,EAAM,KAAM,IAQ3B,OANA,EAAE,OAAO,MAAM,EAAG,IAAM,CACpB,IAAM,EAAK,EAAE,GACP,EAAM,EAAG,KAAK,OACpB,EAAG,KAAK,MAAO,GAAK,MAAM,KAAK,MAG5B,EAAE,QAGP,EAAa,CACf,UAAW,CACP,MAAO,KACP,KAAM,GAAG,EAAQ,YACjB,IAAK,GAAG,EAAQ,qBAEpB,QAAS,CACL,MAAO,KACP,KAAM,GAAG,EAAQ,UACjB,IAAK,GAAG,EAAQ,oBAIX,EAAe,CACxB,KAAM,wBACN,WAAY,CAAC,WACb,KAAM,EAAS,SACf,QAAS,2BACT,WAAY,CACR,QAAS,CACL,YAAa,KACb,QAAS,CACL,CAAE,MAAO,YAAa,MAAO,MAC7B,CAAE,MAAO,UAAW,MAAO,OAE/B,QAAS,aAEb,SAAU,CACN,YAAa,mCACb,QAAS,CACL,CAAE,MAAO,IAAK,MAAO,MACrB,CAAE,MAAO,IAAK,MAAO,MACrB,CAAE,MAAO,IAAK,MAAO,MACrB,CAAE,MAAO,IAAK,MAAO,SAEzB,QAAS,MAGjB,KAAM,OACN,YAAa,CAAC,YAAa,WAAY,UACvC,UACA,MAAO,CACH,CACI,MAAO,KACP,OAAQ,CAAC,kCACT,OAAQ,YAEZ,CACI,MAAO,KACP,OAAQ,CAAC,oCACT,OAAQ,eAGhB,YAAa;;;;;;gCASjB,eAAe,EAAQ,EAAK,CACxB,GAAM,CAAE,UAAU,YAAa,YAAa,EAAI,IAAI,QAE9C,EAAW,MAAM,EAAO,EAAW,GAAS,IAAK,CACnD,MAAO,CACH,MAAO,EAAI,IAAI,MAAM,SAAW,OAAO,SAAS,EAAI,IAAI,MAAM,UAAY,GAC1E,SAAU,IAAY,UAAY,EAAW,IAAA,MAIjD,EAAO,EAAS,KAAK,KAAK,IAAK,IAAU,CACzC,MAAO,EAAK,MACZ,KAAM,GAAG,EAAQ,GAAG,IAAY,YAAc,QAAU,OAAO,GAAG,EAAK,aACvE,YAAa,EAAK,SAAW,EAAK,SAClC,QAAS,EAAU,EAAK,SAAU,KAClC,OAAQ,EAAK,QAAQ,SACrB,SAAU,EAAK,SACf,OAAQ,EAAK,WAmBjB,OAhBI,IAAY,cACZ,EAAO,MAAM,QAAQ,IACjB,EAAK,IAAK,GACN,EAAM,OAAO,iBAAiB,EAAK,OAAQ,SAAY,CACnD,IAAM,EAAW,MAAM,EAAO,EAAK,MAC7B,EAAI,EAAK,GAKf,MAJA,GAAK,YAAc,EAAO,CACtB,MAAO,EAAK,OACZ,YAAa,EAAE,oBAAoB,SAEhC,OAMhB,CACH,MAAO,mBAAmB,EAAW,GAAS,QAC9C,KAAM,EAAW,GAAS,KAC1B,KAAM"}